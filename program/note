I wrote a script that tries to pull together the things we have been working on.
Given a commit that fixes a vulnerability, it finds projects that are:
1. Known to contain vulnerable code. These projects contain the vulnerable code in the most current revision of the project.
2. Known to have fixed the vulnerable code. These projects had the vulnerable code, but it has been replace with a known fixed version.
3. Unknown if it is still vulnerable. These projects had the vulnerable code, the code has been modified, but we don't know if the modification fixes the vulnerability.

Here's the basic algorithm:

- take as input the sha1 hash for a commit that fixes a vulnerability
- use c2b to find the blobs in the fixing commit
- use b2ob recursively to find all old blobs, which presumably contain the vulnerability
- use ob2b recursively to find all the new blobs, which presumably are not vulnerable
- For each vulnerable old blob
  + use b2c to find all commits of that blob
  + for each commit
    - use c2h to get the head commit 
    - see if the vulnerable blob is in the head commit
      = if so, the project contains the vulnerable code
      = if not
        . see if one of the new (fixed) blobs is in the head commit
          _ if so, the project does not contain the vulnerable code
          _ if not, we don't know if the project contains the vulnerable code



----
The script is named find_cloned_files and is commited in a directory named XXXX.
The input to the script is the name of an output directory and a commit hash.
Here's an example of how to run it using the example from Chris' worked_example:
./find_cloned_files out 92fe84214967012e951f7aee5bcee9977c426eef 
The output directory contains temporary files, the output goes to stdout for now.
It has to run on da4 because it looks in /fast/All.sha1c.

There is some duplication that I need to figure out how to fix. For example, the example above contains 2 blobs in the commit. I run the checks on both blobs and therefore get the same answer twice for projects that contain both blobs.

I have not done any testing yet to see if the output is correct.
